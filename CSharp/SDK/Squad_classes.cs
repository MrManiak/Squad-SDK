// Name: Sq, Version: b21

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace UFT
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class Squad.CoreGetAllItemsCallbackProxy
// 0x0020 (0x0048 - 0x0028)
public class UCoreGetAllItemsCallbackProxy : UOnlineBlueprintCallProxyBase
{
	#region Offsets
	private ExternalOffset<FScriptMulticastDelegate>          _offOnSuccess                                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0028, false); // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnFailure                                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0038, false); // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FScriptMulticastDelegate                           OnSuccess                                                      => _offOnSuccess.GetValue();
	public FScriptMulticastDelegate                           OnFailure                                                      => _offOnFailure.GetValue();
	#endregion


}

// Class Squad.CoreInventoryBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
public class UCoreInventoryBlueprintLibrary : UBlueprintFunctionLibrary
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.CoreSerializeItemSetCallbackProxy
// 0x0020 (0x0048 - 0x0028)
public class UCoreSerializeItemSetCallbackProxy : UOnlineBlueprintCallProxyBase
{
	#region Offsets
	private ExternalOffset<FScriptMulticastDelegate>          _offOnSuccess                                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0028, false); // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnFailure                                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0038, false); // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FScriptMulticastDelegate                           OnSuccess                                                      => _offOnSuccess.GetValue();
	public FScriptMulticastDelegate                           OnFailure                                                      => _offOnFailure.GetValue();
	#endregion


}

// Class Squad.HeatMapRecorder
// 0x0000 (0x0028 - 0x0028)
public class UHeatMapRecorder : UObject
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.RelativeCanvasPanel
// 0x0010 (0x0130 - 0x0120)
public class URelativeCanvasPanel : UCanvasPanel
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQ_HexMenu_BaseAction
// 0x0000 (0x0028 - 0x0028)
public class USQ_HexMenu_BaseAction : UObject
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQUndirectedGraph
// 0x0048 (0x0280 - 0x0238)
public class ASQUndirectedGraph : AActor
{
	#region Offsets
	private ExternalOffset<USceneComponent>                   _offRoot                                                       = new ExternalOffset<USceneComponent>(0x0248, true);           // 0x0248(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnLatticeUpdated                                           = new ExternalOffset<FScriptMulticastDelegate>(0x0250, false); // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USQGraphNodeComponent>>     _offNodes                                                      = new ExternalOffset<TArray<USQGraphNodeComponent>>(0x0260, false); // 0x0260(0x0010) (ExportObject, Net, ZeroConstructor, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	private ExternalOffset<TArray<FSQGraphLink>>              _offLinks                                                      = new ExternalOffset<TArray<FSQGraphLink>>(0x0270, false);     // 0x0270(0x0010) (Net, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public USceneComponent                                    Root                                                           => _offRoot.GetValue();
	public FScriptMulticastDelegate                           OnLatticeUpdated                                               => _offOnLatticeUpdated.GetValue();
	public TArray<USQGraphNodeComponent>                      Nodes                                                          => _offNodes.GetValue();
	public TArray<FSQGraphLink>                               Links                                                          => _offLinks.GetValue();
	#endregion


}

// Class Squad.SQAASGraph
// 0x0000 (0x0280 - 0x0280)
public class ASQAASGraph : ASQUndirectedGraph
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQUserWidget
// 0x0050 (0x0230 - 0x01E0)
public class USQUserWidget : UUserWidget
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMapLattice
// 0x0018 (0x0248 - 0x0230)
public class USQMapLattice : USQUserWidget
{
	#region Offsets
	private ExternalOffset<TArray<FSQLatticeLine>>            _offLatticeLines                                               = new ExternalOffset<TArray<FSQLatticeLine>>(0x0230, false);   // 0x0230(0x0010) (BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<USQCoreStateMapComponent>          _offMapComponent                                               = new ExternalOffset<USQCoreStateMapComponent>(0x0240, true);  // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public TArray<FSQLatticeLine>                             LatticeLines                                                   => _offLatticeLines.GetValue();
	public USQCoreStateMapComponent                           MapComponent                                                   => _offMapComponent.GetValue();
	#endregion


}

// Class Squad.SQAASGraphLattice
// 0x0048 (0x0290 - 0x0248)
public class USQAASGraphLattice : USQMapLattice
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbHidesUncapLinks                                           = new ExternalOffset<byte/*(bool)*/>(0x0250);                  // 0x0250(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offLatticeNeutralColor                                        = new ExternalOffset<FLinearColor>(0x0254, false);             // 0x0254(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offLatticeEnemyColor                                          = new ExternalOffset<FLinearColor>(0x0264, false);             // 0x0264(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offLatticeFriendlyColor                                       = new ExternalOffset<FLinearColor>(0x0274, false);             // 0x0274(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLineThickness                                              = new ExternalOffset<float>(0x0284);                           // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQAASGraph>                       _offlattice                                                    = new ExternalOffset<ASQAASGraph>(0x0288, true);               // 0x0288(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bHidesUncapLinks                                               => _offbHidesUncapLinks.GetValue();
	public FLinearColor                                       LatticeNeutralColor                                            => _offLatticeNeutralColor.GetValue();
	public FLinearColor                                       LatticeEnemyColor                                              => _offLatticeEnemyColor.GetValue();
	public FLinearColor                                       LatticeFriendlyColor                                           => _offLatticeFriendlyColor.GetValue();
	public float                                              LineThickness                                                  => _offLineThickness.GetValue();
	public ASQAASGraph                                        lattice                                                        => _offlattice.GetValue();
	#endregion


}

// Class Squad.SQGameRuleSet
// 0x0038 (0x0270 - 0x0238)
public class ASQGameRuleSet : AActor
{
	#region Offsets
	private ExternalOffset<UClass>                            _offRulesetStateClass                                          = new ExternalOffset<UClass>(0x0248, true);                    // 0x0248(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQRulesetState>                   _offRulesetState                                               = new ExternalOffset<ASQRulesetState>(0x0250, true);           // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseTickets                                                = new ExternalOffset<byte/*(bool)*/>(0x0258);                  // 0x0258(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offRoundTimeOverride                                          = new ExternalOffset<int>(0x025C);                             // 0x025C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FString>                           _offDisplayName                                                = new ExternalOffset<FString>(0x0260, false);                  // 0x0260(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public UClass                                             RulesetStateClass                                              => _offRulesetStateClass.GetValue();
	public ASQRulesetState                                    RulesetState                                                   => _offRulesetState.GetValue();
	public byte/*(bool)*/                                     bUseTickets                                                    => _offbUseTickets.GetValue();
	public int                                                RoundTimeOverride                                              => _offRoundTimeOverride.GetValue();
	public FString                                            DisplayName                                                    => _offDisplayName.GetValue();
	#endregion


}

// Class Squad.SQGameModeRuleset
// 0x0038 (0x02A8 - 0x0270)
public class ASQGameModeRuleset : ASQGameRuleSet
{
	#region Offsets
	private ExternalOffset<TArray<FSQInventoryMod>>           _offInventoryModifications                                     = new ExternalOffset<TArray<FSQInventoryMod>>(0x0270, false);  // 0x0270(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offPlayerJoinedMessageToPlayer                                = new ExternalOffset<FText>(0x0280, false);                    // 0x0280(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQGameModeRules>>          _offRulesToBeShownWhenPlayersJoinATeam                         = new ExternalOffset<TArray<FSQGameModeRules>>(0x0298, false); // 0x0298(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<FSQInventoryMod>                            InventoryModifications                                         => _offInventoryModifications.GetValue();
	public FText                                              PlayerJoinedMessageToPlayer                                    => _offPlayerJoinedMessageToPlayer.GetValue();
	public TArray<FSQGameModeRules>                           RulesToBeShownWhenPlayersJoinATeam                             => _offRulesToBeShownWhenPlayersJoinATeam.GetValue();
	#endregion


}

// Class Squad.SQAASRuleset
// 0x0008 (0x02B0 - 0x02A8)
public class ASQAASRuleset : ASQGameModeRuleset
{
	#region Offsets
	private ExternalOffset<ASQAASGraph>                       _offGraphActor                                                 = new ExternalOffset<ASQAASGraph>(0x02A8, true);               // 0x02A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ASQAASGraph                                        GraphActor                                                     => _offGraphActor.GetValue();
	#endregion


}

// Class Squad.SQAdminPanel
// 0x0050 (0x0230 - 0x01E0)
public class USQAdminPanel : UUserWidget
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQPlayerController
// 0x040C (0x0998 - 0x058C)
public class ASQPlayerController : APlayerController
{
	#region Offsets
	private ExternalOffset<ASQTeam>                           _offAuthorityTeam                                              = new ExternalOffset<ASQTeam>(0x05A0, true);                   // 0x05A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQTeamState>                      _offTeamState                                                  = new ExternalOffset<ASQTeamState>(0x05A8, true);              // 0x05A8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQTeamStatePrivate>               _offPrivateTeamState                                           = new ExternalOffset<ASQTeamStatePrivate>(0x05B0, true);       // 0x05B0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSquad>                          _offAuthoritySquad                                             = new ExternalOffset<ASQSquad>(0x05B8, true);                  // 0x05B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSquadState>                     _offSquadState                                                 = new ExternalOffset<ASQSquadState>(0x05C0, true);             // 0x05C0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSquadStatePrivateToTeam>        _offTeamPrivateSquadState                                      = new ExternalOffset<ASQSquadStatePrivateToTeam>(0x05C8, true); // 0x05C8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQCoreStateConnection>            _offStateConnection                                            = new ExternalOffset<USQCoreStateConnection>(0x05D0, true);    // 0x05D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSpawnMenuPopupDelay                                        = new ExternalOffset<float>(0x05D8);                           // 0x05D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSoldier>                        _offLastSpawnedSoldier                                         = new ExternalOffset<ASQSoldier>(0x05E0, true);                // 0x05E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offAreCommunicationButtonsAllowed                             = new ExternalOffset<byte/*(bool)*/>(0x05E9);                  // 0x05E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsCrouchedDuringMenu                                      = new ExternalOffset<char>(0x05EA, false);                     // 0x05EA(0x0001) BIT_FIELD (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsPronedDuringMenu                                        = new ExternalOffset<char>(0x05EA, false);                     // 0x05EA(0x0001) BIT_FIELD (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offIsWinner                                                   = new ExternalOffset<byte/*(bool)*/>(0x05EB);                  // 0x05EB(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTimeBecameIncapacitated                                    = new ExternalOffset<float>(0x05EC);                           // 0x05EC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSpawnDelayPenalties                                        = new ExternalOffset<float>(0x05F0);                           // 0x05F0(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxSpawnDelay                                              = new ExternalOffset<float>(0x05F4);                           // 0x05F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbWasInVehicle                                              = new ExternalOffset<byte/*(bool)*/>(0x05F8);                  // 0x05F8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ESQAdminAccessLevels>>      _offAccessLevel                                                = new ExternalOffset<TArray<ESQAdminAccessLevels>>(0x0600, false); // 0x0600(0x0010) (Net, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQDeployable>                     _offActiveGhost                                                = new ExternalOffset<ASQDeployable>(0x0610, true);             // 0x0610(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FTimerHandle>                      _offCheckValidGhostTimerHandle                                 = new ExternalOffset<FTimerHandle>(0x0618, false);             // 0x0618(0x0008) (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPlayerEnterVehicleEvent                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0638, false); // 0x0638(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPlayerExitVehicleEvent                                   = new ExternalOffset<FScriptMulticastDelegate>(0x0648, false); // 0x0648(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnChatStarted                                              = new ExternalOffset<FScriptMulticastDelegate>(0x0658, false); // 0x0658(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offToastWidgetClass                                           = new ExternalOffset<UClass>(0x0668, true);                    // 0x0668(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offChangeRoleNoAmmoText                                       = new ExternalOffset<FText>(0x0670, false);                    // 0x0670(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offAmmoBagNoAmmoText                                          = new ExternalOffset<FText>(0x0688, false);                    // 0x0688(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offMaxAmmoBagText                                             = new ExternalOffset<FText>(0x06A0, false);                    // 0x06A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offRearmFromAmmoBagText                                       = new ExternalOffset<FText>(0x06B8, false);                    // 0x06B8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offRoleCannotPickupAmmoBagText                                = new ExternalOffset<FText>(0x06D0, false);                    // 0x06D0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offRearmFromVehicleNoAmmoText                                 = new ExternalOffset<FText>(0x06E8, false);                    // 0x06E8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offRearmFromVehicleConfirmationText                           = new ExternalOffset<FText>(0x0700, false);                    // 0x0700(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offRearmFromVehiclePromptText                                 = new ExternalOffset<FText>(0x0718, false);                    // 0x0718(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offCannotStartVehicleInStagingPhaseText                       = new ExternalOffset<FText>(0x0730, false);                    // 0x0730(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWalkingOriginRebaseThreshold                               = new ExternalOffset<float>(0x0748);                           // 0x0748(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRidingOriginRebaseThreshold                                = new ExternalOffset<float>(0x074C);                           // 0x074C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFlyingOriginRebaseThreshold                                = new ExternalOffset<float>(0x0750);                           // 0x0750(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLeaveVehicleOriginRebaseThreshold                          = new ExternalOffset<float>(0x0754);                           // 0x0754(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offOriginRebaseFrequency                                      = new ExternalOffset<float>(0x0758);                           // 0x0758(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<UClass>>                    _offMapMarkerArray                                             = new ExternalOffset<TArray<UClass>>(0x0760, false);           // 0x0760(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	private ExternalOffset<USQMapMarkerInputComponent>        _offMapMarkerInputComponent                                    = new ExternalOffset<USQMapMarkerInputComponent>(0x0770, true); // 0x0770(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnNewMarkerCreatedEvent                                    = new ExternalOffset<FScriptMulticastDelegate>(0x0778, false); // 0x0778(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<USQAdminStats>                     _offAdminStats                                                 = new ExternalOffset<USQAdminStats>(0x0788, true);             // 0x0788(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<UClass>>                    _offSpawnableActors                                            = new ExternalOffset<TArray<UClass>>(0x0790, false);           // 0x0790(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	private ExternalOffset<USQVehicleSeatComponent>           _offCurrentSeat                                                = new ExternalOffset<USQVehicleSeatComponent>(0x07A0, true);   // 0x07A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAlwaysRenderPawnsDistance                                  = new ExternalOffset<float>(0x07A8);                           // 0x07A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offMusicAC                                                    = new ExternalOffset<UAudioComponent>(0x07E0, true);           // 0x07E0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundBase>                        _offMusicSound                                                 = new ExternalOffset<USoundBase>(0x07E8, true);                // 0x07E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<FSQSystemHUDMessage>>       _offQueuedSystemMessages                                       = new ExternalOffset<TArray<FSQSystemHUDMessage>>(0x07F0, false); // 0x07F0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<UClass>>                    _offRefreshTypes                                               = new ExternalOffset<TArray<UClass>>(0x0800, false);           // 0x0800(0x0010) (Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	private ExternalOffset<USQDataGatheringComponent>         _offDataGatheringComponent                                     = new ExternalOffset<USQDataGatheringComponent>(0x0810, true); // 0x0810(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQCommanderInputComponent>        _offCommanderInputComponent                                    = new ExternalOffset<USQCommanderInputComponent>(0x0818, true); // 0x0818(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQBoundaryListener>               _offBoundaryListener                                           = new ExternalOffset<USQBoundaryListener>(0x0820, true);       // 0x0820(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offOutOfMapBoundsKillTimestamp                                = new ExternalOffset<float>(0x0828);                           // 0x0828(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<APawn>                             _offLastRefreshedPawn                                          = new ExternalOffset<APawn>(0x0830, true);                     // 0x0830(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<ASQGameSpawn>                      _offSelectedSpawn                                              = new ExternalOffset<ASQGameSpawn>(0x0838, true);              // 0x0838(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
//	private TMap<uint32_t, struct FSQApprovalEntryRequest>    _offApprovalEntries                                            = new ExternalOffset<TMap<FSQApprovalEntryRequest>>(0x0848, false); // 0x0848(0x0050) (ZeroConstructor, NativeAccessSpecifierPrivate)
//	private TMap<uint32_t, struct FSQApprovalEntryClientDesc> _offApprovalEntriesOnClient                                    = new ExternalOffset<TMap<FSQApprovalEntryClientDesc>>(0x0898, false); // 0x0898(0x0050) (ZeroConstructor, NativeAccessSpecifierPrivate)
	private ExternalOffset<float>                             _offPawnRenderDistance                                         = new ExternalOffset<float>(0x0908);                           // 0x0908(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
//	private TMap<struct FUniqueNetIdRepl, class ASQPlayerState*> _offCachedPlayersToMute                                        = new ExternalOffset<TMap<ASQPlayerState>>(0x0940, false);     // 0x0940(0x0050) (ZeroConstructor, NativeAccessSpecifierPrivate)
	private ExternalOffset<USQMovementComponentNetworker>     _offNetworker                                                  = new ExternalOffset<USQMovementComponentNetworker>(0x0990, true); // 0x0990(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ASQTeam                                            AuthorityTeam                                                  => _offAuthorityTeam.GetValue();
	public ASQTeamState                                       TeamState                                                      => _offTeamState.GetValue();
	public ASQTeamStatePrivate                                PrivateTeamState                                               => _offPrivateTeamState.GetValue();
	public ASQSquad                                           AuthoritySquad                                                 => _offAuthoritySquad.GetValue();
	public ASQSquadState                                      SquadState                                                     => _offSquadState.GetValue();
	public ASQSquadStatePrivateToTeam                         TeamPrivateSquadState                                          => _offTeamPrivateSquadState.GetValue();
	public USQCoreStateConnection                             StateConnection                                                => _offStateConnection.GetValue();
	public float                                              SpawnMenuPopupDelay                                            => _offSpawnMenuPopupDelay.GetValue();
	public ASQSoldier                                         LastSpawnedSoldier                                             => _offLastSpawnedSoldier.GetValue();
	public byte/*(bool)*/                                     AreCommunicationButtonsAllowed                                 => _offAreCommunicationButtonsAllowed.GetValue();
	public byte/*(bool)*/                                     IsWinner                                                       => _offIsWinner.GetValue();
	public float                                              TimeBecameIncapacitated                                        => _offTimeBecameIncapacitated.GetValue();
	public float                                              SpawnDelayPenalties                                            => _offSpawnDelayPenalties.GetValue();
	public float                                              MaxSpawnDelay                                                  => _offMaxSpawnDelay.GetValue();
	public byte/*(bool)*/                                     bWasInVehicle                                                  => _offbWasInVehicle.GetValue();
	public TArray<ESQAdminAccessLevels>                       AccessLevel                                                    => _offAccessLevel.GetValue();
	public ASQDeployable                                      ActiveGhost                                                    => _offActiveGhost.GetValue();
	public FTimerHandle                                       CheckValidGhostTimerHandle                                     => _offCheckValidGhostTimerHandle.GetValue();
	public FScriptMulticastDelegate                           OnPlayerEnterVehicleEvent                                      => _offOnPlayerEnterVehicleEvent.GetValue();
	public FScriptMulticastDelegate                           OnPlayerExitVehicleEvent                                       => _offOnPlayerExitVehicleEvent.GetValue();
	public FScriptMulticastDelegate                           OnChatStarted                                                  => _offOnChatStarted.GetValue();
	public UClass                                             ToastWidgetClass                                               => _offToastWidgetClass.GetValue();
	public FText                                              ChangeRoleNoAmmoText                                           => _offChangeRoleNoAmmoText.GetValue();
	public FText                                              AmmoBagNoAmmoText                                              => _offAmmoBagNoAmmoText.GetValue();
	public FText                                              MaxAmmoBagText                                                 => _offMaxAmmoBagText.GetValue();
	public FText                                              RearmFromAmmoBagText                                           => _offRearmFromAmmoBagText.GetValue();
	public FText                                              RoleCannotPickupAmmoBagText                                    => _offRoleCannotPickupAmmoBagText.GetValue();
	public FText                                              RearmFromVehicleNoAmmoText                                     => _offRearmFromVehicleNoAmmoText.GetValue();
	public FText                                              RearmFromVehicleConfirmationText                               => _offRearmFromVehicleConfirmationText.GetValue();
	public FText                                              RearmFromVehiclePromptText                                     => _offRearmFromVehiclePromptText.GetValue();
	public FText                                              CannotStartVehicleInStagingPhaseText                           => _offCannotStartVehicleInStagingPhaseText.GetValue();
	public float                                              WalkingOriginRebaseThreshold                                   => _offWalkingOriginRebaseThreshold.GetValue();
	public float                                              RidingOriginRebaseThreshold                                    => _offRidingOriginRebaseThreshold.GetValue();
	public float                                              FlyingOriginRebaseThreshold                                    => _offFlyingOriginRebaseThreshold.GetValue();
	public float                                              LeaveVehicleOriginRebaseThreshold                              => _offLeaveVehicleOriginRebaseThreshold.GetValue();
	public float                                              OriginRebaseFrequency                                          => _offOriginRebaseFrequency.GetValue();
	public TArray<UClass>                                     MapMarkerArray                                                 => _offMapMarkerArray.GetValue();
	public USQMapMarkerInputComponent                         MapMarkerInputComponent                                        => _offMapMarkerInputComponent.GetValue();
	public FScriptMulticastDelegate                           OnNewMarkerCreatedEvent                                        => _offOnNewMarkerCreatedEvent.GetValue();
	public USQAdminStats                                      AdminStats                                                     => _offAdminStats.GetValue();
	public TArray<UClass>                                     SpawnableActors                                                => _offSpawnableActors.GetValue();
	public USQVehicleSeatComponent                            CurrentSeat                                                    => _offCurrentSeat.GetValue();
	public float                                              AlwaysRenderPawnsDistance                                      => _offAlwaysRenderPawnsDistance.GetValue();
	public UAudioComponent                                    MusicAC                                                        => _offMusicAC.GetValue();
	public USoundBase                                         MusicSound                                                     => _offMusicSound.GetValue();
	public TArray<FSQSystemHUDMessage>                        QueuedSystemMessages                                           => _offQueuedSystemMessages.GetValue();
	public TArray<UClass>                                     RefreshTypes                                                   => _offRefreshTypes.GetValue();
	public USQDataGatheringComponent                          DataGatheringComponent                                         => _offDataGatheringComponent.GetValue();
	public USQCommanderInputComponent                         CommanderInputComponent                                        => _offCommanderInputComponent.GetValue();
	public USQBoundaryListener                                BoundaryListener                                               => _offBoundaryListener.GetValue();
	public float                                              OutOfMapBoundsKillTimestamp                                    => _offOutOfMapBoundsKillTimestamp.GetValue();
	public APawn                                              LastRefreshedPawn                                              => _offLastRefreshedPawn.GetValue();
	public ASQGameSpawn                                       SelectedSpawn                                                  => _offSelectedSpawn.GetValue();
	public float                                              PawnRenderDistance                                             => _offPawnRenderDistance.GetValue();
	public USQMovementComponentNetworker                      Networker                                                      => _offNetworker.GetValue();
	#endregion


}

// Class Squad.SQAdminStats
// 0x0010 (0x00D8 - 0x00C8)
public class USQAdminStats : UActorComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQAIController
// 0x0018 (0x0360 - 0x0348)
public class ASQAIController : AAIController
{
	#region Offsets
	private ExternalOffset<UBlackboardComponent>              _offBlackboardComp                                             = new ExternalOffset<UBlackboardComponent>(0x0350, true);      // 0x0350(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<UBehaviorTreeComponent>            _offBehaviorComp                                               = new ExternalOffset<UBehaviorTreeComponent>(0x0358, true);    // 0x0358(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public UBlackboardComponent                               BlackboardComp                                                 => _offBlackboardComp.GetValue();
	public UBehaviorTreeComponent                             BehaviorComp                                                   => _offBehaviorComp.GetValue();
	#endregion


}

// Class Squad.SQAmbientAndReverbComponent
// 0x00D8 (0x0258 - 0x0180)
public class USQAmbientAndReverbComponent : USceneComponent
{
	#region Offsets
	private ExternalOffset<FSQReverbVolumeEffect>             _offReverbEffectSettings                                       = new ExternalOffset<FSQReverbVolumeEffect>(0x0220, false);    // 0x0220(0x0020) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offSoundComponent                                             = new ExternalOffset<UAudioComponent>(0x0240, true);           // 0x0240(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offSoundEffect                                                = new ExternalOffset<USoundBase>(0x0248, true);                // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAmbientFadeInTime                                          = new ExternalOffset<float>(0x0250);                           // 0x0250(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAmbientFadeOutTime                                         = new ExternalOffset<float>(0x0254);                           // 0x0254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FSQReverbVolumeEffect                              ReverbEffectSettings                                           => _offReverbEffectSettings.GetValue();
	public UAudioComponent                                    SoundComponent                                                 => _offSoundComponent.GetValue();
	public USoundBase                                         SoundEffect                                                    => _offSoundEffect.GetValue();
	public float                                              AmbientFadeInTime                                              => _offAmbientFadeInTime.GetValue();
	public float                                              AmbientFadeOutTime                                             => _offAmbientFadeOutTime.GetValue();
	#endregion


}

// Class Squad.SQVehicleResource
// 0x0048 (0x0280 - 0x0238)
public class ASQVehicleResource : AActor
{
	#region Offsets
	private ExternalOffset<float>                             _offResourceDropQuantity                                       = new ExternalOffset<float>(0x0248);                           // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offResourceDropRate                                           = new ExternalOffset<float>(0x024C);                           // 0x024C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offServerResourceRate                                         = new ExternalOffset<float>(0x0250);                           // 0x0250(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQForwardBase>                    _offCurrentFob                                                 = new ExternalOffset<ASQForwardBase>(0x0258, true);            // 0x0258(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<AActor>                            _offCurrentCaptureZone                                         = new ExternalOffset<AActor>(0x0260, true);                    // 0x0260(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQVehicleResourceWeaponInventoryComponent> _offParentInventory                                            = new ExternalOffset<USQVehicleResourceWeaponInventoryComponent>(0x0268, true); // 0x0268(0x0008) (BlueprintVisible, ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offMaxResources                                               = new ExternalOffset<int>(0x0278);                             // 0x0278(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<int>                               _offResources                                                  = new ExternalOffset<int>(0x027C);                             // 0x027C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public float                                              ResourceDropQuantity                                           => _offResourceDropQuantity.GetValue();
	public float                                              ResourceDropRate                                               => _offResourceDropRate.GetValue();
	public float                                              ServerResourceRate                                             => _offServerResourceRate.GetValue();
	public ASQForwardBase                                     CurrentFob                                                     => _offCurrentFob.GetValue();
	public AActor                                             CurrentCaptureZone                                             => _offCurrentCaptureZone.GetValue();
	public USQVehicleResourceWeaponInventoryComponent         ParentInventory                                                => _offParentInventory.GetValue();
	public int                                                MaxResources                                                   => _offMaxResources.GetValue();
	public int                                                Resources                                                      => _offResources.GetValue();
	#endregion


}

// Class Squad.SQAmmoResource
// 0x0000 (0x0280 - 0x0280)
public class ASQAmmoResource : ASQVehicleResource
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQAmmoWidget
// 0x0108 (0x0338 - 0x0230)
public class USQAmmoWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<TArray<USQMagazineGroupWidget>>    _offMagazineGroupWidgets                                       = new ExternalOffset<TArray<USQMagazineGroupWidget>>(0x0230, false); // 0x0230(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<UCanvasPanel>                      _offHighestLevelCanvas                                         = new ExternalOffset<UCanvasPanel>(0x0240, true);              // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offFiremodeTextBlock                                          = new ExternalOffset<UTextBlock>(0x0248, true);                // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offAmmoCountTextBlock                                         = new ExternalOffset<UTextBlock>(0x0250, true);                // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offZeroingTextBlock                                           = new ExternalOffset<UTextBlock>(0x0258, true);                // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offRoundInChamberImage                                        = new ExternalOffset<UImage>(0x0260, true);                    // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowFireSelectorInfo                                      = new ExternalOffset<byte/*(bool)*/>(0x0268);                  // 0x0268(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowAmmoInMag                                             = new ExternalOffset<byte/*(bool)*/>(0x0269);                  // 0x0269(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerController>               _offPlayerController                                           = new ExternalOffset<ASQPlayerController>(0x0270, true);       // 0x0270(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offPlayerState                                                = new ExternalOffset<ASQPlayerState>(0x0278, true);            // 0x0278(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offRefillableMagazineColor                                    = new ExternalOffset<FLinearColor>(0x0280, false);             // 0x0280(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offFullMagazineColor                                          = new ExternalOffset<FLinearColor>(0x0290, false);             // 0x0290(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offNearlyFullMagazineColor                                    = new ExternalOffset<FLinearColor>(0x02A0, false);             // 0x02A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offHalfMagazineColor                                          = new ExternalOffset<FLinearColor>(0x02B0, false);             // 0x02B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offEmptyMagazineColor                                         = new ExternalOffset<FLinearColor>(0x02C0, false);             // 0x02C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offFireModeAutoText                                           = new ExternalOffset<FText>(0x02D0, false);                    // 0x02D0(0x0018) (Edit, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offSightRangeText                                             = new ExternalOffset<FText>(0x02E8, false);                    // 0x02E8(0x0018) (Edit, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offFireModeSingleText                                         = new ExternalOffset<FText>(0x0300, false);                    // 0x0300(0x0018) (Edit, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offFireModeBurstText                                          = new ExternalOffset<FText>(0x0318, false);                    // 0x0318(0x0018) (Edit, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQEquipableItem>                  _offCachedCurrentWeapon                                        = new ExternalOffset<ASQEquipableItem>(0x0330, true);          // 0x0330(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public TArray<USQMagazineGroupWidget>                     MagazineGroupWidgets                                           => _offMagazineGroupWidgets.GetValue();
	public UCanvasPanel                                       HighestLevelCanvas                                             => _offHighestLevelCanvas.GetValue();
	public UTextBlock                                         FiremodeTextBlock                                              => _offFiremodeTextBlock.GetValue();
	public UTextBlock                                         AmmoCountTextBlock                                             => _offAmmoCountTextBlock.GetValue();
	public UTextBlock                                         ZeroingTextBlock                                               => _offZeroingTextBlock.GetValue();
	public UImage                                             RoundInChamberImage                                            => _offRoundInChamberImage.GetValue();
	public byte/*(bool)*/                                     bShowFireSelectorInfo                                          => _offbShowFireSelectorInfo.GetValue();
	public byte/*(bool)*/                                     bShowAmmoInMag                                                 => _offbShowAmmoInMag.GetValue();
	public ASQPlayerController                                PlayerController                                               => _offPlayerController.GetValue();
	public ASQPlayerState                                     PlayerState                                                    => _offPlayerState.GetValue();
	public FLinearColor                                       RefillableMagazineColor                                        => _offRefillableMagazineColor.GetValue();
	public FLinearColor                                       FullMagazineColor                                              => _offFullMagazineColor.GetValue();
	public FLinearColor                                       NearlyFullMagazineColor                                        => _offNearlyFullMagazineColor.GetValue();
	public FLinearColor                                       HalfMagazineColor                                              => _offHalfMagazineColor.GetValue();
	public FLinearColor                                       EmptyMagazineColor                                             => _offEmptyMagazineColor.GetValue();
	public FText                                              FireModeAutoText                                               => _offFireModeAutoText.GetValue();
	public FText                                              SightRangeText                                                 => _offSightRangeText.GetValue();
	public FText                                              FireModeSingleText                                             => _offFireModeSingleText.GetValue();
	public FText                                              FireModeBurstText                                              => _offFireModeBurstText.GetValue();
	public ASQEquipableItem                                   CachedCurrentWeapon                                            => _offCachedCurrentWeapon.GetValue();
	#endregion


}

// Class Squad.SQAnimDataEmotes
// 0x01E0 (0x0210 - 0x0030)
public class USQAnimDataEmotes : UDataAsset
{
	#region Offsets
//	private ExternalOffset<FSQEmoteAnims>                     _offEmoteAnims[0xA]                                            = new ExternalOffset<FSQEmoteAnims>(0x0030, false);            // 0x0030(0x0028) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
//	private TMap<struct FName, struct FSQEmoteAnims>          _offCustomEmotes                                               = new ExternalOffset<TMap<FSQEmoteAnims>>(0x01C0, false);      // 0x01C0(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQAnimInstance
// 0x0110 (0x0290 - 0x0180)
public class USQAnimInstance : UAnimInstance
{
	#region Offsets
	private ExternalOffset<float>                             _offBoredTargetTime                                            = new ExternalOffset<float>(0x026C);                           // 0x026C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsAds                                                     = new ExternalOffset<byte/*(bool)*/>(0x0270);                  // 0x0270(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsUsingItemOrIsAdsOrIsClimbing                            = new ExternalOffset<byte/*(bool)*/>(0x0271);                  // 0x0271(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQItemStaticInfo>                 _offCurrentItemStaticInfo                                      = new ExternalOffset<USQItemStaticInfo>(0x0278, true);         // 0x0278(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQSoldier>                        _offSoldier                                                    = new ExternalOffset<ASQSoldier>(0x0280, true);                // 0x0280(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQSoldierNew>                     _offSoldierNew                                                 = new ExternalOffset<ASQSoldierNew>(0x0288, true);             // 0x0288(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              BoredTargetTime                                                => _offBoredTargetTime.GetValue();
	public byte/*(bool)*/                                     bIsAds                                                         => _offbIsAds.GetValue();
	public byte/*(bool)*/                                     bIsUsingItemOrIsAdsOrIsClimbing                                => _offbIsUsingItemOrIsAdsOrIsClimbing.GetValue();
	public USQItemStaticInfo                                  CurrentItemStaticInfo                                          => _offCurrentItemStaticInfo.GetValue();
	public ASQSoldier                                         Soldier                                                        => _offSoldier.GetValue();
	public ASQSoldierNew                                      SoldierNew                                                     => _offSoldierNew.GetValue();
	#endregion


}

// Class Squad.SQAnimInstanceSoldier
// 0x0189 (0x0419 - 0x0290)
public class USQAnimInstanceSoldier : USQAnimInstance
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbDrawDebugSpheres                                          = new ExternalOffset<byte/*(bool)*/>(0x0290);                  // 0x0290(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsSoldierAlive                                            = new ExternalOffset<byte/*(bool)*/>(0x0291);                  // 0x0291(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsSoldierRagdolled                                        = new ExternalOffset<byte/*(bool)*/>(0x0292);                  // 0x0292(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offLeftHandIKLocation                                         = new ExternalOffset<FVector>(0x0294, false);                  // 0x0294(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offLeftHandIKRotation                                         = new ExternalOffset<FRotator>(0x02A0, false);                 // 0x02A0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLeftHandIKAlpha                                            = new ExternalOffset<float>(0x02AC);                           // 0x02AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offRightHandIKLocation                                        = new ExternalOffset<FVector>(0x02B0, false);                  // 0x02B0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offRightHandIKRotation                                        = new ExternalOffset<FRotator>(0x02BC, false);                 // 0x02BC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRightHandIKAlpha                                           = new ExternalOffset<float>(0x02C8);                           // 0x02C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsDragging                                                = new ExternalOffset<byte/*(bool)*/>(0x02CC);                  // 0x02CC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offDraggingLeftArmRotation                                    = new ExternalOffset<FRotator>(0x02D0, false);                 // 0x02D0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offYawDeltaRaw                                                = new ExternalOffset<float>(0x02DC);                           // 0x02DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offAddRotShot                                                 = new ExternalOffset<FRotator>(0x02E0, false);                 // 0x02E0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offAddRotCameraShot                                           = new ExternalOffset<FRotator>(0x02EC, false);                 // 0x02EC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offAddAdsRotCameraShot                                        = new ExternalOffset<FRotator>(0x02F8, false);                 // 0x02F8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbLeanConditions                                            = new ExternalOffset<byte/*(bool)*/>(0x0304);                  // 0x0304(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBipodLength                                                = new ExternalOffset<float>(0x0308);                           // 0x0308(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offBipodHeight                                                = new ExternalOffset<FVector>(0x030C, false);                  // 0x030C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAutoLowered                                               = new ExternalOffset<byte/*(bool)*/>(0x0318);                  // 0x0318(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offOffsetLineOfFire                                           = new ExternalOffset<FRotator>(0x031C, false);                 // 0x031C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLastVelocityWhenIsInAir                                    = new ExternalOffset<float>(0x0328);                           // 0x0328(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLeftHandWeaponIkAlpha                                      = new ExternalOffset<float>(0x032C);                           // 0x032C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRightHand3pWeaponIkAlpha                                   = new ExternalOffset<float>(0x0330);                           // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAdjustAdsSightItemAnimPos                                  = new ExternalOffset<float>(0x0334);                           // 0x0334(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbVelocityProneTransAnim                                    = new ExternalOffset<byte/*(bool)*/>(0x0338);                  // 0x0338(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDirection                                                  = new ExternalOffset<float>(0x033C);                           // 0x033C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCanSprintToProne                                          = new ExternalOffset<byte/*(bool)*/>(0x0340);                  // 0x0340(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsCrouched                                                = new ExternalOffset<byte/*(bool)*/>(0x0341);                  // 0x0341(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsProne                                                   = new ExternalOffset<byte/*(bool)*/>(0x0342);                  // 0x0342(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsJumping                                                 = new ExternalOffset<byte/*(bool)*/>(0x0343);                  // 0x0343(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsFalling                                                 = new ExternalOffset<byte/*(bool)*/>(0x0344);                  // 0x0344(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offSpeed                                                      = new ExternalOffset<float>(0x0348);                           // 0x0348(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offVelocity                                                   = new ExternalOffset<FVector>(0x034C, false);                  // 0x034C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offPitchDeltaRaw                                              = new ExternalOffset<float>(0x0358);                           // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFirstPersonVisibility                                     = new ExternalOffset<byte/*(bool)*/>(0x035C);                  // 0x035C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offClimbWeaponSocketLoc                                       = new ExternalOffset<FVector>(0x0360, false);                  // 0x0360(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offClimbWeaponSocketRot                                       = new ExternalOffset<FRotator>(0x036C, false);                 // 0x036C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offVaultClimbAo                                               = new ExternalOffset<FRotator>(0x0378, false);                 // 0x0378(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offFreeLookRot                                                = new ExternalOffset<FRotator>(0x0384, false);                 // 0x0384(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbSprintToProneTransAnim                                    = new ExternalOffset<byte/*(bool)*/>(0x0390);                  // 0x0390(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbLeanRight                                                 = new ExternalOffset<byte/*(bool)*/>(0x0391);                  // 0x0391(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbLeanLeft                                                  = new ExternalOffset<byte/*(bool)*/>(0x0392);                  // 0x0392(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offLeaningDirection                                           = new ExternalOffset<char>(0x0393, false);                     // 0x0393(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbBipodIsDeployed                                           = new ExternalOffset<byte/*(bool)*/>(0x0394);                  // 0x0394(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offBipodTransitionAlpha                                       = new ExternalOffset<float>(0x0398);                           // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbShot                                                      = new ExternalOffset<byte/*(bool)*/>(0x039C);                  // 0x039C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offSprintSpeedMultiplier                                      = new ExternalOffset<float>(0x03A0);                           // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxWalkSpeedCrouched                                       = new ExternalOffset<float>(0x03A4);                           // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxWalkSpeedProne                                          = new ExternalOffset<float>(0x03A8);                           // 0x03A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxWalkSpeed                                               = new ExternalOffset<float>(0x03AC);                           // 0x03AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsInVehicle                                               = new ExternalOffset<byte/*(bool)*/>(0x03B0);                  // 0x03B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offVehiclePitch                                               = new ExternalOffset<float>(0x03B4);                           // 0x03B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offVehicleYaw                                                 = new ExternalOffset<float>(0x03B8);                           // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offVehicleBaseAnim                                            = new ExternalOffset<UAnimSequence>(0x03C0, true);             // 0x03C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UBlendSpace>                       _offVehicleAimOffsets                                          = new ExternalOffset<UBlendSpace>(0x03C8, true);               // 0x03C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseWheelBlendSpace1D                                      = new ExternalOffset<byte/*(bool)*/>(0x03D0);                  // 0x03D0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UBlendSpace1D>                     _offVehicleWheelBlendSpace1D                                   = new ExternalOffset<UBlendSpace1D>(0x03D8, true);             // 0x03D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offVehicleWheel                                               = new ExternalOffset<float>(0x03E0);                           // 0x03E0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCustomVehicleWheel1                                        = new ExternalOffset<float>(0x03E4);                           // 0x03E4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offInterpSpeed                                                = new ExternalOffset<float>(0x03E8);                           // 0x03E8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCustomSteeringWheelAnimExplTime                            = new ExternalOffset<float>(0x03EC);                           // 0x03EC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbHandIKAlphaEnabled                                        = new ExternalOffset<byte/*(bool)*/>(0x03F0);                  // 0x03F0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offSteeringWheelAnimExplTime                                  = new ExternalOffset<float>(0x03F4);                           // 0x03F4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offRightHandAlpha                                             = new ExternalOffset<float>(0x03F8);                           // 0x03F8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offLeftHandAlpha                                              = new ExternalOffset<float>(0x03FC);                           // 0x03FC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offLastVehicleWheelAbs                                        = new ExternalOffset<float>(0x0400);                           // 0x0400(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offVehicleWheelAbsRate                                        = new ExternalOffset<float>(0x0404);                           // 0x0404(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offSteeringWheelSingleFrameAnimSequence                       = new ExternalOffset<UAnimSequence>(0x0408, true);             // 0x0408(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offTime                                                       = new ExternalOffset<float>(0x0410);                           // 0x0410(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_LeanLeftAndLeanConditions                            = new ExternalOffset<byte/*(bool)*/>(0x0414);                  // 0x0414(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_NotLeanLeftOrNotLeanConditions                       = new ExternalOffset<byte/*(bool)*/>(0x0415);                  // 0x0415(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_LeanRightAndLeanConditions                           = new ExternalOffset<byte/*(bool)*/>(0x0416);                  // 0x0416(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_NotLeanRightOrNotLeanConditions                      = new ExternalOffset<byte/*(bool)*/>(0x0417);                  // 0x0417(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsPullingTriggerAndMagazineHasAmmo                        = new ExternalOffset<byte/*(bool)*/>(0x0418);                  // 0x0418(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bDrawDebugSpheres                                              => _offbDrawDebugSpheres.GetValue();
	public byte/*(bool)*/                                     bIsSoldierAlive                                                => _offbIsSoldierAlive.GetValue();
	public byte/*(bool)*/                                     bIsSoldierRagdolled                                            => _offbIsSoldierRagdolled.GetValue();
	public FVector                                            LeftHandIKLocation                                             => _offLeftHandIKLocation.GetValue();
	public FRotator                                           LeftHandIKRotation                                             => _offLeftHandIKRotation.GetValue();
	public float                                              LeftHandIKAlpha                                                => _offLeftHandIKAlpha.GetValue();
	public FVector                                            RightHandIKLocation                                            => _offRightHandIKLocation.GetValue();
	public FRotator                                           RightHandIKRotation                                            => _offRightHandIKRotation.GetValue();
	public float                                              RightHandIKAlpha                                               => _offRightHandIKAlpha.GetValue();
	public byte/*(bool)*/                                     bIsDragging                                                    => _offbIsDragging.GetValue();
	public FRotator                                           DraggingLeftArmRotation                                        => _offDraggingLeftArmRotation.GetValue();
	public float                                              YawDeltaRaw                                                    => _offYawDeltaRaw.GetValue();
	public FRotator                                           AddRotShot                                                     => _offAddRotShot.GetValue();
	public FRotator                                           AddRotCameraShot                                               => _offAddRotCameraShot.GetValue();
	public FRotator                                           AddAdsRotCameraShot                                            => _offAddAdsRotCameraShot.GetValue();
	public byte/*(bool)*/                                     bLeanConditions                                                => _offbLeanConditions.GetValue();
	public float                                              BipodLength                                                    => _offBipodLength.GetValue();
	public FVector                                            BipodHeight                                                    => _offBipodHeight.GetValue();
	public byte/*(bool)*/                                     bAutoLowered                                                   => _offbAutoLowered.GetValue();
	public FRotator                                           OffsetLineOfFire                                               => _offOffsetLineOfFire.GetValue();
	public float                                              LastVelocityWhenIsInAir                                        => _offLastVelocityWhenIsInAir.GetValue();
	public float                                              LeftHandWeaponIkAlpha                                          => _offLeftHandWeaponIkAlpha.GetValue();
	public float                                              RightHand3pWeaponIkAlpha                                       => _offRightHand3pWeaponIkAlpha.GetValue();
	public float                                              AdjustAdsSightItemAnimPos                                      => _offAdjustAdsSightItemAnimPos.GetValue();
	public byte/*(bool)*/                                     bVelocityProneTransAnim                                        => _offbVelocityProneTransAnim.GetValue();
	public float                                              Direction                                                      => _offDirection.GetValue();
	public byte/*(bool)*/                                     bCanSprintToProne                                              => _offbCanSprintToProne.GetValue();
	public byte/*(bool)*/                                     bIsCrouched                                                    => _offbIsCrouched.GetValue();
	public byte/*(bool)*/                                     bIsProne                                                       => _offbIsProne.GetValue();
	public byte/*(bool)*/                                     bIsJumping                                                     => _offbIsJumping.GetValue();
	public byte/*(bool)*/                                     bIsFalling                                                     => _offbIsFalling.GetValue();
	public float                                              Speed                                                          => _offSpeed.GetValue();
	public FVector                                            Velocity                                                       => _offVelocity.GetValue();
	public float                                              PitchDeltaRaw                                                  => _offPitchDeltaRaw.GetValue();
	public byte/*(bool)*/                                     bFirstPersonVisibility                                         => _offbFirstPersonVisibility.GetValue();
	public FVector                                            ClimbWeaponSocketLoc                                           => _offClimbWeaponSocketLoc.GetValue();
	public FRotator                                           ClimbWeaponSocketRot                                           => _offClimbWeaponSocketRot.GetValue();
	public FRotator                                           VaultClimbAo                                                   => _offVaultClimbAo.GetValue();
	public FRotator                                           FreeLookRot                                                    => _offFreeLookRot.GetValue();
	public byte/*(bool)*/                                     bSprintToProneTransAnim                                        => _offbSprintToProneTransAnim.GetValue();
	public byte/*(bool)*/                                     bLeanRight                                                     => _offbLeanRight.GetValue();
	public byte/*(bool)*/                                     bLeanLeft                                                      => _offbLeanLeft.GetValue();
	public byte/*(bool)*/                                     bBipodIsDeployed                                               => _offbBipodIsDeployed.GetValue();
	public float                                              BipodTransitionAlpha                                           => _offBipodTransitionAlpha.GetValue();
	public byte/*(bool)*/                                     bShot                                                          => _offbShot.GetValue();
	public float                                              SprintSpeedMultiplier                                          => _offSprintSpeedMultiplier.GetValue();
	public float                                              MaxWalkSpeedCrouched                                           => _offMaxWalkSpeedCrouched.GetValue();
	public float                                              MaxWalkSpeedProne                                              => _offMaxWalkSpeedProne.GetValue();
	public float                                              MaxWalkSpeed                                                   => _offMaxWalkSpeed.GetValue();
	public byte/*(bool)*/                                     bIsInVehicle                                                   => _offbIsInVehicle.GetValue();
	public float                                              VehiclePitch                                                   => _offVehiclePitch.GetValue();
	public float                                              VehicleYaw                                                     => _offVehicleYaw.GetValue();
	public UAnimSequence                                      VehicleBaseAnim                                                => _offVehicleBaseAnim.GetValue();
	public UBlendSpace                                        VehicleAimOffsets                                              => _offVehicleAimOffsets.GetValue();
	public byte/*(bool)*/                                     bUseWheelBlendSpace1D                                          => _offbUseWheelBlendSpace1D.GetValue();
	public UBlendSpace1D                                      VehicleWheelBlendSpace1D                                       => _offVehicleWheelBlendSpace1D.GetValue();
	public float                                              VehicleWheel                                                   => _offVehicleWheel.GetValue();
	public float                                              CustomVehicleWheel1                                            => _offCustomVehicleWheel1.GetValue();
	public float                                              InterpSpeed                                                    => _offInterpSpeed.GetValue();
	public float                                              CustomSteeringWheelAnimExplTime                                => _offCustomSteeringWheelAnimExplTime.GetValue();
	public byte/*(bool)*/                                     bHandIKAlphaEnabled                                            => _offbHandIKAlphaEnabled.GetValue();
	public float                                              SteeringWheelAnimExplTime                                      => _offSteeringWheelAnimExplTime.GetValue();
	public float                                              RightHandAlpha                                                 => _offRightHandAlpha.GetValue();
	public float                                              LeftHandAlpha                                                  => _offLeftHandAlpha.GetValue();
	public float                                              LastVehicleWheelAbs                                            => _offLastVehicleWheelAbs.GetValue();
	public float                                              VehicleWheelAbsRate                                            => _offVehicleWheelAbsRate.GetValue();
	public UAnimSequence                                      SteeringWheelSingleFrameAnimSequence                           => _offSteeringWheelSingleFrameAnimSequence.GetValue();
	public float                                              Time                                                           => _offTime.GetValue();
	public byte/*(bool)*/                                     bFP_T_LeanLeftAndLeanConditions                                => _offbFP_T_LeanLeftAndLeanConditions.GetValue();
	public byte/*(bool)*/                                     bFP_T_NotLeanLeftOrNotLeanConditions                           => _offbFP_T_NotLeanLeftOrNotLeanConditions.GetValue();
	public byte/*(bool)*/                                     bFP_T_LeanRightAndLeanConditions                               => _offbFP_T_LeanRightAndLeanConditions.GetValue();
	public byte/*(bool)*/                                     bFP_T_NotLeanRightOrNotLeanConditions                          => _offbFP_T_NotLeanRightOrNotLeanConditions.GetValue();
	public byte/*(bool)*/                                     bIsPullingTriggerAndMagazineHasAmmo                            => _offbIsPullingTriggerAndMagazineHasAmmo.GetValue();
	#endregion


}

// Class Squad.SQAnimInstanceSoldier1P
// 0x07A7 (0x0BC0 - 0x0419)
public class USQAnimInstanceSoldier1P : USQAnimInstanceSoldier
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__St2P = new ExternalOffset<byte/*(bool)*/>(0x0420);                  // 0x0420(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__P2St = new ExternalOffset<byte/*(bool)*/>(0x0421);                  // 0x0421(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__Sp2P = new ExternalOffset<byte/*(bool)*/>(0x0422);                  // 0x0422(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStateWeight__GTEOne__ProneStates__ProneMove               = new ExternalOffset<byte/*(bool)*/>(0x0504);                  // 0x0504(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbRelevantAnimTimeRemaining__LTEPtTwo__ProneStates__OutProneMove = new ExternalOffset<byte/*(bool)*/>(0x0505);                  // 0x0505(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCurrentTime__GTEPtThree__Jump1P__JumpStart__rifle_1ptop_jumpstart = new ExternalOffset<byte/*(bool)*/>(0x0578);                  // 0x0578(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbTimeRemaining__LTEPtTwo__Jump1P__JumpEnd__rifle_1ptop_jumpend = new ExternalOffset<byte/*(bool)*/>(0x0579);                  // 0x0579(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbTimeRemaining__LTEPtTwo__Jump1P__JumpStart__rifle_1ptop_jumpstart = new ExternalOffset<byte/*(bool)*/>(0x057A);                  // 0x057A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offZeroing                                                    = new ExternalOffset<FRotator>(0x05F4, false);                 // 0x05F4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<UBlendSpaceBase>                   _offProneMoveType                                              = new ExternalOffset<UBlendSpaceBase>(0x0600, true);           // 0x0600(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offProneMoveTypeAdditiveReference                             = new ExternalOffset<UAnimSequence>(0x0608, true);             // 0x0608(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offOutProneMoveType                                           = new ExternalOffset<UAnimSequence>(0x0610, true);             // 0x0610(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offOutProneMoveTypeNonadditive                                = new ExternalOffset<UAnimSequence>(0x0618, true);             // 0x0618(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offAdjustableAdsSightItemAnim                                 = new ExternalOffset<UAnimSequence>(0x0620, true);             // 0x0620(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHasAdjustableSightAlpha                                    = new ExternalOffset<float>(0x0628);                           // 0x0628(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offStandLoc                                                   = new ExternalOffset<FVector>(0x062C, false);                  // 0x062C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCrouchLoc                                                  = new ExternalOffset<FVector>(0x0638, false);                  // 0x0638(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneLoc                                                   = new ExternalOffset<FVector>(0x0644, false);                  // 0x0644(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offBipodLoc                                                   = new ExternalOffset<FVector>(0x0650, false);                  // 0x0650(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStandLocBlendTime                                          = new ExternalOffset<float>(0x065C);                           // 0x065C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offNegFpvTorsoCameraOffset                                    = new ExternalOffset<FVector>(0x0660, false);                  // 0x0660(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offDeviationVisuFb                                            = new ExternalOffset<FVector>(0x066C, false);                  // 0x066C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offSway                                                       = new ExternalOffset<FRotator>(0x0678, false);                 // 0x0678(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offStrafeVector                                               = new ExternalOffset<FVector>(0x0684, false);                  // 0x0684(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offStrafeRotator                                              = new ExternalOffset<FRotator>(0x0690, false);                 // 0x0690(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offAdsStrafeRotator                                           = new ExternalOffset<FRotator>(0x069C, false);                 // 0x069C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offBaseAimPitchPct                                            = new ExternalOffset<float>(0x06A8);                           // 0x06A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offWeapRecoilRelLoc                                           = new ExternalOffset<FVector>(0x06AC, false);                  // 0x06AC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offGlobalDeltaRotDeltaSpring                                  = new ExternalOffset<FRotator>(0x06B8, false);                 // 0x06B8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offGlobalDeltaRotDeltaSpringRoll                              = new ExternalOffset<FRotator>(0x06C4, false);                 // 0x06C4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offGlobalDeltaLocDeltaSpringWeaponMesh                        = new ExternalOffset<FVector>(0x06D0, false);                  // 0x06D0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offLeftHandIKSpringAlpha                                      = new ExternalOffset<float>(0x06DC);                           // 0x06DC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offAim1pWeaponMeshPosition                                    = new ExternalOffset<FVector>(0x06E0, false);                  // 0x06E0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offAim1pWeaponMeshRescale                                     = new ExternalOffset<FVector>(0x06EC, false);                  // 0x06EC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offStandLeanLeftRootOffset                                    = new ExternalOffset<FVector>(0x06F8, false);                  // 0x06F8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offStandLeanLeftWeaponRotation                                = new ExternalOffset<FRotator>(0x0704, false);                 // 0x0704(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offStandLeanLeftCameraRotation                                = new ExternalOffset<FRotator>(0x0710, false);                 // 0x0710(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offStandLeanRightRootOffset                                   = new ExternalOffset<FVector>(0x071C, false);                  // 0x071C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offStandLeanRightWeaponRotation                               = new ExternalOffset<FRotator>(0x0728, false);                 // 0x0728(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offStandLeanRightCameraRotation                               = new ExternalOffset<FRotator>(0x0734, false);                 // 0x0734(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offCrouchLeanLeftRootOffset                                   = new ExternalOffset<FVector>(0x0740, false);                  // 0x0740(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offCrouchLeanLeftWeaponRotation                               = new ExternalOffset<FRotator>(0x074C, false);                 // 0x074C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offCrouchLeanLeftCameraRotation                               = new ExternalOffset<FRotator>(0x0758, false);                 // 0x0758(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offCrouchLeanRightRootOffset                                  = new ExternalOffset<FVector>(0x0764, false);                  // 0x0764(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offCrouchLeanRightWeaponRotation                              = new ExternalOffset<FRotator>(0x0770, false);                 // 0x0770(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offCrouchLeanRightCameraRotation                              = new ExternalOffset<FRotator>(0x077C, false);                 // 0x077C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offProneLeanLeftRootOffset                                    = new ExternalOffset<FVector>(0x0788, false);                  // 0x0788(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offProneLeanLeftWeaponRotation                                = new ExternalOffset<FRotator>(0x0794, false);                 // 0x0794(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offProneLeanLeftCameraRotation                                = new ExternalOffset<FRotator>(0x07A0, false);                 // 0x07A0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offProneLeanRightRootOffset                                   = new ExternalOffset<FVector>(0x07AC, false);                  // 0x07AC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offProneLeanRightWeaponRotation                               = new ExternalOffset<FRotator>(0x07B8, false);                 // 0x07B8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offProneLeanRightCameraRotation                               = new ExternalOffset<FRotator>(0x07C4, false);                 // 0x07C4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_HasSway                                                 = new ExternalOffset<float>(0x07D0);                           // 0x07D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFP_JumpStartLoopAlpha                                      = new ExternalOffset<float>(0x07D4);                           // 0x07D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_JumpEndBobbingBlendAlpha                                = new ExternalOffset<float>(0x07D8);                           // 0x07D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_JumpEndBobbingAdditiveAlpha                             = new ExternalOffset<float>(0x07DC);                           // 0x07DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_JumpEndCameraRootMotionAlphaBlend                       = new ExternalOffset<float>(0x07E0);                           // 0x07E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_IsFallingAndNotJumping                                 = new ExternalOffset<byte/*(bool)*/>(0x07E4);                  // 0x07E4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_St2P_RootMotionBlendAlpha                               = new ExternalOffset<float>(0x07E8);                           // 0x07E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_P2St_RootMotionBlendAlpha                               = new ExternalOffset<float>(0x07EC);                           // 0x07EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_IsProneAndIsSprintingAndCanSprintToProne               = new ExternalOffset<byte/*(bool)*/>(0x07F0);                  // 0x07F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_SwitchedProneAndNotIsProne                             = new ExternalOffset<byte/*(bool)*/>(0x07F1);                  // 0x07F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_SwitchedProneAndIsProne                                = new ExternalOffset<byte/*(bool)*/>(0x07F2);                  // 0x07F2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offFP_ProneMoveIkWeaponHandRootRotFromGroundAngle             = new ExternalOffset<FRotator>(0x07F4, false);                 // 0x07F4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offFP_ProneMoveIkWeaponHandRootRotFromActorPitch              = new ExternalOffset<FRotator>(0x0800, false);                 // 0x0800(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_ProneMoveWeaponAligningConditions                      = new ExternalOffset<byte/*(bool)*/>(0x080C);                  // 0x080C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offFP_ProneMoveIkWeaponRightClavicleRot                       = new ExternalOffset<FRotator>(0x0810, false);                 // 0x0810(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_ProneMoveBobPlayRate                                    = new ExternalOffset<float>(0x081C);                           // 0x081C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_SpeedHigherThanZeroAndNotIsProneTransition             = new ExternalOffset<byte/*(bool)*/>(0x0820);                  // 0x0820(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_SpeedHigherThanZero                                    = new ExternalOffset<byte/*(bool)*/>(0x0821);                  // 0x0821(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_HvdXorClAndClOrHvdXorVaAndVaOrBipod                    = new ExternalOffset<byte/*(bool)*/>(0x0822);                  // 0x0822(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_ClimbAnimNotEqual1                                     = new ExternalOffset<byte/*(bool)*/>(0x0823);                  // 0x0823(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_ClimbAndClimbAnim1                                     = new ExternalOffset<byte/*(bool)*/>(0x0824);                  // 0x0824(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offFP_ClimbAndClimbAnim1_AimRotator                           = new ExternalOffset<FRotator>(0x0828, false);                 // 0x0828(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_1pLeftHandIkConditions                                 = new ExternalOffset<byte/*(bool)*/>(0x0834);                  // 0x0834(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_1pLeftHandIKConditionsAlpha                             = new ExternalOffset<float>(0x0838);                           // 0x0838(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_IsUsingItemAlpha                                        = new ExternalOffset<float>(0x083C);                           // 0x083C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_IsProneAlpha                                            = new ExternalOffset<float>(0x0840);                           // 0x0840(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_ProneStatesProneMoveToOutProneMove                   = new ExternalOffset<byte/*(bool)*/>(0x0844);                  // 0x0844(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Jump1pJumpStartToJumpEnd                             = new ExternalOffset<byte/*(bool)*/>(0x0845);                  // 0x0845(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_ToADS_Hipfire                                        = new ExternalOffset<byte/*(bool)*/>(0x0846);                  // 0x0846(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedIsPullingTriggerAndMagazineHasAmmo                  = new ExternalOffset<byte/*(bool)*/>(0x0847);                  // 0x0847(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offToADS_Hipfire_RemainingTIme                                = new ExternalOffset<float>(0x0848);                           // 0x0848(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offSteady1pHipFireDuration                                    = new ExternalOffset<float>(0x084C);                           // 0x084C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_StandToADS_Grenade                                   = new ExternalOffset<byte/*(bool)*/>(0x0850);                  // 0x0850(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_WeaponBobbing1P_ADSToStand                           = new ExternalOffset<byte/*(bool)*/>(0x0851);                  // 0x0851(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_WeaponBobbing1P_ADSToProne                           = new ExternalOffset<byte/*(bool)*/>(0x0852);                  // 0x0852(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_WeaponBobbing1P_ProneToADS                           = new ExternalOffset<byte/*(bool)*/>(0x0853);                  // 0x0853(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_CustomIsCrouchedAlpha                                   = new ExternalOffset<float>(0x0854);                           // 0x0854(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_HasAdjustableSightAlphaTimesIsAdsAlpha                  = new ExternalOffset<float>(0x0858);                           // 0x0858(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbProneMoveBobbing                                          = new ExternalOffset<byte/*(bool)*/>(0x085C);                  // 0x085C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbLeftHandIkOut1P                                           = new ExternalOffset<byte/*(bool)*/>(0x085D);                  // 0x085D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbSwitchedProne                                             = new ExternalOffset<byte/*(bool)*/>(0x085E);                  // 0x085E(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbLastProneStance                                           = new ExternalOffset<byte/*(bool)*/>(0x085F);                  // 0x085F(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMoveDeviationFactor                                        = new ExternalOffset<float>(0x0860);                           // 0x0860(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offShotDeviationFactor                                        = new ExternalOffset<float>(0x0864);                           // 0x0864(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector4>                          _offFinalDeviation                                             = new ExternalOffset<FVector4>(0x0870, false);                 // 0x0870(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offDeviationVisuFbZY                                          = new ExternalOffset<FVector2D>(0x0880, false);                // 0x0880(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offAddRotGoingShot                                            = new ExternalOffset<FRotator>(0x0888, false);                 // 0x0888(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilReleaseInterpSpeed                                   = new ExternalOffset<float>(0x0894);                           // 0x0894(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilWeaponLimit                                          = new ExternalOffset<float>(0x0898);                           // 0x0898(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMoveRecoilFactor                                           = new ExternalOffset<float>(0x089C);                           // 0x089C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilCanRelease                                           = new ExternalOffset<float>(0x08A0);                           // 0x08A0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offFinalRecoilSigma                                           = new ExternalOffset<FVector>(0x08A4, false);                  // 0x08A4(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offFinalRecoilMean                                            = new ExternalOffset<FVector>(0x08B0, false);                  // 0x08B0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMoveSwayFactor                                             = new ExternalOffset<float>(0x08BC);                           // 0x08BC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCustomSwayMin                                              = new ExternalOffset<float>(0x08C0);                           // 0x08C0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offSwayZY                                                     = new ExternalOffset<FVector2D>(0x08C4, false);                // 0x08C4(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStrafeSpringFactor                                         = new ExternalOffset<float>(0x08CC);                           // 0x08CC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offLastKnownRot1                                              = new ExternalOffset<FRotator>(0x08D0, false);                 // 0x08D0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCtrlRotVectorDeltaSpring                                   = new ExternalOffset<FVector>(0x08DC, false);                  // 0x08DC(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offLastKnownRot2                                              = new ExternalOffset<FRotator>(0x08E8, false);                 // 0x08E8(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCtrlRotDeltaSpringLerpAlpha                                = new ExternalOffset<float>(0x08F4);                           // 0x08F4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponSpringTurnSpeedToFullIntensity                       = new ExternalOffset<float>(0x08F8);                           // 0x08F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offStrafeSpringRotator                                        = new ExternalOffset<FRotator>(0x08FC, false);                 // 0x08FC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offStrafeSpringVector                                         = new ExternalOffset<FVector>(0x0908, false);                  // 0x0908(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offAdsStrafeSpringRotator                                     = new ExternalOffset<FRotator>(0x0914, false);                 // 0x0914(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCustomNotIsAds                                             = new ExternalOffset<float>(0x0920);                           // 0x0920(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offFireShake                                                  = new ExternalOffset<UClass>(0x0928, true);                    // 0x0928(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offWeaponSpringSide                                           = new ExternalOffset<int>(0x0930);                             // 0x0930(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponSpringStiffness                                      = new ExternalOffset<float>(0x0934);                           // 0x0934(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponSpringCriticalDampingFactor                          = new ExternalOffset<float>(0x0938);                           // 0x0938(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponSpringMass                                           = new ExternalOffset<float>(0x093C);                           // 0x093C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponSpringFactor                                         = new ExternalOffset<float>(0x0940);                           // 0x0940(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponMeshSpringLocDelayFactor                             = new ExternalOffset<float>(0x0944);                           // 0x0944(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponSpringClamp                                          = new ExternalOffset<float>(0x0948);                           // 0x0948(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponMeshSpringRotDelayFactor                             = new ExternalOffset<float>(0x094C);                           // 0x094C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAddMoveDeviation                                           = new ExternalOffset<float>(0x0950);                           // 0x0950(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMoveDeviationFactorRelease                                 = new ExternalOffset<float>(0x0954);                           // 0x0954(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxMoveDeviationFactor                                     = new ExternalOffset<float>(0x0958);                           // 0x0958(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinMoveDeviationFactor                                     = new ExternalOffset<float>(0x095C);                           // 0x095C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFullStaminaDeviationFactor                                 = new ExternalOffset<float>(0x0960);                           // 0x0960(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLowStaminaDeviationFactor                                  = new ExternalOffset<float>(0x0964);                           // 0x0964(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAddShotDeviationFactor                                     = new ExternalOffset<float>(0x0968);                           // 0x0968(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAddShotDeviationFactorAds                                  = new ExternalOffset<float>(0x096C);                           // 0x096C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offShotDeviationFactorRelease                                 = new ExternalOffset<float>(0x0970);                           // 0x0970(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinShotDeviationFactor                                     = new ExternalOffset<float>(0x0974);                           // 0x0974(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxShotDeviationFactor                                     = new ExternalOffset<float>(0x0978);                           // 0x0978(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDeviationVisuFbInterpSpeed_YZ                              = new ExternalOffset<float>(0x097C);                           // 0x097C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDeviationVisuFbMax                                         = new ExternalOffset<float>(0x0980);                           // 0x0980(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDeviationVisuFbInterpSpeed_Final                           = new ExternalOffset<float>(0x0984);                           // 0x0984(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinBipodAdsDeviation                                       = new ExternalOffset<float>(0x0988);                           // 0x0988(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinBipodDeviation                                          = new ExternalOffset<float>(0x098C);                           // 0x098C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinProneAdsDeviation                                       = new ExternalOffset<float>(0x0990);                           // 0x0990(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinProneDeviation                                          = new ExternalOffset<float>(0x0994);                           // 0x0994(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinCrouchAdsDeviation                                      = new ExternalOffset<float>(0x0998);                           // 0x0998(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinCrouchDeviation                                         = new ExternalOffset<float>(0x099C);                           // 0x099C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinStandAdsDeviation                                       = new ExternalOffset<float>(0x09A0);                           // 0x09A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinStandDeviation                                          = new ExternalOffset<float>(0x09A4);                           // 0x09A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinProneTransitionDeviation                                = new ExternalOffset<float>(0x09A8);                           // 0x09A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxMoveRecoilFactor                                        = new ExternalOffset<float>(0x09AC);                           // 0x09AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAddMoveRecoil                                              = new ExternalOffset<float>(0x09B0);                           // 0x09B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinMoveRecoilFactor                                        = new ExternalOffset<float>(0x09B4);                           // 0x09B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMoveRecoilFactorRelease                                    = new ExternalOffset<float>(0x09B8);                           // 0x09B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFullStaminaRecoilFactor                                    = new ExternalOffset<float>(0x09BC);                           // 0x09BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLowStaminaRecoilFactor                                     = new ExternalOffset<float>(0x09C0);                           // 0x09C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilCameraOffsetFactor                                   = new ExternalOffset<float>(0x09C4);                           // 0x09C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilLofCameraOffsetLimit                                 = new ExternalOffset<float>(0x09C8);                           // 0x09C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilLofAttackInterpSpeed                                 = new ExternalOffset<float>(0x09CC);                           // 0x09CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilCanReleaseInterpSpeed                                = new ExternalOffset<float>(0x09D0);                           // 0x09D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilCameraOffsetInterpSpeed                              = new ExternalOffset<float>(0x09D4);                           // 0x09D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilLofReleaseInterpSpeed                                = new ExternalOffset<float>(0x09D8);                           // 0x09D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeapRecoilRelLocFactor                                     = new ExternalOffset<float>(0x09DC);                           // 0x09DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilCameraShotInterpSpeed                                = new ExternalOffset<float>(0x09E0);                           // 0x09E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilAdsCameraShotInterpSpeed                             = new ExternalOffset<float>(0x09E4);                           // 0x09E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneAdsRecoilMean                                         = new ExternalOffset<FVector>(0x09E8, false);                  // 0x09E8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneAdsRecoilSigma                                        = new ExternalOffset<FVector>(0x09F4, false);                  // 0x09F4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneRecoilMean                                            = new ExternalOffset<FVector>(0x0A00, false);                  // 0x0A00(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneRecoilSigma                                           = new ExternalOffset<FVector>(0x0A0C, false);                  // 0x0A0C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCrouchAdsRecoilMean                                        = new ExternalOffset<FVector>(0x0A18, false);                  // 0x0A18(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCrouchAdsRecoilSigma                                       = new ExternalOffset<FVector>(0x0A24, false);                  // 0x0A24(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCrouchRecoilMean                                           = new ExternalOffset<FVector>(0x0A30, false);                  // 0x0A30(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCrouchRecoilSigma                                          = new ExternalOffset<FVector>(0x0A3C, false);                  // 0x0A3C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offStandAdsRecoilMean                                         = new ExternalOffset<FVector>(0x0A48, false);                  // 0x0A48(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offStandAdsRecoilSigma                                        = new ExternalOffset<FVector>(0x0A54, false);                  // 0x0A54(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offStandRecoilMean                                            = new ExternalOffset<FVector>(0x0A60, false);                  // 0x0A60(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offStandRecoilSigma                                           = new ExternalOffset<FVector>(0x0A6C, false);                  // 0x0A6C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneTransitionRecoilMean                                  = new ExternalOffset<FVector>(0x0A78, false);                  // 0x0A78(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneTransitionRecoilSigma                                 = new ExternalOffset<FVector>(0x0A84, false);                  // 0x0A84(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offBipodAdsRecoilMean                                         = new ExternalOffset<FVector>(0x0A90, false);                  // 0x0A90(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offBipodAdsRecoilSigma                                        = new ExternalOffset<FVector>(0x0A9C, false);                  // 0x0A9C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offBipodRecoilMean                                            = new ExternalOffset<FVector>(0x0AA8, false);                  // 0x0AA8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offBipodRecoilSigma                                           = new ExternalOffset<FVector>(0x0AB4, false);                  // 0x0AB4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFullStaminaSwayFactor                                      = new ExternalOffset<float>(0x0AC0);                           // 0x0AC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLowStaminaSwayFactor                                       = new ExternalOffset<float>(0x0AC4);                           // 0x0AC4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAddMoveSway                                                = new ExternalOffset<float>(0x0AC8);                           // 0x0AC8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxMoveSwayFactor                                          = new ExternalOffset<float>(0x0ACC);                           // 0x0ACC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinMoveSwayFactor                                          = new ExternalOffset<float>(0x0AD0);                           // 0x0AD0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMoveSwayFactorRelease                                      = new ExternalOffset<float>(0x0AD4);                           // 0x0AD4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSwayInterpSpeed_YZ                                         = new ExternalOffset<float>(0x0AD8);                           // 0x0AD8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSwayInterpSpeed_Final                                      = new ExternalOffset<float>(0x0ADC);                           // 0x0ADC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offProneAdsSwayMin                                            = new ExternalOffset<float>(0x0AE0);                           // 0x0AE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offProneSwayMin                                               = new ExternalOffset<float>(0x0AE4);                           // 0x0AE4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCrouchAdsSwayMin                                           = new ExternalOffset<float>(0x0AE8);                           // 0x0AE8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCrouchSwayMin                                              = new ExternalOffset<float>(0x0AEC);                           // 0x0AEC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStandAdsSwayMin                                            = new ExternalOffset<float>(0x0AF0);                           // 0x0AF0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStandSwayMin                                               = new ExternalOffset<float>(0x0AF4);                           // 0x0AF4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offProneTransitionSwayMin                                     = new ExternalOffset<float>(0x0AF8);                           // 0x0AF8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHoldingBreathSwayFactor                                    = new ExternalOffset<float>(0x0AFC);                           // 0x0AFC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCustomSpeed                                                = new ExternalOffset<float>(0x0B00);                           // 0x0B00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offLastSuppressionInfoClass                                   = new ExternalOffset<UClass>(0x0B08, true);                    // 0x0B08(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offSmoothFinalLofSuppressRotation                             = new ExternalOffset<FRotator>(0x0B4C, false);                 // 0x0B4C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLofSuppressRotationAlpha                                   = new ExternalOffset<float>(0x0B5C);                           // 0x0B5C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbWasCrouchedBeforeProne                                    = new ExternalOffset<byte/*(bool)*/>(0x0B70);                  // 0x0B70(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCustomCurrentFloorNormal1                                  = new ExternalOffset<FVector>(0x0B74, false);                  // 0x0B74(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFP_SprintBlendAlpha                                        = new ExternalOffset<float>(0x0B80);                           // 0x0B80(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsSprint1pLoopSection                                     = new ExternalOffset<byte/*(bool)*/>(0x0B84);                  // 0x0B84(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offSprintStaticPose                                           = new ExternalOffset<UAnimSequence>(0x0B88, true);             // 0x0B88(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offBobbingMove1pMontage                                       = new ExternalOffset<UAnimMontage>(0x0BB0, true);              // 0x0BB0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offBobbingSprint1pMontage                                     = new ExternalOffset<UAnimMontage>(0x0BB8, true);              // 0x0BB8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__St2P    => _offbRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__St2P.GetValue();
	public byte/*(bool)*/                                     bRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__P2St    => _offbRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__P2St.GetValue();
	public byte/*(bool)*/                                     bRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__Sp2P    => _offbRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__Sp2P.GetValue();
	public byte/*(bool)*/                                     bStateWeight__GTEOne__ProneStates__ProneMove                   => _offbStateWeight__GTEOne__ProneStates__ProneMove.GetValue();
	public byte/*(bool)*/                                     bRelevantAnimTimeRemaining__LTEPtTwo__ProneStates__OutProneMove => _offbRelevantAnimTimeRemaining__LTEPtTwo__ProneStates__OutProneMove.GetValue();
	public byte/*(bool)*/                                     bCurrentTime__GTEPtThree__Jump1P__JumpStart__rifle_1ptop_jumpstart => _offbCurrentTime__GTEPtThree__Jump1P__JumpStart__rifle_1ptop_jumpstart.GetValue();
	public byte/*(bool)*/                                     bTimeRemaining__LTEPtTwo__Jump1P__JumpEnd__rifle_1ptop_jumpend => _offbTimeRemaining__LTEPtTwo__Jump1P__JumpEnd__rifle_1ptop_jumpend.GetValue();
	public byte/*(bool)*/                                     bTimeRemaining__LTEPtTwo__Jump1P__JumpStart__rifle_1ptop_jumpstart => _offbTimeRemaining__LTEPtTwo__Jump1P__JumpStart__rifle_1ptop_jumpstart.GetValue();
	public FRotator                                           Zeroing                                                        => _offZeroing.GetValue();
	public UBlendSpaceBase                                    ProneMoveType                                                  => _offProneMoveType.GetValue();
	public UAnimSequence                                      ProneMoveTypeAdditiveReference                                 => _offProneMoveTypeAdditiveReference.GetValue();
	public UAnimSequence                                      OutProneMoveType                                               => _offOutProneMoveType.GetValue();
	public UAnimSequence                                      OutProneMoveTypeNonadditive                                    => _offOutProneMoveTypeNonadditive.GetValue();
	public UAnimSequence                                      AdjustableAdsSightItemAnim                                     => _offAdjustableAdsSightItemAnim.GetValue();
	public float                                              HasAdjustableSightAlpha                                        => _offHasAdjustableSightAlpha.GetValue();
	public FVector                                            StandLoc                                                       => _offStandLoc.GetValue();
	public FVector                                            CrouchLoc                                                      => _offCrouchLoc.GetValue();
	public FVector                                            ProneLoc                                                       => _offProneLoc.GetValue();
	public FVector                                            BipodLoc                                                       => _offBipodLoc.GetValue();
	public float                                              StandLocBlendTime                                              => _offStandLocBlendTime.GetValue();
	public FVector                                            NegFpvTorsoCameraOffset                                        => _offNegFpvTorsoCameraOffset.GetValue();
	public FVector                                            DeviationVisuFb                                                => _offDeviationVisuFb.GetValue();
	public FRotator                                           Sway                                                           => _offSway.GetValue();
	public FVector                                            StrafeVector                                                   => _offStrafeVector.GetValue();
	public FRotator                                           StrafeRotator                                                  => _offStrafeRotator.GetValue();
	public FRotator                                           AdsStrafeRotator                                               => _offAdsStrafeRotator.GetValue();
	public float                                              BaseAimPitchPct                                                => _offBaseAimPitchPct.GetValue();
	public FVector                                            WeapRecoilRelLoc                                               => _offWeapRecoilRelLoc.GetValue();
	public FRotator                                           GlobalDeltaRotDeltaSpring                                      => _offGlobalDeltaRotDeltaSpring.GetValue();
	public FRotator                                           GlobalDeltaRotDeltaSpringRoll                                  => _offGlobalDeltaRotDeltaSpringRoll.GetValue();
	public FVector                                            GlobalDeltaLocDeltaSpringWeaponMesh                            => _offGlobalDeltaLocDeltaSpringWeaponMesh.GetValue();
	public float                                              LeftHandIKSpringAlpha                                          => _offLeftHandIKSpringAlpha.GetValue();
	public FVector                                            Aim1pWeaponMeshPosition                                        => _offAim1pWeaponMeshPosition.GetValue();
	public FVector                                            Aim1pWeaponMeshRescale                                         => _offAim1pWeaponMeshRescale.GetValue();
	public FVector                                            StandLeanLeftRootOffset                                        => _offStandLeanLeftRootOffset.GetValue();
	public FRotator                                           StandLeanLeftWeaponRotation                                    => _offStandLeanLeftWeaponRotation.GetValue();
	public FRotator                                           StandLeanLeftCameraRotation                                    => _offStandLeanLeftCameraRotation.GetValue();
	public FVector                                            StandLeanRightRootOffset                                       => _offStandLeanRightRootOffset.GetValue();
	public FRotator                                           StandLeanRightWeaponRotation                                   => _offStandLeanRightWeaponRotation.GetValue();
	public FRotator                                           StandLeanRightCameraRotation                                   => _offStandLeanRightCameraRotation.GetValue();
	public FVector                                            CrouchLeanLeftRootOffset                                       => _offCrouchLeanLeftRootOffset.GetValue();
	public FRotator                                           CrouchLeanLeftWeaponRotation                                   => _offCrouchLeanLeftWeaponRotation.GetValue();
	public FRotator                                           CrouchLeanLeftCameraRotation                                   => _offCrouchLeanLeftCameraRotation.GetValue();
	public FVector                                            CrouchLeanRightRootOffset                                      => _offCrouchLeanRightRootOffset.GetValue();
	public FRotator                                           CrouchLeanRightWeaponRotation                                  => _offCrouchLeanRightWeaponRotation.GetValue();
	public FRotator                                           CrouchLeanRightCameraRotation                                  => _offCrouchLeanRightCameraRotation.GetValue();
	public FVector                                            ProneLeanLeftRootOffset                                        => _offProneLeanLeftRootOffset.GetValue();
	public FRotator                                           ProneLeanLeftWeaponRotation                                    => _offProneLeanLeftWeaponRotation.GetValue();
	public FRotator                                           ProneLeanLeftCameraRotation                                    => _offProneLeanLeftCameraRotation.GetValue();
	public FVector                                            ProneLeanRightRootOffset                                       => _offProneLeanRightRootOffset.GetValue();
	public FRotator                                           ProneLeanRightWeaponRotation                                   => _offProneLeanRightWeaponRotation.GetValue();
	public FRotator                                           ProneLeanRightCameraRotation                                   => _offProneLeanRightCameraRotation.GetValue();
	public float                                              FP_HasSway                                                     => _offFP_HasSway.GetValue();
	public float                                              FP_JumpStartLoopAlpha                                          => _offFP_JumpStartLoopAlpha.GetValue();
	public float                                              FP_JumpEndBobbingBlendAlpha                                    => _offFP_JumpEndBobbingBlendAlpha.GetValue();
	public float                                              FP_JumpEndBobbingAdditiveAlpha                                 => _offFP_JumpEndBobbingAdditiveAlpha.GetValue();
	public float                                              FP_JumpEndCameraRootMotionAlphaBlend                           => _offFP_JumpEndCameraRootMotionAlphaBlend.GetValue();
	public byte/*(bool)*/                                     bFP_IsFallingAndNotJumping                                     => _offbFP_IsFallingAndNotJumping.GetValue();
	public float                                              FP_St2P_RootMotionBlendAlpha                                   => _offFP_St2P_RootMotionBlendAlpha.GetValue();
	public float                                              FP_P2St_RootMotionBlendAlpha                                   => _offFP_P2St_RootMotionBlendAlpha.GetValue();
	public byte/*(bool)*/                                     bFP_IsProneAndIsSprintingAndCanSprintToProne                   => _offbFP_IsProneAndIsSprintingAndCanSprintToProne.GetValue();
	public byte/*(bool)*/                                     bFP_SwitchedProneAndNotIsProne                                 => _offbFP_SwitchedProneAndNotIsProne.GetValue();
	public byte/*(bool)*/                                     bFP_SwitchedProneAndIsProne                                    => _offbFP_SwitchedProneAndIsProne.GetValue();
	public FRotator                                           FP_ProneMoveIkWeaponHandRootRotFromGroundAngle                 => _offFP_ProneMoveIkWeaponHandRootRotFromGroundAngle.GetValue();
	public FRotator                                           FP_ProneMoveIkWeaponHandRootRotFromActorPitch                  => _offFP_ProneMoveIkWeaponHandRootRotFromActorPitch.GetValue();
	public byte/*(bool)*/                                     bFP_ProneMoveWeaponAligningConditions                          => _offbFP_ProneMoveWeaponAligningConditions.GetValue();
	public FRotator                                           FP_ProneMoveIkWeaponRightClavicleRot                           => _offFP_ProneMoveIkWeaponRightClavicleRot.GetValue();
	public float                                              FP_ProneMoveBobPlayRate                                        => _offFP_ProneMoveBobPlayRate.GetValue();
	public byte/*(bool)*/                                     bFP_SpeedHigherThanZeroAndNotIsProneTransition                 => _offbFP_SpeedHigherThanZeroAndNotIsProneTransition.GetValue();
	public byte/*(bool)*/                                     bFP_SpeedHigherThanZero                                        => _offbFP_SpeedHigherThanZero.GetValue();
	public byte/*(bool)*/                                     bFP_HvdXorClAndClOrHvdXorVaAndVaOrBipod                        => _offbFP_HvdXorClAndClOrHvdXorVaAndVaOrBipod.GetValue();
	public byte/*(bool)*/                                     bFP_ClimbAnimNotEqual1                                         => _offbFP_ClimbAnimNotEqual1.GetValue();
	public byte/*(bool)*/                                     bFP_ClimbAndClimbAnim1                                         => _offbFP_ClimbAndClimbAnim1.GetValue();
	public FRotator                                           FP_ClimbAndClimbAnim1_AimRotator                               => _offFP_ClimbAndClimbAnim1_AimRotator.GetValue();
	public byte/*(bool)*/                                     bFP_1pLeftHandIkConditions                                     => _offbFP_1pLeftHandIkConditions.GetValue();
	public float                                              FP_1pLeftHandIKConditionsAlpha                                 => _offFP_1pLeftHandIKConditionsAlpha.GetValue();
	public float                                              FP_IsUsingItemAlpha                                            => _offFP_IsUsingItemAlpha.GetValue();
	public float                                              FP_IsProneAlpha                                                => _offFP_IsProneAlpha.GetValue();
	public byte/*(bool)*/                                     bFP_T_ProneStatesProneMoveToOutProneMove                       => _offbFP_T_ProneStatesProneMoveToOutProneMove.GetValue();
	public byte/*(bool)*/                                     bFP_T_Jump1pJumpStartToJumpEnd                                 => _offbFP_T_Jump1pJumpStartToJumpEnd.GetValue();
	public byte/*(bool)*/                                     bFP_T_ToADS_Hipfire                                            => _offbFP_T_ToADS_Hipfire.GetValue();
	public byte/*(bool)*/                                     bCachedIsPullingTriggerAndMagazineHasAmmo                      => _offbCachedIsPullingTriggerAndMagazineHasAmmo.GetValue();
	public float                                              ToADS_Hipfire_RemainingTIme                                    => _offToADS_Hipfire_RemainingTIme.GetValue();
	public float                                              Steady1pHipFireDuration                                        => _offSteady1pHipFireDuration.GetValue();
	public byte/*(bool)*/                                     bFP_T_StandToADS_Grenade                                       => _offbFP_T_StandToADS_Grenade.GetValue();
	public byte/*(bool)*/                                     bFP_T_WeaponBobbing1P_ADSToStand                               => _offbFP_T_WeaponBobbing1P_ADSToStand.GetValue();
	public byte/*(bool)*/                                     bFP_T_WeaponBobbing1P_ADSToProne                               => _offbFP_T_WeaponBobbing1P_ADSToProne.GetValue();
	public byte/*(bool)*/                                     bFP_T_WeaponBobbing1P_ProneToADS                               => _offbFP_T_WeaponBobbing1P_ProneToADS.GetValue();
	public float                                              FP_CustomIsCrouchedAlpha                                       => _offFP_CustomIsCrouchedAlpha.GetValue();
	public float                                              FP_HasAdjustableSightAlphaTimesIsAdsAlpha                      => _offFP_HasAdjustableSightAlphaTimesIsAdsAlpha.GetValue();
	public byte/*(bool)*/                                     bProneMoveBobbing                                              => _offbProneMoveBobbing.GetValue();
	public byte/*(bool)*/                                     bLeftHandIkOut1P                                               => _offbLeftHandIkOut1P.GetValue();
	public byte/*(bool)*/                                     bSwitchedProne                                                 => _offbSwitchedProne.GetValue();
	public byte/*(bool)*/                                     bLastProneStance                                               => _offbLastProneStance.GetValue();
	public float                                              MoveDeviationFactor                                            => _offMoveDeviationFactor.GetValue();
	public float                                              ShotDeviationFactor                                            => _offShotDeviationFactor.GetValue();
	public FVector4                                           FinalDeviation                                                 => _offFinalDeviation.GetValue();
	public FVector2D                                          DeviationVisuFbZY                                              => _offDeviationVisuFbZY.GetValue();
	public FRotator                                           AddRotGoingShot                                                => _offAddRotGoingShot.GetValue();
	public float                                              RecoilReleaseInterpSpeed                                       => _offRecoilReleaseInterpSpeed.GetValue();
	public float                                              RecoilWeaponLimit                                              => _offRecoilWeaponLimit.GetValue();
	public float                                              MoveRecoilFactor                                               => _offMoveRecoilFactor.GetValue();
	public float                                              RecoilCanRelease                                               => _offRecoilCanRelease.GetValue();
	public FVector                                            FinalRecoilSigma                                               => _offFinalRecoilSigma.GetValue();
	public FVector                                            FinalRecoilMean                                                => _offFinalRecoilMean.GetValue();
	public float                                              MoveSwayFactor                                                 => _offMoveSwayFactor.GetValue();
	public float                                              CustomSwayMin                                                  => _offCustomSwayMin.GetValue();
	public FVector2D                                          SwayZY                                                         => _offSwayZY.GetValue();
	public float                                              StrafeSpringFactor                                             => _offStrafeSpringFactor.GetValue();
	public FRotator                                           LastKnownRot1                                                  => _offLastKnownRot1.GetValue();
	public FVector                                            CtrlRotVectorDeltaSpring                                       => _offCtrlRotVectorDeltaSpring.GetValue();
	public FRotator                                           LastKnownRot2                                                  => _offLastKnownRot2.GetValue();
	public float                                              CtrlRotDeltaSpringLerpAlpha                                    => _offCtrlRotDeltaSpringLerpAlpha.GetValue();
	public float                                              WeaponSpringTurnSpeedToFullIntensity                           => _offWeaponSpringTurnSpeedToFullIntensity.GetValue();
	public FRotator                                           StrafeSpringRotator                                            => _offStrafeSpringRotator.GetValue();
	public FVector                                            StrafeSpringVector                                             => _offStrafeSpringVector.GetValue();
	public FRotator                                           AdsStrafeSpringRotator                                         => _offAdsStrafeSpringRotator.GetValue();
	public float                                              CustomNotIsAds                                                 => _offCustomNotIsAds.GetValue();
	public UClass                                             FireShake                                                      => _offFireShake.GetValue();
	public int                                                WeaponSpringSide                                               => _offWeaponSpringSide.GetValue();
	public float                                              WeaponSpringStiffness                                          => _offWeaponSpringStiffness.GetValue();
	public float                                              WeaponSpringCriticalDampingFactor                              => _offWeaponSpringCriticalDampingFactor.GetValue();
	public float                                              WeaponSpringMass                                               => _offWeaponSpringMass.GetValue();
	public float                                              WeaponSpringFactor                                             => _offWeaponSpringFactor.GetValue();
	public float                                              WeaponMeshSpringLocDelayFactor                                 => _offWeaponMeshSpringLocDelayFactor.GetValue();
	public float                                              WeaponSpringClamp                                              => _offWeaponSpringClamp.GetValue();
	public float                                              WeaponMeshSpringRotDelayFactor                                 => _offWeaponMeshSpringRotDelayFactor.GetValue();
	public float                                              AddMoveDeviation                                               => _offAddMoveDeviation.GetValue();
	public float                                              MoveDeviationFactorRelease                                     => _offMoveDeviationFactorRelease.GetValue();
	public float                                              MaxMoveDeviationFactor                                         => _offMaxMoveDeviationFactor.GetValue();
	public float                                              MinMoveDeviationFactor                                         => _offMinMoveDeviationFactor.GetValue();
	public float                                              FullStaminaDeviationFactor                                     => _offFullStaminaDeviationFactor.GetValue();
	public float                                              LowStaminaDeviationFactor                                      => _offLowStaminaDeviationFactor.GetValue();
	public float                                              AddShotDeviationFactor                                         => _offAddShotDeviationFactor.GetValue();
	public float                                              AddShotDeviationFactorAds                                      => _offAddShotDeviationFactorAds.GetValue();
	public float                                              ShotDeviationFactorRelease                                     => _offShotDeviationFactorRelease.GetValue();
	public float                                              MinShotDeviationFactor                                         => _offMinShotDeviationFactor.GetValue();
	public float                                              MaxShotDeviationFactor                                         => _offMaxShotDeviationFactor.GetValue();
	public float                                              DeviationVisuFbInterpSpeed_YZ                                  => _offDeviationVisuFbInterpSpeed_YZ.GetValue();
	public float                                              DeviationVisuFbMax                                             => _offDeviationVisuFbMax.GetValue();
	public float                                              DeviationVisuFbInterpSpeed_Final                               => _offDeviationVisuFbInterpSpeed_Final.GetValue();
	public float                                              MinBipodAdsDeviation                                           => _offMinBipodAdsDeviation.GetValue();
	public float                                              MinBipodDeviation                                              => _offMinBipodDeviation.GetValue();
	public float                                              MinProneAdsDeviation                                           => _offMinProneAdsDeviation.GetValue();
	public float                                              MinProneDeviation                                              => _offMinProneDeviation.GetValue();
	public float                                              MinCrouchAdsDeviation                                          => _offMinCrouchAdsDeviation.GetValue();
	public float                                              MinCrouchDeviation                                             => _offMinCrouchDeviation.GetValue();
	public float                                              MinStandAdsDeviation                                           => _offMinStandAdsDeviation.GetValue();
	public float                                              MinStandDeviation                                              => _offMinStandDeviation.GetValue();
	public float                                              MinProneTransitionDeviation                                    => _offMinProneTransitionDeviation.GetValue();
	public float                                              MaxMoveRecoilFactor                                            => _offMaxMoveRecoilFactor.GetValue();
	public float                                              AddMoveRecoil                                                  => _offAddMoveRecoil.GetValue();
	public float                                              MinMoveRecoilFactor                                            => _offMinMoveRecoilFactor.GetValue();
	public float                                              MoveRecoilFactorRelease                                        => _offMoveRecoilFactorRelease.GetValue();
	public float                                              FullStaminaRecoilFactor                                        => _offFullStaminaRecoilFactor.GetValue();
	public float                                              LowStaminaRecoilFactor                                         => _offLowStaminaRecoilFactor.GetValue();
	public float                                              RecoilCameraOffsetFactor                                       => _offRecoilCameraOffsetFactor.GetValue();
	public float                                              RecoilLofCameraOffsetLimit                                     => _offRecoilLofCameraOffsetLimit.GetValue();
	public float                                              RecoilLofAttackInterpSpeed                                     => _offRecoilLofAttackInterpSpeed.GetValue();
	public float                                              RecoilCanReleaseInterpSpeed                                    => _offRecoilCanReleaseInterpSpeed.GetValue();
	public float                                              RecoilCameraOffsetInterpSpeed                                  => _offRecoilCameraOffsetInterpSpeed.GetValue();
	public float                                              RecoilLofReleaseInterpSpeed                                    => _offRecoilLofReleaseInterpSpeed.GetValue();
	public float                                              WeapRecoilRelLocFactor                                         => _offWeapRecoilRelLocFactor.GetValue();
	public float                                              RecoilCameraShotInterpSpeed                                    => _offRecoilCameraShotInterpSpeed.GetValue();
	public float                                              RecoilAdsCameraShotInterpSpeed                                 => _offRecoilAdsCameraShotInterpSpeed.GetValue();
	public FVector                                            ProneAdsRecoilMean                                             => _offProneAdsRecoilMean.GetValue();
	public FVector                                            ProneAdsRecoilSigma                                            => _offProneAdsRecoilSigma.GetValue();
	public FVector                                            ProneRecoilMean                                                => _offProneRecoilMean.GetValue();
	public FVector                                            ProneRecoilSigma                                               => _offProneRecoilSigma.GetValue();
	public FVector                                            CrouchAdsRecoilMean                                            => _offCrouchAdsRecoilMean.GetValue();
	public FVector                                            CrouchAdsRecoilSigma                                           => _offCrouchAdsRecoilSigma.GetValue();
	public FVector                                            CrouchRecoilMean                                               => _offCrouchRecoilMean.GetValue();
	public FVector                                            CrouchRecoilSigma                                              => _offCrouchRecoilSigma.GetValue();
	public FVector                                            StandAdsRecoilMean                                             => _offStandAdsRecoilMean.GetValue();
	public FVector                                            StandAdsRecoilSigma                                            => _offStandAdsRecoilSigma.GetValue();
	public FVector                                            StandRecoilMean                                                => _offStandRecoilMean.GetValue();
	public FVector                                            StandRecoilSigma                                               => _offStandRecoilSigma.GetValue();
	public FVector                                            ProneTransitionRecoilMean                                      => _offProneTransitionRecoilMean.GetValue();
	public FVector                                            ProneTransitionRecoilSigma                                     => _offProneTransitionRecoilSigma.GetValue();
	public FVector                                            BipodAdsRecoilMean                                             => _offBipodAdsRecoilMean.GetValue();
	public FVector                                            BipodAdsRecoilSigma                                            => _offBipodAdsRecoilSigma.GetValue();
	public FVector                                            BipodRecoilMean                                                => _offBipodRecoilMean.GetValue();
	public FVector                                            BipodRecoilSigma                                               => _offBipodRecoilSigma.GetValue();
	public float                                              FullStaminaSwayFactor                                          => _offFullStaminaSwayFactor.GetValue();
	public float                                              LowStaminaSwayFactor                                           => _offLowStaminaSwayFactor.GetValue();
	public float                                              AddMoveSway                                                    => _offAddMoveSway.GetValue();
	public float                                              MaxMoveSwayFactor                                              => _offMaxMoveSwayFactor.GetValue();
	public float                                              MinMoveSwayFactor                                              => _offMinMoveSwayFactor.GetValue();
	public float                                              MoveSwayFactorRelease                                          => _offMoveSwayFactorRelease.GetValue();
	public float                                              SwayInterpSpeed_YZ                                             => _offSwayInterpSpeed_YZ.GetValue();
	public float                                              SwayInterpSpeed_Final                                          => _offSwayInterpSpeed_Final.GetValue();
	public float                                              ProneAdsSwayMin                                                => _offProneAdsSwayMin.GetValue();
	public float                                              ProneSwayMin                                                   => _offProneSwayMin.GetValue();
	public float                                              CrouchAdsSwayMin                                               => _offCrouchAdsSwayMin.GetValue();
	public float                                              CrouchSwayMin                                                  => _offCrouchSwayMin.GetValue();
	public float                                              StandAdsSwayMin                                                => _offStandAdsSwayMin.GetValue();
	public float                                              StandSwayMin                                                   => _offStandSwayMin.GetValue();
	public float                                              ProneTransitionSwayMin                                         => _offProneTransitionSwayMin.GetValue();
	public float                                              HoldingBreathSwayFactor                                        => _offHoldingBreathSwayFactor.GetValue();
	public float                                              CustomSpeed                                                    => _offCustomSpeed.GetValue();
	public UClass                                             LastSuppressionInfoClass                                       => _offLastSuppressionInfoClass.GetValue();
	public FRotator                                           SmoothFinalLofSuppressRotation                                 => _offSmoothFinalLofSuppressRotation.GetValue();
	public float                                              LofSuppressRotationAlpha                                       => _offLofSuppressRotationAlpha.GetValue();
	public byte/*(bool)*/                                     bWasCrouchedBeforeProne                                        => _offbWasCrouchedBeforeProne.GetValue();
	public FVector                                            CustomCurrentFloorNormal1                                      => _offCustomCurrentFloorNormal1.GetValue();
	public float                                              FP_SprintBlendAlpha                                            => _offFP_SprintBlendAlpha.GetValue();
	public byte/*(bool)*/                                     bIsSprint1pLoopSection                                         => _offbIsSprint1pLoopSection.GetValue();
	public UAnimSequence                                      SprintStaticPose                                               => _offSprintStaticPose.GetValue();
	public UAnimMontage                                       BobbingMove1pMontage                                           => _offBobbingMove1pMontage.GetValue();
	public UAnimMontage                                       BobbingSprint1pMontage                                         => _offBobbingSprint1pMontage.GetValue();
	#endregion


}

// Class Squad.SQAnimInstanceSoldier3P
// 0x08B8 (0x0CD1 - 0x0419)
public class USQAnimInstanceSoldier3P : USQAnimInstanceSoldier
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbVaulting                                                  = new ExternalOffset<byte/*(bool)*/>(0x0420);                  // 0x0420(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbClimbing                                                  = new ExternalOffset<byte/*(bool)*/>(0x0421);                  // 0x0421(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAssetPlayerTimeFromEnd__LTEPtOne__Jump_3P__JumpEnd__rifle_stand_jumpendOrIsProne = new ExternalOffset<byte/*(bool)*/>(0x0422);                  // 0x0422(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAssetPlayerTimeFromEnd__LTEPtOne__Jump_3P__JumpStart__rifle_stand_jumpstart = new ExternalOffset<byte/*(bool)*/>(0x0423);                  // 0x0423(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAssetPlayerTime__GTEPtOne__Jump_3P__JumpStart__rifle_stand_jumpstart = new ExternalOffset<byte/*(bool)*/>(0x0424);                  // 0x0424(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStateWeight__GTEOne__Stand3P__Jog                         = new ExternalOffset<byte/*(bool)*/>(0x04A0);                  // 0x04A0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStateWeight__Stand3P__Jog                                  = new ExternalOffset<float>(0x04A4);                           // 0x04A4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStateWeight__GTEOne__Stand3P__Sprint                      = new ExternalOffset<byte/*(bool)*/>(0x04A8);                  // 0x04A8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStateWeight__Stand3P__Sprint                               = new ExternalOffset<float>(0x04AC);                           // 0x04AC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStateWeight__Stand3P__SprintStop                           = new ExternalOffset<float>(0x04B0);                           // 0x04B0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbRelevantAnimTimeRemaining__LTEOne__Stand3P__SprintStop    = new ExternalOffset<byte/*(bool)*/>(0x04B4);                  // 0x04B4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStateWeight__GTEOne__Stand_NeutralStates__Neutral         = new ExternalOffset<byte/*(bool)*/>(0x052C);                  // 0x052C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStateWeight__GTEOne__Stand_NeutralStates__TurnLeft_91     = new ExternalOffset<byte/*(bool)*/>(0x052D);                  // 0x052D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStateWeight__GTEOne__Stand_NeutralStates__TurnRight_91    = new ExternalOffset<byte/*(bool)*/>(0x052E);                  // 0x052E(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbRelevantAnimTimeRemaining__LTEZero__Stand_NeutralStates__TurnLeft_91 = new ExternalOffset<byte/*(bool)*/>(0x052F);                  // 0x052F(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbRelevantAnimTimeRemaining__LTEZero__Stand_NeutralStates__TurnRight_91 = new ExternalOffset<byte/*(bool)*/>(0x0530);                  // 0x0530(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStateWeight__Crouch3P__Sprint                              = new ExternalOffset<float>(0x05C4);                           // 0x05C4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStateWeight__Crouch3P__Walk                                = new ExternalOffset<float>(0x05C8);                           // 0x05C8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStateWeight__GTEOne__Crouch_NeutralStates__Neutral        = new ExternalOffset<byte/*(bool)*/>(0x0606);                  // 0x0606(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStateWeight__GTEOne__Crouch_NeutralStates__TurnLeft_91    = new ExternalOffset<byte/*(bool)*/>(0x0607);                  // 0x0607(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStateWeight__GTEOne__Crouch_NeutralStates__TurnRight_91   = new ExternalOffset<byte/*(bool)*/>(0x0608);                  // 0x0608(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStateWeight__Prone3P__ProneMove                            = new ExternalOffset<float>(0x0680);                           // 0x0680(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStateWeight__GTEOne__Prone_NeutralStates__Neutral         = new ExternalOffset<byte/*(bool)*/>(0x06A1);                  // 0x06A1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStateWeight__GTEOne__Prone_NeutralStates__TurnLeft_46     = new ExternalOffset<byte/*(bool)*/>(0x06A2);                  // 0x06A2(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStateWeight__GTEOne__Prone_NeutralStates__TurnRight_46    = new ExternalOffset<byte/*(bool)*/>(0x06A3);                  // 0x06A3(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStateWeight__GTEOne__SoldierMovements__Stand              = new ExternalOffset<byte/*(bool)*/>(0x06FB);                  // 0x06FB(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStateWeight__GTEOne__SoldierMovements__Crouch             = new ExternalOffset<byte/*(bool)*/>(0x06FC);                  // 0x06FC(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStateWeight__GTEOne__SoldierMovements__Stand2Crouch       = new ExternalOffset<byte/*(bool)*/>(0x06FD);                  // 0x06FD(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStateWeight__SoldierMovements__Stand2Prone                 = new ExternalOffset<float>(0x0700);                           // 0x0700(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStateWeight__SoldierMovements__Sprint2Prone                = new ExternalOffset<float>(0x0704);                           // 0x0704(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStateWeight__SoldierMovements__Prone2Stand                 = new ExternalOffset<float>(0x0708);                           // 0x0708(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStateWeight__SoldierMovements__Crouch2Prone                = new ExternalOffset<float>(0x070C);                           // 0x070C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStateWeight__SoldierMovements__Prone2Crouch                = new ExternalOffset<float>(0x0710);                           // 0x0710(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Stand2Prone__rifle_stand2prone = new ExternalOffset<byte/*(bool)*/>(0x0714);                  // 0x0714(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAssetPlayerTimeFromEnd__LTEPtTwo__SoldierMovements__Sprint2Prone__rifle_sprint2prone = new ExternalOffset<byte/*(bool)*/>(0x0715);                  // 0x0715(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Prone2Stand__rifle_prone2stand = new ExternalOffset<byte/*(bool)*/>(0x0716);                  // 0x0716(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Crouch2Prone__rifle_crouch2prone = new ExternalOffset<byte/*(bool)*/>(0x0717);                  // 0x0717(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Prone2Crouch__rifle_prone2crouch = new ExternalOffset<byte/*(bool)*/>(0x0718);                  // 0x0718(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAssetPlayerTimeFromEnd__LTEPtOne__SoldierMovements__Stand2Crouch__Stand2Crouch = new ExternalOffset<byte/*(bool)*/>(0x0719);                  // 0x0719(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAssetPlayerTimeFromEnd__LTEPtOne__SoldierMovements__Crouch2Stand__Crouch2Stand = new ExternalOffset<byte/*(bool)*/>(0x071A);                  // 0x071A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsSprinting                                               = new ExternalOffset<byte/*(bool)*/>(0x08FD);                  // 0x08FD(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCustomNotIsFallingAlpha                                    = new ExternalOffset<float>(0x0900);                           // 0x0900(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UBlendSpace1D>                     _offBS1D_3pStandSprintType                                     = new ExternalOffset<UBlendSpace1D>(0x0908, true);             // 0x0908(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offSprintStop3p                                               = new ExternalOffset<UAnimSequence>(0x0910, true);             // 0x0910(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UBlendSpace1D>                     _offBS1D_3pCrouchSprintType                                    = new ExternalOffset<UBlendSpace1D>(0x0918, true);             // 0x0918(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UBlendSpace>                       _offBS_3pStandJogType                                          = new ExternalOffset<UBlendSpace>(0x0920, true);               // 0x0920(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UBlendSpace>                       _offBS_3pStandWalkType                                         = new ExternalOffset<UBlendSpace>(0x0928, true);               // 0x0928(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UBlendSpace>                       _offBS_3pCrouchWalkType                                        = new ExternalOffset<UBlendSpace>(0x0930, true);               // 0x0930(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UBlendSpace1D>                     _offBS1D_3pProneCrawlType                                      = new ExternalOffset<UBlendSpace1D>(0x0938, true);             // 0x0938(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offStandStopMove                                              = new ExternalOffset<UAnimSequence>(0x0940, true);             // 0x0940(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offCrouchStopMove                                             = new ExternalOffset<UAnimSequence>(0x0948, true);             // 0x0948(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offStandLeanLeftShuffle                                       = new ExternalOffset<UAnimSequence>(0x0950, true);             // 0x0950(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offStandLeanRightShuffle                                      = new ExternalOffset<UAnimSequence>(0x0958, true);             // 0x0958(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offCrouchLeanLeftShuffle                                      = new ExternalOffset<UAnimSequence>(0x0960, true);             // 0x0960(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offCrouchLeanRightShuffle                                     = new ExternalOffset<UAnimSequence>(0x0968, true);             // 0x0968(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UBlendSpace1D>                     _offAO1D_StandPitch                                            = new ExternalOffset<UBlendSpace1D>(0x0970, true);             // 0x0970(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UBlendSpace1D>                     _offAO1D_CrouchPitch                                           = new ExternalOffset<UBlendSpace1D>(0x0978, true);             // 0x0978(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UBlendSpace1D>                     _offAO1D_PronePitch                                            = new ExternalOffset<UBlendSpace1D>(0x0980, true);             // 0x0980(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UBlendSpace>                       _offAO_BipodStandCrouchPitch                                   = new ExternalOffset<UBlendSpace>(0x0988, true);               // 0x0988(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offAO1D_StandYawSF                                            = new ExternalOffset<UAnimSequence>(0x0990, true);             // 0x0990(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offAO1D_CrouchYawSF                                           = new ExternalOffset<UAnimSequence>(0x0998, true);             // 0x0998(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offAO1D_ProneYawSF                                            = new ExternalOffset<UAnimSequence>(0x09A0, true);             // 0x09A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offStandTurnRight                                             = new ExternalOffset<UAnimSequence>(0x09A8, true);             // 0x09A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offStandTurnLeft                                              = new ExternalOffset<UAnimSequence>(0x09B0, true);             // 0x09B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offCrouchTurnLeft                                             = new ExternalOffset<UAnimSequence>(0x09B8, true);             // 0x09B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offCrouchTurnRight                                            = new ExternalOffset<UAnimSequence>(0x09C0, true);             // 0x09C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offProneTurnRight                                             = new ExternalOffset<UAnimSequence>(0x09C8, true);             // 0x09C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offProneTurnLeft                                              = new ExternalOffset<UAnimSequence>(0x09D0, true);             // 0x09D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offSprintToProne3p                                            = new ExternalOffset<UAnimSequence>(0x09D8, true);             // 0x09D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offStandToProne3p                                             = new ExternalOffset<UAnimSequence>(0x09E0, true);             // 0x09E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offProneToStand3p                                             = new ExternalOffset<UAnimSequence>(0x09E8, true);             // 0x09E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offCrouchToProne3p                                            = new ExternalOffset<UAnimSequence>(0x09F0, true);             // 0x09F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimSequence>                     _offProneToCrouch3p                                            = new ExternalOffset<UAnimSequence>(0x09F8, true);             // 0x09F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offFpvLowerRootBoneOffset                                     = new ExternalOffset<FVector>(0x0A00, false);                  // 0x0A00(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCustomSpeedMin40                                           = new ExternalOffset<float>(0x0A0C);                           // 0x0A0C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offProneStopMoveAlpha                                         = new ExternalOffset<float>(0x0A10);                           // 0x0A10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCrouchStopMoveAlpha                                        = new ExternalOffset<float>(0x0A14);                           // 0x0A14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_HighestClimbAnim                                       = new ExternalOffset<byte/*(bool)*/>(0x0A18);                  // 0x0A18(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Jump_3PJumpStartToJumpEnd                            = new ExternalOffset<byte/*(bool)*/>(0x0A19);                  // 0x0A19(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Stand3PSprintStopToJog                               = new ExternalOffset<byte/*(bool)*/>(0x0A1A);                  // 0x0A1A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Stand3PSprintToSprintStop                            = new ExternalOffset<byte/*(bool)*/>(0x0A1B);                  // 0x0A1B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Stand3PJogToSprint                                   = new ExternalOffset<byte/*(bool)*/>(0x0A1C);                  // 0x0A1C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Stand_NeutralStatesTurnRight_90ToTurnLeft_91         = new ExternalOffset<byte/*(bool)*/>(0x0A1D);                  // 0x0A1D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Stand_NeutralStatesTurnLeft_90ToTurnRight_91         = new ExternalOffset<byte/*(bool)*/>(0x0A1E);                  // 0x0A1E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Stand_NeutralStatesNeutralToTurnLeft_91              = new ExternalOffset<byte/*(bool)*/>(0x0A1F);                  // 0x0A1F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Stand_NeutralStatesNeutralToTurnRight_91             = new ExternalOffset<byte/*(bool)*/>(0x0A20);                  // 0x0A20(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Crouch_NeutralStatesTurnRight_90ToNeutral            = new ExternalOffset<byte/*(bool)*/>(0x0A21);                  // 0x0A21(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Crouch_NeutralStatesTurnRight_90ToTurnLeft_91        = new ExternalOffset<byte/*(bool)*/>(0x0A22);                  // 0x0A22(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Crouch_NeutralStatesTurnLeft_90ToNeutral             = new ExternalOffset<byte/*(bool)*/>(0x0A23);                  // 0x0A23(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Crouch_NeutralStatesTurnLeft_90ToTurnRight_91        = new ExternalOffset<byte/*(bool)*/>(0x0A24);                  // 0x0A24(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Crouch_NeutralStatesNeutralToTurnLeft_91             = new ExternalOffset<byte/*(bool)*/>(0x0A25);                  // 0x0A25(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Crouch_NeutralStatesNeutralToTurnRight_91            = new ExternalOffset<byte/*(bool)*/>(0x0A26);                  // 0x0A26(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Prone_NeutralStatesTurnLeft_45ToNeutral              = new ExternalOffset<byte/*(bool)*/>(0x0A27);                  // 0x0A27(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Prone_NeutralStatesTurnLeft_45ToTurnRight_46         = new ExternalOffset<byte/*(bool)*/>(0x0A28);                  // 0x0A28(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Prone_NeutralStatesTurnRight_45ToNeutral             = new ExternalOffset<byte/*(bool)*/>(0x0A29);                  // 0x0A29(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Prone_NeutralStatesTurnRight_45ToTurnLeft_46         = new ExternalOffset<byte/*(bool)*/>(0x0A2A);                  // 0x0A2A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Prone_NeutralStatesNeutralToTurnLeft_46              = new ExternalOffset<byte/*(bool)*/>(0x0A2B);                  // 0x0A2B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_Prone_NeutralStatesNeutralToTurnRight_46             = new ExternalOffset<byte/*(bool)*/>(0x0A2C);                  // 0x0A2C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_SoldierMovementsCrouch2StandToStand                  = new ExternalOffset<byte/*(bool)*/>(0x0A2D);                  // 0x0A2D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_SoldierMovementsStand2CrouchToCrouch2Prone           = new ExternalOffset<byte/*(bool)*/>(0x0A2E);                  // 0x0A2E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_SoldierMovementsStand2CrouchToCrouch                 = new ExternalOffset<byte/*(bool)*/>(0x0A2F);                  // 0x0A2F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_SoldierMovementsCrouchToCrouch2Prone                 = new ExternalOffset<byte/*(bool)*/>(0x0A30);                  // 0x0A30(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_SoldierMovements_StandToCrouch                       = new ExternalOffset<byte/*(bool)*/>(0x0A31);                  // 0x0A31(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_SoldierMovementsStandToStand2Prone                   = new ExternalOffset<byte/*(bool)*/>(0x0A32);                  // 0x0A32(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_SoldierMovementsStandToStand2Crouch                  = new ExternalOffset<byte/*(bool)*/>(0x0A33);                  // 0x0A33(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_T_SoldierMovementsStandToSprint2Prone                  = new ExternalOffset<byte/*(bool)*/>(0x0A34);                  // 0x0A34(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offFP_FloorAlignedRotationRightFoot                           = new ExternalOffset<FRotator>(0x0A38, false);                 // 0x0A38(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offFP_FloorAlignedRotationLeftFoot                            = new ExternalOffset<FRotator>(0x0A44, false);                 // 0x0A44(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offFP_FloorAlignedRotationFeetRoot                            = new ExternalOffset<FRotator>(0x0A50, false);                 // 0x0A50(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offFP_FloorAlignedRotationFeetRootReverse                     = new ExternalOffset<FRotator>(0x0A5C, false);                 // 0x0A5C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offFP_IKFeetRootTranslation                                   = new ExternalOffset<FVector>(0x0A68, false);                  // 0x0A68(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_IsNotFirstPersonVisibilityAlpha                         = new ExternalOffset<float>(0x0A74);                           // 0x0A74(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_StandIdleAlpha                                          = new ExternalOffset<float>(0x0A78);                           // 0x0A78(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_CrouchProneIdleAlpha                                    = new ExternalOffset<float>(0x0A7C);                           // 0x0A7C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_IsStanding                                             = new ExternalOffset<byte/*(bool)*/>(0x0A80);                  // 0x0A80(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_IsStandingStill                                        = new ExternalOffset<byte/*(bool)*/>(0x0A81);                  // 0x0A81(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_CanCrouchToStandingStill                               = new ExternalOffset<byte/*(bool)*/>(0x0A82);                  // 0x0A82(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_CanCrouchToStandMoving                                 = new ExternalOffset<byte/*(bool)*/>(0x0A83);                  // 0x0A83(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_IsCrouchedInPlace                                      = new ExternalOffset<byte/*(bool)*/>(0x0A84);                  // 0x0A84(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimOffsetProneYawFrameTime                              = new ExternalOffset<float>(0x0A88);                           // 0x0A88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimOffsetYawNegative                                    = new ExternalOffset<float>(0x0A8C);                           // 0x0A8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimOffsetProneTurnRightYawFrameTime                     = new ExternalOffset<float>(0x0A90);                           // 0x0A90(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimOffsetTurnRightYawNegative                           = new ExternalOffset<float>(0x0A94);                           // 0x0A94(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimOffsetProneTurnLeftYawFrameTime                      = new ExternalOffset<float>(0x0A98);                           // 0x0A98(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimOffsetTurnLeftYawNegative                            = new ExternalOffset<float>(0x0A9C);                           // 0x0A9C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_ProneWalkPlayRate                                       = new ExternalOffset<float>(0x0AA0);                           // 0x0AA0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_IsMoving                                               = new ExternalOffset<byte/*(bool)*/>(0x0AA4);                  // 0x0AA4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_IsNotMoving                                            = new ExternalOffset<byte/*(bool)*/>(0x0AA5);                  // 0x0AA5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offFP_FloorAlignedRotationBody                                = new ExternalOffset<FRotator>(0x0AA8, false);                 // 0x0AA8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offFP_FloorAlignedRotationBodyReverse                         = new ExternalOffset<FRotator>(0x0AB4, false);                 // 0x0AB4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_CustomSpeedMin40NormalizedToRange                       = new ExternalOffset<float>(0x0AC0);                           // 0x0AC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_IsProneAndNotDeployBipod                               = new ExternalOffset<byte/*(bool)*/>(0x0AC4);                  // 0x0AC4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_IsClimbingOrVaulting                                   = new ExternalOffset<byte/*(bool)*/>(0x0AC5);                  // 0x0AC5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offFP_FreeLook3PHeadRotation                                  = new ExternalOffset<FRotator>(0x0AC8, false);                 // 0x0AC8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_BipodCrouchStanceAlpha                                  = new ExternalOffset<float>(0x0AD4);                           // 0x0AD4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_BipodStandCrouchAimPitchAlpha                           = new ExternalOffset<float>(0x0AD8);                           // 0x0AD8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_BipodProneStanceAlpha                                   = new ExternalOffset<float>(0x0AE0);                           // 0x0AE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_BipodAimOffsetAlpha                                     = new ExternalOffset<float>(0x0AE4);                           // 0x0AE4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_BipodWeaponPosCoveredPoseAlphaDependingOnSkelMeshOffset = new ExternalOffset<float>(0x0AE8);                           // 0x0AE8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_BipodCoveredPoseBlendAlpha                              = new ExternalOffset<float>(0x0AEC);                           // 0x0AEC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offFP_BipodHighPitchCoveredPoseWeaponPositionOffset           = new ExternalOffset<FVector>(0x0AF0, false);                  // 0x0AF0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offFP_BipodDynamicBodyOffset                                  = new ExternalOffset<FVector>(0x0AFC, false);                  // 0x0AFC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimOffsetCrouchYawFrameTime                             = new ExternalOffset<float>(0x0B08);                           // 0x0B08(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimOffsetTurnLeftYawPlayRate                            = new ExternalOffset<float>(0x0B0C);                           // 0x0B0C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimOffsetTurnLeftProneYawPlayRate                       = new ExternalOffset<float>(0x0B10);                           // 0x0B10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimOffsetTurnLeftYawFrameTime                           = new ExternalOffset<float>(0x0B14);                           // 0x0B14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimOffsetTurnRightYawPlayRate                           = new ExternalOffset<float>(0x0B18);                           // 0x0B18(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimOffsetTurnRightProneYawPlayRate                      = new ExternalOffset<float>(0x0B1C);                           // 0x0B1C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimOffsetTurnRightYawFrameTime                          = new ExternalOffset<float>(0x0B20);                           // 0x0B20(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_StandStopMoveAlpha                                      = new ExternalOffset<float>(0x0B24);                           // 0x0B24(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimYawFrameTime2                                        = new ExternalOffset<float>(0x0B28);                           // 0x0B28(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_CrouchWalkPlayRate                                      = new ExternalOffset<float>(0x0B2C);                           // 0x0B2C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimYawJogFrameTime                                      = new ExternalOffset<float>(0x0B30);                           // 0x0B30(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimPitchJogAlpha                                        = new ExternalOffset<float>(0x0B34);                           // 0x0B34(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_JogPlayRate                                             = new ExternalOffset<float>(0x0B38);                           // 0x0B38(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_SprintStopAlpha                                         = new ExternalOffset<float>(0x0B3C);                           // 0x0B3C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_Stand3PNeutralToJogRule                                = new ExternalOffset<byte/*(bool)*/>(0x0B40);                  // 0x0B40(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_Stand3PJogToNeutralRule                                = new ExternalOffset<byte/*(bool)*/>(0x0B41);                  // 0x0B41(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_Stand3PSprintToNeutralRule                             = new ExternalOffset<byte/*(bool)*/>(0x0B42);                  // 0x0B42(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AimOffsetStandYawFrameTime                              = new ExternalOffset<float>(0x0B44);                           // 0x0B44(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_JumpEndAlpha                                            = new ExternalOffset<float>(0x0B48);                           // 0x0B48(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_IsFallingAndNotJumping                                 = new ExternalOffset<byte/*(bool)*/>(0x0B4C);                  // 0x0B4C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_Final3PLeftHandIKOutAlpha                               = new ExternalOffset<float>(0x0B50);                           // 0x0B50(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_AOStandToConduit                                       = new ExternalOffset<byte/*(bool)*/>(0x0B54);                  // 0x0B54(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_AOStandSprintJog                                       = new ExternalOffset<byte/*(bool)*/>(0x0B55);                  // 0x0B55(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_AOCrouchToConduit                                      = new ExternalOffset<byte/*(bool)*/>(0x0B56);                  // 0x0B56(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_AOProneToConduit                                       = new ExternalOffset<byte/*(bool)*/>(0x0B57);                  // 0x0B57(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_AOConduitToCrouch                                      = new ExternalOffset<byte/*(bool)*/>(0x0B58);                  // 0x0B58(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_BS_StandSprintSpeed                                     = new ExternalOffset<float>(0x0B5C);                           // 0x0B5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offFP_SprintHeadDirection                                     = new ExternalOffset<FRotator>(0x0B60, false);                 // 0x0B60(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_SprintRootDirection                                     = new ExternalOffset<float>(0x0B6C);                           // 0x0B6C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_BS_CrouchSprintSpeed                                    = new ExternalOffset<float>(0x0B70);                           // 0x0B70(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFP_LeanHeadWhenADSAndADS                                  = new ExternalOffset<byte/*(bool)*/>(0x0B74);                  // 0x0B74(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFinal3pLeftHandIkOut                                      = new ExternalOffset<byte/*(bool)*/>(0x0B75);                  // 0x0B75(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCustomWeapActionsAndIsAds                                  = new ExternalOffset<float>(0x0B78);                           // 0x0B78(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_WalkPlayRate                                            = new ExternalOffset<float>(0x0B7C);                           // 0x0B7C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_IsNotMovingAlpha                                        = new ExternalOffset<float>(0x0B80);                           // 0x0B80(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_LeanYawOffsetFrameTime                                  = new ExternalOffset<float>(0x0B84);                           // 0x0B84(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFP_AlphaAbsIkFeetRootPitch                                 = new ExternalOffset<float>(0x0B88);                           // 0x0B88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offRawActorRotation                                           = new ExternalOffset<FRotator>(0x0B8C, false);                 // 0x0B8C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offSmoothedControlRotation                                    = new ExternalOffset<FRotator>(0x0B98, false);                 // 0x0B98(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbTurnNeutAoDisabled                                        = new ExternalOffset<byte/*(bool)*/>(0x0BA4);                  // 0x0BA4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offCachedActorYaw                                             = new ExternalOffset<FRotator>(0x0BA8, false);                 // 0x0BA8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbLeftHandIkOut                                             = new ExternalOffset<byte/*(bool)*/>(0x0BB4);                  // 0x0BB4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbJumpEndBobbing3P                                          = new ExternalOffset<byte/*(bool)*/>(0x0BB5);                  // 0x0BB5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCustomIsSprinting                                          = new ExternalOffset<float>(0x0BB8);                           // 0x0BB8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCustomIsAdsOrBipod                                         = new ExternalOffset<float>(0x0BBC);                           // 0x0BBC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offSmoothVelocity                                             = new ExternalOffset<FVector>(0x0BC0, false);                  // 0x0BC0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offAccelRateClamp                                             = new ExternalOffset<float>(0x0BCC);                           // 0x0BCC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offSmoothWorldDirection                                       = new ExternalOffset<FRotator>(0x0BD0, false);                 // 0x0BD0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offAimRotation_3P                                             = new ExternalOffset<FRotator>(0x0BDC, false);                 // 0x0BDC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offAimRotation2_3P                                            = new ExternalOffset<FRotator>(0x0BE8, false);                 // 0x0BE8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbTurnLeftAnim                                              = new ExternalOffset<byte/*(bool)*/>(0x0BF4);                  // 0x0BF4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFullMoveAnim                                              = new ExternalOffset<byte/*(bool)*/>(0x0BF5);                  // 0x0BF5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbTurnRightAnim                                             = new ExternalOffset<byte/*(bool)*/>(0x0BF6);                  // 0x0BF6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbTurnLeft                                                  = new ExternalOffset<byte/*(bool)*/>(0x0BF7);                  // 0x0BF7(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbTurnRight                                                 = new ExternalOffset<byte/*(bool)*/>(0x0BF8);                  // 0x0BF8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbTurnLeftProne                                             = new ExternalOffset<byte/*(bool)*/>(0x0BF9);                  // 0x0BF9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbTurnRightProne                                            = new ExternalOffset<byte/*(bool)*/>(0x0BFA);                  // 0x0BFA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offYawOffset                                                  = new ExternalOffset<FRotator>(0x0BFC, false);                 // 0x0BFC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offYawOffsetDuringTurnLeft                                    = new ExternalOffset<FRotator>(0x0C08, false);                 // 0x0C08(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offYawOffsetDuringTurnRight                                   = new ExternalOffset<FRotator>(0x0C14, false);                 // 0x0C14(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFullSprintAnim                                            = new ExternalOffset<byte/*(bool)*/>(0x0C20);                  // 0x0C20(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offLastSpeed                                                  = new ExternalOffset<float>(0x0C24);                           // 0x0C24(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offSprintStopCachedSpeed                                      = new ExternalOffset<float>(0x0C28);                           // 0x0C28(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedIsProne                                             = new ExternalOffset<byte/*(bool)*/>(0x0C2C);                  // 0x0C2C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offStandStopMoveAlpha                                         = new ExternalOffset<float>(0x0C30);                           // 0x0C30(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedIsCrouched                                          = new ExternalOffset<byte/*(bool)*/>(0x0C34);                  // 0x0C34(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedIsStand                                             = new ExternalOffset<byte/*(bool)*/>(0x0C35);                  // 0x0C35(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbProneTransAnim                                            = new ExternalOffset<byte/*(bool)*/>(0x0C36);                  // 0x0C36(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offPmCachedCapsuleWorldLoc1                                   = new ExternalOffset<FVector>(0x0C38, false);                  // 0x0C38(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offEndSprintToProneCapsuleLoc                                 = new ExternalOffset<FVector>(0x0C44, false);                  // 0x0C44(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offAlpha                                                      = new ExternalOffset<float>(0x0C50);                           // 0x0C50(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offLastKnownHeight                                            = new ExternalOffset<float>(0x0C54);                           // 0x0C54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offHeightVelocity                                             = new ExternalOffset<float>(0x0C58);                           // 0x0C58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offLastKnownHeightVelocity                                    = new ExternalOffset<float>(0x0C5C);                           // 0x0C5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offBipodAimUpLimit3P                                          = new ExternalOffset<float>(0x0C60);                           // 0x0C60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offBipodAimDownLimit3P                                        = new ExternalOffset<float>(0x0C64);                           // 0x0C64(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCustomNotVaultingAlpha                                     = new ExternalOffset<float>(0x0C68);                           // 0x0C68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCustomNotClimbingAlpha                                     = new ExternalOffset<float>(0x0C6C);                           // 0x0C6C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offCurrentFloorNormalBody                                     = new ExternalOffset<FVector>(0x0C70, false);                  // 0x0C70(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offCurrentFloorNormalFeet                                     = new ExternalOffset<FVector>(0x0C7C, false);                  // 0x0C7C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offIkFeetRootRelRot                                           = new ExternalOffset<FRotator>(0x0C88, false);                 // 0x0C88(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offLeftFootFloorNormal                                        = new ExternalOffset<FVector>(0x0C94, false);                  // 0x0C94(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offRightFootFloorNormal                                       = new ExternalOffset<FVector>(0x0CA0, false);                  // 0x0CA0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCustomIsLoweredAndNotProne                                 = new ExternalOffset<float>(0x0CAC);                           // 0x0CAC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offMeshRotationOffset                                         = new ExternalOffset<FRotator>(0x0CB0, false);                 // 0x0CB0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offCachedActorRotationNoLean                                  = new ExternalOffset<FRotator>(0x0CBC, false);                 // 0x0CBC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCachedLeanYawOffset                                        = new ExternalOffset<float>(0x0CC8);                           // 0x0CC8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbLeanHeadWhenAds                                           = new ExternalOffset<byte/*(bool)*/>(0x0CD0);                  // 0x0CD0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bVaulting                                                      => _offbVaulting.GetValue();
	public byte/*(bool)*/                                     bClimbing                                                      => _offbClimbing.GetValue();
	public byte/*(bool)*/                                     bAssetPlayerTimeFromEnd__LTEPtOne__Jump_3P__JumpEnd__rifle_stand_jumpendOrIsProne => _offbAssetPlayerTimeFromEnd__LTEPtOne__Jump_3P__JumpEnd__rifle_stand_jumpendOrIsProne.GetValue();
	public byte/*(bool)*/                                     bAssetPlayerTimeFromEnd__LTEPtOne__Jump_3P__JumpStart__rifle_stand_jumpstart => _offbAssetPlayerTimeFromEnd__LTEPtOne__Jump_3P__JumpStart__rifle_stand_jumpstart.GetValue();
	public byte/*(bool)*/                                     bAssetPlayerTime__GTEPtOne__Jump_3P__JumpStart__rifle_stand_jumpstart => _offbAssetPlayerTime__GTEPtOne__Jump_3P__JumpStart__rifle_stand_jumpstart.GetValue();
	public byte/*(bool)*/                                     bStateWeight__GTEOne__Stand3P__Jog                             => _offbStateWeight__GTEOne__Stand3P__Jog.GetValue();
	public float                                              StateWeight__Stand3P__Jog                                      => _offStateWeight__Stand3P__Jog.GetValue();
	public byte/*(bool)*/                                     bStateWeight__GTEOne__Stand3P__Sprint                          => _offbStateWeight__GTEOne__Stand3P__Sprint.GetValue();
	public float                                              StateWeight__Stand3P__Sprint                                   => _offStateWeight__Stand3P__Sprint.GetValue();
	public float                                              StateWeight__Stand3P__SprintStop                               => _offStateWeight__Stand3P__SprintStop.GetValue();
	public byte/*(bool)*/                                     bRelevantAnimTimeRemaining__LTEOne__Stand3P__SprintStop        => _offbRelevantAnimTimeRemaining__LTEOne__Stand3P__SprintStop.GetValue();
	public byte/*(bool)*/                                     bStateWeight__GTEOne__Stand_NeutralStates__Neutral             => _offbStateWeight__GTEOne__Stand_NeutralStates__Neutral.GetValue();
	public byte/*(bool)*/                                     bStateWeight__GTEOne__Stand_NeutralStates__TurnLeft_91         => _offbStateWeight__GTEOne__Stand_NeutralStates__TurnLeft_91.GetValue();
	public byte/*(bool)*/                                     bStateWeight__GTEOne__Stand_NeutralStates__TurnRight_91        => _offbStateWeight__GTEOne__Stand_NeutralStates__TurnRight_91.GetValue();
	public byte/*(bool)*/                                     bRelevantAnimTimeRemaining__LTEZero__Stand_NeutralStates__TurnLeft_91 => _offbRelevantAnimTimeRemaining__LTEZero__Stand_NeutralStates__TurnLeft_91.GetValue();
	public byte/*(bool)*/                                     bRelevantAnimTimeRemaining__LTEZero__Stand_NeutralStates__TurnRight_91 => _offbRelevantAnimTimeRemaining__LTEZero__Stand_NeutralStates__TurnRight_91.GetValue();
	public float                                              StateWeight__Crouch3P__Sprint                                  => _offStateWeight__Crouch3P__Sprint.GetValue();
	public float                                              StateWeight__Crouch3P__Walk                                    => _offStateWeight__Crouch3P__Walk.GetValue();
	public byte/*(bool)*/                                     bStateWeight__GTEOne__Crouch_NeutralStates__Neutral            => _offbStateWeight__GTEOne__Crouch_NeutralStates__Neutral.GetValue();
	public byte/*(bool)*/                                     bStateWeight__GTEOne__Crouch_NeutralStates__TurnLeft_91        => _offbStateWeight__GTEOne__Crouch_NeutralStates__TurnLeft_91.GetValue();
	public byte/*(bool)*/                                     bStateWeight__GTEOne__Crouch_NeutralStates__TurnRight_91       => _offbStateWeight__GTEOne__Crouch_NeutralStates__TurnRight_91.GetValue();
	public float                                              StateWeight__Prone3P__ProneMove                                => _offStateWeight__Prone3P__ProneMove.GetValue();
	public byte/*(bool)*/                                     bStateWeight__GTEOne__Prone_NeutralStates__Neutral             => _offbStateWeight__GTEOne__Prone_NeutralStates__Neutral.GetValue();
	public byte/*(bool)*/                                     bStateWeight__GTEOne__Prone_NeutralStates__TurnLeft_46         => _offbStateWeight__GTEOne__Prone_NeutralStates__TurnLeft_46.GetValue();
	public byte/*(bool)*/                                     bStateWeight__GTEOne__Prone_NeutralStates__TurnRight_46        => _offbStateWeight__GTEOne__Prone_NeutralStates__TurnRight_46.GetValue();
	public byte/*(bool)*/                                     bStateWeight__GTEOne__SoldierMovements__Stand                  => _offbStateWeight__GTEOne__SoldierMovements__Stand.GetValue();
	public byte/*(bool)*/                                     bStateWeight__GTEOne__SoldierMovements__Crouch                 => _offbStateWeight__GTEOne__SoldierMovements__Crouch.GetValue();
	public byte/*(bool)*/                                     bStateWeight__GTEOne__SoldierMovements__Stand2Crouch           => _offbStateWeight__GTEOne__SoldierMovements__Stand2Crouch.GetValue();
	public float                                              StateWeight__SoldierMovements__Stand2Prone                     => _offStateWeight__SoldierMovements__Stand2Prone.GetValue();
	public float                                              StateWeight__SoldierMovements__Sprint2Prone                    => _offStateWeight__SoldierMovements__Sprint2Prone.GetValue();
	public float                                              StateWeight__SoldierMovements__Prone2Stand                     => _offStateWeight__SoldierMovements__Prone2Stand.GetValue();
	public float                                              StateWeight__SoldierMovements__Crouch2Prone                    => _offStateWeight__SoldierMovements__Crouch2Prone.GetValue();
	public float                                              StateWeight__SoldierMovements__Prone2Crouch                    => _offStateWeight__SoldierMovements__Prone2Crouch.GetValue();
	public byte/*(bool)*/                                     bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Stand2Prone__rifle_stand2prone => _offbAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Stand2Prone__rifle_stand2prone.GetValue();
	public byte/*(bool)*/                                     bAssetPlayerTimeFromEnd__LTEPtTwo__SoldierMovements__Sprint2Prone__rifle_sprint2prone => _offbAssetPlayerTimeFromEnd__LTEPtTwo__SoldierMovements__Sprint2Prone__rifle_sprint2prone.GetValue();
	public byte/*(bool)*/                                     bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Prone2Stand__rifle_prone2stand => _offbAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Prone2Stand__rifle_prone2stand.GetValue();
	public byte/*(bool)*/                                     bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Crouch2Prone__rifle_crouch2prone => _offbAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Crouch2Prone__rifle_crouch2prone.GetValue();
	public byte/*(bool)*/                                     bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Prone2Crouch__rifle_prone2crouch => _offbAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Prone2Crouch__rifle_prone2crouch.GetValue();
	public byte/*(bool)*/                                     bAssetPlayerTimeFromEnd__LTEPtOne__SoldierMovements__Stand2Crouch__Stand2Crouch => _offbAssetPlayerTimeFromEnd__LTEPtOne__SoldierMovements__Stand2Crouch__Stand2Crouch.GetValue();
	public byte/*(bool)*/                                     bAssetPlayerTimeFromEnd__LTEPtOne__SoldierMovements__Crouch2Stand__Crouch2Stand => _offbAssetPlayerTimeFromEnd__LTEPtOne__SoldierMovements__Crouch2Stand__Crouch2Stand.GetValue();
	public byte/*(bool)*/                                     bIsSprinting                                                   => _offbIsSprinting.GetValue();
	public float                                              CustomNotIsFallingAlpha                                        => _offCustomNotIsFallingAlpha.GetValue();
	public UBlendSpace1D                                      BS1D_3pStandSprintType                                         => _offBS1D_3pStandSprintType.GetValue();
	public UAnimSequence                                      SprintStop3p                                                   => _offSprintStop3p.GetValue();
	public UBlendSpace1D                                      BS1D_3pCrouchSprintType                                        => _offBS1D_3pCrouchSprintType.GetValue();
	public UBlendSpace                                        BS_3pStandJogType                                              => _offBS_3pStandJogType.GetValue();
	public UBlendSpace                                        BS_3pStandWalkType                                             => _offBS_3pStandWalkType.GetValue();
	public UBlendSpace                                        BS_3pCrouchWalkType                                            => _offBS_3pCrouchWalkType.GetValue();
	public UBlendSpace1D                                      BS1D_3pProneCrawlType                                          => _offBS1D_3pProneCrawlType.GetValue();
	public UAnimSequence                                      StandStopMove                                                  => _offStandStopMove.GetValue();
	public UAnimSequence                                      CrouchStopMove                                                 => _offCrouchStopMove.GetValue();
	public UAnimSequence                                      StandLeanLeftShuffle                                           => _offStandLeanLeftShuffle.GetValue();
	public UAnimSequence                                      StandLeanRightShuffle                                          => _offStandLeanRightShuffle.GetValue();
	public UAnimSequence                                      CrouchLeanLeftShuffle                                          => _offCrouchLeanLeftShuffle.GetValue();
	public UAnimSequence                                      CrouchLeanRightShuffle                                         => _offCrouchLeanRightShuffle.GetValue();
	public UBlendSpace1D                                      AO1D_StandPitch                                                => _offAO1D_StandPitch.GetValue();
	public UBlendSpace1D                                      AO1D_CrouchPitch                                               => _offAO1D_CrouchPitch.GetValue();
	public UBlendSpace1D                                      AO1D_PronePitch                                                => _offAO1D_PronePitch.GetValue();
	public UBlendSpace                                        AO_BipodStandCrouchPitch                                       => _offAO_BipodStandCrouchPitch.GetValue();
	public UAnimSequence                                      AO1D_StandYawSF                                                => _offAO1D_StandYawSF.GetValue();
	public UAnimSequence                                      AO1D_CrouchYawSF                                               => _offAO1D_CrouchYawSF.GetValue();
	public UAnimSequence                                      AO1D_ProneYawSF                                                => _offAO1D_ProneYawSF.GetValue();
	public UAnimSequence                                      StandTurnRight                                                 => _offStandTurnRight.GetValue();
	public UAnimSequence                                      StandTurnLeft                                                  => _offStandTurnLeft.GetValue();
	public UAnimSequence                                      CrouchTurnLeft                                                 => _offCrouchTurnLeft.GetValue();
	public UAnimSequence                                      CrouchTurnRight                                                => _offCrouchTurnRight.GetValue();
	public UAnimSequence                                      ProneTurnRight                                                 => _offProneTurnRight.GetValue();
	public UAnimSequence                                      ProneTurnLeft                                                  => _offProneTurnLeft.GetValue();
	public UAnimSequence                                      SprintToProne3p                                                => _offSprintToProne3p.GetValue();
	public UAnimSequence                                      StandToProne3p                                                 => _offStandToProne3p.GetValue();
	public UAnimSequence                                      ProneToStand3p                                                 => _offProneToStand3p.GetValue();
	public UAnimSequence                                      CrouchToProne3p                                                => _offCrouchToProne3p.GetValue();
	public UAnimSequence                                      ProneToCrouch3p                                                => _offProneToCrouch3p.GetValue();
	public FVector                                            FpvLowerRootBoneOffset                                         => _offFpvLowerRootBoneOffset.GetValue();
	public float                                              CustomSpeedMin40                                               => _offCustomSpeedMin40.GetValue();
	public float                                              ProneStopMoveAlpha                                             => _offProneStopMoveAlpha.GetValue();
	public float                                              CrouchStopMoveAlpha                                            => _offCrouchStopMoveAlpha.GetValue();
	public byte/*(bool)*/                                     bFP_HighestClimbAnim                                           => _offbFP_HighestClimbAnim.GetValue();
	public byte/*(bool)*/                                     bFP_T_Jump_3PJumpStartToJumpEnd                                => _offbFP_T_Jump_3PJumpStartToJumpEnd.GetValue();
	public byte/*(bool)*/                                     bFP_T_Stand3PSprintStopToJog                                   => _offbFP_T_Stand3PSprintStopToJog.GetValue();
	public byte/*(bool)*/                                     bFP_T_Stand3PSprintToSprintStop                                => _offbFP_T_Stand3PSprintToSprintStop.GetValue();
	public byte/*(bool)*/                                     bFP_T_Stand3PJogToSprint                                       => _offbFP_T_Stand3PJogToSprint.GetValue();
	public byte/*(bool)*/                                     bFP_T_Stand_NeutralStatesTurnRight_90ToTurnLeft_91             => _offbFP_T_Stand_NeutralStatesTurnRight_90ToTurnLeft_91.GetValue();
	public byte/*(bool)*/                                     bFP_T_Stand_NeutralStatesTurnLeft_90ToTurnRight_91             => _offbFP_T_Stand_NeutralStatesTurnLeft_90ToTurnRight_91.GetValue();
	public byte/*(bool)*/                                     bFP_T_Stand_NeutralStatesNeutralToTurnLeft_91                  => _offbFP_T_Stand_NeutralStatesNeutralToTurnLeft_91.GetValue();
	public byte/*(bool)*/                                     bFP_T_Stand_NeutralStatesNeutralToTurnRight_91                 => _offbFP_T_Stand_NeutralStatesNeutralToTurnRight_91.GetValue();
	public byte/*(bool)*/                                     bFP_T_Crouch_NeutralStatesTurnRight_90ToNeutral                => _offbFP_T_Crouch_NeutralStatesTurnRight_90ToNeutral.GetValue();
	public byte/*(bool)*/                                     bFP_T_Crouch_NeutralStatesTurnRight_90ToTurnLeft_91            => _offbFP_T_Crouch_NeutralStatesTurnRight_90ToTurnLeft_91.GetValue();
	public byte/*(bool)*/                                     bFP_T_Crouch_NeutralStatesTurnLeft_90ToNeutral                 => _offbFP_T_Crouch_NeutralStatesTurnLeft_90ToNeutral.GetValue();
	public byte/*(bool)*/                                     bFP_T_Crouch_NeutralStatesTurnLeft_90ToTurnRight_91            => _offbFP_T_Crouch_NeutralStatesTurnLeft_90ToTurnRight_91.GetValue();
	public byte/*(bool)*/                                     bFP_T_Crouch_NeutralStatesNeutralToTurnLeft_91                 => _offbFP_T_Crouch_NeutralStatesNeutralToTurnLeft_91.GetValue();
	public byte/*(bool)*/                                     bFP_T_Crouch_NeutralStatesNeutralToTurnRight_91                => _offbFP_T_Crouch_NeutralStatesNeutralToTurnRight_91.GetValue();
	public byte/*(bool)*/                                     bFP_T_Prone_NeutralStatesTurnLeft_45ToNeutral                  => _offbFP_T_Prone_NeutralStatesTurnLeft_45ToNeutral.GetValue();
	public byte/*(bool)*/                                     bFP_T_Prone_NeutralStatesTurnLeft_45ToTurnRight_46             => _offbFP_T_Prone_NeutralStatesTurnLeft_45ToTurnRight_46.GetValue();
	public byte/*(bool)*/                                     bFP_T_Prone_NeutralStatesTurnRight_45ToNeutral                 => _offbFP_T_Prone_NeutralStatesTurnRight_45ToNeutral.GetValue();
	public byte/*(bool)*/                                     bFP_T_Prone_NeutralStatesTurnRight_45ToTurnLeft_46             => _offbFP_T_Prone_NeutralStatesTurnRight_45ToTurnLeft_46.GetValue();
	public byte/*(bool)*/                                     bFP_T_Prone_NeutralStatesNeutralToTurnLeft_46                  => _offbFP_T_Prone_NeutralStatesNeutralToTurnLeft_46.GetValue();
	public byte/*(bool)*/                                     bFP_T_Prone_NeutralStatesNeutralToTurnRight_46                 => _offbFP_T_Prone_NeutralStatesNeutralToTurnRight_46.GetValue();
	public byte/*(bool)*/                                     bFP_T_SoldierMovementsCrouch2StandToStand                      => _offbFP_T_SoldierMovementsCrouch2StandToStand.GetValue();
	public byte/*(bool)*/                                     bFP_T_SoldierMovementsStand2CrouchToCrouch2Prone               => _offbFP_T_SoldierMovementsStand2CrouchToCrouch2Prone.GetValue();
	public byte/*(bool)*/                                     bFP_T_SoldierMovementsStand2CrouchToCrouch                     => _offbFP_T_SoldierMovementsStand2CrouchToCrouch.GetValue();
	public byte/*(bool)*/                                     bFP_T_SoldierMovementsCrouchToCrouch2Prone                     => _offbFP_T_SoldierMovementsCrouchToCrouch2Prone.GetValue();
	public byte/*(bool)*/                                     bFP_T_SoldierMovements_StandToCrouch                           => _offbFP_T_SoldierMovements_StandToCrouch.GetValue();
	public byte/*(bool)*/                                     bFP_T_SoldierMovementsStandToStand2Prone                       => _offbFP_T_SoldierMovementsStandToStand2Prone.GetValue();
	public byte/*(bool)*/                                     bFP_T_SoldierMovementsStandToStand2Crouch                      => _offbFP_T_SoldierMovementsStandToStand2Crouch.GetValue();
	public byte/*(bool)*/                                     bFP_T_SoldierMovementsStandToSprint2Prone                      => _offbFP_T_SoldierMovementsStandToSprint2Prone.GetValue();
	public FRotator                                           FP_FloorAlignedRotationRightFoot                               => _offFP_FloorAlignedRotationRightFoot.GetValue();
	public FRotator                                           FP_FloorAlignedRotationLeftFoot                                => _offFP_FloorAlignedRotationLeftFoot.GetValue();
	public FRotator                                           FP_FloorAlignedRotationFeetRoot                                => _offFP_FloorAlignedRotationFeetRoot.GetValue();
	public FRotator                                           FP_FloorAlignedRotationFeetRootReverse                         => _offFP_FloorAlignedRotationFeetRootReverse.GetValue();
	public FVector                                            FP_IKFeetRootTranslation                                       => _offFP_IKFeetRootTranslation.GetValue();
	public float                                              FP_IsNotFirstPersonVisibilityAlpha                             => _offFP_IsNotFirstPersonVisibilityAlpha.GetValue();
	public float                                              FP_StandIdleAlpha                                              => _offFP_StandIdleAlpha.GetValue();
	public float                                              FP_CrouchProneIdleAlpha                                        => _offFP_CrouchProneIdleAlpha.GetValue();
	public byte/*(bool)*/                                     bFP_IsStanding                                                 => _offbFP_IsStanding.GetValue();
	public byte/*(bool)*/                                     bFP_IsStandingStill                                            => _offbFP_IsStandingStill.GetValue();
	public byte/*(bool)*/                                     bFP_CanCrouchToStandingStill                                   => _offbFP_CanCrouchToStandingStill.GetValue();
	public byte/*(bool)*/                                     bFP_CanCrouchToStandMoving                                     => _offbFP_CanCrouchToStandMoving.GetValue();
	public byte/*(bool)*/                                     bFP_IsCrouchedInPlace                                          => _offbFP_IsCrouchedInPlace.GetValue();
	public float                                              FP_AimOffsetProneYawFrameTime                                  => _offFP_AimOffsetProneYawFrameTime.GetValue();
	public float                                              FP_AimOffsetYawNegative                                        => _offFP_AimOffsetYawNegative.GetValue();
	public float                                              FP_AimOffsetProneTurnRightYawFrameTime                         => _offFP_AimOffsetProneTurnRightYawFrameTime.GetValue();
	public float                                              FP_AimOffsetTurnRightYawNegative                               => _offFP_AimOffsetTurnRightYawNegative.GetValue();
	public float                                              FP_AimOffsetProneTurnLeftYawFrameTime                          => _offFP_AimOffsetProneTurnLeftYawFrameTime.GetValue();
	public float                                              FP_AimOffsetTurnLeftYawNegative                                => _offFP_AimOffsetTurnLeftYawNegative.GetValue();
	public float                                              FP_ProneWalkPlayRate                                           => _offFP_ProneWalkPlayRate.GetValue();
	public byte/*(bool)*/                                     bFP_IsMoving                                                   => _offbFP_IsMoving.GetValue();
	public byte/*(bool)*/                                     bFP_IsNotMoving                                                => _offbFP_IsNotMoving.GetValue();
	public FRotator                                           FP_FloorAlignedRotationBody                                    => _offFP_FloorAlignedRotationBody.GetValue();
	public FRotator                                           FP_FloorAlignedRotationBodyReverse                             => _offFP_FloorAlignedRotationBodyReverse.GetValue();
	public float                                              FP_CustomSpeedMin40NormalizedToRange                           => _offFP_CustomSpeedMin40NormalizedToRange.GetValue();
	public byte/*(bool)*/                                     bFP_IsProneAndNotDeployBipod                                   => _offbFP_IsProneAndNotDeployBipod.GetValue();
	public byte/*(bool)*/                                     bFP_IsClimbingOrVaulting                                       => _offbFP_IsClimbingOrVaulting.GetValue();
	public FRotator                                           FP_FreeLook3PHeadRotation                                      => _offFP_FreeLook3PHeadRotation.GetValue();
	public float                                              FP_BipodCrouchStanceAlpha                                      => _offFP_BipodCrouchStanceAlpha.GetValue();
	public float                                              FP_BipodStandCrouchAimPitchAlpha                               => _offFP_BipodStandCrouchAimPitchAlpha.GetValue();
	public float                                              FP_BipodProneStanceAlpha                                       => _offFP_BipodProneStanceAlpha.GetValue();
	public float                                              FP_BipodAimOffsetAlpha                                         => _offFP_BipodAimOffsetAlpha.GetValue();
	public float                                              FP_BipodWeaponPosCoveredPoseAlphaDependingOnSkelMeshOffset     => _offFP_BipodWeaponPosCoveredPoseAlphaDependingOnSkelMeshOffset.GetValue();
	public float                                              FP_BipodCoveredPoseBlendAlpha                                  => _offFP_BipodCoveredPoseBlendAlpha.GetValue();
	public FVector                                            FP_BipodHighPitchCoveredPoseWeaponPositionOffset               => _offFP_BipodHighPitchCoveredPoseWeaponPositionOffset.GetValue();
	public FVector                                            FP_BipodDynamicBodyOffset                                      => _offFP_BipodDynamicBodyOffset.GetValue();
	public float                                              FP_AimOffsetCrouchYawFrameTime                                 => _offFP_AimOffsetCrouchYawFrameTime.GetValue();
	public float                                              FP_AimOffsetTurnLeftYawPlayRate                                => _offFP_AimOffsetTurnLeftYawPlayRate.GetValue();
	public float                                              FP_AimOffsetTurnLeftProneYawPlayRate                           => _offFP_AimOffsetTurnLeftProneYawPlayRate.GetValue();
	public float                                              FP_AimOffsetTurnLeftYawFrameTime                               => _offFP_AimOffsetTurnLeftYawFrameTime.GetValue();
	public float                                              FP_AimOffsetTurnRightYawPlayRate                               => _offFP_AimOffsetTurnRightYawPlayRate.GetValue();
	public float                                              FP_AimOffsetTurnRightProneYawPlayRate                          => _offFP_AimOffsetTurnRightProneYawPlayRate.GetValue();
	public float                                              FP_AimOffsetTurnRightYawFrameTime                              => _offFP_AimOffsetTurnRightYawFrameTime.GetValue();
	public float                                              FP_StandStopMoveAlpha                                          => _offFP_StandStopMoveAlpha.GetValue();
	public float                                              FP_AimYawFrameTime2                                            => _offFP_AimYawFrameTime2.GetValue();
	public float                                              FP_CrouchWalkPlayRate                                          => _offFP_CrouchWalkPlayRate.GetValue();
	public float                                              FP_AimYawJogFrameTime                                          => _offFP_AimYawJogFrameTime.GetValue();
	public float                                              FP_AimPitchJogAlpha                                            => _offFP_AimPitchJogAlpha.GetValue();
	public float                                              FP_JogPlayRate                                                 => _offFP_JogPlayRate.GetValue();
	public float                                              FP_SprintStopAlpha                                             => _offFP_SprintStopAlpha.GetValue();
	public byte/*(bool)*/                                     bFP_Stand3PNeutralToJogRule                                    => _offbFP_Stand3PNeutralToJogRule.GetValue();
	public byte/*(bool)*/                                     bFP_Stand3PJogToNeutralRule                                    => _offbFP_Stand3PJogToNeutralRule.GetValue();
	public byte/*(bool)*/                                     bFP_Stand3PSprintToNeutralRule                                 => _offbFP_Stand3PSprintToNeutralRule.GetValue();
	public float                                              FP_AimOffsetStandYawFrameTime                                  => _offFP_AimOffsetStandYawFrameTime.GetValue();
	public float                                              FP_JumpEndAlpha                                                => _offFP_JumpEndAlpha.GetValue();
	public byte/*(bool)*/                                     bFP_IsFallingAndNotJumping                                     => _offbFP_IsFallingAndNotJumping.GetValue();
	public float                                              FP_Final3PLeftHandIKOutAlpha                                   => _offFP_Final3PLeftHandIKOutAlpha.GetValue();
	public byte/*(bool)*/                                     bFP_AOStandToConduit                                           => _offbFP_AOStandToConduit.GetValue();
	public byte/*(bool)*/                                     bFP_AOStandSprintJog                                           => _offbFP_AOStandSprintJog.GetValue();
	public byte/*(bool)*/                                     bFP_AOCrouchToConduit                                          => _offbFP_AOCrouchToConduit.GetValue();
	public byte/*(bool)*/                                     bFP_AOProneToConduit                                           => _offbFP_AOProneToConduit.GetValue();
	public byte/*(bool)*/                                     bFP_AOConduitToCrouch                                          => _offbFP_AOConduitToCrouch.GetValue();
	public float                                              FP_BS_StandSprintSpeed                                         => _offFP_BS_StandSprintSpeed.GetValue();
	public FRotator                                           FP_SprintHeadDirection                                         => _offFP_SprintHeadDirection.GetValue();
	public float                                              FP_SprintRootDirection                                         => _offFP_SprintRootDirection.GetValue();
	public float                                              FP_BS_CrouchSprintSpeed                                        => _offFP_BS_CrouchSprintSpeed.GetValue();
	public byte/*(bool)*/                                     bFP_LeanHeadWhenADSAndADS                                      => _offbFP_LeanHeadWhenADSAndADS.GetValue();
	public byte/*(bool)*/                                     bFinal3pLeftHandIkOut                                          => _offbFinal3pLeftHandIkOut.GetValue();
	public float                                              CustomWeapActionsAndIsAds                                      => _offCustomWeapActionsAndIsAds.GetValue();
	public float                                              FP_WalkPlayRate                                                => _offFP_WalkPlayRate.GetValue();
	public float                                              FP_IsNotMovingAlpha                                            => _offFP_IsNotMovingAlpha.GetValue();
	public float                                              FP_LeanYawOffsetFrameTime                                      => _offFP_LeanYawOffsetFrameTime.GetValue();
	public float                                              FP_AlphaAbsIkFeetRootPitch                                     => _offFP_AlphaAbsIkFeetRootPitch.GetValue();
	public FRotator                                           RawActorRotation                                               => _offRawActorRotation.GetValue();
	public FRotator                                           SmoothedControlRotation                                        => _offSmoothedControlRotation.GetValue();
	public byte/*(bool)*/                                     bTurnNeutAoDisabled                                            => _offbTurnNeutAoDisabled.GetValue();
	public FRotator                                           CachedActorYaw                                                 => _offCachedActorYaw.GetValue();
	public byte/*(bool)*/                                     bLeftHandIkOut                                                 => _offbLeftHandIkOut.GetValue();
	public byte/*(bool)*/                                     bJumpEndBobbing3P                                              => _offbJumpEndBobbing3P.GetValue();
	public float                                              CustomIsSprinting                                              => _offCustomIsSprinting.GetValue();
	public float                                              CustomIsAdsOrBipod                                             => _offCustomIsAdsOrBipod.GetValue();
	public FVector                                            SmoothVelocity                                                 => _offSmoothVelocity.GetValue();
	public float                                              AccelRateClamp                                                 => _offAccelRateClamp.GetValue();
	public FRotator                                           SmoothWorldDirection                                           => _offSmoothWorldDirection.GetValue();
	public FRotator                                           AimRotation_3P                                                 => _offAimRotation_3P.GetValue();
	public FRotator                                           AimRotation2_3P                                                => _offAimRotation2_3P.GetValue();
	public byte/*(bool)*/                                     bTurnLeftAnim                                                  => _offbTurnLeftAnim.GetValue();
	public byte/*(bool)*/                                     bFullMoveAnim                                                  => _offbFullMoveAnim.GetValue();
	public byte/*(bool)*/                                     bTurnRightAnim                                                 => _offbTurnRightAnim.GetValue();
	public byte/*(bool)*/                                     bTurnLeft                                                      => _offbTurnLeft.GetValue();
	public byte/*(bool)*/                                     bTurnRight                                                     => _offbTurnRight.GetValue();
	public byte/*(bool)*/                                     bTurnLeftProne                                                 => _offbTurnLeftProne.GetValue();
	public byte/*(bool)*/                                     bTurnRightProne                                                => _offbTurnRightProne.GetValue();
	public FRotator                                           YawOffset                                                      => _offYawOffset.GetValue();
	public FRotator                                           YawOffsetDuringTurnLeft                                        => _offYawOffsetDuringTurnLeft.GetValue();
	public FRotator                                           YawOffsetDuringTurnRight                                       => _offYawOffsetDuringTurnRight.GetValue();
	public byte/*(bool)*/                                     bFullSprintAnim                                                => _offbFullSprintAnim.GetValue();
	public float                                              LastSpeed                                                      => _offLastSpeed.GetValue();
	public float                                              SprintStopCachedSpeed                                          => _offSprintStopCachedSpeed.GetValue();
	public byte/*(bool)*/                                     bCachedIsProne                                                 => _offbCachedIsProne.GetValue();
	public float                                              StandStopMoveAlpha                                             => _offStandStopMoveAlpha.GetValue();
	public byte/*(bool)*/                                     bCachedIsCrouched                                              => _offbCachedIsCrouched.GetValue();
	public byte/*(bool)*/                                     bCachedIsStand                                                 => _offbCachedIsStand.GetValue();
	public byte/*(bool)*/                                     bProneTransAnim                                                => _offbProneTransAnim.GetValue();
	public FVector                                            PmCachedCapsuleWorldLoc1                                       => _offPmCachedCapsuleWorldLoc1.GetValue();
	public FVector                                            EndSprintToProneCapsuleLoc                                     => _offEndSprintToProneCapsuleLoc.GetValue();
	public float                                              Alpha                                                          => _offAlpha.GetValue();
	public float                                              LastKnownHeight                                                => _offLastKnownHeight.GetValue();
	public float                                              HeightVelocity                                                 => _offHeightVelocity.GetValue();
	public float                                              LastKnownHeightVelocity                                        => _offLastKnownHeightVelocity.GetValue();
	public float                                              BipodAimUpLimit3P                                              => _offBipodAimUpLimit3P.GetValue();
	public float                                              BipodAimDownLimit3P                                            => _offBipodAimDownLimit3P.GetValue();
	public float                                              CustomNotVaultingAlpha                                         => _offCustomNotVaultingAlpha.GetValue();
	public float                                              CustomNotClimbingAlpha                                         => _offCustomNotClimbingAlpha.GetValue();
	public FVector                                            CurrentFloorNormalBody                                         => _offCurrentFloorNormalBody.GetValue();
	public FVector                                            CurrentFloorNormalFeet                                         => _offCurrentFloorNormalFeet.GetValue();
	public FRotator                                           IkFeetRootRelRot                                               => _offIkFeetRootRelRot.GetValue();
	public FVector                                            LeftFootFloorNormal                                            => _offLeftFootFloorNormal.GetValue();
	public FVector                                            RightFootFloorNormal                                           => _offRightFootFloorNormal.GetValue();
	public float                                              CustomIsLoweredAndNotProne                                     => _offCustomIsLoweredAndNotProne.GetValue();
	public FRotator                                           MeshRotationOffset                                             => _offMeshRotationOffset.GetValue();
	public FRotator                                           CachedActorRotationNoLean                                      => _offCachedActorRotationNoLean.GetValue();
	public float                                              CachedLeanYawOffset                                            => _offCachedLeanYawOffset.GetValue();
	public byte/*(bool)*/                                     bLeanHeadWhenAds                                               => _offbLeanHeadWhenAds.GetValue();
	#endregion


}

// Class Squad.SQAnimNotify_EnterSeatState
// 0x0014 (0x003C - 0x0028)
public class USQAnimNotify_EnterSeatState : UAnimNotify
{
	#region Offsets
	private ExternalOffset<int>                               _offSeatIndex                                                  = new ExternalOffset<int>(0x0038);                             // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public int                                                SeatIndex                                                      => _offSeatIndex.GetValue();
	#endregion


}

// Class Squad.SQAnimNotify_MontagePause
// 0x0010 (0x0038 - 0x0028)
public class USQAnimNotify_MontagePause : UAnimNotify
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQApprovalEntryWidget
// 0x0018 (0x0248 - 0x0230)
public class USQApprovalEntryWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<UTextBlock>                        _offTextBlockCPP                                               = new ExternalOffset<UTextBlock>(0x0230, true);                // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offIconImageCPP                                               = new ExternalOffset<UImage>(0x0238, true);                    // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offDescriptionTextCPP                                         = new ExternalOffset<UTextBlock>(0x0240, true);                // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UTextBlock                                         TextBlockCPP                                                   => _offTextBlockCPP.GetValue();
	public UImage                                             IconImageCPP                                                   => _offIconImageCPP.GetValue();
	public UTextBlock                                         DescriptionTextCPP                                             => _offDescriptionTextCPP.GetValue();
	#endregion


}

// Class Squad.SQApprovalQueueWidget
// 0x0070 (0x02A0 - 0x0230)
public class USQApprovalQueueWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<UClass>                            _offApprovalEntry                                              = new ExternalOffset<UClass>(0x0230, true);                    // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UScrollBox>                        _offScrollBoxCPP                                               = new ExternalOffset<UScrollBox>(0x0238, true);                // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private TMap<uint32_t, class USQApprovalEntryWidget*>     _offEntryWidgets                                               = new ExternalOffset<TMap<USQApprovalEntryWidget>>(0x0240, false); // 0x0240(0x0050) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offApprovalKeyTextCPP                                         = new ExternalOffset<UTextBlock>(0x0290, true);                // 0x0290(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTextBlock>                        _offDisapprovalKeyTextCPP                                      = new ExternalOffset<UTextBlock>(0x0298, true);                // 0x0298(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public UClass                                             ApprovalEntry                                                  => _offApprovalEntry.GetValue();
	public UScrollBox                                         ScrollBoxCPP                                                   => _offScrollBoxCPP.GetValue();
	public UTextBlock                                         ApprovalKeyTextCPP                                             => _offApprovalKeyTextCPP.GetValue();
	public UTextBlock                                         DisapprovalKeyTextCPP                                          => _offDisapprovalKeyTextCPP.GetValue();
	#endregion


}

// Class Squad.SQAssetManager
// 0x0158 (0x0438 - 0x02E0)
public class USQAssetManager : UAssetManager
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQAudioVolume
// 0x0005 (0x02D9 - 0x02D4)
public class ASQAudioVolume : AAudioVolume
{
	#region Offsets
	private ExternalOffset<ESQAudioVolumeType>                _offSquadAudioVolumeType                                       = new ExternalOffset<ESQAudioVolumeType>(0x02D8, false);       // 0x02D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ESQAudioVolumeType                                 SquadAudioVolumeType                                           => _offSquadAudioVolumeType.GetValue();
	#endregion


}

// Class Squad.SQBaseButton
// 0x00B4 (0x02E4 - 0x0230)
public class USQBaseButton : USQUserWidget
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbIsHovering                                                = new ExternalOffset<byte/*(bool)*/>(0x0230);                  // 0x0230(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsActive                                                  = new ExternalOffset<byte/*(bool)*/>(0x0231);                  // 0x0231(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHoveringColorBlend                                         = new ExternalOffset<float>(0x0234);                           // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHoverColorBlendSpeed                                       = new ExternalOffset<float>(0x0238);                           // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsPressing                                                = new ExternalOffset<byte/*(bool)*/>(0x023C);                  // 0x023C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPressColorBlend                                            = new ExternalOffset<float>(0x0240);                           // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPressColorBlendSpeed                                       = new ExternalOffset<float>(0x0244);                           // 0x0244(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offButtonImage                                                = new ExternalOffset<UImage>(0x0248, true);                    // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UBorder>                           _offButtonBorder                                               = new ExternalOffset<UBorder>(0x0250, true);                   // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offButtonTextBlock                                            = new ExternalOffset<UTextBlock>(0x0258, true);                // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQButtonStyle>                    _offSQButtonStyle                                              = new ExternalOffset<FSQButtonStyle>(0x0260, false);           // 0x0260(0x0080) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAlpha                                                      = new ExternalOffset<float>(0x02E0);                           // 0x02E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bIsHovering                                                    => _offbIsHovering.GetValue();
	public byte/*(bool)*/                                     bIsActive                                                      => _offbIsActive.GetValue();
	public float                                              HoveringColorBlend                                             => _offHoveringColorBlend.GetValue();
	public float                                              HoverColorBlendSpeed                                           => _offHoverColorBlendSpeed.GetValue();
	public byte/*(bool)*/                                     bIsPressing                                                    => _offbIsPressing.GetValue();
	public float                                              PressColorBlend                                                => _offPressColorBlend.GetValue();
	public float                                              PressColorBlendSpeed                                           => _offPressColorBlendSpeed.GetValue();
	public UImage                                             ButtonImage                                                    => _offButtonImage.GetValue();
	public UBorder                                            ButtonBorder                                                   => _offButtonBorder.GetValue();
	public UTextBlock                                         ButtonTextBlock                                                => _offButtonTextBlock.GetValue();
	public FSQButtonStyle                                     SQButtonStyle                                                  => _offSQButtonStyle.GetValue();
	public float                                              Alpha                                                          => _offAlpha.GetValue();
	#endregion


}

// Class Squad.SQBaseGameSubsystem
// 0x0018 (0x0040 - 0x0028)
public class USQBaseGameSubsystem : UObject
{
	#region Offsets
	private ExternalOffset<USQGameInstance>                   _offSQGameInstance                                             = new ExternalOffset<USQGameInstance>(0x0038, true);           // 0x0038(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USQGameInstance                                    SQGameInstance                                                 => _offSQGameInstance.GetValue();
	#endregion


}

// Class Squad.SQBaseHudWidget
// 0x0060 (0x0290 - 0x0230)
public class USQBaseHudWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<UUserWidget>                       _offStateIndicators                                            = new ExternalOffset<UUserWidget>(0x0230, true);               // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQAmmoWidget>                     _offAmmoWidget                                                 = new ExternalOffset<USQAmmoWidget>(0x0238, true);             // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UUserWidget>                       _offSightRangeWidget                                           = new ExternalOffset<UUserWidget>(0x0240, true);               // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQCompassMK2>                     _offCompassWidget                                              = new ExternalOffset<USQCompassMK2>(0x0248, true);             // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UUserWidget>                       _offCaptureZoneWidget                                          = new ExternalOffset<UUserWidget>(0x0250, true);               // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UUserWidget>                       _offFOBStatusWidget                                            = new ExternalOffset<UUserWidget>(0x0258, true);               // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UUserWidget>                       _offStaminaWidget                                              = new ExternalOffset<UUserWidget>(0x0260, true);               // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UUserWidget>                       _offVehicleHealthWidget                                        = new ExternalOffset<UUserWidget>(0x0268, true);               // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQApprovalQueueWidget>            _offApprovalQueueWidget                                        = new ExternalOffset<USQApprovalQueueWidget>(0x0270, true);    // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQSeatProgressWidget>             _offSeatProgressWidget                                         = new ExternalOffset<USQSeatProgressWidget>(0x0278, true);     // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQStagingTimerText>               _offStagingTimerText                                           = new ExternalOffset<USQStagingTimerText>(0x0280, true);       // 0x0280(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UUserWidget>                       _offCenterDotWidget                                            = new ExternalOffset<UUserWidget>(0x0288, true);               // 0x0288(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UUserWidget                                        StateIndicators                                                => _offStateIndicators.GetValue();
	public USQAmmoWidget                                      AmmoWidget                                                     => _offAmmoWidget.GetValue();
	public UUserWidget                                        SightRangeWidget                                               => _offSightRangeWidget.GetValue();
	public USQCompassMK2                                      CompassWidget                                                  => _offCompassWidget.GetValue();
	public UUserWidget                                        CaptureZoneWidget                                              => _offCaptureZoneWidget.GetValue();
	public UUserWidget                                        FOBStatusWidget                                                => _offFOBStatusWidget.GetValue();
	public UUserWidget                                        StaminaWidget                                                  => _offStaminaWidget.GetValue();
	public UUserWidget                                        VehicleHealthWidget                                            => _offVehicleHealthWidget.GetValue();
	public USQApprovalQueueWidget                             ApprovalQueueWidget                                            => _offApprovalQueueWidget.GetValue();
	public USQSeatProgressWidget                              SeatProgressWidget                                             => _offSeatProgressWidget.GetValue();
	public USQStagingTimerText                                StagingTimerText                                               => _offStagingTimerText.GetValue();
	public UUserWidget                                        CenterDotWidget                                                => _offCenterDotWidget.GetValue();
	#endregion


}

// Class Squad.SQPawnMovementComponent
// 0x0081 (0x01E1 - 0x0160)
public class USQPawnMovementComponent : UPawnMovementComponent
{
	#region Offsets
	private ExternalOffset<FSQMovePostPhysicsTickFunction>    _offPostPhysicsTickFunction                                    = new ExternalOffset<FSQMovePostPhysicsTickFunction>(0x0160, false); // 0x0160(0x0058) (ContainsInstancedReference, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbJustTeleported                                            = new ExternalOffset<char>(0x01E0, false);                     // 0x01E0(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIgnoreBaseRotation                                        = new ExternalOffset<char>(0x01E0, false);                     // 0x01E0(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbUseControllerDesiredRotation                              = new ExternalOffset<char>(0x01E0, false);                     // 0x01E0(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbOrientRotationToMovement                                  = new ExternalOffset<char>(0x01E0, false);                     // 0x01E0(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbFastAttachedMove                                          = new ExternalOffset<char>(0x01E0, false);                     // 0x01E0(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbRunPhysicsWithNoController                                = new ExternalOffset<char>(0x01E0, false);                     // 0x01E0(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FSQMovePostPhysicsTickFunction                     PostPhysicsTickFunction                                        => _offPostPhysicsTickFunction.GetValue();
	#endregion


}

// Class Squad.SQNetMoveComponent
// 0x0047 (0x0228 - 0x01E1)
public class USQNetMoveComponent : USQPawnMovementComponent
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbPerformMoveOnServer                                       = new ExternalOffset<byte/*(bool)*/>(0x01F0);                  // 0x01F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxPendingMoveDelay                                        = new ExternalOffset<float>(0x01F4);                           // 0x01F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxStartLocationDifference                                 = new ExternalOffset<float>(0x01F8);                           // 0x01F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMoveTimestampQuantum                                       = new ExternalOffset<float>(0x01FC);                           // 0x01FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShouldInterpolate                                         = new ExternalOffset<byte/*(bool)*/>(0x0200);                  // 0x0200(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinTimeBetweenTimeStampResets                              = new ExternalOffset<float>(0x0204);                           // 0x0204(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxSmoothNetUpdateDist                                     = new ExternalOffset<float>(0x0208);                           // 0x0208(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offNoSmoothNetUpdateDist                                      = new ExternalOffset<float>(0x020C);                           // 0x020C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<char>>                      _offLatestPackedMove                                           = new ExternalOffset<TArray<char>>(0x0218, false);             // 0x0218(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bPerformMoveOnServer                                           => _offbPerformMoveOnServer.GetValue();
	public float                                              MaxPendingMoveDelay                                            => _offMaxPendingMoveDelay.GetValue();
	public float                                              MaxStartLocationDifference                                     => _offMaxStartLocationDifference.GetValue();
	public float                                              MoveTimestampQuantum                                           => _offMoveTimestampQuantum.GetValue();
	public byte/*(bool)*/                                     bShouldInterpolate                                             => _offbShouldInterpolate.GetValue();
	public float                                              MinTimeBetweenTimeStampResets                                  => _offMinTimeBetweenTimeStampResets.GetValue();
	public float                                              MaxSmoothNetUpdateDist                                         => _offMaxSmoothNetUpdateDist.GetValue();
	public float                                              NoSmoothNetUpdateDist                                          => _offNoSmoothNetUpdateDist.GetValue();
	public TArray<char>                                       LatestPackedMove                                               => _offLatestPackedMove.GetValue();
	#endregion


}

// Class Squad.SQBasicMoveComponent
// 0x002C (0x0254 - 0x0228)
public class USQBasicMoveComponent : USQNetMoveComponent
{
	#region Offsets
	private ExternalOffset<float>                             _offMovementSpeed                                              = new ExternalOffset<float>(0x0250);                           // 0x0250(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              MovementSpeed                                                  => _offMovementSpeed.GetValue();
	#endregion


}

// Class Squad.SQBlastComponent
// 0x00C8 (0x0248 - 0x0180)
public class USQBlastComponent : USceneComponent
{
	#region Offsets
	private ExternalOffset<float>                             _offConeAngle                                                  = new ExternalOffset<float>(0x021C);                           // 0x021C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBlockBlastTraceOriginOffset                                = new ExternalOffset<float>(0x0220);                           // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxDamage                                                  = new ExternalOffset<float>(0x0224);                           // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsDrawDebugEnabled                                        = new ExternalOffset<byte/*(bool)*/>(0x0228);                  // 0x0228(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offDamageType                                                 = new ExternalOffset<UClass>(0x0230, true);                    // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offEffectsConeLength                                          = new ExternalOffset<float>(0x0238);                           // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offEffectsConeHalfAngle                                       = new ExternalOffset<float>(0x023C);                           // 0x023C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offBlastShockwave                                             = new ExternalOffset<UClass>(0x0240, true);                    // 0x0240(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              ConeAngle                                                      => _offConeAngle.GetValue();
	public float                                              BlockBlastTraceOriginOffset                                    => _offBlockBlastTraceOriginOffset.GetValue();
	public float                                              MaxDamage                                                      => _offMaxDamage.GetValue();
	public byte/*(bool)*/                                     bIsDrawDebugEnabled                                            => _offbIsDrawDebugEnabled.GetValue();
	public UClass                                             DamageType                                                     => _offDamageType.GetValue();
	public float                                              EffectsConeLength                                              => _offEffectsConeLength.GetValue();
	public float                                              EffectsConeHalfAngle                                           => _offEffectsConeHalfAngle.GetValue();
	public UClass                                             BlastShockwave                                                 => _offBlastShockwave.GetValue();
	#endregion


}

// Class Squad.SQBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
public class USQBlueprintLibrary : UBlueprintFunctionLibrary
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQSoldier
// 0x0FA0 (0x15F8 - 0x0658)
public class ASQSoldier : ACharacter
{
	#region Offsets
	private ExternalOffset<FSQUsableData>                     _offUsableData                                                 = new ExternalOffset<FSQUsableData>(0x0670, false);            // 0x0670(0x0040) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<USkeletalMeshComponent>            _offMesh1P                                                     = new ExternalOffset<USkeletalMeshComponent>(0x06B0, true);    // 0x06B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USkeletalMeshComponent>            _offMesh1PShadow                                               = new ExternalOffset<USkeletalMeshComponent>(0x06B8, true);    // 0x06B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbEnableTickUpdateShiftMesh                                 = new ExternalOffset<char>(0x06C0, false);                     // 0x06C0(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offShiftMeshOffset                                            = new ExternalOffset<FVector>(0x06C4, false);                  // 0x06C4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offProne2SprintMovementRecovery                               = new ExternalOffset<float>(0x06D0);                           // 0x06D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offProne2SprintAlpha                                          = new ExternalOffset<float>(0x06D4);                           // 0x06D4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQConsoleVariablesComponent>      _offConsoleVariablesComponent                                  = new ExternalOffset<USQConsoleVariablesComponent>(0x06D8, true); // 0x06D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USkeletalMesh>>             _offSoldierMeshSkins                                           = new ExternalOffset<TArray<USkeletalMesh>>(0x06E0, false);    // 0x06E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offPatchMaterialIndex                                         = new ExternalOffset<int>(0x06F0);                             // 0x06F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHoldingBreathVelocityLimit                                 = new ExternalOffset<float>(0x06F4);                           // 0x06F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCameraComponent>                  _offFirstPersonCameraComponent                                 = new ExternalOffset<UCameraComponent>(0x06F8, true);          // 0x06F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponBasedFOV                                             = new ExternalOffset<float>(0x0700);                           // 0x0700(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQSoldierMovement>                _offSoldierMovement                                            = new ExternalOffset<USQSoldierMovement>(0x0708, true);        // 0x0708(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USphereComponent>                  _offSnapZone                                                   = new ExternalOffset<USphereComponent>(0x0710, true);          // 0x0710(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FPostProcessSettings>              _offLowHealthPostProcessSettings                               = new ExternalOffset<FPostProcessSettings>(0x0720, false);     // 0x0720(0x0530) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FPostProcessSettings>              _offSuppressionPostProcessSettings                             = new ExternalOffset<FPostProcessSettings>(0x0C50, false);     // 0x0C50(0x0530) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbAllowEffectsForProjectilesFiredWithinSuppressionRange     = new ExternalOffset<char>(0x1180, false);                     // 0x1180(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offUnderSuppressionPercentage                                 = new ExternalOffset<float>(0x1184);                           // 0x1184(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSuppressionEffectsDecayRate                                = new ExternalOffset<float>(0x1188);                           // 0x1188(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBaseTurnRate                                               = new ExternalOffset<float>(0x118C);                           // 0x118C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBaseLookUpRate                                             = new ExternalOffset<float>(0x1190);                           // 0x1190(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsDoubleTapWalking                                        = new ExternalOffset<char>(0x1194, false);                     // 0x1194(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offGunOffset                                                  = new ExternalOffset<FVector>(0x1198, false);                  // 0x1198(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offProneEyeHeight                                             = new ExternalOffset<float>(0x11A4);                           // 0x11A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsProne                                                   = new ExternalOffset<char>(0x11A8, false);                     // 0x11A8(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbInThirdPersonView                                         = new ExternalOffset<char>(0x11B8, false);                     // 0x11B8(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbCachedInThirdPerson                                       = new ExternalOffset<char>(0x11B8, false);                     // 0x11B8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offAttachSocket1PName                                         = new ExternalOffset<FName>(0x11BC, false);                    // 0x11BC(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offAttachSocket3PName                                         = new ExternalOffset<FName>(0x11C4, false);                    // 0x11C4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQCoreStateComponent>             _offStateObject                                                = new ExternalOffset<USQCoreStateComponent>(0x11D0, true);     // 0x11D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQMapIconComponent>               _offMapIcon                                                    = new ExternalOffset<USQMapIconComponent>(0x11D8, true);       // 0x11D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSecondsUntilIgnoreDistanceForAliveTeamMates                = new ExternalOffset<float>(0x11E0);                           // 0x11E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSecondsOfSpawnProtection                                   = new ExternalOffset<float>(0x11E4);                           // 0x11E4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offInvulnerableDelay                                          = new ExternalOffset<float>(0x11E8);                           // 0x11E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRagdollLifeSpan                                            = new ExternalOffset<float>(0x11EC);                           // 0x11EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQBoneDamageMod>>          _offBoneDamageModifiers                                        = new ExternalOffset<TArray<FSQBoneDamageMod>>(0x11F0, false); // 0x11F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offLeaningDirection                                           = new ExternalOffset<char>(0x1230, false);                     // 0x1230(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBlockLeanTraceDistance                                     = new ExternalOffset<float>(0x1234);                           // 0x1234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPitchAngleAdjust                                           = new ExternalOffset<float>(0x1238);                           // 0x1238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBlockLeanTraceRotation                                     = new ExternalOffset<float>(0x123C);                           // 0x123C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offProneBlockLeanTraceDistance                                = new ExternalOffset<float>(0x1240);                           // 0x1240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPronePitchAngleAdjust                                      = new ExternalOffset<float>(0x1244);                           // 0x1244(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offProneBlockLeanTraceRotation                                = new ExternalOffset<float>(0x1248);                           // 0x1248(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offUseInteractDistance                                        = new ExternalOffset<float>(0x124C);                           // 0x124C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<AActor>                            _offUseFocus                                                   = new ExternalOffset<AActor>(0x1250, true);                    // 0x1250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSnapZoneRadius                                             = new ExternalOffset<float>(0x125C);                           // 0x125C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinDistanceToSuppressedTarget                              = new ExternalOffset<float>(0x1260);                           // 0x1260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFullSuppressionRadius                                      = new ExternalOffset<float>(0x1264);                           // 0x1264(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSuppressionRadius                                          = new ExternalOffset<float>(0x1268);                           // 0x1268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQVehicleSeatComponent>           _offCurrentSeat                                                = new ExternalOffset<USQVehicleSeatComponent>(0x1270, true);   // 0x1270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbTestingMove                                               = new ExternalOffset<char>(0x1278, false);                     // 0x1278(0x0001) BIT_FIELD (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCachedMoveRotation                                         = new ExternalOffset<float>(0x127C);                           // 0x127C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCachedMoveRotationPoint                                    = new ExternalOffset<FVector>(0x1280, false);                  // 0x1280(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCachedForwardVector                                        = new ExternalOffset<FVector>(0x128C, false);                  // 0x128C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnChangedSeat                                              = new ExternalOffset<FScriptMulticastDelegate>(0x1298, false); // 0x1298(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbStopADSWhenSprintPressed                                  = new ExternalOffset<char>(0x12A8, false);                     // 0x12A8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbStopADSWhenPronePressed                                   = new ExternalOffset<char>(0x12A8, false);                     // 0x12A8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbStopADSWhenUnpronePressed                                 = new ExternalOffset<char>(0x12A8, false);                     // 0x12A8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbStopSprintWhenADSPressed                                  = new ExternalOffset<char>(0x12A8, false);                     // 0x12A8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbStopUsingPrimaryItemWhenPronePressed                      = new ExternalOffset<char>(0x12A8, false);                     // 0x12A8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbStopUsingAltItemWhenPronePressed                          = new ExternalOffset<char>(0x12A8, false);                     // 0x12A8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbStopUsingPrimaryItemWhenUnpronePressed                    = new ExternalOffset<char>(0x12A8, false);                     // 0x12A8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbStopUsingAltItemWhenUnpronePressed                        = new ExternalOffset<char>(0x12A8, false);                     // 0x12A8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbItemLoweredDueToCollision                                 = new ExternalOffset<char>(0x12A9, false);                     // 0x12A9(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbCachedADSDuringItemCollision                              = new ExternalOffset<char>(0x12A9, false);                     // 0x12A9(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<AActor>                            _offUsingObject                                                = new ExternalOffset<AActor>(0x12B0, true);                    // 0x12B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<int>                               _offVehicleSeatEntryWeaponSlot                                 = new ExternalOffset<int>(0x12B8);                             // 0x12B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offVehicleSeatEntryWeaponOffset                               = new ExternalOffset<int>(0x12BC);                             // 0x12BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQTakeHitInfo>                    _offLastTakeHitInfo                                            = new ExternalOffset<FSQTakeHitInfo>(0x12D0, false);           // 0x12D0(0x0138) (Net, Transient, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offSoldierSkinIndex                                           = new ExternalOffset<char>(0x1408, false);                     // 0x1408(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsDying                                                   = new ExternalOffset<char>(0x140C, false);                     // 0x140C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsBleeding                                                = new ExternalOffset<char>(0x140C, false);                     // 0x140C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsWounded                                                 = new ExternalOffset<char>(0x140C, false);                     // 0x140C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbAllowWoundedState                                         = new ExternalOffset<char>(0x140C, false);                     // 0x140C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHealth                                                     = new ExternalOffset<float>(0x1410);                           // 0x1410(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLastHealedTime                                             = new ExternalOffset<float>(0x1414);                           // 0x1414(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWoundedThreshold                                           = new ExternalOffset<float>(0x1418);                           // 0x1418(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHealthBleedableThreshold                                   = new ExternalOffset<float>(0x141C);                           // 0x141C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHealthHurtMovementThreshold                                = new ExternalOffset<float>(0x1420);                           // 0x1420(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDamageBleedableThreshold                                   = new ExternalOffset<float>(0x1424);                           // 0x1424(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWoundedHealthLossRate                                      = new ExternalOffset<float>(0x1428);                           // 0x1428(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWoundedBandagedHealthLossRate                              = new ExternalOffset<float>(0x142C);                           // 0x142C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBleedingHealthLossRate                                     = new ExternalOffset<float>(0x1430);                           // 0x1430(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offKillDamageThreshold                                        = new ExternalOffset<float>(0x1434);                           // 0x1434(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHealthUponRevival                                          = new ExternalOffset<float>(0x1438);                           // 0x1438(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTimeBecameWounded                                          = new ExternalOffset<float>(0x143C);                           // 0x143C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTimeBecameRevived                                          = new ExternalOffset<float>(0x1440);                           // 0x1440(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinTimeSinceReviveToPreventImmediateDeath                  = new ExternalOffset<float>(0x1444);                           // 0x1444(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWoundedEffectTime                                          = new ExternalOffset<float>(0x1448);                           // 0x1448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCumulativeRevivePenalty                                    = new ExternalOffset<float>(0x144C);                           // 0x144C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsHoldingBreath                                           = new ExternalOffset<char>(0x1450, false);                     // 0x1450(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBreathHoldStamina                                          = new ExternalOffset<float>(0x1454);                           // 0x1454(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBreathHoldStaminaMax                                       = new ExternalOffset<float>(0x1458);                           // 0x1458(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBreathHoldRecoveryDuration                                 = new ExternalOffset<float>(0x145C);                           // 0x145C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBreathHoldConsumptionDuration                              = new ExternalOffset<float>(0x1460);                           // 0x1460(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBreathHoldFadeDuration                                     = new ExternalOffset<float>(0x1464);                           // 0x1464(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBreathHoldPct                                              = new ExternalOffset<float>(0x1468);                           // 0x1468(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFocusZoomAlpha                                             = new ExternalOffset<float>(0x146C);                           // 0x146C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFallingDamageMultiplier                                    = new ExternalOffset<float>(0x1470);                           // 0x1470(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaximumSafeFallingSpeed                                    = new ExternalOffset<float>(0x1474);                           // 0x1474(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsLeavingServer                                           = new ExternalOffset<char>(0x1478, false);                     // 0x1478(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundMix>                         _offWoundedSoundMix                                            = new ExternalOffset<USoundMix>(0x1480, true);                 // 0x1480(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundMix>                         _offBleedingSoundMix                                           = new ExternalOffset<USoundMix>(0x1488, true);                 // 0x1488(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQListenerType>                   _offListenerType                                               = new ExternalOffset<ESQListenerType>(0x1490, false);          // 0x1490(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveLinearColor>                 _offHealthBasedFilterGainCurve                                 = new ExternalOffset<UCurveLinearColor>(0x1498, true);         // 0x1498(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbUseHealthBasedFilterGainCurveForWoundedSoundMix           = new ExternalOffset<char>(0x14A0, false);                     // 0x14A0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbUseHealthBasedFilterGainCurveForBleedingSoundMix          = new ExternalOffset<char>(0x14A0, false);                     // 0x14A0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offHeartbeatVolumeCurve                                       = new ExternalOffset<UCurveFloat>(0x14A8, true);               // 0x14A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offHeartbeatSound                                             = new ExternalOffset<USoundBase>(0x14B0, true);                // 0x14B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offHeartbeatIncapSound                                        = new ExternalOffset<USoundBase>(0x14B8, true);                // 0x14B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offDefaultLandedSound                                         = new ExternalOffset<USoundBase>(0x14C0, true);                // 0x14C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offHitSound                                                   = new ExternalOffset<USoundBase>(0x14C8, true);                // 0x14C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offFirstPersonHitSound                                        = new ExternalOffset<USoundBase>(0x14D0, true);                // 0x14D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offIncapSound                                                 = new ExternalOffset<USoundBase>(0x14D8, true);                // 0x14D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQBoneHitSound>>           _offBoneHitSounds                                              = new ExternalOffset<TArray<FSQBoneHitSound>>(0x14E0, false);  // 0x14E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offIncapSoundOccurrencePercentage                             = new ExternalOffset<float>(0x14F0);                           // 0x14F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWoundedSoundMixDelaySeconds                                = new ExternalOffset<float>(0x14F4);                           // 0x14F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbPlayIncapSound                                            = new ExternalOffset<char>(0x14F8, false);                     // 0x14F8(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offDeathSound                                                 = new ExternalOffset<USoundBase>(0x1500, true);                // 0x1500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offClothingSound                                              = new ExternalOffset<USoundBase>(0x1508, true);                // 0x1508(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offEquipmentSound                                             = new ExternalOffset<USoundBase>(0x1510, true);                // 0x1510(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offResupplyCrateSound                                         = new ExternalOffset<USoundBase>(0x1518, true);                // 0x1518(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDeathSoundOccurrencePercentage                             = new ExternalOffset<float>(0x1520);                           // 0x1520(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbPlayDeathSound                                            = new ExternalOffset<char>(0x1524, false);                     // 0x1524(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offFoleyAC                                                    = new ExternalOffset<UAudioComponent>(0x1528, true);           // 0x1528(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offHeartbeatAC                                                = new ExternalOffset<UAudioComponent>(0x1530, true);           // 0x1530(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offHeartbeatIncapAC                                           = new ExternalOffset<UAudioComponent>(0x1538, true);           // 0x1538(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offPhysMatEffectsClass                                        = new ExternalOffset<UClass>(0x1540, true);                    // 0x1540(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbPerfToggleMultiCastLean                                   = new ExternalOffset<char>(0x1548, false);                     // 0x1548(0x0001) BIT_FIELD (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UPhysicsHandleComponent>           _offDraggingHandle                                             = new ExternalOffset<UPhysicsHandleComponent>(0x1550, true);   // 0x1550(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQDraggingData>                   _offDraggingData                                               = new ExternalOffset<FSQDraggingData>(0x1558, false);          // 0x1558(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDraggingDistanceMultiplier                                 = new ExternalOffset<float>(0x1570);                           // 0x1570(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FTimerHandle>                      _offStartDraggingTimerHandle                                   = new ExternalOffset<FTimerHandle>(0x1578, false);             // 0x1578(0x0008) (Edit, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offStartDraggingDelay                                         = new ExternalOffset<float>(0x1580);                           // 0x1580(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<FName>>                     _offDraggableBones                                             = new ExternalOffset<TArray<FName>>(0x1588, false);            // 0x1588(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<USQSoldierRagdollComponent>        _offRagdollComponent                                           = new ExternalOffset<USQSoldierRagdollComponent>(0x1598, true); // 0x1598(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQBuffManager>                    _offBuffs                                                      = new ExternalOffset<USQBuffManager>(0x15A0, true);            // 0x15A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnDeathEvent                                               = new ExternalOffset<FScriptMulticastDelegate>(0x15B0, false); // 0x15B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsDragging                                                = new ExternalOffset<char>(0x15C0, false);                     // 0x15C0(0x0001) BIT_FIELD (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbBodyDraggingActive                                        = new ExternalOffset<char>(0x15C0, false);                     // 0x15C0(0x0001) BIT_FIELD (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQSoldierStaticInfo>              _offSoldierStaticInfo                                          = new ExternalOffset<USQSoldierStaticInfo>(0x15C8, true);      // 0x15C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQPawnInventoryComponent>         _offInventoryComponent                                         = new ExternalOffset<USQPawnInventoryComponent>(0x15E0, true); // 0x15E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<USoundMix>                         _offCurrentSoundMix                                            = new ExternalOffset<USoundMix>(0x15F0, true);                 // 0x15F0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public FSQUsableData                                      UsableData                                                     => _offUsableData.GetValue();
	public USkeletalMeshComponent                             Mesh1P                                                         => _offMesh1P.GetValue();
	public USkeletalMeshComponent                             Mesh1PShadow                                                   => _offMesh1PShadow.GetValue();
	public FVector                                            ShiftMeshOffset                                                => _offShiftMeshOffset.GetValue();
	public float                                              Prone2SprintMovementRecovery                                   => _offProne2SprintMovementRecovery.GetValue();
	public float                                              Prone2SprintAlpha                                              => _offProne2SprintAlpha.GetValue();
	public USQConsoleVariablesComponent                       ConsoleVariablesComponent                                      => _offConsoleVariablesComponent.GetValue();
	public TArray<USkeletalMesh>                              SoldierMeshSkins                                               => _offSoldierMeshSkins.GetValue();
	public int                                                PatchMaterialIndex                                             => _offPatchMaterialIndex.GetValue();
	public float                                              HoldingBreathVelocityLimit                                     => _offHoldingBreathVelocityLimit.GetValue();
	public UCameraComponent                                   FirstPersonCameraComponent                                     => _offFirstPersonCameraComponent.GetValue();
	public float                                              WeaponBasedFOV                                                 => _offWeaponBasedFOV.GetValue();
	public USQSoldierMovement                                 SoldierMovement                                                => _offSoldierMovement.GetValue();
	public USphereComponent                                   SnapZone                                                       => _offSnapZone.GetValue();
	public FPostProcessSettings                               LowHealthPostProcessSettings                                   => _offLowHealthPostProcessSettings.GetValue();
	public FPostProcessSettings                               SuppressionPostProcessSettings                                 => _offSuppressionPostProcessSettings.GetValue();
	public float                                              UnderSuppressionPercentage                                     => _offUnderSuppressionPercentage.GetValue();
	public float                                              SuppressionEffectsDecayRate                                    => _offSuppressionEffectsDecayRate.GetValue();
	public float                                              BaseTurnRate                                                   => _offBaseTurnRate.GetValue();
	public float                                              BaseLookUpRate                                                 => _offBaseLookUpRate.GetValue();
	public FVector                                            GunOffset                                                      => _offGunOffset.GetValue();
	public float                                              ProneEyeHeight                                                 => _offProneEyeHeight.GetValue();
	public FName                                              AttachSocket1PName                                             => _offAttachSocket1PName.GetValue();
	public FName                                              AttachSocket3PName                                             => _offAttachSocket3PName.GetValue();
	public USQCoreStateComponent                              StateObject                                                    => _offStateObject.GetValue();
	public USQMapIconComponent                                MapIcon                                                        => _offMapIcon.GetValue();
	public float                                              SecondsUntilIgnoreDistanceForAliveTeamMates                    => _offSecondsUntilIgnoreDistanceForAliveTeamMates.GetValue();
	public float                                              SecondsOfSpawnProtection                                       => _offSecondsOfSpawnProtection.GetValue();
	public float                                              InvulnerableDelay                                              => _offInvulnerableDelay.GetValue();
	public float                                              RagdollLifeSpan                                                => _offRagdollLifeSpan.GetValue();
	public TArray<FSQBoneDamageMod>                           BoneDamageModifiers                                            => _offBoneDamageModifiers.GetValue();
	public float                                              BlockLeanTraceDistance                                         => _offBlockLeanTraceDistance.GetValue();
	public float                                              PitchAngleAdjust                                               => _offPitchAngleAdjust.GetValue();
	public float                                              BlockLeanTraceRotation                                         => _offBlockLeanTraceRotation.GetValue();
	public float                                              ProneBlockLeanTraceDistance                                    => _offProneBlockLeanTraceDistance.GetValue();
	public float                                              PronePitchAngleAdjust                                          => _offPronePitchAngleAdjust.GetValue();
	public float                                              ProneBlockLeanTraceRotation                                    => _offProneBlockLeanTraceRotation.GetValue();
	public float                                              UseInteractDistance                                            => _offUseInteractDistance.GetValue();
	public AActor                                             UseFocus                                                       => _offUseFocus.GetValue();
	public float                                              SnapZoneRadius                                                 => _offSnapZoneRadius.GetValue();
	public float                                              MinDistanceToSuppressedTarget                                  => _offMinDistanceToSuppressedTarget.GetValue();
	public float                                              FullSuppressionRadius                                          => _offFullSuppressionRadius.GetValue();
	public float                                              SuppressionRadius                                              => _offSuppressionRadius.GetValue();
	public USQVehicleSeatComponent                            CurrentSeat                                                    => _offCurrentSeat.GetValue();
	public float                                              CachedMoveRotation                                             => _offCachedMoveRotation.GetValue();
	public FVector                                            CachedMoveRotationPoint                                        => _offCachedMoveRotationPoint.GetValue();
	public FVector                                            CachedForwardVector                                            => _offCachedForwardVector.GetValue();
	public FScriptMulticastDelegate                           OnChangedSeat                                                  => _offOnChangedSeat.GetValue();
	public AActor                                             UsingObject                                                    => _offUsingObject.GetValue();
	public int                                                VehicleSeatEntryWeaponSlot                                     => _offVehicleSeatEntryWeaponSlot.GetValue();
	public int                                                VehicleSeatEntryWeaponOffset                                   => _offVehicleSeatEntryWeaponOffset.GetValue();
	public FSQTakeHitInfo                                     LastTakeHitInfo                                                => _offLastTakeHitInfo.GetValue();
	public float                                              Health                                                         => _offHealth.GetValue();
	public float                                              LastHealedTime                                                 => _offLastHealedTime.GetValue();
	public float                                              WoundedThreshold                                               => _offWoundedThreshold.GetValue();
	public float                                              HealthBleedableThreshold                                       => _offHealthBleedableThreshold.GetValue();
	public float                                              HealthHurtMovementThreshold                                    => _offHealthHurtMovementThreshold.GetValue();
	public float                                              DamageBleedableThreshold                                       => _offDamageBleedableThreshold.GetValue();
	public float                                              WoundedHealthLossRate                                          => _offWoundedHealthLossRate.GetValue();
	public float                                              WoundedBandagedHealthLossRate                                  => _offWoundedBandagedHealthLossRate.GetValue();
	public float                                              BleedingHealthLossRate                                         => _offBleedingHealthLossRate.GetValue();
	public float                                              KillDamageThreshold                                            => _offKillDamageThreshold.GetValue();
	public float                                              HealthUponRevival                                              => _offHealthUponRevival.GetValue();
	public float                                              TimeBecameWounded                                              => _offTimeBecameWounded.GetValue();
	public float                                              TimeBecameRevived                                              => _offTimeBecameRevived.GetValue();
	public float                                              MinTimeSinceReviveToPreventImmediateDeath                      => _offMinTimeSinceReviveToPreventImmediateDeath.GetValue();
	public float                                              WoundedEffectTime                                              => _offWoundedEffectTime.GetValue();
	public float                                              CumulativeRevivePenalty                                        => _offCumulativeRevivePenalty.GetValue();
	public float                                              BreathHoldStamina                                              => _offBreathHoldStamina.GetValue();
	public float                                              BreathHoldStaminaMax                                           => _offBreathHoldStaminaMax.GetValue();
	public float                                              BreathHoldRecoveryDuration                                     => _offBreathHoldRecoveryDuration.GetValue();
	public float                                              BreathHoldConsumptionDuration                                  => _offBreathHoldConsumptionDuration.GetValue();
	public float                                              BreathHoldFadeDuration                                         => _offBreathHoldFadeDuration.GetValue();
	public float                                              BreathHoldPct                                                  => _offBreathHoldPct.GetValue();
	public float                                              FocusZoomAlpha                                                 => _offFocusZoomAlpha.GetValue();
	public float                                              FallingDamageMultiplier                                        => _offFallingDamageMultiplier.GetValue();
	public float                                              MaximumSafeFallingSpeed                                        => _offMaximumSafeFallingSpeed.GetValue();
	public USoundMix                                          WoundedSoundMix                                                => _offWoundedSoundMix.GetValue();
	public USoundMix                                          BleedingSoundMix                                               => _offBleedingSoundMix.GetValue();
	public ESQListenerType                                    ListenerType                                                   => _offListenerType.GetValue();
	public UCurveLinearColor                                  HealthBasedFilterGainCurve                                     => _offHealthBasedFilterGainCurve.GetValue();
	public UCurveFloat                                        HeartbeatVolumeCurve                                           => _offHeartbeatVolumeCurve.GetValue();
	public USoundBase                                         HeartbeatSound                                                 => _offHeartbeatSound.GetValue();
	public USoundBase                                         HeartbeatIncapSound                                            => _offHeartbeatIncapSound.GetValue();
	public USoundBase                                         DefaultLandedSound                                             => _offDefaultLandedSound.GetValue();
	public USoundBase                                         HitSound                                                       => _offHitSound.GetValue();
	public USoundBase                                         FirstPersonHitSound                                            => _offFirstPersonHitSound.GetValue();
	public USoundBase                                         IncapSound                                                     => _offIncapSound.GetValue();
	public TArray<FSQBoneHitSound>                            BoneHitSounds                                                  => _offBoneHitSounds.GetValue();
	public float                                              IncapSoundOccurrencePercentage                                 => _offIncapSoundOccurrencePercentage.GetValue();
	public float                                              WoundedSoundMixDelaySeconds                                    => _offWoundedSoundMixDelaySeconds.GetValue();
	public USoundBase                                         DeathSound                                                     => _offDeathSound.GetValue();
	public USoundBase                                         ClothingSound                                                  => _offClothingSound.GetValue();
	public USoundBase                                         EquipmentSound                                                 => _offEquipmentSound.GetValue();
	public USoundBase                                         ResupplyCrateSound                                             => _offResupplyCrateSound.GetValue();
	public float                                              DeathSoundOccurrencePercentage                                 => _offDeathSoundOccurrencePercentage.GetValue();
	public UAudioComponent                                    FoleyAC                                                        => _offFoleyAC.GetValue();
	public UAudioComponent                                    HeartbeatAC                                                    => _offHeartbeatAC.GetValue();
	public UAudioComponent                                    HeartbeatIncapAC                                               => _offHeartbeatIncapAC.GetValue();
	public UClass                                             PhysMatEffectsClass                                            => _offPhysMatEffectsClass.GetValue();
	public UPhysicsHandleComponent                            DraggingHandle                                                 => _offDraggingHandle.GetValue();
	public FSQDraggingData                                    DraggingData                                                   => _offDraggingData.GetValue();
	public float                                              DraggingDistanceMultiplier                                     => _offDraggingDistanceMultiplier.GetValue();
	public FTimerHandle                                       StartDraggingTimerHandle                                       => _offStartDraggingTimerHandle.GetValue();
	public float                                              StartDraggingDelay                                             => _offStartDraggingDelay.GetValue();
	public TArray<FName>                                      DraggableBones                                                 => _offDraggableBones.GetValue();
	public USQSoldierRagdollComponent                         RagdollComponent                                               => _offRagdollComponent.GetValue();
	public USQBuffManager                                     Buffs                                                          => _offBuffs.GetValue();
	public FScriptMulticastDelegate                           OnDeathEvent                                                   => _offOnDeathEvent.GetValue();
	public USQSoldierStaticInfo                               SoldierStaticInfo                                              => _offSoldierStaticInfo.GetValue();
	public USQPawnInventoryComponent                          InventoryComponent                                             => _offInventoryComponent.GetValue();
	public USoundMix                                          CurrentSoundMix                                                => _offCurrentSoundMix.GetValue();
	#endregion


}

// Class Squad.SQBot
// 0x0008 (0x1600 - 0x15F8)
public class ASQBot : ASQSoldier
{
	#region Offsets
	private ExternalOffset<UBehaviorTree>                     _offBotBehavior                                                = new ExternalOffset<UBehaviorTree>(0x15F8, true);             // 0x15F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UBehaviorTree                                      BotBehavior                                                    => _offBotBehavior.GetValue();
	#endregion


}

// Class Squad.SQBotComponent
// 0x0038 (0x0100 - 0x00C8)
public class USQBotComponent : UActorComponent
{
	#region Offsets
	private ExternalOffset<ASQSoldierNew>                     _offTargetEnemy                                                = new ExternalOffset<ASQSoldierNew>(0x00D8, true);             // 0x00D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<ASQSoldierNew>                     _offOwnerSoldier                                               = new ExternalOffset<ASQSoldierNew>(0x00E0, true);             // 0x00E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<float>                             _offTargetingRange                                             = new ExternalOffset<float>(0x00EC);                           // 0x00EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCheckAtFloorDistance                                       = new ExternalOffset<float>(0x00F0);                           // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRandomHeadingYawRange                                      = new ExternalOffset<float>(0x00F4);                           // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRandomHeadingPitchRange                                    = new ExternalOffset<float>(0x00F8);                           // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTargetingMaxPitchDelta                                     = new ExternalOffset<float>(0x00FC);                           // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ASQSoldierNew                                      TargetEnemy                                                    => _offTargetEnemy.GetValue();
	public ASQSoldierNew                                      OwnerSoldier                                                   => _offOwnerSoldier.GetValue();
	public float                                              TargetingRange                                                 => _offTargetingRange.GetValue();
	public float                                              CheckAtFloorDistance                                           => _offCheckAtFloorDistance.GetValue();
	public float                                              RandomHeadingYawRange                                          => _offRandomHeadingYawRange.GetValue();
	public float                                              RandomHeadingPitchRange                                        => _offRandomHeadingPitchRange.GetValue();
	public float                                              TargetingMaxPitchDelta                                         => _offTargetingMaxPitchDelta.GetValue();
	#endregion


}

// Class Squad.SQBoundaryListener
// 0x0060 (0x0128 - 0x00C8)
public class USQBoundaryListener : UActorComponent
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbRegisterToAllBoundaries                                   = new ExternalOffset<byte/*(bool)*/>(0x00D8);                  // 0x00D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<UClass>>                    _offTargetBoundaryClasses                                      = new ExternalOffset<TArray<UClass>>(0x00E0, false);           // 0x00E0(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnEnterBoundarySignal                                      = new ExternalOffset<FScriptMulticastDelegate>(0x00F0, false); // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnExitBoundarySignal                                       = new ExternalOffset<FScriptMulticastDelegate>(0x0100, false); // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<AActor>                            _offOverrideTargetActor                                        = new ExternalOffset<AActor>(0x0110, true);                    // 0x0110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQBoundary>>               _offBoundaries                                                 = new ExternalOffset<TArray<ASQBoundary>>(0x0118, false);      // 0x0118(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bRegisterToAllBoundaries                                       => _offbRegisterToAllBoundaries.GetValue();
	public TArray<UClass>                                     TargetBoundaryClasses                                          => _offTargetBoundaryClasses.GetValue();
	public FScriptMulticastDelegate                           OnEnterBoundarySignal                                          => _offOnEnterBoundarySignal.GetValue();
	public FScriptMulticastDelegate                           OnExitBoundarySignal                                           => _offOnExitBoundarySignal.GetValue();
	public AActor                                             OverrideTargetActor                                            => _offOverrideTargetActor.GetValue();
	public TArray<ASQBoundary>                                Boundaries                                                     => _offBoundaries.GetValue();
	#endregion


}

// Class Squad.SQBoundary
// 0x00C8 (0x0300 - 0x0238)
public class ASQBoundary : AActor
{
	#region Offsets
	private ExternalOffset<USplineComponent>                  _offXYBoundary                                                 = new ExternalOffset<USplineComponent>(0x0248, true);          // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbXYBoundaryTangetsInwards                                  = new ExternalOffset<byte/*(bool)*/>(0x0250);                  // 0x0250(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offBoundaryMaskSizeX                                          = new ExternalOffset<int>(0x0254);                             // 0x0254(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offBoundaryMaskSizeY                                          = new ExternalOffset<int>(0x0258);                             // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offBoundaryMask                                               = new ExternalOffset<UTexture2D>(0x0260, true);                // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCeilingHeight                                              = new ExternalOffset<float>(0x0268);                           // 0x0268(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFloorHeight                                                = new ExternalOffset<float>(0x026C);                           // 0x026C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCheckDelaySeconds                                          = new ExternalOffset<float>(0x0270);                           // 0x0270(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDefaultToInside                                           = new ExternalOffset<byte/*(bool)*/>(0x0274);                  // 0x0274(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbComplexCheck                                              = new ExternalOffset<byte/*(bool)*/>(0x0275);                  // 0x0275(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private TMap<class USQBoundaryListener*, struct FSQBoundaryListenerData> _offListenerDatas                                              = new ExternalOffset<TMap<FSQBoundaryListenerData>>(0x0278, false); // 0x0278(0x0050) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<char>>                      _offBoundaryMaskData                                           = new ExternalOffset<TArray<char>>(0x02F0, false);             // 0x02F0(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public USplineComponent                                   XYBoundary                                                     => _offXYBoundary.GetValue();
	public byte/*(bool)*/                                     bXYBoundaryTangetsInwards                                      => _offbXYBoundaryTangetsInwards.GetValue();
	public int                                                BoundaryMaskSizeX                                              => _offBoundaryMaskSizeX.GetValue();
	public int                                                BoundaryMaskSizeY                                              => _offBoundaryMaskSizeY.GetValue();
	public UTexture2D                                         BoundaryMask                                                   => _offBoundaryMask.GetValue();
	public float                                              CeilingHeight                                                  => _offCeilingHeight.GetValue();
	public float                                              FloorHeight                                                    => _offFloorHeight.GetValue();
	public float                                              CheckDelaySeconds                                              => _offCheckDelaySeconds.GetValue();
	public byte/*(bool)*/                                     bDefaultToInside                                               => _offbDefaultToInside.GetValue();
	public byte/*(bool)*/                                     bComplexCheck                                                  => _offbComplexCheck.GetValue();
	public TArray<char>                                       BoundaryMaskData                                               => _offBoundaryMaskData.GetValue();
	#endregion


}

// Class Squad.SQBTDecorator_HasLoSTo
// 0x002B (0x0090 - 0x0065)
public class USQBTDecorator_HasLoSTo : UBTDecorator
{
	#region Offsets
	private ExternalOffset<FBlackboardKeySelector>            _offEnemyKey                                                   = new ExternalOffset<FBlackboardKeySelector>(0x0068, false);   // 0x0068(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public FBlackboardKeySelector                             EnemyKey                                                       => _offEnemyKey.GetValue();
	#endregion


}

// Class Squad.SQBTTask_FindPointNearEnemy
// 0x0000 (0x0098 - 0x0098)
public class USQBTTask_FindPointNearEnemy : UBTTask_BlackboardBase
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQBuffManager
// 0x0030 (0x00F8 - 0x00C8)
public class USQBuffManager : UActorComponent
{
	#region Offsets
//	private ExternalOffset<FSQBuffDesc>                       _offBuffs[0x4]                                                 = new ExternalOffset<FSQBuffDesc>(0x00D8, false);              // 0x00D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQDamageType
// 0x0004 (0x0040 - 0x003C)
public class USQDamageType : UDamageType
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQBurningDamage
// 0x0000 (0x0040 - 0x0040)
public class USQBurningDamage : USQDamageType
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQCameraMan
// 0x0050 (0x06A8 - 0x0658)
public class ASQCameraMan : ACharacter
{
	#region Offsets
	private ExternalOffset<ESQListenerType>                   _offListenerType                                               = new ExternalOffset<ESQListenerType>(0x0660, false);          // 0x0660(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBaseTurnRate                                               = new ExternalOffset<float>(0x0664);                           // 0x0664(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBaseLookUpRate                                             = new ExternalOffset<float>(0x0668);                           // 0x0668(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USpringArmComponent>               _offSpringArm                                                  = new ExternalOffset<USpringArmComponent>(0x0670, true);       // 0x0670(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCameraComponent>                  _offFirstPersonCameraComponent                                 = new ExternalOffset<UCameraComponent>(0x0678, true);          // 0x0678(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture>                          _offCameraManHUDIconTexture                                    = new ExternalOffset<UTexture>(0x0680, true);                  // 0x0680(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsTryingToGainAltitude                                    = new ExternalOffset<byte/*(bool)*/>(0x0688);                  // 0x0688(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsTryingToLoseAltitude                                    = new ExternalOffset<byte/*(bool)*/>(0x0689);                  // 0x0689(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQCoreStateComponent>             _offStateObject                                                = new ExternalOffset<USQCoreStateComponent>(0x06A0, true);     // 0x06A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ESQListenerType                                    ListenerType                                                   => _offListenerType.GetValue();
	public float                                              BaseTurnRate                                                   => _offBaseTurnRate.GetValue();
	public float                                              BaseLookUpRate                                                 => _offBaseLookUpRate.GetValue();
	public USpringArmComponent                                SpringArm                                                      => _offSpringArm.GetValue();
	public UCameraComponent                                   FirstPersonCameraComponent                                     => _offFirstPersonCameraComponent.GetValue();
	public UTexture                                           CameraManHUDIconTexture                                        => _offCameraManHUDIconTexture.GetValue();
	public byte/*(bool)*/                                     bIsTryingToGainAltitude                                        => _offbIsTryingToGainAltitude.GetValue();
	public byte/*(bool)*/                                     bIsTryingToLoseAltitude                                        => _offbIsTryingToLoseAltitude.GetValue();
	public USQCoreStateComponent                              StateObject                                                    => _offStateObject.GetValue();
	#endregion


}

// Class Squad.SQGraphNodeComponent
// 0x0028 (0x00F0 - 0x00C8)
public class USQGraphNodeComponent : UActorComponent
{
	#region Offsets
	private ExternalOffset<UClass>                            _offRouteSelectorPredicate                                     = new ExternalOffset<UClass>(0x00D8, true);                    // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offRouteSelectorVisualizerPredicate                           = new ExternalOffset<UClass>(0x00E0, true);                    // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offRouteCombinerPredicate                                     = new ExternalOffset<UClass>(0x00E8, true);                    // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UClass                                             RouteSelectorPredicate                                         => _offRouteSelectorPredicate.GetValue();
	public UClass                                             RouteSelectorVisualizerPredicate                               => _offRouteSelectorVisualizerPredicate.GetValue();
	public UClass                                             RouteCombinerPredicate                                         => _offRouteCombinerPredicate.GetValue();
	#endregion


}

// Class Squad.SQCaptureZoneComponent
// 0x00D4 (0x01C4 - 0x00F0)
public class USQCaptureZoneComponent : USQGraphNodeComponent
{
	#region Offsets
//	private ExternalOffset<char>                              _offInitialTeam                                                = new ExternalOffset<char>(0x0150, false);                     // 0x0150(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offFlagName                                                   = new ExternalOffset<FText>(0x0158, false);                    // 0x0158(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offCapturingTeam                                              = new ExternalOffset<char>(0x0170, false);                     // 0x0170(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offOwningTeam                                                 = new ExternalOffset<char>(0x0171, false);                     // 0x0171(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offLastOwningTeam                                             = new ExternalOffset<char>(0x0172, false);                     // 0x0172(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTimeToCap                                                  = new ExternalOffset<float>(0x0174);                           // 0x0174(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offUncappable                                                 = new ExternalOffset<byte/*(bool)*/>(0x0178);                  // 0x0178(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offPlayerAdvantageToCapture                                   = new ExternalOffset<int>(0x017C);                             // 0x017C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offPlayersNeededWhenUncaptured                                = new ExternalOffset<int>(0x0180);                             // 0x0180(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCapturePercent                                             = new ExternalOffset<float>(0x0184);                           // 0x0184(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offCapturePercentDirection                                    = new ExternalOffset<int>(0x0188);                             // 0x0188(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsLocked                                                  = new ExternalOffset<byte/*(bool)*/>(0x018C);                  // 0x018C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offCaptureStateChangeEvent                                    = new ExternalOffset<FScriptMulticastDelegate>(0x0190, false); // 0x0190(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<USQCoreStateComponent>             _offStateObject                                                = new ExternalOffset<USQCoreStateComponent>(0x01A0, true);     // 0x01A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<uint>                              _offTeamCapturabilities                                        = new ExternalOffset<uint>(0x01C0);                            // 0x01C0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public FText                                              FlagName                                                       => _offFlagName.GetValue();
	public float                                              TimeToCap                                                      => _offTimeToCap.GetValue();
	public byte/*(bool)*/                                     Uncappable                                                     => _offUncappable.GetValue();
	public int                                                PlayerAdvantageToCapture                                       => _offPlayerAdvantageToCapture.GetValue();
	public int                                                PlayersNeededWhenUncaptured                                    => _offPlayersNeededWhenUncaptured.GetValue();
	public float                                              CapturePercent                                                 => _offCapturePercent.GetValue();
	public int                                                CapturePercentDirection                                        => _offCapturePercentDirection.GetValue();
	public byte/*(bool)*/                                     bIsLocked                                                      => _offbIsLocked.GetValue();
	public FScriptMulticastDelegate                           CaptureStateChangeEvent                                        => _offCaptureStateChangeEvent.GetValue();
	public USQCoreStateComponent                              StateObject                                                    => _offStateObject.GetValue();
	public uint                                               TeamCapturabilities                                            => _offTeamCapturabilities.GetValue();
	#endregion


}

// Class Squad.SQCaptureZoneInvasionComponent
// 0x0010 (0x01D4 - 0x01C4)
public class USQCaptureZoneInvasionComponent : USQCaptureZoneComponent
{
	#region Offsets
	private ExternalOffset<int>                               _offTeamToLockFor                                              = new ExternalOffset<int>(0x01D0);                             // 0x01D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public int                                                TeamToLockFor                                                  => _offTeamToLockFor.GetValue();
	#endregion


}

// Class Squad.SQCaptureZoneResourceComponent
// 0x0010 (0x00D8 - 0x00C8)
public class USQCaptureZoneResourceComponent : UActorComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQCaptureZoneTCComponent
// 0x000C (0x01D0 - 0x01C4)
public class USQCaptureZoneTCComponent : USQCaptureZoneComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQChatWidgetStyle
// 0x0908 (0x0930 - 0x0028)
public class USQChatWidgetStyle : USlateWidgetStyleContainerBase
{
	#region Offsets
	private ExternalOffset<FSQChatStyle>                      _offChatStyle                                                  = new ExternalOffset<FSQChatStyle>(0x0030, false);             // 0x0030(0x0900) (Edit, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FSQChatStyle                                       ChatStyle                                                      => _offChatStyle.GetValue();
	#endregion


}

// Class Squad.SQCheatManager
// 0x0040 (0x0078 - 0x0038)
public class USQCheatManager : UCheatManager
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQChunkSettings
// 0x0020 (0x0048 - 0x0028)
public class USQChunkSettings : UDeveloperSettings
{
	#region Offsets
	private ExternalOffset<TArray<FSQChunkDependency>>        _offDependencies                                               = new ExternalOffset<TArray<FSQChunkDependency>>(0x0048, false); // 0x0048(0x0010) (Edit, ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public TArray<FSQChunkDependency>                         Dependencies                                                   => _offDependencies.GetValue();
	#endregion


}

// Class Squad.SQClientsideWeaponSettings
// 0x0038 (0x0060 - 0x0028)
public class USQClientsideWeaponSettings : UDeveloperSettings
{
	#region Offsets
	private ExternalOffset<float>                             _offMaxVerificationAngle                                       = new ExternalOffset<float>(0x0038);                           // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offShotTimeout                                                = new ExternalOffset<float>(0x003C);                           // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSlowProjectileTimeout                                      = new ExternalOffset<float>(0x0040);                           // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbNotifyPlayerOnShotFail                                    = new ExternalOffset<byte/*(bool)*/>(0x0044);                  // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbNotifyAdminOnShotFail                                     = new ExternalOffset<byte/*(bool)*/>(0x0045);                  // 0x0045(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbNotifyPlayerOnHitFail                                     = new ExternalOffset<byte/*(bool)*/>(0x0046);                  // 0x0046(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbNotifyAdminOnHitFail                                      = new ExternalOffset<byte/*(bool)*/>(0x0047);                  // 0x0047(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ESQHitDetectionFailReason>> _offNotifyOnlyOnTheseFailureReasons                            = new ExternalOffset<TArray<ESQHitDetectionFailReason>>(0x0048, false); // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offConsecutiveFailedShotKickAmount                            = new ExternalOffset<int>(0x0058);                             // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offConsecutiveFailedHitKickAmount                             = new ExternalOffset<int>(0x005C);                             // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              MaxVerificationAngle                                           => _offMaxVerificationAngle.GetValue();
	public float                                              ShotTimeout                                                    => _offShotTimeout.GetValue();
	public float                                              SlowProjectileTimeout                                          => _offSlowProjectileTimeout.GetValue();
	public byte/*(bool)*/                                     bNotifyPlayerOnShotFail                                        => _offbNotifyPlayerOnShotFail.GetValue();
	public byte/*(bool)*/                                     bNotifyAdminOnShotFail                                         => _offbNotifyAdminOnShotFail.GetValue();
	public byte/*(bool)*/                                     bNotifyPlayerOnHitFail                                         => _offbNotifyPlayerOnHitFail.GetValue();
	public byte/*(bool)*/                                     bNotifyAdminOnHitFail                                          => _offbNotifyAdminOnHitFail.GetValue();
	public TArray<ESQHitDetectionFailReason>                  NotifyOnlyOnTheseFailureReasons                                => _offNotifyOnlyOnTheseFailureReasons.GetValue();
	public int                                                ConsecutiveFailedShotKickAmount                                => _offConsecutiveFailedShotKickAmount.GetValue();
	public int                                                ConsecutiveFailedHitKickAmount                                 => _offConsecutiveFailedHitKickAmount.GetValue();
	#endregion


}

// Class Squad.SQCloudServerAnalyticsGathererSubsystem
// 0x0000 (0x0030 - 0x0030)
public class USQCloudServerAnalyticsGathererSubsystem : UGameInstanceSubsystem
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQCloudServerSubsystemInterface
// 0x0000 (0x0028 - 0x0028)
public class USQCloudServerSubsystemInterface : UInterface
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQCloudServicesSubsystemBase
// 0x0000 (0x0030 - 0x0030)
public class USQCloudServicesSubsystemBase : UGameInstanceSubsystem
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQCloudServicesSubsystemClient
// 0x0000 (0x0030 - 0x0030)
public class USQCloudServicesSubsystemClient : USQCloudServicesSubsystemBase
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQCloudServicesSubsystemServer
// 0x0000 (0x0030 - 0x0030)
public class USQCloudServicesSubsystemServer : USQCloudServicesSubsystemBase
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQCollisionDamage
// 0x0048 (0x0110 - 0x00C8)
public class USQCollisionDamage : UActorComponent
{
	#region Offsets
	private ExternalOffset<float>                             _offMinDamage                                                  = new ExternalOffset<float>(0x00D8);                           // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxDamage                                                  = new ExternalOffset<float>(0x00DC);                           // 0x00DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMinImpactForce                                             = new ExternalOffset<float>(0x00E0);                           // 0x00E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxImpactForce                                             = new ExternalOffset<float>(0x00E4);                           // 0x00E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UCurveFloat>                       _offInterpCurve                                                = new ExternalOffset<UCurveFloat>(0x00E8, true);               // 0x00E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offCollisionSound                                             = new ExternalOffset<USoundCue>(0x00F0, true);                 // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UParticleSystem>                   _offParticleEffect                                             = new ExternalOffset<UParticleSystem>(0x00F8, true);           // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UClass>                            _offCollisionCameraShake                                       = new ExternalOffset<UClass>(0x0100, true);                    // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMinShakeForce                                              = new ExternalOffset<float>(0x0108);                           // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxShakeForce                                              = new ExternalOffset<float>(0x010C);                           // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              MinDamage                                                      => _offMinDamage.GetValue();
	public float                                              MaxDamage                                                      => _offMaxDamage.GetValue();
	public float                                              MinImpactForce                                                 => _offMinImpactForce.GetValue();
	public float                                              MaxImpactForce                                                 => _offMaxImpactForce.GetValue();
	public UCurveFloat                                        InterpCurve                                                    => _offInterpCurve.GetValue();
	public USoundCue                                          CollisionSound                                                 => _offCollisionSound.GetValue();
	public UParticleSystem                                    ParticleEffect                                                 => _offParticleEffect.GetValue();
	public UClass                                             CollisionCameraShake                                           => _offCollisionCameraShake.GetValue();
	public float                                              MinShakeForce                                                  => _offMinShakeForce.GetValue();
	public float                                              MaxShakeForce                                                  => _offMaxShakeForce.GetValue();
	#endregion


}

// Class Squad.SQColorsDataAsset
// 0x0080 (0x00B0 - 0x0030)
public class USQColorsDataAsset : UDataAsset
{
	#region Offsets
//	private ExternalOffset<FLinearColor>                      _offTintColors[0x7]                                            = new ExternalOffset<FLinearColor>(0x0030, false);             // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FLinearColor>>              _offFireTeamColors                                             = new ExternalOffset<TArray<FLinearColor>>(0x00A0, false);     // 0x00A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<FLinearColor>                               FireTeamColors                                                 => _offFireTeamColors.GetValue();
	#endregion


}

// Class Squad.SQCommandActor
// 0x0024 (0x025C - 0x0238)
public class ASQCommandActor : AActor
{
	#region Offsets
	private ExternalOffset<float>                             _offdistance                                                   = new ExternalOffset<float>(0x0248);                           // 0x0248(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offAction                                                     = new ExternalOffset<UClass>(0x0250, true);                    // 0x0250(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeam                                                       = new ExternalOffset<int>(0x0258);                             // 0x0258(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              distance                                                       => _offdistance.GetValue();
	public UClass                                             Action                                                         => _offAction.GetValue();
	public int                                                Team                                                           => _offTeam.GetValue();
	#endregion


}

// Class Squad.SQCommanderInputComponent
// 0x0020 (0x00E8 - 0x00C8)
public class USQCommanderInputComponent : UActorComponent
{
	#region Offsets
	private ExternalOffset<FScriptMulticastDelegate>          _offOnCommanderRevivedEvent                                    = new ExternalOffset<FScriptMulticastDelegate>(0x00D8, false); // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FScriptMulticastDelegate                           OnCommanderRevivedEvent                                        => _offOnCommanderRevivedEvent.GetValue();
	#endregion


}

// Class Squad.SQGridData_BaseOption
// 0x0038 (0x0060 - 0x0028)
public class USQGridData_BaseOption : UObject
{
	#region Offsets
	private ExternalOffset<FString>                           _offDisplayName                                                = new ExternalOffset<FString>(0x0028, false);                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offDescription                                                = new ExternalOffset<FString>(0x0038, false);                  // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offTexture                                                    = new ExternalOffset<UTexture2D>(0x0048, true);                // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offTint                                                       = new ExternalOffset<FLinearColor>(0x0050, false);             // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FString                                            DisplayName                                                    => _offDisplayName.GetValue();
	public FString                                            Description                                                    => _offDescription.GetValue();
	public UTexture2D                                         Texture                                                        => _offTexture.GetValue();
	public FLinearColor                                       Tint                                                           => _offTint.GetValue();
	#endregion


}

// Class Squad.SQGridData_CommandOption
// 0x00D8 (0x0138 - 0x0060)
public class USQGridData_CommandOption : USQGridData_BaseOption
{
	#region Offsets
//	private ExternalOffset<char>                              _offCategoryId                                                 = new ExternalOffset<char>(0x0060, false);                     // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offCommandActor                                               = new ExternalOffset<UClass>(0x0068, true);                    // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offControlWidget                                              = new ExternalOffset<UClass>(0x0070, true);                    // 0x0070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offEnrouteDuration                                            = new ExternalOffset<float>(0x0078);                           // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offActiveDuration                                             = new ExternalOffset<float>(0x007C);                           // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCooldownDuration                                           = new ExternalOffset<float>(0x0080);                           // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offIconAngleOffset                                            = new ExternalOffset<float>(0x0084);                           // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxAngleFromBase                                           = new ExternalOffset<float>(0x0088);                           // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offCreateMapMarker                                            = new ExternalOffset<byte/*(bool)*/>(0x008C);                  // 0x008C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAllowedInVehicle                                          = new ExternalOffset<byte/*(bool)*/>(0x008D);                  // 0x008D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIgnoreActionEnabled                                       = new ExternalOffset<byte/*(bool)*/>(0x008E);                  // 0x008E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offMapMarkerClass                                             = new ExternalOffset<UClass>(0x0090, true);                    // 0x0090(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQCommanderActionSounds>          _offCommanderActionSoundsList                                  = new ExternalOffset<FSQCommanderActionSounds>(0x0098, false); // 0x0098(0x00A0) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UClass                                             CommandActor                                                   => _offCommandActor.GetValue();
	public UClass                                             ControlWidget                                                  => _offControlWidget.GetValue();
	public float                                              EnrouteDuration                                                => _offEnrouteDuration.GetValue();
	public float                                              ActiveDuration                                                 => _offActiveDuration.GetValue();
	public float                                              CooldownDuration                                               => _offCooldownDuration.GetValue();
	public float                                              IconAngleOffset                                                => _offIconAngleOffset.GetValue();
	public float                                              MaxAngleFromBase                                               => _offMaxAngleFromBase.GetValue();
	public byte/*(bool)*/                                     CreateMapMarker                                                => _offCreateMapMarker.GetValue();
	public byte/*(bool)*/                                     bAllowedInVehicle                                              => _offbAllowedInVehicle.GetValue();
	public byte/*(bool)*/                                     bIgnoreActionEnabled                                           => _offbIgnoreActionEnabled.GetValue();
	public UClass                                             MapMarkerClass                                                 => _offMapMarkerClass.GetValue();
	public FSQCommanderActionSounds                           CommanderActionSoundsList                                      => _offCommanderActionSoundsList.GetValue();
	#endregion


}

// Class Squad.SQGridData_CommandOption_Distance
// 0x0008 (0x0140 - 0x0138)
public class USQGridData_CommandOption_Distance : USQGridData_CommandOption
{
	#region Offsets
	private ExternalOffset<float>                             _offMinimumDistance                                            = new ExternalOffset<float>(0x0138);                           // 0x0138(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaximumDistance                                            = new ExternalOffset<float>(0x013C);                           // 0x013C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              MinimumDistance                                                => _offMinimumDistance.GetValue();
	public float                                              MaximumDistance                                                => _offMaximumDistance.GetValue();
	#endregion


}

// Class Squad.SQTeam
// 0x0058 (0x02A0 - 0x0248)
public class ASQTeam : AInfo
{
	#region Offsets
	private ExternalOffset<UClass>                            _offTeamStateClass                                             = new ExternalOffset<UClass>(0x0248, true);                    // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offPrivateTeamStateClass                                      = new ExternalOffset<UClass>(0x0250, true);                    // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQTeamState>                      _offTeamState                                                  = new ExternalOffset<ASQTeamState>(0x0258, true);              // 0x0258(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQTeamStatePrivate>               _offPrivateTeamState                                           = new ExternalOffset<ASQTeamStatePrivate>(0x0260, true);       // 0x0260(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQSquad>>                  _offSquads                                                     = new ExternalOffset<TArray<ASQSquad>>(0x0268, false);         // 0x0268(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQSquad>>                  _offIndexedSquads                                              = new ExternalOffset<TArray<ASQSquad>>(0x0278, false);         // 0x0278(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerController>               _offCommander                                                  = new ExternalOffset<ASQPlayerController>(0x0288, true);       // 0x0288(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSquad>                          _offCommandSquad                                               = new ExternalOffset<ASQSquad>(0x0290, true);                  // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQCommanderManager>               _offCommanderManager                                           = new ExternalOffset<USQCommanderManager>(0x0298, true);       // 0x0298(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UClass                                             TeamStateClass                                                 => _offTeamStateClass.GetValue();
	public UClass                                             PrivateTeamStateClass                                          => _offPrivateTeamStateClass.GetValue();
	public ASQTeamState                                       TeamState                                                      => _offTeamState.GetValue();
	public ASQTeamStatePrivate                                PrivateTeamState                                               => _offPrivateTeamState.GetValue();
	public TArray<ASQSquad>                                   Squads                                                         => _offSquads.GetValue();
	public TArray<ASQSquad>                                   IndexedSquads                                                  => _offIndexedSquads.GetValue();
	public ASQPlayerController                                Commander                                                      => _offCommander.GetValue();
	public ASQSquad                                           CommandSquad                                                   => _offCommandSquad.GetValue();
	public USQCommanderManager                                CommanderManager                                               => _offCommanderManager.GetValue();
	#endregion


}

// Class Squad.SQCommanderManager
// 0x0069 (0x0131 - 0x00C8)
public class USQCommanderManager : UActorComponent
{
	#region Offsets
	private ExternalOffset<ASQCommanderState>                 _offCommanderState                                             = new ExternalOffset<ASQCommanderState>(0x00D8, true);         // 0x00D8(0x0008) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UDataTable>                        _offTeamCommands                                               = new ExternalOffset<UDataTable>(0x00E0, true);                // 0x00E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FCommanderCategory>>        _offCategories                                                 = new ExternalOffset<TArray<FCommanderCategory>>(0x00E8, false); // 0x00E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMinimumSquadSizeForVoting                                  = new ExternalOffset<int>(0x00F8);                             // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMinimumSquadsRequiredForVoting                             = new ExternalOffset<int>(0x00FC);                             // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offVotingTimeSeconds                                          = new ExternalOffset<int>(0x0100);                             // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDoubleCaptureSpeed                                        = new ExternalOffset<byte/*(bool)*/>(0x0104);                  // 0x0104(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offActionCooldownExtensionOnNewCommander                      = new ExternalOffset<float>(0x0108);                           // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offVoteCooldownTimeSeconds                                    = new ExternalOffset<int>(0x010C);                             // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCommanderActive                                           = new ExternalOffset<byte/*(bool)*/>(0x0130);                  // 0x0130(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ASQCommanderState                                  CommanderState                                                 => _offCommanderState.GetValue();
	public UDataTable                                         TeamCommands                                                   => _offTeamCommands.GetValue();
	public TArray<FCommanderCategory>                         Categories                                                     => _offCategories.GetValue();
	public int                                                MinimumSquadSizeForVoting                                      => _offMinimumSquadSizeForVoting.GetValue();
	public int                                                MinimumSquadsRequiredForVoting                                 => _offMinimumSquadsRequiredForVoting.GetValue();
	public int                                                VotingTimeSeconds                                              => _offVotingTimeSeconds.GetValue();
	public byte/*(bool)*/                                     bDoubleCaptureSpeed                                            => _offbDoubleCaptureSpeed.GetValue();
	public float                                              ActionCooldownExtensionOnNewCommander                          => _offActionCooldownExtensionOnNewCommander.GetValue();
	public int                                                VoteCooldownTimeSeconds                                        => _offVoteCooldownTimeSeconds.GetValue();
	public byte/*(bool)*/                                     bCommanderActive                                               => _offbCommanderActive.GetValue();
	#endregion


}

// Class Squad.SQCommanderState
// 0x02E9 (0x0531 - 0x0248)
public class ASQCommanderState : AInfo
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbVoteInProgress                                            = new ExternalOffset<byte/*(bool)*/>(0x0248);                  // 0x0248(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offCommanderVoteTimestamp                                     = new ExternalOffset<int>(0x024C);                             // 0x024C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offCommanderVoteTimer                                         = new ExternalOffset<int>(0x0250);                             // 0x0250(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbVoteCooldownActive                                        = new ExternalOffset<byte/*(bool)*/>(0x0254);                  // 0x0254(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offVoteCooldownTimer                                          = new ExternalOffset<int>(0x0258);                             // 0x0258(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offVoteCooldownTimeSeconds                                    = new ExternalOffset<int>(0x025C);                             // 0x025C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offVoteCooldownTimestamp                                      = new ExternalOffset<int>(0x0260);                             // 0x0260(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCommanderIsActive                                         = new ExternalOffset<byte/*(bool)*/>(0x0264);                  // 0x0264(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDoubleCaptureSpeed                                        = new ExternalOffset<byte/*(bool)*/>(0x0265);                  // 0x0265(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FCommanderCategory>>        _offCommanderCategories                                        = new ExternalOffset<TArray<FCommanderCategory>>(0x0278, false); // 0x0278(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMinimumSquadSizeForVoting                                  = new ExternalOffset<int>(0x0288);                             // 0x0288(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMinimumSquadsRequiredForVoting                             = new ExternalOffset<int>(0x028C);                             // 0x028C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offVotingTimeSeconds                                          = new ExternalOffset<int>(0x0290);                             // 0x0290(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQCommanderActionDataArray>       _offCommandIntervals                                           = new ExternalOffset<FSQCommanderActionDataArray>(0x0298, false); // 0x0298(0x0118) (BlueprintVisible, Net, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<float>>                     _offLastCategoryGameTime                                       = new ExternalOffset<TArray<float>>(0x03B0, false);            // 0x03B0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<UDataTable>                        _offTeamCommands                                               = new ExternalOffset<UDataTable>(0x03C0, true);                // 0x03C0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FCommanderNomineeArray>            _offNomineeStatus                                              = new ExternalOffset<FCommanderNomineeArray>(0x03C8, false);   // 0x03C8(0x0118) (BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnCommanderChangedEvent                                    = new ExternalOffset<FScriptMulticastDelegate>(0x04E8, false); // 0x04E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnNominationAvailableEvent                                 = new ExternalOffset<FScriptMulticastDelegate>(0x04F8, false); // 0x04F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnNominationEndedEvent                                     = new ExternalOffset<FScriptMulticastDelegate>(0x0508, false); // 0x0508(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnNominationStartedEvent                                   = new ExternalOffset<FScriptMulticastDelegate>(0x0518, false); // 0x0518(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offCurrentCommander                                           = new ExternalOffset<ASQPlayerState>(0x0528, true);            // 0x0528(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbActionsEnabled                                            = new ExternalOffset<byte/*(bool)*/>(0x0530);                  // 0x0530(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bVoteInProgress                                                => _offbVoteInProgress.GetValue();
	public int                                                CommanderVoteTimestamp                                         => _offCommanderVoteTimestamp.GetValue();
	public int                                                CommanderVoteTimer                                             => _offCommanderVoteTimer.GetValue();
	public byte/*(bool)*/                                     bVoteCooldownActive                                            => _offbVoteCooldownActive.GetValue();
	public int                                                VoteCooldownTimer                                              => _offVoteCooldownTimer.GetValue();
	public int                                                VoteCooldownTimeSeconds                                        => _offVoteCooldownTimeSeconds.GetValue();
	public int                                                VoteCooldownTimestamp                                          => _offVoteCooldownTimestamp.GetValue();
	public byte/*(bool)*/                                     bCommanderIsActive                                             => _offbCommanderIsActive.GetValue();
	public byte/*(bool)*/                                     bDoubleCaptureSpeed                                            => _offbDoubleCaptureSpeed.GetValue();
	public TArray<FCommanderCategory>                         CommanderCategories                                            => _offCommanderCategories.GetValue();
	public int                                                MinimumSquadSizeForVoting                                      => _offMinimumSquadSizeForVoting.GetValue();
	public int                                                MinimumSquadsRequiredForVoting                                 => _offMinimumSquadsRequiredForVoting.GetValue();
	public int                                                VotingTimeSeconds                                              => _offVotingTimeSeconds.GetValue();
	public FSQCommanderActionDataArray                        CommandIntervals                                               => _offCommandIntervals.GetValue();
	public TArray<float>                                      LastCategoryGameTime                                           => _offLastCategoryGameTime.GetValue();
	public UDataTable                                         TeamCommands                                                   => _offTeamCommands.GetValue();
	public FCommanderNomineeArray                             NomineeStatus                                                  => _offNomineeStatus.GetValue();
	public FScriptMulticastDelegate                           OnCommanderChangedEvent                                        => _offOnCommanderChangedEvent.GetValue();
	public FScriptMulticastDelegate                           OnNominationAvailableEvent                                     => _offOnNominationAvailableEvent.GetValue();
	public FScriptMulticastDelegate                           OnNominationEndedEvent                                         => _offOnNominationEndedEvent.GetValue();
	public FScriptMulticastDelegate                           OnNominationStartedEvent                                       => _offOnNominationStartedEvent.GetValue();
	public ASQPlayerState                                     CurrentCommander                                               => _offCurrentCommander.GetValue();
	public byte/*(bool)*/                                     bActionsEnabled                                                => _offbActionsEnabled.GetValue();
	#endregion


}

// Class Squad.SQCommanderVotingPlayerItem
// 0x0020 (0x0250 - 0x0230)
public class USQCommanderVotingPlayerItem : USQUserWidget
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbIsVotedByPlayer                                           = new ExternalOffset<byte/*(bool)*/>(0x0230);                  // 0x0230(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offVoteCount                                                  = new ExternalOffset<int>(0x0234);                             // 0x0234(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offNomineeName                                                = new ExternalOffset<FString>(0x0238, false);                  // 0x0238(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offNomineePlayerState                                         = new ExternalOffset<ASQPlayerState>(0x0248, true);            // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bIsVotedByPlayer                                               => _offbIsVotedByPlayer.GetValue();
	public int                                                VoteCount                                                      => _offVoteCount.GetValue();
	public FString                                            NomineeName                                                    => _offNomineeName.GetValue();
	public ASQPlayerState                                     NomineePlayerState                                             => _offNomineePlayerState.GetValue();
	#endregion


}

// Class Squad.SQCommanderVotingWidget
// 0x0018 (0x0248 - 0x0230)
public class USQCommanderVotingWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbIsVotingAvailable                                         = new ExternalOffset<byte/*(bool)*/>(0x0230);                  // 0x0230(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsVotePending                                             = new ExternalOffset<byte/*(bool)*/>(0x0231);                  // 0x0231(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsVoteInProgress                                          = new ExternalOffset<byte/*(bool)*/>(0x0232);                  // 0x0232(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offVoteItemClass                                              = new ExternalOffset<UClass>(0x0238, true);                    // 0x0238(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UPanelWidget>                      _offVoteItemsParent                                            = new ExternalOffset<UPanelWidget>(0x0240, true);              // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bIsVotingAvailable                                             => _offbIsVotingAvailable.GetValue();
	public byte/*(bool)*/                                     bIsVotePending                                                 => _offbIsVotePending.GetValue();
	public byte/*(bool)*/                                     bIsVoteInProgress                                              => _offbIsVoteInProgress.GetValue();
	public UClass                                             VoteItemClass                                                  => _offVoteItemClass.GetValue();
	public UPanelWidget                                       VoteItemsParent                                                => _offVoteItemsParent.GetValue();
	#endregion


}

// Class Squad.SQCompass
// 0x001E (0x024E - 0x0230)
public class USQCompass : USQUserWidget
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbIsOwnerMedic                                              = new ExternalOffset<byte/*(bool)*/>(0x0230);                  // 0x0230(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRotationXFix                                               = new ExternalOffset<float>(0x0234);                           // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offXScale                                                     = new ExternalOffset<float>(0x0238);                           // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxVisibilityDistance                                      = new ExternalOffset<float>(0x023C);                           // 0x023C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offYPositionOffset                                            = new ExternalOffset<float>(0x0240);                           // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTotalScale                                                 = new ExternalOffset<float>(0x0244);                           // 0x0244(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBearingLERP                                                = new ExternalOffset<float>(0x0248);                           // 0x0248(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDoCompassLERP                                             = new ExternalOffset<byte/*(bool)*/>(0x024C);                  // 0x024C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShouldHide                                                = new ExternalOffset<byte/*(bool)*/>(0x024D);                  // 0x024D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bIsOwnerMedic                                                  => _offbIsOwnerMedic.GetValue();
	public float                                              RotationXFix                                                   => _offRotationXFix.GetValue();
	public float                                              XScale                                                         => _offXScale.GetValue();
	public float                                              MaxVisibilityDistance                                          => _offMaxVisibilityDistance.GetValue();
	public float                                              YPositionOffset                                                => _offYPositionOffset.GetValue();
	public float                                              TotalScale                                                     => _offTotalScale.GetValue();
	public float                                              BearingLERP                                                    => _offBearingLERP.GetValue();
	public byte/*(bool)*/                                     bDoCompassLERP                                                 => _offbDoCompassLERP.GetValue();
	public byte/*(bool)*/                                     bShouldHide                                                    => _offbShouldHide.GetValue();
	#endregion


}

// Class Squad.SQCompassBaseUnit
// 0x0008 (0x0238 - 0x0230)
public class USQCompassBaseUnit : USQUserWidget
{
	#region Offsets
	private ExternalOffset<UImage>                            _offBaseImage                                                  = new ExternalOffset<UImage>(0x0230, true);                    // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UImage                                             BaseImage                                                      => _offBaseImage.GetValue();
	#endregion


}

// Class Squad.SQCompassMarker
// 0x00F8 (0x0330 - 0x0238)
public class USQCompassMarker : USQCompassBaseUnit
{
	#region Offsets
	private ExternalOffset<FLinearColor>                      _offMarkerColor                                                = new ExternalOffset<FLinearColor>(0x0238, false);             // 0x0238(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offDistanceResolutionCurveInMeters                            = new ExternalOffset<UCurveFloat>(0x0248, true);               // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQMapMarker>                      _offMapMarker                                                  = new ExternalOffset<ASQMapMarker>(0x0250, true);              // 0x0250(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQMapMarkerVisualData>            _offMapMarkerVisualData                                        = new ExternalOffset<FSQMapMarkerVisualData>(0x0258, false);   // 0x0258(0x00C8) (BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offDistanceTextBlock                                          = new ExternalOffset<UTextBlock>(0x0320, true);                // 0x0320(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offMeterTextBlock                                             = new ExternalOffset<UTextBlock>(0x0328, true);                // 0x0328(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FLinearColor                                       MarkerColor                                                    => _offMarkerColor.GetValue();
	public UCurveFloat                                        DistanceResolutionCurveInMeters                                => _offDistanceResolutionCurveInMeters.GetValue();
	public ASQMapMarker                                       MapMarker                                                      => _offMapMarker.GetValue();
	public FSQMapMarkerVisualData                             MapMarkerVisualData                                            => _offMapMarkerVisualData.GetValue();
	public UTextBlock                                         DistanceTextBlock                                              => _offDistanceTextBlock.GetValue();
	public UTextBlock                                         MeterTextBlock                                                 => _offMeterTextBlock.GetValue();
	#endregion


}

// Class Squad.SQCompassMK2
// 0x009A (0x02E8 - 0x024E)
public class USQCompassMK2 : USQCompass
{
	#region Offsets
	private ExternalOffset<UCanvasPanel>                      _offMainP                                                      = new ExternalOffset<UCanvasPanel>(0x0250, true);              // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offCompassBearingText                                         = new ExternalOffset<UTextBlock>(0x0258, true);                // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offLeftArrow                                                  = new ExternalOffset<UImage>(0x0260, true);                    // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offRightArrow                                                 = new ExternalOffset<UImage>(0x0268, true);                    // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UMaterialInstanceDynamic>          _offCompassMID                                                 = new ExternalOffset<UMaterialInstanceDynamic>(0x0270, true);  // 0x0270(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offBearingMatParamName                                        = new ExternalOffset<FName>(0x0278, false);                    // 0x0278(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offInitialPlayerState                                         = new ExternalOffset<ASQPlayerState>(0x0280, true);            // 0x0280(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMarkerYPositionOffset                                      = new ExternalOffset<float>(0x0288);                           // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USQCompassPlayer>>          _offTrackedSquadMatesWidgets                                   = new ExternalOffset<TArray<USQCompassPlayer>>(0x0290, false); // 0x0290(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offDistanceCurve                                              = new ExternalOffset<UCurveFloat>(0x02A0, true);               // 0x02A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAlwaysShowSquadLeader                                     = new ExternalOffset<byte/*(bool)*/>(0x02A8);                  // 0x02A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USQCompassMarker>>          _offTrackedMarkerWidgets                                       = new ExternalOffset<TArray<USQCompassMarker>>(0x02B0, false); // 0x02B0(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ESQMapMarkerType>>          _offMarkerTypesToTrack                                         = new ExternalOffset<TArray<ESQMapMarkerType>>(0x02C0, false); // 0x02C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCompassEdgeFadePercentage                                  = new ExternalOffset<float>(0x02D0);                           // 0x02D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCompassEdgeMinFade                                         = new ExternalOffset<float>(0x02D4);                           // 0x02D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offCompassPlayerType                                          = new ExternalOffset<UClass>(0x02D8, true);                    // 0x02D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<UClass>                            _offCompassMarkerType                                          = new ExternalOffset<UClass>(0x02E0, true);                    // 0x02E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public UCanvasPanel                                       MainP                                                          => _offMainP.GetValue();
	public UTextBlock                                         CompassBearingText                                             => _offCompassBearingText.GetValue();
	public UImage                                             LeftArrow                                                      => _offLeftArrow.GetValue();
	public UImage                                             RightArrow                                                     => _offRightArrow.GetValue();
	public UMaterialInstanceDynamic                           CompassMID                                                     => _offCompassMID.GetValue();
	public FName                                              BearingMatParamName                                            => _offBearingMatParamName.GetValue();
	public ASQPlayerState                                     InitialPlayerState                                             => _offInitialPlayerState.GetValue();
	public float                                              MarkerYPositionOffset                                          => _offMarkerYPositionOffset.GetValue();
	public TArray<USQCompassPlayer>                           TrackedSquadMatesWidgets                                       => _offTrackedSquadMatesWidgets.GetValue();
	public UCurveFloat                                        DistanceCurve                                                  => _offDistanceCurve.GetValue();
	public byte/*(bool)*/                                     bAlwaysShowSquadLeader                                         => _offbAlwaysShowSquadLeader.GetValue();
	public TArray<USQCompassMarker>                           TrackedMarkerWidgets                                           => _offTrackedMarkerWidgets.GetValue();
	public TArray<ESQMapMarkerType>                           MarkerTypesToTrack                                             => _offMarkerTypesToTrack.GetValue();
	public float                                              CompassEdgeFadePercentage                                      => _offCompassEdgeFadePercentage.GetValue();
	public float                                              CompassEdgeMinFade                                             => _offCompassEdgeMinFade.GetValue();
	public UClass                                             CompassPlayerType                                              => _offCompassPlayerType.GetValue();
	public UClass                                             CompassMarkerType                                              => _offCompassMarkerType.GetValue();
	#endregion


}

// Class Squad.SQCompassPlayer
// 0x0078 (0x02B0 - 0x0238)
public class USQCompassPlayer : USQCompassBaseUnit
{
	#region Offsets
	private ExternalOffset<UImage>                            _offMedicIcon                                                  = new ExternalOffset<UImage>(0x0238, true);                    // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offColorHealthy                                               = new ExternalOffset<FLinearColor>(0x0240, false);             // 0x0240(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offColorWounded                                               = new ExternalOffset<FLinearColor>(0x0250, false);             // 0x0250(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offColorDown                                                  = new ExternalOffset<FLinearColor>(0x0260, false);             // 0x0260(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offColorInvisible                                             = new ExternalOffset<FLinearColor>(0x0270, false);             // 0x0270(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offTexturePlayer                                              = new ExternalOffset<UTexture2D>(0x0280, true);                // 0x0280(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offTextureSL                                                  = new ExternalOffset<UTexture2D>(0x0288, true);                // 0x0288(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offTextureMedic                                               = new ExternalOffset<UTexture2D>(0x0290, true);                // 0x0290(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPlayerIconScale                                            = new ExternalOffset<float>(0x0298);                           // 0x0298(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSLPlayerIconScale                                          = new ExternalOffset<float>(0x029C);                           // 0x029C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMedicPlayerIconScale                                       = new ExternalOffset<float>(0x02A0);                           // 0x02A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMedicIconScale                                             = new ExternalOffset<float>(0x02A4);                           // 0x02A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offPlayerState                                                = new ExternalOffset<ASQPlayerState>(0x02A8, true);            // 0x02A8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UImage                                             MedicIcon                                                      => _offMedicIcon.GetValue();
	public FLinearColor                                       ColorHealthy                                                   => _offColorHealthy.GetValue();
	public FLinearColor                                       ColorWounded                                                   => _offColorWounded.GetValue();
	public FLinearColor                                       ColorDown                                                      => _offColorDown.GetValue();
	public FLinearColor                                       ColorInvisible                                                 => _offColorInvisible.GetValue();
	public UTexture2D                                         TexturePlayer                                                  => _offTexturePlayer.GetValue();
	public UTexture2D                                         TextureSL                                                      => _offTextureSL.GetValue();
	public UTexture2D                                         TextureMedic                                                   => _offTextureMedic.GetValue();
	public float                                              PlayerIconScale                                                => _offPlayerIconScale.GetValue();
	public float                                              SLPlayerIconScale                                              => _offSLPlayerIconScale.GetValue();
	public float                                              MedicPlayerIconScale                                           => _offMedicPlayerIconScale.GetValue();
	public float                                              MedicIconScale                                                 => _offMedicIconScale.GetValue();
	public ASQPlayerState                                     PlayerState                                                    => _offPlayerState.GetValue();
	#endregion


}

// Class Squad.SQConfig
// 0x00E0 (0x0108 - 0x0028)
public class USQConfig : UObject
{
	#region Offsets
	private ExternalOffset<FString>                           _offAnnouncementURL                                            = new ExternalOffset<FString>(0x00F8, false);                  // 0x00F8(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FString                                            AnnouncementURL                                                => _offAnnouncementURL.GetValue();
	#endregion


}

// Class Squad.SQConnectionCheckBeaconClient
// 0x0047 (0x02D0 - 0x0289)
public class ASQConnectionCheckBeaconClient : AOnlineBeaconClient
{
	#region Offsets
	private ExternalOffset<USQServerListItemWidget>           _offServerWidget                                               = new ExternalOffset<USQServerListItemWidget>(0x02C8, true);   // 0x02C8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USQServerListItemWidget                            ServerWidget                                                   => _offServerWidget.GetValue();
	#endregion


}

// Class Squad.SQConnectionCheckBeaconHostObj
// 0x0000 (0x0270 - 0x0270)
public class ASQConnectionCheckBeaconHostObj : AOnlineBeaconHostObject
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQGameViewportClient
// 0x0260 (0x02E8 - 0x0088)
public class USQGameViewportClient : UGameViewportClient
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQConsole
// 0x00D4 (0x014C - 0x0078)
public class USQConsole : UConsole
{
	#region Offsets
	private ExternalOffset<ESQConsoleMessageType>             _offMessageType                                                = new ExternalOffset<ESQConsoleMessageType>(0x0130, false);    // 0x0130(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FString>                           _offCustomMessage                                              = new ExternalOffset<FString>(0x0138, false);                  // 0x0138(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offLastMessageTime                                            = new ExternalOffset<float>(0x0148);                           // 0x0148(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public ESQConsoleMessageType                              MessageType                                                    => _offMessageType.GetValue();
	public FString                                            CustomMessage                                                  => _offCustomMessage.GetValue();
	public float                                              LastMessageTime                                                => _offLastMessageTime.GetValue();
	#endregion


}

// Class Squad.SQConsoleVariablesComponent
// 0x0010 (0x00D8 - 0x00C8)
public class USQConsoleVariablesComponent : UActorComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQConstructionResource
// 0x0000 (0x0280 - 0x0280)
public class ASQConstructionResource : ASQVehicleResource
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQCoreStateComponent
// 0x0038 (0x0100 - 0x00C8)
public class USQCoreStateComponent : UActorComponent
{
	#region Offsets
	private ExternalOffset<UClass>                            _offDataClass                                                  = new ExternalOffset<UClass>(0x00D8, true);                    // 0x00D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQCoreStateData>                  _offDataObject                                                 = new ExternalOffset<USQCoreStateData>(0x00E8, true);          // 0x00E8(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<TArray<USQCoreStateConnection>>    _offConnections                                                = new ExternalOffset<TArray<USQCoreStateConnection>>(0x00F0, false); // 0x00F0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public UClass                                             DataClass                                                      => _offDataClass.GetValue();
	public USQCoreStateData                                   DataObject                                                     => _offDataObject.GetValue();
	public TArray<USQCoreStateConnection>                     Connections                                                    => _offConnections.GetValue();
	#endregion


}

// Class Squad.SQCoreStateConnection
// 0x0080 (0x0148 - 0x00C8)
public class USQCoreStateConnection : UActorComponent
{
	#region Offsets
	private ExternalOffset<TArray<USQCoreStateComponent>>     _offComponentList                                              = new ExternalOffset<TArray<USQCoreStateComponent>>(0x00E8, false); // 0x00E8(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
//	private TMap<class UActorChannel*, struct FSQCoreStateDataToIdMap> _offRemovedDataLists                                           = new ExternalOffset<TMap<FSQCoreStateDataToIdMap>>(0x00F8, false); // 0x00F8(0x0050) (ZeroConstructor, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public TArray<USQCoreStateComponent>                      ComponentList                                                  => _offComponentList.GetValue();
	#endregion


}

// Class Squad.SQCoreStateConnectionActor
// 0x0008 (0x0250 - 0x0248)
public class ASQCoreStateConnectionActor : AInfo
{
	#region Offsets
	private ExternalOffset<USQCoreStateConnection>            _offStateConnection                                            = new ExternalOffset<USQCoreStateConnection>(0x0248, true);    // 0x0248(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public USQCoreStateConnection                             StateConnection                                                => _offStateConnection.GetValue();
	#endregion


}

// Class Squad.SQCoreStateConnectionChildActorComponent
// 0x0024 (0x0254 - 0x0230)
public class USQCoreStateConnectionChildActorComponent : UChildActorComponent
{
	#region Offsets
	private ExternalOffset<float>                             _offNetUpdateFrequency                                         = new ExternalOffset<float>(0x024C);                           // 0x024C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinNetUpdateFrequency                                      = new ExternalOffset<float>(0x0250);                           // 0x0250(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              NetUpdateFrequency                                             => _offNetUpdateFrequency.GetValue();
	public float                                              MinNetUpdateFrequency                                          => _offMinNetUpdateFrequency.GetValue();
	#endregion


}

// Class Squad.SQCoreStateData
// 0x008B (0x00B3 - 0x0028)
public class USQCoreStateData : UObject
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbIsGlobalData                                              = new ExternalOffset<byte/*(bool)*/>(0x0028);                  // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbAllowConfigureOnServer                                    = new ExternalOffset<byte/*(bool)*/>(0x0029);                  // 0x0029(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbAllowConfigureOnClient                                    = new ExternalOffset<byte/*(bool)*/>(0x002A);                  // 0x002A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCanEverConfigureOnTick                                    = new ExternalOffset<byte/*(bool)*/>(0x002B);                  // 0x002B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offTickConfigureServerFrequency                               = new ExternalOffset<float>(0x002C);                           // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offTickConfigureClientFrequency                               = new ExternalOffset<float>(0x0030);                           // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FCoreStateDataTickFunction>        _offTickFunction                                               = new ExternalOffset<FCoreStateDataTickFunction>(0x0038, false); // 0x0038(0x0058) (Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<USQCoreStateListener>>      _offListenerList                                               = new ExternalOffset<TArray<USQCoreStateListener>>(0x0098, false); // 0x0098(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	private ExternalOffset<FSQCoreStateId>                    _offRepComponentId                                             = new ExternalOffset<FSQCoreStateId>(0x00B0, false);           // 0x00B0(0x0002) (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
//	private ExternalOffset<char>                              _offbIsVisible                                                 = new ExternalOffset<char>(0x00B2, false);                     // 0x00B2(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bIsGlobalData                                                  => _offbIsGlobalData.GetValue();
	public byte/*(bool)*/                                     bAllowConfigureOnServer                                        => _offbAllowConfigureOnServer.GetValue();
	public byte/*(bool)*/                                     bAllowConfigureOnClient                                        => _offbAllowConfigureOnClient.GetValue();
	public byte/*(bool)*/                                     bCanEverConfigureOnTick                                        => _offbCanEverConfigureOnTick.GetValue();
	public float                                              TickConfigureServerFrequency                                   => _offTickConfigureServerFrequency.GetValue();
	public float                                              TickConfigureClientFrequency                                   => _offTickConfigureClientFrequency.GetValue();
	public FCoreStateDataTickFunction                         TickFunction                                                   => _offTickFunction.GetValue();
	public TArray<USQCoreStateListener>                       ListenerList                                                   => _offListenerList.GetValue();
	public FSQCoreStateId                                     RepComponentId                                                 => _offRepComponentId.GetValue();
	#endregion


}

// Class Squad.SQCoreStateListener
// 0x0078 (0x0140 - 0x00C8)
public class USQCoreStateListener : UActorComponent
{
	#region Offsets
//	private TMap<struct FSQCoreStateId, struct FSQCoreStateDataList> _offDataMap                                                    = new ExternalOffset<TMap<FSQCoreStateDataList>>(0x00F0, false); // 0x00F0(0x0050) (ZeroConstructor, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQCoreStateWidgetFactory
// 0x0200 (0x0340 - 0x0140)
public class USQCoreStateWidgetFactory : USQCoreStateListener
{
	#region Offsets
//	private TMap<struct FSQCoreStateId, class USQCoreStateWidget*> _offWidgets                                                    = new ExternalOffset<TMap<USQCoreStateWidget>>(0x0148, false); // 0x0148(0x0050) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
//	private TMap<class UClass*, struct FWidgetGroup>          _offUnusedWidgets                                              = new ExternalOffset<TMap<FWidgetGroup>>(0x0198, false);       // 0x0198(0x0050) (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
//	private TMap<class USQCoreStateData*, int>                _offSubDataPendingSuperKey                                     = new ExternalOffset<TMap<int>>(0x02D8, false);                // 0x02D8(0x0050) (ZeroConstructor, NativeAccessSpecifierPrivate)
	private ExternalOffset<USQCoreStateSelectionHUB>          _offSelectionHUB                                               = new ExternalOffset<USQCoreStateSelectionHUB>(0x0338, true);  // 0x0338(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public USQCoreStateSelectionHUB                           SelectionHUB                                                   => _offSelectionHUB.GetValue();
	#endregion


}

// Class Squad.SQCoreStateMapComponent
// 0x0014 (0x0354 - 0x0340)
public class USQCoreStateMapComponent : USQCoreStateWidgetFactory
{
	#region Offsets
	private ExternalOffset<UPanelWidget>                      _offRootWidget                                                 = new ExternalOffset<UPanelWidget>(0x0340, true);              // 0x0340(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQMapWidgetBase>                  _offMapWidgetBase                                              = new ExternalOffset<USQMapWidgetBase>(0x0348, true);          // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWidgetScale                                                = new ExternalOffset<float>(0x0350);                           // 0x0350(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UPanelWidget                                       RootWidget                                                     => _offRootWidget.GetValue();
	public USQMapWidgetBase                                   MapWidgetBase                                                  => _offMapWidgetBase.GetValue();
	public float                                              WidgetScale                                                    => _offWidgetScale.GetValue();
	#endregion


}

// Class Squad.SQCoreStateMapDataInterface
// 0x0000 (0x0028 - 0x0028)
public class USQCoreStateMapDataInterface : UInterface
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQCoreStateWidget
// 0x0070 (0x0250 - 0x01E0)
public class USQCoreStateWidget : UUserWidget
{
	#region Offsets
	private ExternalOffset<ESlateVisibility>                  _offUnconfiguredVisibility                                     = new ExternalOffset<ESlateVisibility>(0x0230, false);         // 0x0230(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQCoreStateWidgetFactory>         _offSourceComponent                                            = new ExternalOffset<USQCoreStateWidgetFactory>(0x0238, true); // 0x0238(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQSelectionState>                 _offSelectionState                                             = new ExternalOffset<ESQSelectionState>(0x0240, false);        // 0x0240(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UObject>                           _offSelectionInstigator                                        = new ExternalOffset<UObject>(0x0248, true);                   // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public ESlateVisibility                                   UnconfiguredVisibility                                         => _offUnconfiguredVisibility.GetValue();
	public USQCoreStateWidgetFactory                          SourceComponent                                                => _offSourceComponent.GetValue();
	public ESQSelectionState                                  SelectionState                                                 => _offSelectionState.GetValue();
	public UObject                                            SelectionInstigator                                            => _offSelectionInstigator.GetValue();
	#endregion


}

// Class Squad.SQCoreStateMapWidget
// 0x0020 (0x0270 - 0x0250)
public class USQCoreStateMapWidget : USQCoreStateWidget
{
	#region Offsets
	private ExternalOffset<float>                             _offZOrder                                                     = new ExternalOffset<float>(0x0258);                           // 0x0258(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbAutoSize                                                  = new ExternalOffset<byte/*(bool)*/>(0x025C);                  // 0x025C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offAlignment                                                  = new ExternalOffset<FVector2D>(0x0260, false);                // 0x0260(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQCoreStateMapComponent>          _offMapComponent                                               = new ExternalOffset<USQCoreStateMapComponent>(0x0268, true);  // 0x0268(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              ZOrder                                                         => _offZOrder.GetValue();
	public byte/*(bool)*/                                     bAutoSize                                                      => _offbAutoSize.GetValue();
	public FVector2D                                          Alignment                                                      => _offAlignment.GetValue();
	public USQCoreStateMapComponent                           MapComponent                                                   => _offMapComponent.GetValue();
	#endregion


}

// Class Squad.SQCoreStateSquadListComponent
// 0x0080 (0x03C0 - 0x0340)
public class USQCoreStateSquadListComponent : USQCoreStateWidgetFactory
{
	#region Offsets
	private ExternalOffset<UClass>                            _offSquadWidgetClass                                           = new ExternalOffset<UClass>(0x0340, true);                    // 0x0340(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UClass>                            _offPlayerWidgetClass                                          = new ExternalOffset<UClass>(0x0348, true);                    // 0x0348(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UPanelWidget>                      _offSquadRoot                                                  = new ExternalOffset<UPanelWidget>(0x0350, true);              // 0x0350(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UPanelWidget>                      _offUnassignedRoot                                             = new ExternalOffset<UPanelWidget>(0x0358, true);              // 0x0358(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UPanelWidget>                      _offCommanderRoot                                              = new ExternalOffset<UPanelWidget>(0x0360, true);              // 0x0360(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<EListLayout>                       _offListLayout                                                 = new ExternalOffset<EListLayout>(0x0368, false);              // 0x0368(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<EListLayout>                       _offUnassignedLayout                                           = new ExternalOffset<EListLayout>(0x0369, false);              // 0x0369(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private TMap<int, class USQCoreStateSquadItemWidget*>     _offActiveSquadWidgets                                         = new ExternalOffset<TMap<USQCoreStateSquadItemWidget>>(0x0370, false); // 0x0370(0x0050) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public UClass                                             SquadWidgetClass                                               => _offSquadWidgetClass.GetValue();
	public UClass                                             PlayerWidgetClass                                              => _offPlayerWidgetClass.GetValue();
	public UPanelWidget                                       SquadRoot                                                      => _offSquadRoot.GetValue();
	public UPanelWidget                                       UnassignedRoot                                                 => _offUnassignedRoot.GetValue();
	public UPanelWidget                                       CommanderRoot                                                  => _offCommanderRoot.GetValue();
	public EListLayout                                        ListLayout                                                     => _offListLayout.GetValue();
	public EListLayout                                        UnassignedLayout                                               => _offUnassignedLayout.GetValue();
	#endregion


}

// Class Squad.SQCoreStateRolesSquadListComponent
// 0x0190 (0x0550 - 0x03C0)
public class USQCoreStateRolesSquadListComponent : USQCoreStateSquadListComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQCoreStateSelectionHUB
// 0x0010 (0x00D8 - 0x00C8)
public class USQCoreStateSelectionHUB : UActorComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQCoreStateSpawnPointsListComponent
// 0x0020 (0x0360 - 0x0340)
public class USQCoreStateSpawnPointsListComponent : USQCoreStateWidgetFactory
{
	#region Offsets
	private ExternalOffset<UClass>                            _offWidgetClass                                                = new ExternalOffset<UClass>(0x0340, true);                    // 0x0340(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UGridPanel>                        _offBaseRoot                                                   = new ExternalOffset<UGridPanel>(0x0348, true);                // 0x0348(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<UGridPanel>                        _offHABRoot                                                    = new ExternalOffset<UGridPanel>(0x0350, true);                // 0x0350(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<UGridPanel>                        _offRallyRoot                                                  = new ExternalOffset<UGridPanel>(0x0358, true);                // 0x0358(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public UClass                                             WidgetClass                                                    => _offWidgetClass.GetValue();
	public UGridPanel                                         BaseRoot                                                       => _offBaseRoot.GetValue();
	public UGridPanel                                         HABRoot                                                        => _offHABRoot.GetValue();
	public UGridPanel                                         RallyRoot                                                      => _offRallyRoot.GetValue();
	#endregion


}

// Class Squad.SQCoreStateSpawnPointsListWidget
// 0x0048 (0x0298 - 0x0250)
public class USQCoreStateSpawnPointsListWidget : USQCoreStateWidget
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbSpawnOnSelection                                          = new ExternalOffset<byte/*(bool)*/>(0x0258);                  // 0x0258(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbIsSelected                                                = new ExternalOffset<char>(0x025C, false);                     // 0x025C(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offSpawnPointLocation                                         = new ExternalOffset<FVector>(0x0260, false);                  // 0x0260(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQSpawnPointType>                 _offSpawnPointType                                             = new ExternalOffset<ESQSpawnPointType>(0x026C, false);        // 0x026C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture2D>                        _offBaseTexture                                                = new ExternalOffset<UTexture2D>(0x0270, true);                // 0x0270(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture2D>                        _offHABTexture                                                 = new ExternalOffset<UTexture2D>(0x0278, true);                // 0x0278(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture2D>                        _offRallyTexture                                               = new ExternalOffset<UTexture2D>(0x0280, true);                // 0x0280(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture2D>                        _offCacheTexture                                               = new ExternalOffset<UTexture2D>(0x0288, true);                // 0x0288(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQGameSpawn>                      _offOwningGameSpawn                                            = new ExternalOffset<ASQGameSpawn>(0x0290, true);              // 0x0290(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bSpawnOnSelection                                              => _offbSpawnOnSelection.GetValue();
	public FVector                                            SpawnPointLocation                                             => _offSpawnPointLocation.GetValue();
	public ESQSpawnPointType                                  SpawnPointType                                                 => _offSpawnPointType.GetValue();
	public UTexture2D                                         BaseTexture                                                    => _offBaseTexture.GetValue();
	public UTexture2D                                         HABTexture                                                     => _offHABTexture.GetValue();
	public UTexture2D                                         RallyTexture                                                   => _offRallyTexture.GetValue();
	public UTexture2D                                         CacheTexture                                                   => _offCacheTexture.GetValue();
	public ASQGameSpawn                                       OwningGameSpawn                                                => _offOwningGameSpawn.GetValue();
	#endregion


}

// Class Squad.SQCoreStateSquadListWidget
// 0x0009 (0x0259 - 0x0250)
public class USQCoreStateSquadListWidget : USQCoreStateWidget
{
	#region Offsets
	private ExternalOffset<EListLayout>                       _offListLayout                                                 = new ExternalOffset<EListLayout>(0x0258, false);              // 0x0258(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public EListLayout                                        ListLayout                                                     => _offListLayout.GetValue();
	#endregion


}

// Class Squad.SQCoreStateSquadItemWidget
// 0x004F (0x02A8 - 0x0259)
public class USQCoreStateSquadItemWidget : USQCoreStateSquadListWidget
{
	#region Offsets
	private ExternalOffset<ASQSquadState>                     _offSquadState                                                 = new ExternalOffset<ASQSquadState>(0x0260, true);             // 0x0260(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offSquadId                                                    = new ExternalOffset<int>(0x0268);                             // 0x0268(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FString>                           _offSquadName                                                  = new ExternalOffset<FString>(0x0270, false);                  // 0x0270(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FString>                           _offLeaderName                                                 = new ExternalOffset<FString>(0x0280, false);                  // 0x0280(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offMemberNum                                                  = new ExternalOffset<int>(0x0290);                             // 0x0290(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offMaxMembers                                                 = new ExternalOffset<int>(0x0294);                             // 0x0294(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsSelfInSquad                                             = new ExternalOffset<byte/*(bool)*/>(0x0298);                  // 0x0298(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsCommandSquad                                            = new ExternalOffset<byte/*(bool)*/>(0x0299);                  // 0x0299(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<EJoinButtonState>                  _offJoinButtonState                                            = new ExternalOffset<EJoinButtonState>(0x029A, false);         // 0x029A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQPlayerController>               _offCachedSQPlayerController                                   = new ExternalOffset<ASQPlayerController>(0x02A0, true);       // 0x02A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public ASQSquadState                                      SquadState                                                     => _offSquadState.GetValue();
	public int                                                SquadId                                                        => _offSquadId.GetValue();
	public FString                                            SquadName                                                      => _offSquadName.GetValue();
	public FString                                            LeaderName                                                     => _offLeaderName.GetValue();
	public int                                                MemberNum                                                      => _offMemberNum.GetValue();
	public int                                                MaxMembers                                                     => _offMaxMembers.GetValue();
	public byte/*(bool)*/                                     bIsSelfInSquad                                                 => _offbIsSelfInSquad.GetValue();
	public byte/*(bool)*/                                     bIsCommandSquad                                                => _offbIsCommandSquad.GetValue();
	public EJoinButtonState                                   JoinButtonState                                                => _offJoinButtonState.GetValue();
	public ASQPlayerController                                CachedSQPlayerController                                       => _offCachedSQPlayerController.GetValue();
	#endregion


}

// Class Squad.SQCoreStateSquadMemberWidget
// 0x005C (0x02B5 - 0x0259)
public class USQCoreStateSquadMemberWidget : USQCoreStateSquadListWidget
{
	#region Offsets
	private ExternalOffset<int>                               _offRootWidgetSquadId                                          = new ExternalOffset<int>(0x0260);                             // 0x0260(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQPlayerState>                    _offPlayerState                                                = new ExternalOffset<ASQPlayerState>(0x0268, true);            // 0x0268(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offSquadId                                                    = new ExternalOffset<int>(0x0270);                             // 0x0270(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbIsPossessingPawn                                          = new ExternalOffset<char>(0x0274, false);                     // 0x0274(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsSquadLeader                                             = new ExternalOffset<byte/*(bool)*/>(0x0278);                  // 0x0278(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsFireTeamLeader                                          = new ExternalOffset<byte/*(bool)*/>(0x0279);                  // 0x0279(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offFireTeamIndex                                              = new ExternalOffset<int>(0x027C);                             // 0x027C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offFireTeamPosition                                           = new ExternalOffset<int>(0x0284);                             // 0x0284(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQRoleSettings>                   _offDeployRole                                                 = new ExternalOffset<USQRoleSettings>(0x0290, true);           // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FString>                           _offPlayerName                                                 = new ExternalOffset<FString>(0x0298, false);                  // 0x0298(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQVehicleUIStaticDataAsset>       _offCurrentVehicleData                                         = new ExternalOffset<USQVehicleUIStaticDataAsset>(0x02A8, true); // 0x02A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQVoiceChannel>                   _offVoipChannel                                                = new ExternalOffset<ESQVoiceChannel>(0x02B0, false);          // 0x02B0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsMuted                                                   = new ExternalOffset<byte/*(bool)*/>(0x02B1);                  // 0x02B1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsAlive                                                   = new ExternalOffset<byte/*(bool)*/>(0x02B2);                  // 0x02B2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsBleeding                                                = new ExternalOffset<byte/*(bool)*/>(0x02B3);                  // 0x02B3(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsWounded                                                 = new ExternalOffset<byte/*(bool)*/>(0x02B4);                  // 0x02B4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public int                                                RootWidgetSquadId                                              => _offRootWidgetSquadId.GetValue();
	public ASQPlayerState                                     PlayerState                                                    => _offPlayerState.GetValue();
	public int                                                SquadId                                                        => _offSquadId.GetValue();
	public byte/*(bool)*/                                     bIsSquadLeader                                                 => _offbIsSquadLeader.GetValue();
	public byte/*(bool)*/                                     bIsFireTeamLeader                                              => _offbIsFireTeamLeader.GetValue();
	public int                                                FireTeamIndex                                                  => _offFireTeamIndex.GetValue();
	public int                                                FireTeamPosition                                               => _offFireTeamPosition.GetValue();
	public USQRoleSettings                                    DeployRole                                                     => _offDeployRole.GetValue();
	public FString                                            PlayerName                                                     => _offPlayerName.GetValue();
	public USQVehicleUIStaticDataAsset                        CurrentVehicleData                                             => _offCurrentVehicleData.GetValue();
	public ESQVoiceChannel                                    VoipChannel                                                    => _offVoipChannel.GetValue();
	public byte/*(bool)*/                                     bIsMuted                                                       => _offbIsMuted.GetValue();
	public byte/*(bool)*/                                     bIsAlive                                                       => _offbIsAlive.GetValue();
	public byte/*(bool)*/                                     bIsBleeding                                                    => _offbIsBleeding.GetValue();
	public byte/*(bool)*/                                     bIsWounded                                                     => _offbIsWounded.GetValue();
	#endregion


}

// Class Squad.SQCreateSquadButton
// 0x0034 (0x0318 - 0x02E4)
public class USQCreateSquadButton : USQBaseButton
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbUsesCustomName                                            = new ExternalOffset<byte/*(bool)*/>(0x02E8);                  // 0x02E8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offOwnerPlayerState                                           = new ExternalOffset<ASQPlayerState>(0x02F0, true);            // 0x02F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerController>               _offOwnerPlayerController                                      = new ExternalOffset<ASQPlayerController>(0x02F8, true);       // 0x02F8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UEditableTextBox>                  _offSquadNameTextBox                                           = new ExternalOffset<UEditableTextBox>(0x0300, true);          // 0x0300(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnNewSquadCreated                                          = new ExternalOffset<FScriptMulticastDelegate>(0x0308, false); // 0x0308(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bUsesCustomName                                                => _offbUsesCustomName.GetValue();
	public ASQPlayerState                                     OwnerPlayerState                                               => _offOwnerPlayerState.GetValue();
	public ASQPlayerController                                OwnerPlayerController                                          => _offOwnerPlayerController.GetValue();
	public UEditableTextBox                                   SquadNameTextBox                                               => _offSquadNameTextBox.GetValue();
	public FScriptMulticastDelegate                           OnNewSquadCreated                                              => _offOnNewSquadCreated.GetValue();
	#endregion


}

// Class Squad.SQDamageType_Collision
// 0x0000 (0x0040 - 0x0040)
public class USQDamageType_Collision : USQDamageType
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQDamageType_Explosive
// 0x0000 (0x0040 - 0x0040)
public class USQDamageType_Explosive : USQDamageType
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQDamageType_ExplosiveRocket
// 0x0000 (0x0040 - 0x0040)
public class USQDamageType_ExplosiveRocket : USQDamageType_Explosive
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQDamageType_Fall
// 0x0000 (0x0040 - 0x0040)
public class USQDamageType_Fall : USQDamageType
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQDamageType_HeatExplosive
// 0x0000 (0x0040 - 0x0040)
public class USQDamageType_HeatExplosive : USQDamageType
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQDamageType_Thermite
// 0x0000 (0x0040 - 0x0040)
public class USQDamageType_Thermite : USQDamageType
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQDamageType_Underwater
// 0x0000 (0x0040 - 0x0040)
public class USQDamageType_Underwater : USQDamageType
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQWoundedDamageType
// 0x0000 (0x0040 - 0x0040)
public class USQWoundedDamageType : USQDamageType
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQDataGatheringComponent
// 0x0018 (0x00E0 - 0x00C8)
public class USQDataGatheringComponent : UActorComponent
{
	#region Offsets
	private ExternalOffset<UHeatMapRecorder>                  _offHeatMapRecorder                                            = new ExternalOffset<UHeatMapRecorder>(0x00D8, true);          // 0x00D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public UHeatMapRecorder                                   HeatMapRecorder                                                => _offHeatMapRecorder.GetValue();
	#endregion


}

// Class Squad.SQDemoSpectator
// 0x000C (0x0598 - 0x058C)
public class ASQDemoSpectator : APlayerController
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQDeployable
// 0x0198 (0x03D0 - 0x0238)
public class ASQDeployable : AActor
{
	#region Offsets
	private ExternalOffset<ESQTeam>                           _offInitialTeam                                                = new ExternalOffset<ESQTeam>(0x0258, false);                  // 0x0258(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQForwardBase>                    _offOwningFob                                                  = new ExternalOffset<ASQForwardBase>(0x0260, true);            // 0x0260(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHalfBuiltTransitionHealth                                  = new ExternalOffset<float>(0x0268);                           // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFullyBuiltTransitionHealth                                 = new ExternalOffset<float>(0x026C);                           // 0x026C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeam                                                       = new ExternalOffset<int>(0x0270);                             // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsFob                                                     = new ExternalOffset<byte/*(bool)*/>(0x0274);                  // 0x0274(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbPlaced                                                    = new ExternalOffset<byte/*(bool)*/>(0x0275);                  // 0x0275(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UBoxComponent>                     _offStackingCollisionBox                                       = new ExternalOffset<UBoxComponent>(0x0278, true);             // 0x0278(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UBoxComponent>                     _offPlacementCollisionBox                                      = new ExternalOffset<UBoxComponent>(0x0280, true);             // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUsePlacementCollisionBox                                  = new ExternalOffset<byte/*(bool)*/>(0x0288);                  // 0x0288(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQCoreStateComponent>             _offStateObject                                                = new ExternalOffset<USQCoreStateComponent>(0x0290, true);     // 0x0290(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQExplosiveType>                  _offExplosiveType                                              = new ExternalOffset<ESQExplosiveType>(0x0298, false);         // 0x0298(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQUsableData>                     _offUsableData                                                 = new ExternalOffset<FSQUsableData>(0x02A0, false);            // 0x02A0(0x0040) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<USceneComponent>                   _offCompleted                                                  = new ExternalOffset<USceneComponent>(0x02E0, true);           // 0x02E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<USceneComponent>                   _offUnbuilt                                                    = new ExternalOffset<USceneComponent>(0x02E8, true);           // 0x02E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<USceneComponent>                   _offHalfBuilt                                                  = new ExternalOffset<USceneComponent>(0x02F0, true);           // 0x02F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<USphereComponent>                  _offSimpleDetectionSphere                                      = new ExternalOffset<USphereComponent>(0x02F8, true);          // 0x02F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnBuildStateChange                                         = new ExternalOffset<FScriptMulticastDelegate>(0x0300, false); // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnDestroyedEvent                                           = new ExternalOffset<FScriptMulticastDelegate>(0x0310, false); // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQBuildState>                     _offBuildState                                                 = new ExternalOffset<ESQBuildState>(0x0320, false);            // 0x0320(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQDeployableChangeStateEffect>> _offChangeStateEffects                                         = new ExternalOffset<TArray<FSQDeployableChangeStateEffect>>(0x0328, false); // 0x0328(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQDeployableStateDamageEffect>> _offDamageStateEffects                                         = new ExternalOffset<TArray<FSQDeployableStateDamageEffect>>(0x0338, false); // 0x0338(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offCost                                                       = new ExternalOffset<int>(0x0348);                             // 0x0348(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxHealth                                                  = new ExternalOffset<float>(0x034C);                           // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offInitialHealth                                              = new ExternalOffset<float>(0x0350);                           // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHealth                                                     = new ExternalOffset<float>(0x0354);                           // 0x0354(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCanUnbuild                                                = new ExternalOffset<byte/*(bool)*/>(0x0358);                  // 0x0358(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQDamageModifier>>         _offAllowableDamageTypes                                       = new ExternalOffset<TArray<FSQDamageModifier>>(0x0360, false); // 0x0360(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQDeployableSize>                 _offSize                                                       = new ExternalOffset<ESQDeployableSize>(0x0370, false);        // 0x0370(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIngoreNoResist                                            = new ExternalOffset<byte/*(bool)*/>(0x0371);                  // 0x0371(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStartUnbuilt                                              = new ExternalOffset<byte/*(bool)*/>(0x0372);                  // 0x0372(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbTrackInFOB                                                = new ExternalOffset<byte/*(bool)*/>(0x0373);                  // 0x0373(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbTrackInPlayerState                                        = new ExternalOffset<byte/*(bool)*/>(0x0374);                  // 0x0374(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<TEnumAsByte<EObjectTypeQuery>>> _offObjectTypesToStack                                         = new ExternalOffset<TArray<TEnumAsByte<EObjectTypeQuery>>>(0x0378, false); // 0x0378(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAllowStacking                                             = new ExternalOffset<byte/*(bool)*/>(0x0388);                  // 0x0388(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAllowPlacementOnPawns                                     = new ExternalOffset<byte/*(bool)*/>(0x0389);                  // 0x0389(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAllowPlacementOnSoldiers                                  = new ExternalOffset<byte/*(bool)*/>(0x038A);                  // 0x038A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAllowPlacementOnVehicles                                  = new ExternalOffset<byte/*(bool)*/>(0x038B);                  // 0x038B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAttachToUnderlyingActor                                   = new ExternalOffset<byte/*(bool)*/>(0x038C);                  // 0x038C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDestroyWhenAttachedActorIsDestroyed                       = new ExternalOffset<byte/*(bool)*/>(0x038D);                  // 0x038D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQInvalidPlacementReason>         _offbCachedPlacementResult                                     = new ExternalOffset<ESQInvalidPlacementReason>(0x038E, false); // 0x038E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAlignToGround                                             = new ExternalOffset<byte/*(bool)*/>(0x038F);                  // 0x038F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offValidPitchRange                                            = new ExternalOffset<float>(0x0390);                           // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxCornerDifference                                        = new ExternalOffset<float>(0x0394);                           // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbRequiresSameTeam                                          = new ExternalOffset<byte/*(bool)*/>(0x0398);                  // 0x0398(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCantBePlacedInFOB                                         = new ExternalOffset<byte/*(bool)*/>(0x0399);                  // 0x0399(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offGhostOffset                                                = new ExternalOffset<FVector>(0x039C, false);                  // 0x039C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQBuildState>                     _offGhostBuildState                                            = new ExternalOffset<ESQBuildState>(0x03A8, false);            // 0x03A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UMaterialInterface>                _offGhostMaterial                                              = new ExternalOffset<UMaterialInterface>(0x03B0, true);        // 0x03B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsGhost                                                   = new ExternalOffset<byte/*(bool)*/>(0x03B8);                  // 0x03B8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offGhostRotationSpeed                                         = new ExternalOffset<float>(0x03BC);                           // 0x03BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offGhostRotationDelta                                         = new ExternalOffset<float>(0x03C0);                           // 0x03C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAllowFireWeaponOverrideOnSQPlayerController               = new ExternalOffset<byte/*(bool)*/>(0x03C4);                  // 0x03C4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAllowAltFireWeaponOverrideOnSQPlayerController            = new ExternalOffset<byte/*(bool)*/>(0x03C5);                  // 0x03C5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbRequiresFOB                                               = new ExternalOffset<byte/*(bool)*/>(0x03C6);                  // 0x03C6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDrawDebug                                                 = new ExternalOffset<byte/*(bool)*/>(0x03C7);                  // 0x03C7(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UMaterialInstanceDynamic>          _offDynGhostInstance                                           = new ExternalOffset<UMaterialInstanceDynamic>(0x03C8, true);  // 0x03C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public ESQTeam                                            InitialTeam                                                    => _offInitialTeam.GetValue();
	public ASQForwardBase                                     OwningFob                                                      => _offOwningFob.GetValue();
	public float                                              HalfBuiltTransitionHealth                                      => _offHalfBuiltTransitionHealth.GetValue();
	public float                                              FullyBuiltTransitionHealth                                     => _offFullyBuiltTransitionHealth.GetValue();
	public int                                                Team                                                           => _offTeam.GetValue();
	public byte/*(bool)*/                                     bIsFob                                                         => _offbIsFob.GetValue();
	public byte/*(bool)*/                                     bPlaced                                                        => _offbPlaced.GetValue();
	public UBoxComponent                                      StackingCollisionBox                                           => _offStackingCollisionBox.GetValue();
	public UBoxComponent                                      PlacementCollisionBox                                          => _offPlacementCollisionBox.GetValue();
	public byte/*(bool)*/                                     bUsePlacementCollisionBox                                      => _offbUsePlacementCollisionBox.GetValue();
	public USQCoreStateComponent                              StateObject                                                    => _offStateObject.GetValue();
	public ESQExplosiveType                                   ExplosiveType                                                  => _offExplosiveType.GetValue();
	public FSQUsableData                                      UsableData                                                     => _offUsableData.GetValue();
	public USceneComponent                                    Completed                                                      => _offCompleted.GetValue();
	public USceneComponent                                    Unbuilt                                                        => _offUnbuilt.GetValue();
	public USceneComponent                                    HalfBuilt                                                      => _offHalfBuilt.GetValue();
	public USphereComponent                                   SimpleDetectionSphere                                          => _offSimpleDetectionSphere.GetValue();
	public FScriptMulticastDelegate                           OnBuildStateChange                                             => _offOnBuildStateChange.GetValue();
	public FScriptMulticastDelegate                           OnDestroyedEvent                                               => _offOnDestroyedEvent.GetValue();
	public ESQBuildState                                      BuildState                                                     => _offBuildState.GetValue();
	public TArray<FSQDeployableChangeStateEffect>             ChangeStateEffects                                             => _offChangeStateEffects.GetValue();
	public TArray<FSQDeployableStateDamageEffect>             DamageStateEffects                                             => _offDamageStateEffects.GetValue();
	public int                                                Cost                                                           => _offCost.GetValue();
	public float                                              MaxHealth                                                      => _offMaxHealth.GetValue();
	public float                                              InitialHealth                                                  => _offInitialHealth.GetValue();
	public float                                              Health                                                         => _offHealth.GetValue();
	public byte/*(bool)*/                                     bCanUnbuild                                                    => _offbCanUnbuild.GetValue();
	public TArray<FSQDamageModifier>                          AllowableDamageTypes                                           => _offAllowableDamageTypes.GetValue();
	public ESQDeployableSize                                  Size                                                           => _offSize.GetValue();
	public byte/*(bool)*/                                     bIngoreNoResist                                                => _offbIngoreNoResist.GetValue();
	public byte/*(bool)*/                                     bStartUnbuilt                                                  => _offbStartUnbuilt.GetValue();
	public byte/*(bool)*/                                     bTrackInFOB                                                    => _offbTrackInFOB.GetValue();
	public byte/*(bool)*/                                     bTrackInPlayerState                                            => _offbTrackInPlayerState.GetValue();
	public TArray<TEnumAsByte<EObjectTypeQuery>>              ObjectTypesToStack                                             => _offObjectTypesToStack.GetValue();
	public byte/*(bool)*/                                     bAllowStacking                                                 => _offbAllowStacking.GetValue();
	public byte/*(bool)*/                                     bAllowPlacementOnPawns                                         => _offbAllowPlacementOnPawns.GetValue();
	public byte/*(bool)*/                                     bAllowPlacementOnSoldiers                                      => _offbAllowPlacementOnSoldiers.GetValue();
	public byte/*(bool)*/                                     bAllowPlacementOnVehicles                                      => _offbAllowPlacementOnVehicles.GetValue();
	public byte/*(bool)*/                                     bAttachToUnderlyingActor                                       => _offbAttachToUnderlyingActor.GetValue();
	public byte/*(bool)*/                                     bDestroyWhenAttachedActorIsDestroyed                           => _offbDestroyWhenAttachedActorIsDestroyed.GetValue();
	public ESQInvalidPlacementReason                          bCachedPlacementResult                                         => _offbCachedPlacementResult.GetValue();
	public byte/*(bool)*/                                     bAlignToGround                                                 => _offbAlignToGround.GetValue();
	public float                                              ValidPitchRange                                                => _offValidPitchRange.GetValue();
	public float                                              MaxCornerDifference                                            => _offMaxCornerDifference.GetValue();
	public byte/*(bool)*/                                     bRequiresSameTeam                                              => _offbRequiresSameTeam.GetValue();
	public byte/*(bool)*/                                     bCantBePlacedInFOB                                             => _offbCantBePlacedInFOB.GetValue();
	public FVector                                            GhostOffset                                                    => _offGhostOffset.GetValue();
	public ESQBuildState                                      GhostBuildState                                                => _offGhostBuildState.GetValue();
	public UMaterialInterface                                 GhostMaterial                                                  => _offGhostMaterial.GetValue();
	public byte/*(bool)*/                                     bIsGhost                                                       => _offbIsGhost.GetValue();
	public float                                              GhostRotationSpeed                                             => _offGhostRotationSpeed.GetValue();
	public float                                              GhostRotationDelta                                             => _offGhostRotationDelta.GetValue();
	public byte/*(bool)*/                                     bAllowFireWeaponOverrideOnSQPlayerController                   => _offbAllowFireWeaponOverrideOnSQPlayerController.GetValue();
	public byte/*(bool)*/                                     bAllowAltFireWeaponOverrideOnSQPlayerController                => _offbAllowAltFireWeaponOverrideOnSQPlayerController.GetValue();
	public byte/*(bool)*/                                     bRequiresFOB                                                   => _offbRequiresFOB.GetValue();
	public byte/*(bool)*/                                     bDrawDebug                                                     => _offbDrawDebug.GetValue();
	public UMaterialInstanceDynamic                           DynGhostInstance                                               => _offDynGhostInstance.GetValue();
	#endregion


}

// Class Squad.SQDeployableItem
// 0x0020 (0x03F0 - 0x03D0)
public class ASQDeployableItem : ASQDeployable
{
	#region Offsets
	private ExternalOffset<ASQPlayerController>               _offInstigatingPlayerController                                = new ExternalOffset<ASQPlayerController>(0x03D0, true);       // 0x03D0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offInstigatingPlayerState                                     = new ExternalOffset<ASQPlayerState>(0x03D8, true);            // 0x03D8(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMaxAllowedPerPlayerInGame                                  = new ExternalOffset<int>(0x03E0);                             // 0x03E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQTrackDeployableResult>          _offTrackDeployableOverMaxResult                               = new ExternalOffset<ESQTrackDeployableResult>(0x03E4, false); // 0x03E4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offEquippableInstigatorClass                                  = new ExternalOffset<UClass>(0x03E8, true);                    // 0x03E8(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ASQPlayerController                                InstigatingPlayerController                                    => _offInstigatingPlayerController.GetValue();
	public ASQPlayerState                                     InstigatingPlayerState                                         => _offInstigatingPlayerState.GetValue();
	public int                                                MaxAllowedPerPlayerInGame                                      => _offMaxAllowedPerPlayerInGame.GetValue();
	public ESQTrackDeployableResult                           TrackDeployableOverMaxResult                                   => _offTrackDeployableOverMaxResult.GetValue();
	public UClass                                             EquippableInstigatorClass                                      => _offEquippableInstigatorClass.GetValue();
	#endregion


}

// Class Squad.SQDeployableAmmoBag
// 0x0030 (0x0420 - 0x03F0)
public class ASQDeployableAmmoBag : ASQDeployableItem
{
	#region Offsets
	private ExternalOffset<FScriptMulticastDelegate>          _offAmmoBagAmmoUpdatedEvent                                    = new ExternalOffset<FScriptMulticastDelegate>(0x03F8, false); // 0x03F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offRearmSourceAmmoUpdatedEvent                                = new ExternalOffset<FScriptMulticastDelegate>(0x0408, false); // 0x0408(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAmmoCount                                                  = new ExternalOffset<float>(0x0418);                           // 0x0418(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offOutOfAmmoLifetime                                          = new ExternalOffset<float>(0x041C);                           // 0x041C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public FScriptMulticastDelegate                           AmmoBagAmmoUpdatedEvent                                        => _offAmmoBagAmmoUpdatedEvent.GetValue();
	public FScriptMulticastDelegate                           RearmSourceAmmoUpdatedEvent                                    => _offRearmSourceAmmoUpdatedEvent.GetValue();
	public float                                              AmmoCount                                                      => _offAmmoCount.GetValue();
	public float                                              OutOfAmmoLifetime                                              => _offOutOfAmmoLifetime.GetValue();
	#endregion


}

// Class Squad.SQDeployableChildActorComponent
// 0x0020 (0x0250 - 0x0230)
public class USQDeployableChildActorComponent : UChildActorComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQItemStaticInfo
// 0x04B0 (0x04D8 - 0x0028)
public class USQItemStaticInfo : UObject
{
	#region Offsets
	private ExternalOffset<UAnimMontage>                      _offBaseWeaponMontage                                          = new ExternalOffset<UAnimMontage>(0x0028, true);              // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offBase1pMontage                                              = new ExternalOffset<UAnimMontage>(0x0030, true);              // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offBase3pMontage                                              = new ExternalOffset<UAnimMontage>(0x0038, true);              // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offSprintToProne3p                                            = new ExternalOffset<UAnimSequence>(0x0040, true);             // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offStandToProne3p                                             = new ExternalOffset<UAnimSequence>(0x0048, true);             // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offProneToStand3p                                             = new ExternalOffset<UAnimSequence>(0x0050, true);             // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offCrouchToProne3p                                            = new ExternalOffset<UAnimSequence>(0x0058, true);             // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offProneToCrouch3p                                            = new ExternalOffset<UAnimSequence>(0x0060, true);             // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UBlendSpace1D>                     _offAO1D_StandPitch                                            = new ExternalOffset<UBlendSpace1D>(0x0068, true);             // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UBlendSpace1D>                     _offAO1D_CrouchPitch                                           = new ExternalOffset<UBlendSpace1D>(0x0070, true);             // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UBlendSpace1D>                     _offAO1D_PronePitch                                            = new ExternalOffset<UBlendSpace1D>(0x0078, true);             // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UBlendSpace>                       _offAO_BipodStandCrouchPitch                                   = new ExternalOffset<UBlendSpace>(0x0080, true);               // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offAO1D_StandYawSF                                            = new ExternalOffset<UAnimSequence>(0x0088, true);             // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offAO1D_CrouchYawSF                                           = new ExternalOffset<UAnimSequence>(0x0090, true);             // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offAO1D_ProneYawSF                                            = new ExternalOffset<UAnimSequence>(0x0098, true);             // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offStandTurnRight                                             = new ExternalOffset<UAnimSequence>(0x00A0, true);             // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offStandTurnLeft                                              = new ExternalOffset<UAnimSequence>(0x00A8, true);             // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offCrouchTurnRight                                            = new ExternalOffset<UAnimSequence>(0x00B0, true);             // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offCrouchTurnLeft                                             = new ExternalOffset<UAnimSequence>(0x00B8, true);             // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offProneTurnRight                                             = new ExternalOffset<UAnimSequence>(0x00C0, true);             // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offProneTurnLeft                                              = new ExternalOffset<UAnimSequence>(0x00C8, true);             // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offReloadWeaponMontage                                        = new ExternalOffset<UAnimMontage>(0x00D0, true);              // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offReload1pMontage                                            = new ExternalOffset<UAnimMontage>(0x00D8, true);              // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offReload3pMontage                                            = new ExternalOffset<UAnimMontage>(0x00E0, true);              // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCheckCurrentMagazineForEquip                              = new ExternalOffset<byte/*(bool)*/>(0x00E8);                  // 0x00E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCheckCurrentMagazineForUnequip                            = new ExternalOffset<byte/*(bool)*/>(0x00E9);                  // 0x00E9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offEmptyEquipWeaponMontage                                    = new ExternalOffset<UAnimMontage>(0x00F0, true);              // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offEmptyEquip1pMontage                                        = new ExternalOffset<UAnimMontage>(0x00F8, true);              // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offEmptyEquip3pMontage                                        = new ExternalOffset<UAnimMontage>(0x0100, true);              // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offEquipWeaponMontage                                         = new ExternalOffset<UAnimMontage>(0x0108, true);              // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offEquip1pMontage                                             = new ExternalOffset<UAnimMontage>(0x0110, true);              // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offEquip3pMontage                                             = new ExternalOffset<UAnimMontage>(0x0118, true);              // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offEmptyUnequipWeaponMontage                                  = new ExternalOffset<UAnimMontage>(0x0120, true);              // 0x0120(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offEmptyUnequip1pMontage                                      = new ExternalOffset<UAnimMontage>(0x0128, true);              // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offEmptyUnequip3pMontage                                      = new ExternalOffset<UAnimMontage>(0x0130, true);              // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offUnequipWeaponMontage                                       = new ExternalOffset<UAnimMontage>(0x0138, true);              // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offUnequip1pMontage                                           = new ExternalOffset<UAnimMontage>(0x0140, true);              // 0x0140(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offUnequip3pMontage                                           = new ExternalOffset<UAnimMontage>(0x0148, true);              // 0x0148(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offBobbingSprint1pMontage                                     = new ExternalOffset<UAnimMontage>(0x0150, true);              // 0x0150(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offBobbingEndSprint1pMontage                                  = new ExternalOffset<UAnimMontage>(0x0158, true);              // 0x0158(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offBobbingAddSprint1pMontage                                  = new ExternalOffset<UAnimMontage>(0x0160, true);              // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UBlendSpace1D>                     _offBS1D_3pStandSprintType                                     = new ExternalOffset<UBlendSpace1D>(0x0168, true);             // 0x0168(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UBlendSpace1D>                     _offBS1D_3pCrouchSprintType                                    = new ExternalOffset<UBlendSpace1D>(0x0170, true);             // 0x0170(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offSprintStop3p                                               = new ExternalOffset<UAnimSequence>(0x0178, true);             // 0x0178(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UBlendSpace>                       _offBS_3pStandJogType                                          = new ExternalOffset<UBlendSpace>(0x0180, true);               // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UBlendSpace>                       _offBS_3pStandWalkType                                         = new ExternalOffset<UBlendSpace>(0x0188, true);               // 0x0188(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UBlendSpace>                       _offBS_3pCrouchWalkType                                        = new ExternalOffset<UBlendSpace>(0x0190, true);               // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UBlendSpace1D>                     _offBS1D_3pProneCrawlType                                      = new ExternalOffset<UBlendSpace1D>(0x0198, true);             // 0x0198(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offStandStopMove                                              = new ExternalOffset<UAnimSequence>(0x01A0, true);             // 0x01A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offCrouchStopMove                                             = new ExternalOffset<UAnimSequence>(0x01A8, true);             // 0x01A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offBobbingMove1pMontage                                       = new ExternalOffset<UAnimMontage>(0x01B0, true);              // 0x01B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offIdle1pMontage                                              = new ExternalOffset<UAnimMontage>(0x01B8, true);              // 0x01B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offLeanLeftBegin3pMontage                                     = new ExternalOffset<UAnimMontage>(0x01C0, true);              // 0x01C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offLeanLeftEnd3pMontage                                       = new ExternalOffset<UAnimMontage>(0x01C8, true);              // 0x01C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offLeanRightBegin3pMontage                                    = new ExternalOffset<UAnimMontage>(0x01D0, true);              // 0x01D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offLeanRightEnd3pMontage                                      = new ExternalOffset<UAnimMontage>(0x01D8, true);              // 0x01D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offStandLeanLeftShuffle                                       = new ExternalOffset<UAnimSequence>(0x01E0, true);             // 0x01E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offStandLeanRightShuffle                                      = new ExternalOffset<UAnimSequence>(0x01E8, true);             // 0x01E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offCrouchLeanLeftShuffle                                      = new ExternalOffset<UAnimSequence>(0x01F0, true);             // 0x01F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offCrouchLeanRightShuffle                                     = new ExternalOffset<UAnimSequence>(0x01F8, true);             // 0x01F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offLowered1pMontage                                           = new ExternalOffset<UAnimMontage>(0x0200, true);              // 0x0200(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offLowered3pMontage                                           = new ExternalOffset<UAnimMontage>(0x0208, true);              // 0x0208(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offLoweredCrouch3pMontage                                     = new ExternalOffset<UAnimMontage>(0x0210, true);              // 0x0210(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQMontageSectionNames>            _offMoveBobbingEndLoopSectionNames                             = new ExternalOffset<FSQMontageSectionNames>(0x0218, false);   // 0x0218(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQMontageSectionNames>            _offSprintBobbingEndLoopSectionNames                           = new ExternalOffset<FSQMontageSectionNames>(0x0240, false);   // 0x0240(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<UBlendSpaceBase>                   _offBobbingProneMoveType                                       = new ExternalOffset<UBlendSpaceBase>(0x0268, true);           // 0x0268(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offProneMoveTypeAdditiveReference                             = new ExternalOffset<UAnimSequence>(0x0270, true);             // 0x0270(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offOutProneMoveType                                           = new ExternalOffset<UAnimSequence>(0x0278, true);             // 0x0278(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offOutProneMoveTypeNonadditive                                = new ExternalOffset<UAnimSequence>(0x0280, true);             // 0x0280(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLeftHandWeaponIkAlpha                                      = new ExternalOffset<float>(0x0288);                           // 0x0288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRightHand3pWeaponIkAlpha                                   = new ExternalOffset<float>(0x028C);                           // 0x028C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offJogPlayRateFactorMinRange                                  = new ExternalOffset<float>(0x0290);                           // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSprintPlayRateFactorMinRange                               = new ExternalOffset<float>(0x0294);                           // 0x0294(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSprintBlendFactorMinRange                                  = new ExternalOffset<float>(0x0298);                           // 0x0298(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSprintBlendSpeedInterpSpeed                                = new ExternalOffset<float>(0x029C);                           // 0x029C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offSprintStaticPose                                           = new ExternalOffset<UAnimSequence>(0x02A0, true);             // 0x02A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLoweringBlendOutTime                                       = new ExternalOffset<float>(0x02A8);                           // 0x02A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offIdleBlendOutTime                                           = new ExternalOffset<float>(0x02AC);                           // 0x02AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQBoredMontageSet>>        _offBoredMontage                                               = new ExternalOffset<TArray<FSQBoredMontageSet>>(0x02B0, false); // 0x02B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBoredMaxFrequency                                          = new ExternalOffset<float>(0x02C0);                           // 0x02C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBoredAbortBlendOutTime                                     = new ExternalOffset<float>(0x02C4);                           // 0x02C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQMutualWeapon>>           _offMutualWeapons                                              = new ExternalOffset<TArray<FSQMutualWeapon>>(0x02C8, false);  // 0x02C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offEmptyUnequipDuration                                       = new ExternalOffset<float>(0x02D8);                           // 0x02D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offEmptyEquipDuration                                         = new ExternalOffset<float>(0x02DC);                           // 0x02DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseAutoLowering                                           = new ExternalOffset<byte/*(bool)*/>(0x02E0);                  // 0x02E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLoweringTimer                                              = new ExternalOffset<float>(0x02E4);                           // 0x02E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offItemCollisionDistance                                      = new ExternalOffset<float>(0x02E8);                           // 0x02E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbReturnToADSAfterItemCollision                             = new ExternalOffset<byte/*(bool)*/>(0x02EC);                  // 0x02EC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offFireShake                                                  = new ExternalOffset<UClass>(0x02F0, true);                    // 0x02F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offStandLoc                                                   = new ExternalOffset<FVector>(0x02F8, false);                  // 0x02F8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCrouchLoc                                                  = new ExternalOffset<FVector>(0x0304, false);                  // 0x0304(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneLoc                                                   = new ExternalOffset<FVector>(0x0310, false);                  // 0x0310(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offBipodLoc                                                   = new ExternalOffset<FVector>(0x031C, false);                  // 0x031C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStandLocBlendTime                                          = new ExternalOffset<float>(0x0328);                           // 0x0328(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offOffsetLineOfFire                                           = new ExternalOffset<FRotator>(0x032C, false);                 // 0x032C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offStandLeanLeftRootOffset                                    = new ExternalOffset<FVector>(0x0338, false);                  // 0x0338(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offStandLeanLeftWeaponRotation                                = new ExternalOffset<FRotator>(0x0344, false);                 // 0x0344(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offStandLeanLeftCameraRotation                                = new ExternalOffset<FRotator>(0x0350, false);                 // 0x0350(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offStandLeanRightRootOffset                                   = new ExternalOffset<FVector>(0x035C, false);                  // 0x035C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offStandLeanRightWeaponRotation                               = new ExternalOffset<FRotator>(0x0368, false);                 // 0x0368(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offStandLeanRightCameraRotation                               = new ExternalOffset<FRotator>(0x0374, false);                 // 0x0374(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCrouchLeanLeftRootOffset                                   = new ExternalOffset<FVector>(0x0380, false);                  // 0x0380(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offCrouchLeanLeftWeaponRotation                               = new ExternalOffset<FRotator>(0x038C, false);                 // 0x038C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offCrouchLeanLeftCameraRotation                               = new ExternalOffset<FRotator>(0x0398, false);                 // 0x0398(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCrouchLeanRightRootOffset                                  = new ExternalOffset<FVector>(0x03A4, false);                  // 0x03A4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offCrouchLeanRightWeaponRotation                              = new ExternalOffset<FRotator>(0x03B0, false);                 // 0x03B0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offCrouchLeanRightCameraRotation                              = new ExternalOffset<FRotator>(0x03BC, false);                 // 0x03BC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneLeanLeftRootOffset                                    = new ExternalOffset<FVector>(0x03C8, false);                  // 0x03C8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offProneLeanLeftWeaponRotation                                = new ExternalOffset<FRotator>(0x03D4, false);                 // 0x03D4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offProneLeanLeftCameraRotation                                = new ExternalOffset<FRotator>(0x03E0, false);                 // 0x03E0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneLeanRightRootOffset                                   = new ExternalOffset<FVector>(0x03EC, false);                  // 0x03EC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offProneLeanRightWeaponRotation                               = new ExternalOffset<FRotator>(0x03F8, false);                 // 0x03F8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offProneLeanRightCameraRotation                               = new ExternalOffset<FRotator>(0x0404, false);                 // 0x0404(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offFpvLowerRootBoneOffset                                     = new ExternalOffset<FVector>(0x0410, false);                  // 0x0410(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offFpvTorsoCameraOffset                                       = new ExternalOffset<FVector>(0x041C, false);                  // 0x041C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offWeaponSpringSide                                           = new ExternalOffset<int>(0x0428);                             // 0x0428(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponSpringStiffness                                      = new ExternalOffset<float>(0x042C);                           // 0x042C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponSpringCriticalDampingFactor                          = new ExternalOffset<float>(0x0430);                           // 0x0430(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponSpringMass                                           = new ExternalOffset<float>(0x0434);                           // 0x0434(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponSpringFactor2                                        = new ExternalOffset<float>(0x0438);                           // 0x0438(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponMeshSpringLocDelayFactor                             = new ExternalOffset<float>(0x043C);                           // 0x043C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponMeshSpringRotDelayFactor                             = new ExternalOffset<float>(0x0440);                           // 0x0440(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponSpringClamp                                          = new ExternalOffset<float>(0x0444);                           // 0x0444(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWeaponSpringTurnSpeedToFullIntensity                       = new ExternalOffset<float>(0x0448);                           // 0x0448(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offStrafeSpringRotator                                        = new ExternalOffset<FRotator>(0x044C, false);                 // 0x044C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offStrafeSpringVector                                         = new ExternalOffset<FVector>(0x0458, false);                  // 0x0458(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offAdsStrafeSpringRotator                                     = new ExternalOffset<FRotator>(0x0464, false);                 // 0x0464(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offSoundsSocket                                               = new ExternalOffset<FName>(0x0470, false);                    // 0x0470(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offFireSound1P                                                = new ExternalOffset<USoundCue>(0x0478, true);                 // 0x0478(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offFireSound3P                                                = new ExternalOffset<USoundCue>(0x0480, true);                 // 0x0480(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offReloadSound1P                                              = new ExternalOffset<USoundCue>(0x0488, true);                 // 0x0488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offReloadSound3P                                              = new ExternalOffset<USoundCue>(0x0490, true);                 // 0x0490(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offDryReloadSound1P                                           = new ExternalOffset<USoundCue>(0x0498, true);                 // 0x0498(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offDryReloadSound3P                                           = new ExternalOffset<USoundCue>(0x04A0, true);                 // 0x04A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offEquipSound1P                                               = new ExternalOffset<USoundCue>(0x04A8, true);                 // 0x04A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offEquipSound3P                                               = new ExternalOffset<USoundCue>(0x04B0, true);                 // 0x04B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offUnequipSound1P                                             = new ExternalOffset<USoundCue>(0x04B8, true);                 // 0x04B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offUnequipSound3P                                             = new ExternalOffset<USoundCue>(0x04C0, true);                 // 0x04C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offIntoForcedLoweringSound                                    = new ExternalOffset<USoundBase>(0x04C8, true);                // 0x04C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offOutOfForcedLoweringSound                                   = new ExternalOffset<USoundBase>(0x04D0, true);                // 0x04D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UAnimMontage                                       BaseWeaponMontage                                              => _offBaseWeaponMontage.GetValue();
	public UAnimMontage                                       Base1pMontage                                                  => _offBase1pMontage.GetValue();
	public UAnimMontage                                       Base3pMontage                                                  => _offBase3pMontage.GetValue();
	public UAnimSequence                                      SprintToProne3p                                                => _offSprintToProne3p.GetValue();
	public UAnimSequence                                      StandToProne3p                                                 => _offStandToProne3p.GetValue();
	public UAnimSequence                                      ProneToStand3p                                                 => _offProneToStand3p.GetValue();
	public UAnimSequence                                      CrouchToProne3p                                                => _offCrouchToProne3p.GetValue();
	public UAnimSequence                                      ProneToCrouch3p                                                => _offProneToCrouch3p.GetValue();
	public UBlendSpace1D                                      AO1D_StandPitch                                                => _offAO1D_StandPitch.GetValue();
	public UBlendSpace1D                                      AO1D_CrouchPitch                                               => _offAO1D_CrouchPitch.GetValue();
	public UBlendSpace1D                                      AO1D_PronePitch                                                => _offAO1D_PronePitch.GetValue();
	public UBlendSpace                                        AO_BipodStandCrouchPitch                                       => _offAO_BipodStandCrouchPitch.GetValue();
	public UAnimSequence                                      AO1D_StandYawSF                                                => _offAO1D_StandYawSF.GetValue();
	public UAnimSequence                                      AO1D_CrouchYawSF                                               => _offAO1D_CrouchYawSF.GetValue();
	public UAnimSequence                                      AO1D_ProneYawSF                                                => _offAO1D_ProneYawSF.GetValue();
	public UAnimSequence                                      StandTurnRight                                                 => _offStandTurnRight.GetValue();
	public UAnimSequence                                      StandTurnLeft                                                  => _offStandTurnLeft.GetValue();
	public UAnimSequence                                      CrouchTurnRight                                                => _offCrouchTurnRight.GetValue();
	public UAnimSequence                                      CrouchTurnLeft                                                 => _offCrouchTurnLeft.GetValue();
	public UAnimSequence                                      ProneTurnRight                                                 => _offProneTurnRight.GetValue();
	public UAnimSequence                                      ProneTurnLeft                                                  => _offProneTurnLeft.GetValue();
	public UAnimMontage                                       ReloadWeaponMontage                                            => _offReloadWeaponMontage.GetValue();
	public UAnimMontage                                       Reload1pMontage                                                => _offReload1pMontage.GetValue();
	public UAnimMontage                                       Reload3pMontage                                                => _offReload3pMontage.GetValue();
	public byte/*(bool)*/                                     bCheckCurrentMagazineForEquip                                  => _offbCheckCurrentMagazineForEquip.GetValue();
	public byte/*(bool)*/                                     bCheckCurrentMagazineForUnequip                                => _offbCheckCurrentMagazineForUnequip.GetValue();
	public UAnimMontage                                       EmptyEquipWeaponMontage                                        => _offEmptyEquipWeaponMontage.GetValue();
	public UAnimMontage                                       EmptyEquip1pMontage                                            => _offEmptyEquip1pMontage.GetValue();
	public UAnimMontage                                       EmptyEquip3pMontage                                            => _offEmptyEquip3pMontage.GetValue();
	public UAnimMontage                                       EquipWeaponMontage                                             => _offEquipWeaponMontage.GetValue();
	public UAnimMontage                                       Equip1pMontage                                                 => _offEquip1pMontage.GetValue();
	public UAnimMontage                                       Equip3pMontage                                                 => _offEquip3pMontage.GetValue();
	public UAnimMontage                                       EmptyUnequipWeaponMontage                                      => _offEmptyUnequipWeaponMontage.GetValue();
	public UAnimMontage                                       EmptyUnequip1pMontage                                          => _offEmptyUnequip1pMontage.GetValue();
	public UAnimMontage                                       EmptyUnequip3pMontage                                          => _offEmptyUnequip3pMontage.GetValue();
	public UAnimMontage                                       UnequipWeaponMontage                                           => _offUnequipWeaponMontage.GetValue();
	public UAnimMontage                                       Unequip1pMontage                                               => _offUnequip1pMontage.GetValue();
	public UAnimMontage                                       Unequip3pMontage                                               => _offUnequip3pMontage.GetValue();
	public UAnimMontage                                       BobbingSprint1pMontage                                         => _offBobbingSprint1pMontage.GetValue();
	public UAnimMontage                                       BobbingEndSprint1pMontage                                      => _offBobbingEndSprint1pMontage.GetValue();
	public UAnimMontage                                       BobbingAddSprint1pMontage                                      => _offBobbingAddSprint1pMontage.GetValue();
	public UBlendSpace1D                                      BS1D_3pStandSprintType                                         => _offBS1D_3pStandSprintType.GetValue();
	public UBlendSpace1D                                      BS1D_3pCrouchSprintType                                        => _offBS1D_3pCrouchSprintType.GetValue();
	public UAnimSequence                                      SprintStop3p                                                   => _offSprintStop3p.GetValue();
	public UBlendSpace                                        BS_3pStandJogType                                              => _offBS_3pStandJogType.GetValue();
	public UBlendSpace                                        BS_3pStandWalkType                                             => _offBS_3pStandWalkType.GetValue();
	public UBlendSpace                                        BS_3pCrouchWalkType                                            => _offBS_3pCrouchWalkType.GetValue();
	public UBlendSpace1D                                      BS1D_3pProneCrawlType                                          => _offBS1D_3pProneCrawlType.GetValue();
	public UAnimSequence                                      StandStopMove                                                  => _offStandStopMove.GetValue();
	public UAnimSequence                                      CrouchStopMove                                                 => _offCrouchStopMove.GetValue();
	public UAnimMontage                                       BobbingMove1pMontage                                           => _offBobbingMove1pMontage.GetValue();
	public UAnimMontage                                       Idle1pMontage                                                  => _offIdle1pMontage.GetValue();
	public UAnimMontage                                       LeanLeftBegin3pMontage                                         => _offLeanLeftBegin3pMontage.GetValue();
	public UAnimMontage                                       LeanLeftEnd3pMontage                                           => _offLeanLeftEnd3pMontage.GetValue();
	public UAnimMontage                                       LeanRightBegin3pMontage                                        => _offLeanRightBegin3pMontage.GetValue();
	public UAnimMontage                                       LeanRightEnd3pMontage                                          => _offLeanRightEnd3pMontage.GetValue();
	public UAnimSequence                                      StandLeanLeftShuffle                                           => _offStandLeanLeftShuffle.GetValue();
	public UAnimSequence                                      StandLeanRightShuffle                                          => _offStandLeanRightShuffle.GetValue();
	public UAnimSequence                                      CrouchLeanLeftShuffle                                          => _offCrouchLeanLeftShuffle.GetValue();
	public UAnimSequence                                      CrouchLeanRightShuffle                                         => _offCrouchLeanRightShuffle.GetValue();
	public UAnimMontage                                       Lowered1pMontage                                               => _offLowered1pMontage.GetValue();
	public UAnimMontage                                       Lowered3pMontage                                               => _offLowered3pMontage.GetValue();
	public UAnimMontage                                       LoweredCrouch3pMontage                                         => _offLoweredCrouch3pMontage.GetValue();
	public FSQMontageSectionNames                             MoveBobbingEndLoopSectionNames                                 => _offMoveBobbingEndLoopSectionNames.GetValue();
	public FSQMontageSectionNames                             SprintBobbingEndLoopSectionNames                               => _offSprintBobbingEndLoopSectionNames.GetValue();
	public UBlendSpaceBase                                    BobbingProneMoveType                                           => _offBobbingProneMoveType.GetValue();
	public UAnimSequence                                      ProneMoveTypeAdditiveReference                                 => _offProneMoveTypeAdditiveReference.GetValue();
	public UAnimSequence                                      OutProneMoveType                                               => _offOutProneMoveType.GetValue();
	public UAnimSequence                                      OutProneMoveTypeNonadditive                                    => _offOutProneMoveTypeNonadditive.GetValue();
	public float                                              LeftHandWeaponIkAlpha                                          => _offLeftHandWeaponIkAlpha.GetValue();
	public float                                              RightHand3pWeaponIkAlpha                                       => _offRightHand3pWeaponIkAlpha.GetValue();
	public float                                              JogPlayRateFactorMinRange                                      => _offJogPlayRateFactorMinRange.GetValue();
	public float                                              SprintPlayRateFactorMinRange                                   => _offSprintPlayRateFactorMinRange.GetValue();
	public float                                              SprintBlendFactorMinRange                                      => _offSprintBlendFactorMinRange.GetValue();
	public float                                              SprintBlendSpeedInterpSpeed                                    => _offSprintBlendSpeedInterpSpeed.GetValue();
	public UAnimSequence                                      SprintStaticPose                                               => _offSprintStaticPose.GetValue();
	public float                                              LoweringBlendOutTime                                           => _offLoweringBlendOutTime.GetValue();
	public float                                              IdleBlendOutTime                                               => _offIdleBlendOutTime.GetValue();
	public TArray<FSQBoredMontageSet>                         BoredMontage                                                   => _offBoredMontage.GetValue();
	public float                                              BoredMaxFrequency                                              => _offBoredMaxFrequency.GetValue();
	public float                                              BoredAbortBlendOutTime                                         => _offBoredAbortBlendOutTime.GetValue();
	public TArray<FSQMutualWeapon>                            MutualWeapons                                                  => _offMutualWeapons.GetValue();
	public float                                              EmptyUnequipDuration                                           => _offEmptyUnequipDuration.GetValue();
	public float                                              EmptyEquipDuration                                             => _offEmptyEquipDuration.GetValue();
	public byte/*(bool)*/                                     bUseAutoLowering                                               => _offbUseAutoLowering.GetValue();
	public float                                              LoweringTimer                                                  => _offLoweringTimer.GetValue();
	public float                                              ItemCollisionDistance                                          => _offItemCollisionDistance.GetValue();
	public byte/*(bool)*/                                     bReturnToADSAfterItemCollision                                 => _offbReturnToADSAfterItemCollision.GetValue();
	public UClass                                             FireShake                                                      => _offFireShake.GetValue();
	public FVector                                            StandLoc                                                       => _offStandLoc.GetValue();
	public FVector                                            CrouchLoc                                                      => _offCrouchLoc.GetValue();
	public FVector                                            ProneLoc                                                       => _offProneLoc.GetValue();
	public FVector                                            BipodLoc                                                       => _offBipodLoc.GetValue();
	public float                                              StandLocBlendTime                                              => _offStandLocBlendTime.GetValue();
	public FRotator                                           OffsetLineOfFire                                               => _offOffsetLineOfFire.GetValue();
	public FVector                                            StandLeanLeftRootOffset                                        => _offStandLeanLeftRootOffset.GetValue();
	public FRotator                                           StandLeanLeftWeaponRotation                                    => _offStandLeanLeftWeaponRotation.GetValue();
	public FRotator                                           StandLeanLeftCameraRotation                                    => _offStandLeanLeftCameraRotation.GetValue();
	public FVector                                            StandLeanRightRootOffset                                       => _offStandLeanRightRootOffset.GetValue();
	public FRotator                                           StandLeanRightWeaponRotation                                   => _offStandLeanRightWeaponRotation.GetValue();
	public FRotator                                           StandLeanRightCameraRotation                                   => _offStandLeanRightCameraRotation.GetValue();
	public FVector                                            CrouchLeanLeftRootOffset                                       => _offCrouchLeanLeftRootOffset.GetValue();
	public FRotator                                           CrouchLeanLeftWeaponRotation                                   => _offCrouchLeanLeftWeaponRotation.GetValue();
	public FRotator                                           CrouchLeanLeftCameraRotation                                   => _offCrouchLeanLeftCameraRotation.GetValue();
	public FVector                                            CrouchLeanRightRootOffset                                      => _offCrouchLeanRightRootOffset.GetValue();
	public FRotator                                           CrouchLeanRightWeaponRotation                                  => _offCrouchLeanRightWeaponRotation.GetValue();
	public FRotator                                           CrouchLeanRightCameraRotation                                  => _offCrouchLeanRightCameraRotation.GetValue();
	public FVector                                            ProneLeanLeftRootOffset                                        => _offProneLeanLeftRootOffset.GetValue();
	public FRotator                                           ProneLeanLeftWeaponRotation                                    => _offProneLeanLeftWeaponRotation.GetValue();
	public FRotator                                           ProneLeanLeftCameraRotation                                    => _offProneLeanLeftCameraRotation.GetValue();
	public FVector                                            ProneLeanRightRootOffset                                       => _offProneLeanRightRootOffset.GetValue();
	public FRotator                                           ProneLeanRightWeaponRotation                                   => _offProneLeanRightWeaponRotation.GetValue();
	public FRotator                                           ProneLeanRightCameraRotation                                   => _offProneLeanRightCameraRotation.GetValue();
	public FVector                                            FpvLowerRootBoneOffset                                         => _offFpvLowerRootBoneOffset.GetValue();
	public FVector                                            FpvTorsoCameraOffset                                           => _offFpvTorsoCameraOffset.GetValue();
	public int                                                WeaponSpringSide                                               => _offWeaponSpringSide.GetValue();
	public float                                              WeaponSpringStiffness                                          => _offWeaponSpringStiffness.GetValue();
	public float                                              WeaponSpringCriticalDampingFactor                              => _offWeaponSpringCriticalDampingFactor.GetValue();
	public float                                              WeaponSpringMass                                               => _offWeaponSpringMass.GetValue();
	public float                                              WeaponSpringFactor2                                            => _offWeaponSpringFactor2.GetValue();
	public float                                              WeaponMeshSpringLocDelayFactor                                 => _offWeaponMeshSpringLocDelayFactor.GetValue();
	public float                                              WeaponMeshSpringRotDelayFactor                                 => _offWeaponMeshSpringRotDelayFactor.GetValue();
	public float                                              WeaponSpringClamp                                              => _offWeaponSpringClamp.GetValue();
	public float                                              WeaponSpringTurnSpeedToFullIntensity                           => _offWeaponSpringTurnSpeedToFullIntensity.GetValue();
	public FRotator                                           StrafeSpringRotator                                            => _offStrafeSpringRotator.GetValue();
	public FVector                                            StrafeSpringVector                                             => _offStrafeSpringVector.GetValue();
	public FRotator                                           AdsStrafeSpringRotator                                         => _offAdsStrafeSpringRotator.GetValue();
	public FName                                              SoundsSocket                                                   => _offSoundsSocket.GetValue();
	public USoundCue                                          FireSound1P                                                    => _offFireSound1P.GetValue();
	public USoundCue                                          FireSound3P                                                    => _offFireSound3P.GetValue();
	public USoundCue                                          ReloadSound1P                                                  => _offReloadSound1P.GetValue();
	public USoundCue                                          ReloadSound3P                                                  => _offReloadSound3P.GetValue();
	public USoundCue                                          DryReloadSound1P                                               => _offDryReloadSound1P.GetValue();
	public USoundCue                                          DryReloadSound3P                                               => _offDryReloadSound3P.GetValue();
	public USoundCue                                          EquipSound1P                                                   => _offEquipSound1P.GetValue();
	public USoundCue                                          EquipSound3P                                                   => _offEquipSound3P.GetValue();
	public USoundCue                                          UnequipSound1P                                                 => _offUnequipSound1P.GetValue();
	public USoundCue                                          UnequipSound3P                                                 => _offUnequipSound3P.GetValue();
	public USoundBase                                         IntoForcedLoweringSound                                        => _offIntoForcedLoweringSound.GetValue();
	public USoundBase                                         OutOfForcedLoweringSound                                       => _offOutOfForcedLoweringSound.GetValue();
	#endregion


}

// Class Squad.SQDeployableItemStaticInfo
// 0x0028 (0x0500 - 0x04D8)
public class USQDeployableItemStaticInfo : USQItemStaticInfo
{
	#region Offsets
	private ExternalOffset<UAnimMontage>                      _offPlacingDeployableWeaponMontage                             = new ExternalOffset<UAnimMontage>(0x04D8, true);              // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offPlacingDeployable1pMontage                                 = new ExternalOffset<UAnimMontage>(0x04E0, true);              // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offPlacingDeployable3pMontage                                 = new ExternalOffset<UAnimMontage>(0x04E8, true);              // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offDeployableClass                                            = new ExternalOffset<UClass>(0x04F0, true);                    // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPlacingDeployableDuration                                  = new ExternalOffset<float>(0x04F8);                           // 0x04F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFinishPlacingDeployableBlendOutDuration                    = new ExternalOffset<float>(0x04FC);                           // 0x04FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UAnimMontage                                       PlacingDeployableWeaponMontage                                 => _offPlacingDeployableWeaponMontage.GetValue();
	public UAnimMontage                                       PlacingDeployable1pMontage                                     => _offPlacingDeployable1pMontage.GetValue();
	public UAnimMontage                                       PlacingDeployable3pMontage                                     => _offPlacingDeployable3pMontage.GetValue();
	public UClass                                             DeployableClass                                                => _offDeployableClass.GetValue();
	public float                                              PlacingDeployableDuration                                      => _offPlacingDeployableDuration.GetValue();
	public float                                              FinishPlacingDeployableBlendOutDuration                        => _offFinishPlacingDeployableBlendOutDuration.GetValue();
	#endregion


}

// Class Squad.SQPawn
// 0x0094 (0x0338 - 0x02A4)
public class ASQPawn : APawn
{
	#region Offsets
//	private ExternalOffset<char>                              _offbClientUpdating                                            = new ExternalOffset<char>(0x02B0, false);                     // 0x02B0(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseEngineActorReplication                                 = new ExternalOffset<byte/*(bool)*/>(0x02B4);                  // 0x02B4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsUsingNewMovementComponent                               = new ExternalOffset<byte/*(bool)*/>(0x02B5);                  // 0x02B5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQTeam>                           _offTeam                                                       = new ExternalOffset<ESQTeam>(0x02B6, false);                  // 0x02B6(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FSQBasedMovementInfo>              _offBasedMovement                                              = new ExternalOffset<FSQBasedMovementInfo>(0x02B8, false);     // 0x02B8(0x0030) (NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<USQCoreStateComponent>             _offStateObject                                                = new ExternalOffset<USQCoreStateComponent>(0x02E8, true);     // 0x02E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offBaseTranslationOffset                                      = new ExternalOffset<FVector>(0x02F0, false);                  // 0x02F0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FQuat>                             _offBaseRotationOffset                                         = new ExternalOffset<FQuat>(0x0300, false);                    // 0x0300(0x0010) (IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbInBaseReplication                                         = new ExternalOffset<byte/*(bool)*/>(0x0310);                  // 0x0310(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPawnPossessedEvent                                       = new ExternalOffset<FScriptMulticastDelegate>(0x0318, false); // 0x0318(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPawnUnPossessedEvent                                     = new ExternalOffset<FScriptMulticastDelegate>(0x0328, false); // 0x0328(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bUseEngineActorReplication                                     => _offbUseEngineActorReplication.GetValue();
	public byte/*(bool)*/                                     bIsUsingNewMovementComponent                                   => _offbIsUsingNewMovementComponent.GetValue();
	public ESQTeam                                            Team                                                           => _offTeam.GetValue();
	public FSQBasedMovementInfo                               BasedMovement                                                  => _offBasedMovement.GetValue();
	public USQCoreStateComponent                              StateObject                                                    => _offStateObject.GetValue();
	public FVector                                            BaseTranslationOffset                                          => _offBaseTranslationOffset.GetValue();
	public FQuat                                              BaseRotationOffset                                             => _offBaseRotationOffset.GetValue();
	public byte/*(bool)*/                                     bInBaseReplication                                             => _offbInBaseReplication.GetValue();
	public FScriptMulticastDelegate                           OnPawnPossessedEvent                                           => _offOnPawnPossessedEvent.GetValue();
	public FScriptMulticastDelegate                           OnPawnUnPossessedEvent                                         => _offOnPawnUnPossessedEvent.GetValue();
	#endregion


}

// Class Squad.SQVehicleSeat
// 0x0090 (0x03C8 - 0x0338)
public class ASQVehicleSeat : ASQPawn
{
	#region Offsets
	private ExternalOffset<float>                             _offADSSpeed                                                   = new ExternalOffset<float>(0x0358);                           // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPitchLimit                                                 = new ExternalOffset<float>(0x035C);                           // 0x035C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinPitchLimit                                              = new ExternalOffset<float>(0x0360);                           // 0x0360(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offYawLimit                                                   = new ExternalOffset<float>(0x0364);                           // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinYawLimit                                                = new ExternalOffset<float>(0x0368);                           // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQVehicleSeatComponent>           _offParentSeatComponent                                        = new ExternalOffset<USQVehicleSeatComponent>(0x0370, true);   // 0x0370(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQListenerType>                   _offListenerType                                               = new ExternalOffset<ESQListenerType>(0x0378, false);          // 0x0378(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsCameraInitialized                                       = new ExternalOffset<byte/*(bool)*/>(0x0379);                  // 0x0379(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<USQVehicleComponent>>       _offVehicleComponents                                          = new ExternalOffset<TArray<USQVehicleComponent>>(0x0380, false); // 0x0380(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<USQVehicleComponent>               _offCachedVehicleEngine                                        = new ExternalOffset<USQVehicleComponent>(0x0390, true);       // 0x0390(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbTurnOut                                                   = new ExternalOffset<byte/*(bool)*/>(0x0398);                  // 0x0398(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQVehicleInventoryComponent>      _offCachedVehicleInventory                                     = new ExternalOffset<USQVehicleInventoryComponent>(0x03A0, true); // 0x03A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UCameraComponent>                  _offCachedCameraComponent                                      = new ExternalOffset<UCameraComponent>(0x03A8, true);          // 0x03A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<float>                             _offSeatHealth                                                 = new ExternalOffset<float>(0x03B0);                           // 0x03B0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<USQFreeLookComponent>              _offFreeLookComponent                                          = new ExternalOffset<USQFreeLookComponent>(0x03B8, true);      // 0x03B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQMovementComponentManager>       _offMovementComponentManager                                   = new ExternalOffset<USQMovementComponentManager>(0x03C0, true); // 0x03C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              ADSSpeed                                                       => _offADSSpeed.GetValue();
	public float                                              PitchLimit                                                     => _offPitchLimit.GetValue();
	public float                                              MinPitchLimit                                                  => _offMinPitchLimit.GetValue();
	public float                                              YawLimit                                                       => _offYawLimit.GetValue();
	public float                                              MinYawLimit                                                    => _offMinYawLimit.GetValue();
	public USQVehicleSeatComponent                            ParentSeatComponent                                            => _offParentSeatComponent.GetValue();
	public ESQListenerType                                    ListenerType                                                   => _offListenerType.GetValue();
	public byte/*(bool)*/                                     bIsCameraInitialized                                           => _offbIsCameraInitialized.GetValue();
	public TArray<USQVehicleComponent>                        VehicleComponents                                              => _offVehicleComponents.GetValue();
	public USQVehicleComponent                                CachedVehicleEngine                                            => _offCachedVehicleEngine.GetValue();
	public byte/*(bool)*/                                     bTurnOut                                                       => _offbTurnOut.GetValue();
	public USQVehicleInventoryComponent                       CachedVehicleInventory                                         => _offCachedVehicleInventory.GetValue();
	public UCameraComponent                                   CachedCameraComponent                                          => _offCachedCameraComponent.GetValue();
	public float                                              SeatHealth                                                     => _offSeatHealth.GetValue();
	public USQFreeLookComponent                               FreeLookComponent                                              => _offFreeLookComponent.GetValue();
	public USQMovementComponentManager                        MovementComponentManager                                       => _offMovementComponentManager.GetValue();
	#endregion


}

// Class Squad.SQVehicle
// 0x0450 (0x0818 - 0x03C8)
public class ASQVehicle : ASQVehicleSeat
{
	#region Offsets
	private ExternalOffset<FSQUsableData>                     _offUsableData                                                 = new ExternalOffset<FSQUsableData>(0x03D8, false);            // 0x03D8(0x0040) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offDefaultDestroyedVehicleActorClass                          = new ExternalOffset<UClass>(0x0418, true);                    // 0x0418(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQVehicleDestroyedConfig>> _offDestroyedVehicleConfig                                     = new ExternalOffset<TArray<FSQVehicleDestroyedConfig>>(0x0420, false); // 0x0420(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offTemperatureLastingEffectClass                              = new ExternalOffset<UClass>(0x0430, true);                    // 0x0430(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offTemperatureLastingEffectAttachSocket                       = new ExternalOffset<FName>(0x0438, false);                    // 0x0438(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQLastingEffect>                  _offTemperatureLastingEffect                                   = new ExternalOffset<ASQLastingEffect>(0x0440, true);          // 0x0440(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQVehicleBurningComponent>        _offBurningComponent                                           = new ExternalOffset<USQVehicleBurningComponent>(0x0448, true); // 0x0448(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offImpactCameraShake                                          = new ExternalOffset<UClass>(0x0450, true);                    // 0x0450(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offImpactEffectNormalForceThreshold                           = new ExternalOffset<float>(0x0458);                           // 0x0458(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offLightImpactSound                                           = new ExternalOffset<USoundCue>(0x0460, true);                 // 0x0460(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UParticleSystem>                   _offLightImpactEffect                                          = new ExternalOffset<UParticleSystem>(0x0468, true);           // 0x0468(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offImpactSound                                                = new ExternalOffset<USoundCue>(0x0470, true);                 // 0x0470(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UParticleSystem>                   _offImpactEffect                                               = new ExternalOffset<UParticleSystem>(0x0478, true);           // 0x0478(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDoParticlesUseRotation                                    = new ExternalOffset<byte/*(bool)*/>(0x0480);                  // 0x0480(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offPhysMatEffectsClass                                        = new ExternalOffset<UClass>(0x0488, true);                    // 0x0488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnVehicleRepairEvent                                       = new ExternalOffset<FScriptMulticastDelegate>(0x0490, false); // 0x0490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQDestroyedVehicle>               _offDestroyedVehicleActor                                      = new ExternalOffset<ASQDestroyedVehicle>(0x04A0, true);       // 0x04A0(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQVehicleClaim>                   _offClaimInfo                                                  = new ExternalOffset<USQVehicleClaim>(0x04A8, true);           // 0x04A8(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSquadState>                     _offClaimedBySquad                                             = new ExternalOffset<ASQSquadState>(0x04B0, true);             // 0x04B0(0x0008) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbClaimable                                                 = new ExternalOffset<byte/*(bool)*/>(0x04B8);                  // 0x04B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbEnterableWithoutClaim                                     = new ExternalOffset<byte/*(bool)*/>(0x04B9);                  // 0x04B9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDrivableWithoutClaim                                      = new ExternalOffset<byte/*(bool)*/>(0x04BA);                  // 0x04BA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbNonSquadMembersMayEnterWhenClaimed                        = new ExternalOffset<byte/*(bool)*/>(0x04BB);                  // 0x04BB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offNotClaimedCantEnterErrorMessage                            = new ExternalOffset<FText>(0x04C0, false);                    // 0x04C0(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offFullVehicleCantEnterErrorMessage                           = new ExternalOffset<FText>(0x04D8, false);                    // 0x04D8(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offEnemyVehicleCantEnterErrorMessage                          = new ExternalOffset<FText>(0x04F0, false);                    // 0x04F0(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offNotClaimedNeedsApprovalErrorMessage                        = new ExternalOffset<FText>(0x0508, false);                    // 0x0508(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offNotClaimedNotInSquadErrorMessage                           = new ExternalOffset<FText>(0x0520, false);                    // 0x0520(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offWrongRoleForClaimErrorMessage                              = new ExternalOffset<FText>(0x0538, false);                    // 0x0538(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offWrongRoleForSeatErrorMessage                               = new ExternalOffset<FText>(0x0550, false);                    // 0x0550(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offFullVehicleOrWrongRoleCantEnterErrorMessage                = new ExternalOffset<FText>(0x0568, false);                    // 0x0568(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offSeatFilledErrorMessage                                     = new ExternalOffset<FText>(0x0580, false);                    // 0x0580(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offSeatBeingEnteredErrorMessage                               = new ExternalOffset<FText>(0x0598, false);                    // 0x0598(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offClaimedByAnotherSquadCantEnterErrorMessage                 = new ExternalOffset<FText>(0x05B0, false);                    // 0x05B0(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offCrewmanRole                                                = new ExternalOffset<FText>(0x05C8, false);                    // 0x05C8(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offPilotRole                                                  = new ExternalOffset<FText>(0x05E0, false);                    // 0x05E0(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offVelocityVsCollisionDamageCurve                             = new ExternalOffset<UCurveFloat>(0x05F8, true);               // 0x05F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCollisionDamageThesholdGs                                  = new ExternalOffset<float>(0x0600);                           // 0x0600(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCollisionsDamageVelocityThreshold                          = new ExternalOffset<float>(0x0604);                           // 0x0604(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offVehicleToOccupantCollisionDamageScaler                     = new ExternalOffset<float>(0x0608);                           // 0x0608(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQBoundaryListener>               _offBoundaryListener                                           = new ExternalOffset<USQBoundaryListener>(0x0610, true);       // 0x0610(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQCollisionDamage>                _offCollisionDamage                                            = new ExternalOffset<USQCollisionDamage>(0x0618, true);        // 0x0618(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQVehicleType>                    _offVehicleType                                                = new ExternalOffset<ESQVehicleType>(0x0628, false);           // 0x0628(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture>                          _offVehicleIconTexture                                         = new ExternalOffset<UTexture>(0x0630, true);                  // 0x0630(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offVehicleIconColor                                           = new ExternalOffset<FLinearColor>(0x0638, false);             // 0x0638(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offVehicleIconOffset                                          = new ExternalOffset<FVector2D>(0x0648, false);                // 0x0648(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offVehicleIconSize                                            = new ExternalOffset<FVector2D>(0x0650, false);                // 0x0650(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLastRepairedTime                                           = new ExternalOffset<float>(0x0658);                           // 0x0658(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPercentDriverGetsForKill                                   = new ExternalOffset<float>(0x065C);                           // 0x065C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLastSeatEventTime                                          = new ExternalOffset<float>(0x0660);                           // 0x0660(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbPreventVehicleEntrance                                    = new ExternalOffset<byte/*(bool)*/>(0x0664);                  // 0x0664(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxVehicleEntryDistance                                    = new ExternalOffset<float>(0x0668);                           // 0x0668(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQVehicleSeatConfig>              _offDriverSeatConfig                                           = new ExternalOffset<FSQVehicleSeatConfig>(0x0670, false);     // 0x0670(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<FSQVehicleSeatConfig>>      _offAdditionalSeatsConfig                                      = new ExternalOffset<TArray<FSQVehicleSeatConfig>>(0x06C0, false); // 0x06C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<USQVehicleSeatComponent>>   _offVehicleSeats                                               = new ExternalOffset<TArray<USQVehicleSeatComponent>>(0x06D0, false); // 0x06D0(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<USkeletalMeshComponent>            _offVehicleMesh                                                = new ExternalOffset<USkeletalMeshComponent>(0x06E0, true);    // 0x06E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsVehicleDamagedByRadialExplosions                        = new ExternalOffset<byte/*(bool)*/>(0x06E8);                  // 0x06E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnVehicleDestroyed                                         = new ExternalOffset<FScriptMulticastDelegate>(0x06F0, false); // 0x06F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPlayerEntered                                            = new ExternalOffset<FScriptMulticastDelegate>(0x0700, false); // 0x0700(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPlayerExited                                             = new ExternalOffset<FScriptMulticastDelegate>(0x0710, false); // 0x0710(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPlayerSwitchedSeats                                      = new ExternalOffset<FScriptMulticastDelegate>(0x0720, false); // 0x0720(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offAmmoUpdatedEvent                                           = new ExternalOffset<FScriptMulticastDelegate>(0x0730, false); // 0x0730(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offOnVehicleEnterSound                                        = new ExternalOffset<USoundCue>(0x0740, true);                 // 0x0740(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offOnVehicleExitSound                                         = new ExternalOffset<USoundCue>(0x0748, true);                 // 0x0748(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offOnSeatSwitchSound                                          = new ExternalOffset<USoundCue>(0x0750, true);                 // 0x0750(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQBuffManager>                    _offBuffs                                                      = new ExternalOffset<USQBuffManager>(0x0758, true);            // 0x0758(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHealth                                                     = new ExternalOffset<float>(0x0760);                           // 0x0760(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxHealth                                                  = new ExternalOffset<float>(0x0764);                           // 0x0764(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UClass>                            _offLastDamageTypeClass                                        = new ExternalOffset<UClass>(0x0768, true);                    // 0x0768(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<AController>                       _offLastDamageInstigator                                       = new ExternalOffset<AController>(0x0770, true);               // 0x0770(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCanStackRepairers                                         = new ExternalOffset<byte/*(bool)*/>(0x0778);                  // 0x0778(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxRepairToolLimit                                         = new ExternalOffset<float>(0x077C);                           // 0x077C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offLastDamageInstigatorTimeoutThreshold                       = new ExternalOffset<float>(0x0780);                           // 0x0780(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFlipPitchThreshold                                         = new ExternalOffset<float>(0x078C);                           // 0x078C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFlipRollThreshold                                          = new ExternalOffset<float>(0x0790);                           // 0x0790(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFlipSpeedThreshold                                         = new ExternalOffset<float>(0x0794);                           // 0x0794(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFlipRotationExceededTimeThreshold                          = new ExternalOffset<float>(0x079C);                           // 0x079C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDestroyTime                                                = new ExternalOffset<float>(0x07A0);                           // 0x07A0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbHasBeenDestroyed                                          = new ExternalOffset<byte/*(bool)*/>(0x07A4);                  // 0x07A4(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<FSQDamageModifier>>         _offAllowableDamageTypes                                       = new ExternalOffset<TArray<FSQDamageModifier>>(0x07A8, false); // 0x07A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQDamageTypeEffects>              _offDamageEffects                                              = new ExternalOffset<FSQDamageTypeEffects>(0x07B8, false);     // 0x07B8(0x0028) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<USQVehicleUIStaticDataAsset>       _offStaticUIData                                               = new ExternalOffset<USQVehicleUIStaticDataAsset>(0x07E0, true); // 0x07E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxThrottle                                                = new ExternalOffset<float>(0x07E8);                           // 0x07E8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<FSQVehicleQueueEntry>>      _offPlayerSeatPairInfoArray                                    = new ExternalOffset<TArray<FSQVehicleQueueEntry>>(0x07F0, false); // 0x07F0(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	private ExternalOffset<TArray<AActor>>                    _offCurrentRepairers                                           = new ExternalOffset<TArray<AActor>>(0x0808, false);           // 0x0808(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public FSQUsableData                                      UsableData                                                     => _offUsableData.GetValue();
	public UClass                                             DefaultDestroyedVehicleActorClass                              => _offDefaultDestroyedVehicleActorClass.GetValue();
	public TArray<FSQVehicleDestroyedConfig>                  DestroyedVehicleConfig                                         => _offDestroyedVehicleConfig.GetValue();
	public UClass                                             TemperatureLastingEffectClass                                  => _offTemperatureLastingEffectClass.GetValue();
	public FName                                              TemperatureLastingEffectAttachSocket                           => _offTemperatureLastingEffectAttachSocket.GetValue();
	public ASQLastingEffect                                   TemperatureLastingEffect                                       => _offTemperatureLastingEffect.GetValue();
	public USQVehicleBurningComponent                         BurningComponent                                               => _offBurningComponent.GetValue();
	public UClass                                             ImpactCameraShake                                              => _offImpactCameraShake.GetValue();
	public float                                              ImpactEffectNormalForceThreshold                               => _offImpactEffectNormalForceThreshold.GetValue();
	public USoundCue                                          LightImpactSound                                               => _offLightImpactSound.GetValue();
	public UParticleSystem                                    LightImpactEffect                                              => _offLightImpactEffect.GetValue();
	public USoundCue                                          ImpactSound                                                    => _offImpactSound.GetValue();
	public UParticleSystem                                    ImpactEffect                                                   => _offImpactEffect.GetValue();
	public byte/*(bool)*/                                     bDoParticlesUseRotation                                        => _offbDoParticlesUseRotation.GetValue();
	public UClass                                             PhysMatEffectsClass                                            => _offPhysMatEffectsClass.GetValue();
	public FScriptMulticastDelegate                           OnVehicleRepairEvent                                           => _offOnVehicleRepairEvent.GetValue();
	public ASQDestroyedVehicle                                DestroyedVehicleActor                                          => _offDestroyedVehicleActor.GetValue();
	public USQVehicleClaim                                    ClaimInfo                                                      => _offClaimInfo.GetValue();
	public ASQSquadState                                      ClaimedBySquad                                                 => _offClaimedBySquad.GetValue();
	public byte/*(bool)*/                                     bClaimable                                                     => _offbClaimable.GetValue();
	public byte/*(bool)*/                                     bEnterableWithoutClaim                                         => _offbEnterableWithoutClaim.GetValue();
	public byte/*(bool)*/                                     bDrivableWithoutClaim                                          => _offbDrivableWithoutClaim.GetValue();
	public byte/*(bool)*/                                     bNonSquadMembersMayEnterWhenClaimed                            => _offbNonSquadMembersMayEnterWhenClaimed.GetValue();
	public FText                                              NotClaimedCantEnterErrorMessage                                => _offNotClaimedCantEnterErrorMessage.GetValue();
	public FText                                              FullVehicleCantEnterErrorMessage                               => _offFullVehicleCantEnterErrorMessage.GetValue();
	public FText                                              EnemyVehicleCantEnterErrorMessage                              => _offEnemyVehicleCantEnterErrorMessage.GetValue();
	public FText                                              NotClaimedNeedsApprovalErrorMessage                            => _offNotClaimedNeedsApprovalErrorMessage.GetValue();
	public FText                                              NotClaimedNotInSquadErrorMessage                               => _offNotClaimedNotInSquadErrorMessage.GetValue();
	public FText                                              WrongRoleForClaimErrorMessage                                  => _offWrongRoleForClaimErrorMessage.GetValue();
	public FText                                              WrongRoleForSeatErrorMessage                                   => _offWrongRoleForSeatErrorMessage.GetValue();
	public FText                                              FullVehicleOrWrongRoleCantEnterErrorMessage                    => _offFullVehicleOrWrongRoleCantEnterErrorMessage.GetValue();
	public FText                                              SeatFilledErrorMessage                                         => _offSeatFilledErrorMessage.GetValue();
	public FText                                              SeatBeingEnteredErrorMessage                                   => _offSeatBeingEnteredErrorMessage.GetValue();
	public FText                                              ClaimedByAnotherSquadCantEnterErrorMessage                     => _offClaimedByAnotherSquadCantEnterErrorMessage.GetValue();
	public FText                                              CrewmanRole                                                    => _offCrewmanRole.GetValue();
	public FText                                              PilotRole                                                      => _offPilotRole.GetValue();
	public UCurveFloat                                        VelocityVsCollisionDamageCurve                                 => _offVelocityVsCollisionDamageCurve.GetValue();
	public float                                              CollisionDamageThesholdGs                                      => _offCollisionDamageThesholdGs.GetValue();
	public float                                              CollisionsDamageVelocityThreshold                              => _offCollisionsDamageVelocityThreshold.GetValue();
	public float                                              VehicleToOccupantCollisionDamageScaler                         => _offVehicleToOccupantCollisionDamageScaler.GetValue();
	public USQBoundaryListener                                BoundaryListener                                               => _offBoundaryListener.GetValue();
	public USQCollisionDamage                                 CollisionDamage                                                => _offCollisionDamage.GetValue();
	public ESQVehicleType                                     VehicleType                                                    => _offVehicleType.GetValue();
	public UTexture                                           VehicleIconTexture                                             => _offVehicleIconTexture.GetValue();
	public FLinearColor                                       VehicleIconColor                                               => _offVehicleIconColor.GetValue();
	public FVector2D                                          VehicleIconOffset                                              => _offVehicleIconOffset.GetValue();
	public FVector2D                                          VehicleIconSize                                                => _offVehicleIconSize.GetValue();
	public float                                              LastRepairedTime                                               => _offLastRepairedTime.GetValue();
	public float                                              PercentDriverGetsForKill                                       => _offPercentDriverGetsForKill.GetValue();
	public float                                              LastSeatEventTime                                              => _offLastSeatEventTime.GetValue();
	public byte/*(bool)*/                                     bPreventVehicleEntrance                                        => _offbPreventVehicleEntrance.GetValue();
	public float                                              MaxVehicleEntryDistance                                        => _offMaxVehicleEntryDistance.GetValue();
	public FSQVehicleSeatConfig                               DriverSeatConfig                                               => _offDriverSeatConfig.GetValue();
	public TArray<FSQVehicleSeatConfig>                       AdditionalSeatsConfig                                          => _offAdditionalSeatsConfig.GetValue();
	public TArray<USQVehicleSeatComponent>                    VehicleSeats                                                   => _offVehicleSeats.GetValue();
	public USkeletalMeshComponent                             VehicleMesh                                                    => _offVehicleMesh.GetValue();
	public byte/*(bool)*/                                     bIsVehicleDamagedByRadialExplosions                            => _offbIsVehicleDamagedByRadialExplosions.GetValue();
	public FScriptMulticastDelegate                           OnVehicleDestroyed                                             => _offOnVehicleDestroyed.GetValue();
	public FScriptMulticastDelegate                           OnPlayerEntered                                                => _offOnPlayerEntered.GetValue();
	public FScriptMulticastDelegate                           OnPlayerExited                                                 => _offOnPlayerExited.GetValue();
	public FScriptMulticastDelegate                           OnPlayerSwitchedSeats                                          => _offOnPlayerSwitchedSeats.GetValue();
	public FScriptMulticastDelegate                           AmmoUpdatedEvent                                               => _offAmmoUpdatedEvent.GetValue();
	public USoundCue                                          OnVehicleEnterSound                                            => _offOnVehicleEnterSound.GetValue();
	public USoundCue                                          OnVehicleExitSound                                             => _offOnVehicleExitSound.GetValue();
	public USoundCue                                          OnSeatSwitchSound                                              => _offOnSeatSwitchSound.GetValue();
	public USQBuffManager                                     Buffs                                                          => _offBuffs.GetValue();
	public float                                              Health                                                         => _offHealth.GetValue();
	public float                                              MaxHealth                                                      => _offMaxHealth.GetValue();
	public UClass                                             LastDamageTypeClass                                            => _offLastDamageTypeClass.GetValue();
	public AController                                        LastDamageInstigator                                           => _offLastDamageInstigator.GetValue();
	public byte/*(bool)*/                                     bCanStackRepairers                                             => _offbCanStackRepairers.GetValue();
	public float                                              MaxRepairToolLimit                                             => _offMaxRepairToolLimit.GetValue();
	public float                                              LastDamageInstigatorTimeoutThreshold                           => _offLastDamageInstigatorTimeoutThreshold.GetValue();
	public float                                              FlipPitchThreshold                                             => _offFlipPitchThreshold.GetValue();
	public float                                              FlipRollThreshold                                              => _offFlipRollThreshold.GetValue();
	public float                                              FlipSpeedThreshold                                             => _offFlipSpeedThreshold.GetValue();
	public float                                              FlipRotationExceededTimeThreshold                              => _offFlipRotationExceededTimeThreshold.GetValue();
	public float                                              DestroyTime                                                    => _offDestroyTime.GetValue();
	public byte/*(bool)*/                                     bHasBeenDestroyed                                              => _offbHasBeenDestroyed.GetValue();
	public TArray<FSQDamageModifier>                          AllowableDamageTypes                                           => _offAllowableDamageTypes.GetValue();
	public FSQDamageTypeEffects                               DamageEffects                                                  => _offDamageEffects.GetValue();
	public USQVehicleUIStaticDataAsset                        StaticUIData                                                   => _offStaticUIData.GetValue();
	public float                                              MaxThrottle                                                    => _offMaxThrottle.GetValue();
	public TArray<FSQVehicleQueueEntry>                       PlayerSeatPairInfoArray                                        => _offPlayerSeatPairInfoArray.GetValue();
	public TArray<AActor>                                     CurrentRepairers                                               => _offCurrentRepairers.GetValue();
	#endregion


}

// Class Squad.SQDeployableVehicle
// 0x0068 (0x0880 - 0x0818)
public class ASQDeployableVehicle : ASQVehicle
{
	#region Offsets
	private ExternalOffset<USQVehicleInventoryComponent>      _offInventoryComponent                                         = new ExternalOffset<USQVehicleInventoryComponent>(0x0818, true); // 0x0818(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQMapIconComponent>               _offMapIconComponent                                           = new ExternalOffset<USQMapIconComponent>(0x0820, true);       // 0x0820(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQVehicleExitPointComponent>      _offVehicleExitPoint                                           = new ExternalOffset<USQVehicleExitPointComponent>(0x0828, true); // 0x0828(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USkeletalMeshComponent>            _offSwivelMeshComponent                                        = new ExternalOffset<USkeletalMeshComponent>(0x0830, true);    // 0x0830(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USceneComponent>                   _offGunMountComponent                                          = new ExternalOffset<USceneComponent>(0x0838, true);           // 0x0838(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USceneComponent>                   _offCamera1pPositionComponent                                  = new ExternalOffset<USceneComponent>(0x0840, true);           // 0x0840(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCameraComponent>                  _offCamera1pComponent                                          = new ExternalOffset<UCameraComponent>(0x0848, true);          // 0x0848(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USpringArmComponent>               _offCamera3pSpringComponent                                    = new ExternalOffset<USpringArmComponent>(0x0850, true);       // 0x0850(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCameraComponent>                  _offCamera3pComponent                                          = new ExternalOffset<UCameraComponent>(0x0858, true);          // 0x0858(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsInThirdPerson                                           = new ExternalOffset<byte/*(bool)*/>(0x0860);                  // 0x0860(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQDeployable>                     _offOwningDeployable                                           = new ExternalOffset<ASQDeployable>(0x0868, true);             // 0x0868(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<USQRotatingMovementComponent>      _offYawMovementComponent                                       = new ExternalOffset<USQRotatingMovementComponent>(0x0870, true); // 0x0870(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQRotatingMovementComponent>      _offPitchMovementComponent                                     = new ExternalOffset<USQRotatingMovementComponent>(0x0878, true); // 0x0878(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public USQVehicleInventoryComponent                       InventoryComponent                                             => _offInventoryComponent.GetValue();
	public USQMapIconComponent                                MapIconComponent                                               => _offMapIconComponent.GetValue();
	public USQVehicleExitPointComponent                       VehicleExitPoint                                               => _offVehicleExitPoint.GetValue();
	public USkeletalMeshComponent                             SwivelMeshComponent                                            => _offSwivelMeshComponent.GetValue();
	public USceneComponent                                    GunMountComponent                                              => _offGunMountComponent.GetValue();
	public USceneComponent                                    Camera1pPositionComponent                                      => _offCamera1pPositionComponent.GetValue();
	public UCameraComponent                                   Camera1pComponent                                              => _offCamera1pComponent.GetValue();
	public USpringArmComponent                                Camera3pSpringComponent                                        => _offCamera3pSpringComponent.GetValue();
	public UCameraComponent                                   Camera3pComponent                                              => _offCamera3pComponent.GetValue();
	public byte/*(bool)*/                                     bIsInThirdPerson                                               => _offbIsInThirdPerson.GetValue();
	public ASQDeployable                                      OwningDeployable                                               => _offOwningDeployable.GetValue();
	public USQRotatingMovementComponent                       YawMovementComponent                                           => _offYawMovementComponent.GetValue();
	public USQRotatingMovementComponent                       PitchMovementComponent                                         => _offPitchMovementComponent.GetValue();
	#endregion


}

// Class Squad.SQDeployableMortarVehicle
// 0x0004 (0x0884 - 0x0880)
public class ASQDeployableMortarVehicle : ASQDeployableVehicle
{
	#region Offsets
	private ExternalOffset<float>                             _offCachedTubePitch                                            = new ExternalOffset<float>(0x0880);                           // 0x0880(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              CachedTubePitch                                                => _offCachedTubePitch.GetValue();
	#endregion


}

// Class Squad.SQDeployableTripodVehicle
// 0x0008 (0x0888 - 0x0880)
public class ASQDeployableTripodVehicle : ASQDeployableVehicle
{
	#region Offsets
	private ExternalOffset<USceneComponent>                   _offAdsCamera1pPositionComponent                               = new ExternalOffset<USceneComponent>(0x0880, true);           // 0x0880(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USceneComponent                                    AdsCamera1pPositionComponent                                   => _offAdsCamera1pPositionComponent.GetValue();
	#endregion


}

// Class Squad.SQDestroyedVehicle
// 0x00D4 (0x030C - 0x0238)
public class ASQDestroyedVehicle : AActor
{
	#region Offsets
	private ExternalOffset<UStaticMeshComponent>              _offVehicleMesh                                                = new ExternalOffset<UStaticMeshComponent>(0x0248, true);      // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsSimulatingInEditor                                      = new ExternalOffset<byte/*(bool)*/>(0x0250);                  // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbSimulatePhysics                                           = new ExternalOffset<byte/*(bool)*/>(0x0251);                  // 0x0251(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbPlayEffectsWhenReady                                      = new ExternalOffset<byte/*(bool)*/>(0x0252);                  // 0x0252(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQLastingEffect>                  _offTemperatureLastingEffect                                   = new ExternalOffset<ASQLastingEffect>(0x0258, true);          // 0x0258(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offTemperatureLastingEffectAttachSocket                       = new ExternalOffset<FName>(0x0260, false);                    // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTemperatureLastingEffectLifetime                           = new ExternalOffset<float>(0x0268);                           // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinReplicationTime                                         = new ExternalOffset<float>(0x026C);                           // 0x026C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQVehicle>                        _offOriginalVehicle                                            = new ExternalOffset<ASQVehicle>(0x0278, true);                // 0x0278(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offDeathDamageType                                            = new ExternalOffset<UClass>(0x0280, true);                    // 0x0280(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQVehicleDestroyEffectConfig>> _offDeathEffectConfig                                          = new ExternalOffset<TArray<FSQVehicleDestroyEffectConfig>>(0x0288, false); // 0x0288(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offDestroyedEffectsSocket                                     = new ExternalOffset<FName>(0x0298, false);                    // 0x0298(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UParticleSystem>                   _offDestroyedParticleEffect                                    = new ExternalOffset<UParticleSystem>(0x02A0, true);           // 0x02A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offDestroyedShockwaveEffect                                   = new ExternalOffset<UClass>(0x02A8, true);                    // 0x02A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offDestroyedSound                                             = new ExternalOffset<USoundCue>(0x02B0, true);                 // 0x02B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offDestroyedDebrisSound                                       = new ExternalOffset<USoundCue>(0x02B8, true);                 // 0x02B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQDamageModifier>>         _offAllowableDamageTypes                                       = new ExternalOffset<TArray<FSQDamageModifier>>(0x02C0, false); // 0x02C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHealth                                                     = new ExternalOffset<float>(0x02D0);                           // 0x02D0(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxHealth                                                  = new ExternalOffset<float>(0x02D4);                           // 0x02D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offLastDamageTypeClass                                        = new ExternalOffset<UClass>(0x02D8, true);                    // 0x02D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<AController>                       _offLastDamageInstigator                                       = new ExternalOffset<AController>(0x02E0, true);               // 0x02E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offDefaultEffectsClass                                        = new ExternalOffset<UClass>(0x02E8, true);                    // 0x02E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offInitialVelocity                                            = new ExternalOffset<FVector>(0x02F0, false);                  // 0x02F0(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offInitialAngularVelocity                                     = new ExternalOffset<FVector>(0x02FC, false);                  // 0x02FC(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLifespanInProtectionZone                                   = new ExternalOffset<float>(0x0308);                           // 0x0308(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UStaticMeshComponent                               VehicleMesh                                                    => _offVehicleMesh.GetValue();
	public byte/*(bool)*/                                     bIsSimulatingInEditor                                          => _offbIsSimulatingInEditor.GetValue();
	public byte/*(bool)*/                                     bSimulatePhysics                                               => _offbSimulatePhysics.GetValue();
	public byte/*(bool)*/                                     bPlayEffectsWhenReady                                          => _offbPlayEffectsWhenReady.GetValue();
	public ASQLastingEffect                                   TemperatureLastingEffect                                       => _offTemperatureLastingEffect.GetValue();
	public FName                                              TemperatureLastingEffectAttachSocket                           => _offTemperatureLastingEffectAttachSocket.GetValue();
	public float                                              TemperatureLastingEffectLifetime                               => _offTemperatureLastingEffectLifetime.GetValue();
	public float                                              MinReplicationTime                                             => _offMinReplicationTime.GetValue();
	public ASQVehicle                                         OriginalVehicle                                                => _offOriginalVehicle.GetValue();
	public UClass                                             DeathDamageType                                                => _offDeathDamageType.GetValue();
	public TArray<FSQVehicleDestroyEffectConfig>              DeathEffectConfig                                              => _offDeathEffectConfig.GetValue();
	public FName                                              DestroyedEffectsSocket                                         => _offDestroyedEffectsSocket.GetValue();
	public UParticleSystem                                    DestroyedParticleEffect                                        => _offDestroyedParticleEffect.GetValue();
	public UClass                                             DestroyedShockwaveEffect                                       => _offDestroyedShockwaveEffect.GetValue();
	public USoundCue                                          DestroyedSound                                                 => _offDestroyedSound.GetValue();
	public USoundCue                                          DestroyedDebrisSound                                           => _offDestroyedDebrisSound.GetValue();
	public TArray<FSQDamageModifier>                          AllowableDamageTypes                                           => _offAllowableDamageTypes.GetValue();
	public float                                              Health                                                         => _offHealth.GetValue();
	public float                                              MaxHealth                                                      => _offMaxHealth.GetValue();
	public UClass                                             LastDamageTypeClass                                            => _offLastDamageTypeClass.GetValue();
	public AController                                        LastDamageInstigator                                           => _offLastDamageInstigator.GetValue();
	public UClass                                             DefaultEffectsClass                                            => _offDefaultEffectsClass.GetValue();
	public FVector                                            InitialVelocity                                                => _offInitialVelocity.GetValue();
	public FVector                                            InitialAngularVelocity                                         => _offInitialAngularVelocity.GetValue();
	public float                                              LifespanInProtectionZone                                       => _offLifespanInProtectionZone.GetValue();
	#endregion


}

// Class Squad.SQDetonatorStaticInfo
// 0x0031 (0x0509 - 0x04D8)
public class USQDetonatorStaticInfo : USQItemStaticInfo
{
	#region Offsets
	private ExternalOffset<UAnimMontage>                      _offDetonatorUseWeaponMontage                                  = new ExternalOffset<UAnimMontage>(0x04D8, true);              // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offDetonatorUse1pMontage                                      = new ExternalOffset<UAnimMontage>(0x04E0, true);              // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offDetonatorUse3pMontage                                      = new ExternalOffset<UAnimMontage>(0x04E8, true);              // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offIEDClass                                                   = new ExternalOffset<UClass>(0x04F0, true);                    // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offRandomDetonationDelayRange                                 = new ExternalOffset<FVector2D>(0x04F8, false);                // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDetonationDelay                                            = new ExternalOffset<float>(0x0500);                           // 0x0500(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDetonatorUseDuration                                       = new ExternalOffset<float>(0x0504);                           // 0x0504(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseRandomDetonationDelay                                  = new ExternalOffset<byte/*(bool)*/>(0x0508);                  // 0x0508(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UAnimMontage                                       DetonatorUseWeaponMontage                                      => _offDetonatorUseWeaponMontage.GetValue();
	public UAnimMontage                                       DetonatorUse1pMontage                                          => _offDetonatorUse1pMontage.GetValue();
	public UAnimMontage                                       DetonatorUse3pMontage                                          => _offDetonatorUse3pMontage.GetValue();
	public UClass                                             IEDClass                                                       => _offIEDClass.GetValue();
	public FVector2D                                          RandomDetonationDelayRange                                     => _offRandomDetonationDelayRange.GetValue();
	public float                                              DetonationDelay                                                => _offDetonationDelay.GetValue();
	public float                                              DetonatorUseDuration                                           => _offDetonatorUseDuration.GetValue();
	public byte/*(bool)*/                                     bUseRandomDetonationDelay                                      => _offbUseRandomDetonationDelay.GetValue();
	#endregion


}

// Class Squad.SQRotorsAnimInstance
// 0x0058 (0x02E8 - 0x0290)
public class USQRotorsAnimInstance : USQAnimInstance
{
	#region Offsets
	private ExternalOffset<USQRotorVehicleMovementComponent>  _offRotorMovementComponent                                     = new ExternalOffset<USQRotorVehicleMovementComponent>(0x0290, true); // 0x0290(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
//	private TMap<struct FName, struct FRotator>               _offRotationsMap                                               = new ExternalOffset<TMap<FRotator>>(0x0298, false);           // 0x0298(0x0050) (ZeroConstructor, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public USQRotorVehicleMovementComponent                   RotorMovementComponent                                         => _offRotorMovementComponent.GetValue();
	#endregion


}

// Class Squad.SQDoubleRotorAnimInstance
// 0x0030 (0x0318 - 0x02E8)
public class USQDoubleRotorAnimInstance : USQRotorsAnimInstance
{
	#region Offsets
	private ExternalOffset<FName>                             _offRotor1Name                                                 = new ExternalOffset<FName>(0x02F0, false);                    // 0x02F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offRotor2Name                                                 = new ExternalOffset<FName>(0x02F8, false);                    // 0x02F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offRotor1Rotation                                             = new ExternalOffset<FRotator>(0x0300, false);                 // 0x0300(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offRotor2Rotation                                             = new ExternalOffset<FRotator>(0x030C, false);                 // 0x030C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FName                                              Rotor1Name                                                     => _offRotor1Name.GetValue();
	public FName                                              Rotor2Name                                                     => _offRotor2Name.GetValue();
	public FRotator                                           Rotor1Rotation                                                 => _offRotor1Rotation.GetValue();
	public FRotator                                           Rotor2Rotation                                                 => _offRotor2Rotation.GetValue();
	#endregion


}

// Class Squad.SQDPICustomScalingRule
// 0x0000 (0x0028 - 0x0028)
public class USQDPICustomScalingRule : UDPICustomScalingRule
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQDrawChatWidget
// 0x0010 (0x0240 - 0x0230)
public class USQDrawChatWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<TArray<FSQDrawChatStruct>>         _offMessagesToDraw                                             = new ExternalOffset<TArray<FSQDrawChatStruct>>(0x0230, false); // 0x0230(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public TArray<FSQDrawChatStruct>                          MessagesToDraw                                                 => _offMessagesToDraw.GetValue();
	#endregion


}

// Class Squad.SQVehicleComponent
// 0x00D0 (0x0568 - 0x0498)
public class USQVehicleComponent : UStaticMeshComponent
{
	#region Offsets
	private ExternalOffset<TArray<FSQDamageModifier>>         _offAllowableDamageTypes                                       = new ExternalOffset<TArray<FSQDamageModifier>>(0x04A0, false); // 0x04A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCanBeDestroyed                                            = new ExternalOffset<byte/*(bool)*/>(0x04B0);                  // 0x04B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxRepairToolLimit                                         = new ExternalOffset<float>(0x04B4);                           // 0x04B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UStaticMesh>                       _offFullyRepairedComponentMesh                                 = new ExternalOffset<UStaticMesh>(0x04B8, true);               // 0x04B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UStaticMesh>                       _offRepairedFromDestructionComponentMesh                       = new ExternalOffset<UStaticMesh>(0x04C0, true);               // 0x04C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UStaticMesh>                       _offDestroyedComponentMesh                                     = new ExternalOffset<UStaticMesh>(0x04C8, true);               // 0x04C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQVehicle>                        _offParentVehicle                                              = new ExternalOffset<ASQVehicle>(0x04D0, true);                // 0x04D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UParticleSystem>                   _offBurningEffect                                              = new ExternalOffset<UParticleSystem>(0x04D8, true);           // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offBurningSound                                               = new ExternalOffset<USoundCue>(0x04E0, true);                 // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offBurningAudioComponent                                      = new ExternalOffset<UAudioComponent>(0x04E8, true);           // 0x04E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UParticleSystem>                   _offDestroyedExplosion                                         = new ExternalOffset<UParticleSystem>(0x04F0, true);           // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offDestroyedSound                                             = new ExternalOffset<USoundCue>(0x04F8, true);                 // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FName>                             _offDestructionDamageEffectSocket                              = new ExternalOffset<FName>(0x0500, false);                    // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<FSQDamageEffect>>           _offDestructionDamageEffects                                   = new ExternalOffset<TArray<FSQDamageEffect>>(0x0508, false);  // 0x0508(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offDestroyedAudioComponent                                    = new ExternalOffset<UAudioComponent>(0x0518, true);           // 0x0518(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UParticleSystemComponent>          _offBurningParticleSystem                                      = new ExternalOffset<UParticleSystemComponent>(0x0520, true);  // 0x0520(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UParticleSystemComponent>          _offDestructionParticleSystem                                  = new ExternalOffset<UParticleSystemComponent>(0x0528, true);  // 0x0528(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offNormalizedHealth                                           = new ExternalOffset<float>(0x0530);                           // 0x0530(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnComponentDestroyedEvent                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0538, false); // 0x0538(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnComponentUndestroyedEvent                                = new ExternalOffset<FScriptMulticastDelegate>(0x0548, false); // 0x0548(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHealth                                                     = new ExternalOffset<float>(0x0558);                           // 0x0558(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<ESQVehicleComponentStates>         _offVehicleComponentState                                      = new ExternalOffset<ESQVehicleComponentStates>(0x055C, false); // 0x055C(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<UStaticMeshComponent>              _offDecorativeMesh                                             = new ExternalOffset<UStaticMeshComponent>(0x0560, true);      // 0x0560(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public TArray<FSQDamageModifier>                          AllowableDamageTypes                                           => _offAllowableDamageTypes.GetValue();
	public byte/*(bool)*/                                     bCanBeDestroyed                                                => _offbCanBeDestroyed.GetValue();
	public float                                              MaxRepairToolLimit                                             => _offMaxRepairToolLimit.GetValue();
	public UStaticMesh                                        FullyRepairedComponentMesh                                     => _offFullyRepairedComponentMesh.GetValue();
	public UStaticMesh                                        RepairedFromDestructionComponentMesh                           => _offRepairedFromDestructionComponentMesh.GetValue();
	public UStaticMesh                                        DestroyedComponentMesh                                         => _offDestroyedComponentMesh.GetValue();
	public ASQVehicle                                         ParentVehicle                                                  => _offParentVehicle.GetValue();
	public UParticleSystem                                    BurningEffect                                                  => _offBurningEffect.GetValue();
	public USoundCue                                          BurningSound                                                   => _offBurningSound.GetValue();
	public UAudioComponent                                    BurningAudioComponent                                          => _offBurningAudioComponent.GetValue();
	public UParticleSystem                                    DestroyedExplosion                                             => _offDestroyedExplosion.GetValue();
	public USoundCue                                          DestroyedSound                                                 => _offDestroyedSound.GetValue();
	public FName                                              DestructionDamageEffectSocket                                  => _offDestructionDamageEffectSocket.GetValue();
	public TArray<FSQDamageEffect>                            DestructionDamageEffects                                       => _offDestructionDamageEffects.GetValue();
	public UAudioComponent                                    DestroyedAudioComponent                                        => _offDestroyedAudioComponent.GetValue();
	public UParticleSystemComponent                           BurningParticleSystem                                          => _offBurningParticleSystem.GetValue();
	public UParticleSystemComponent                           DestructionParticleSystem                                      => _offDestructionParticleSystem.GetValue();
	public float                                              NormalizedHealth                                               => _offNormalizedHealth.GetValue();
	public FScriptMulticastDelegate                           OnComponentDestroyedEvent                                      => _offOnComponentDestroyedEvent.GetValue();
	public FScriptMulticastDelegate                           OnComponentUndestroyedEvent                                    => _offOnComponentUndestroyedEvent.GetValue();
	public float                                              Health                                                         => _offHealth.GetValue();
	public ESQVehicleComponentStates                          VehicleComponentState                                          => _offVehicleComponentState.GetValue();
	public UStaticMeshComponent                               DecorativeMesh                                                 => _offDecorativeMesh.GetValue();
	#endregion


}

// Class Squad.SQDriveTrainComponent
// 0x0008 (0x0570 - 0x0568)
public class USQDriveTrainComponent : USQVehicleComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQVehicleUIStaticDataAsset
// 0x0020 (0x0050 - 0x0030)
public class USQVehicleUIStaticDataAsset : UDataAsset
{
	#region Offsets
	private ExternalOffset<UTexture2D>                        _offMapIcon                                                    = new ExternalOffset<UTexture2D>(0x0030, true);                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMapIconRotation                                            = new ExternalOffset<float>(0x0038);                           // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offSideImage                                                  = new ExternalOffset<UTexture2D>(0x0040, true);                // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offFrontImage                                                 = new ExternalOffset<UTexture2D>(0x0048, true);                // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UTexture2D                                         MapIcon                                                        => _offMapIcon.GetValue();
	public float                                              MapIconRotation                                                => _offMapIconRotation.GetValue();
	public UTexture2D                                         SideImage                                                      => _offSideImage.GetValue();
	public UTexture2D                                         FrontImage                                                     => _offFrontImage.GetValue();
	#endregion


}

// Class Squad.SQEmplacementUIStaticDataAsset
// 0x0000 (0x0050 - 0x0050)
public class USQEmplacementUIStaticDataAsset : USQVehicleUIStaticDataAsset
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQEquipableItem
// 0x022C (0x0464 - 0x0238)
public class ASQEquipableItem : AActor
{
	#region Offsets
	private ExternalOffset<USQItemStaticInfo>                 _offItemStaticInfo                                             = new ExternalOffset<USQItemStaticInfo>(0x0248, true);         // 0x0248(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UClass>                            _offItemStaticInfoClass                                        = new ExternalOffset<UClass>(0x0250, true);                    // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPawnOwnerChangedEvent                                    = new ExternalOffset<FScriptMulticastDelegate>(0x0280, false); // 0x0280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offDisplayName                                                = new ExternalOffset<FText>(0x0290, false);                    // 0x0290(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offItemDescription                                            = new ExternalOffset<FText>(0x02A8, false);                    // 0x02A8(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offRearmTypesAllowed                                          = new ExternalOffset<int>(0x02C0);                             // 0x02C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseOwnerAsMasterPose                                      = new ExternalOffset<byte/*(bool)*/>(0x02C4);                  // 0x02C4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAmmoPerRearmItem                                           = new ExternalOffset<float>(0x02C8);                           // 0x02C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offUnequippedNetUpdateRate                                    = new ExternalOffset<float>(0x02D0);                           // 0x02D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQEquippableActionState>          _offActionState                                                = new ExternalOffset<ESQEquippableActionState>(0x02D4, false); // 0x02D4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UBlendSpace1D>                     _offSprintBlendspace                                           = new ExternalOffset<UBlendSpace1D>(0x02D8, true);             // 0x02D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offWalkForwardAnim                                            = new ExternalOffset<UAnimSequence>(0x02E0, true);             // 0x02E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offIdleAnim                                                   = new ExternalOffset<UAnimSequence>(0x02E8, true);             // 0x02E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offUseAnim                                                    = new ExternalOffset<UAnimSequence>(0x02F0, true);             // 0x02F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offStandAnim                                                  = new ExternalOffset<UAnimSequence>(0x02F8, true);             // 0x02F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offEquipAnim                                                  = new ExternalOffset<UAnimSequence>(0x0300, true);             // 0x0300(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offUnequipAnim                                                = new ExternalOffset<UAnimSequence>(0x0308, true);             // 0x0308(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offAltUseAnim                                                 = new ExternalOffset<UAnimSequence>(0x0310, true);             // 0x0310(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offCustom1Anim                                                = new ExternalOffset<UAnimSequence>(0x0318, true);             // 0x0318(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offCustom2Anim                                                = new ExternalOffset<UAnimSequence>(0x0320, true);             // 0x0320(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offCustom3Anim                                                = new ExternalOffset<UAnimSequence>(0x0328, true);             // 0x0328(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offPreUseAnim                                                 = new ExternalOffset<UAnimSequence>(0x0330, true);             // 0x0330(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offPostUseAnim                                                = new ExternalOffset<UAnimSequence>(0x0338, true);             // 0x0338(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offPreAltUseAnim                                              = new ExternalOffset<UAnimSequence>(0x0340, true);             // 0x0340(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offPostAltUseAnim                                             = new ExternalOffset<UAnimSequence>(0x0348, true);             // 0x0348(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offHUDSelectedTexture                                         = new ExternalOffset<UTexture2D>(0x0350, true);                // 0x0350(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offHUDTexture                                                 = new ExternalOffset<UTexture2D>(0x0358, true);                // 0x0358(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowItemCountInInventory                                  = new ExternalOffset<byte/*(bool)*/>(0x0360);                  // 0x0360(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowMagCountInInventory                                   = new ExternalOffset<byte/*(bool)*/>(0x0361);                  // 0x0361(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowAmmoDataInHud                                         = new ExternalOffset<byte/*(bool)*/>(0x0362);                  // 0x0362(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offItemCount                                                  = new ExternalOffset<int>(0x0364);                             // 0x0364(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMaxItemCount                                               = new ExternalOffset<int>(0x0368);                             // 0x0368(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbCannotRearm                                               = new ExternalOffset<char>(0x036C, false);                     // 0x036C(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offEquipDuration                                              = new ExternalOffset<float>(0x0374);                           // 0x0374(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offUnequipDuration                                            = new ExternalOffset<float>(0x0378);                           // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offRearmCounterMultiplier                                     = new ExternalOffset<float>(0x0384);                           // 0x0384(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USceneComponent>                   _offRoot                                                       = new ExternalOffset<USceneComponent>(0x0388, true);           // 0x0388(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USkeletalMeshComponent>            _offMesh1P                                                     = new ExternalOffset<USkeletalMeshComponent>(0x0390, true);    // 0x0390(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USkeletalMeshComponent>            _offMesh3P                                                     = new ExternalOffset<USkeletalMeshComponent>(0x0398, true);    // 0x0398(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<APawn>                             _offPawnOwner                                                  = new ExternalOffset<APawn>(0x03A0, true);                     // 0x03A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<APlayerController>                 _offLocalPlayerController                                      = new ExternalOffset<APlayerController>(0x03A8, true);         // 0x03A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FScriptMulticastDelegate>          _offPlayAnimationEvent                                         = new ExternalOffset<FScriptMulticastDelegate>(0x03B0, false); // 0x03B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offPauseAnimationEvent                                        = new ExternalOffset<FScriptMulticastDelegate>(0x03C0, false); // 0x03C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offResumeAnimationEvent                                       = new ExternalOffset<FScriptMulticastDelegate>(0x03D0, false); // 0x03D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offSetAnimationPlayRateEvent                                  = new ExternalOffset<FScriptMulticastDelegate>(0x03E0, false); // 0x03E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offEndLoopAnimationEvent                                      = new ExternalOffset<FScriptMulticastDelegate>(0x03F0, false); // 0x03F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offStopAnimationEvent                                         = new ExternalOffset<FScriptMulticastDelegate>(0x0400, false); // 0x0400(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQAudioComponentPool>             _offAudioComponentPool                                         = new ExternalOffset<FSQAudioComponentPool>(0x0410, false);    // 0x0410(0x0020) (ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimInstance>                     _offCachedWeapon1pAnimInstance                                 = new ExternalOffset<UAnimInstance>(0x0430, true);             // 0x0430(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimInstance>                     _offCachedWeapon3pAnimInstance                                 = new ExternalOffset<UAnimInstance>(0x0438, true);             // 0x0438(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQAnimInstanceSoldier1P>          _offCachedSoldier1pAnimInstance                                = new ExternalOffset<USQAnimInstanceSoldier1P>(0x0440, true);  // 0x0440(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQAnimInstanceSoldier3P>          _offCachedSoldier3pAnimInstance                                = new ExternalOffset<USQAnimInstanceSoldier3P>(0x0448, true);  // 0x0448(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCachedEquipDuration                                        = new ExternalOffset<float>(0x0450);                           // 0x0450(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCachedUnequipDuration                                      = new ExternalOffset<float>(0x0454);                           // 0x0454(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQEquippableState>                _offEquipState                                                 = new ExternalOffset<ESQEquippableState>(0x0458, false);       // 0x0458(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedMoveBobbing                                         = new ExternalOffset<byte/*(bool)*/>(0x0459);                  // 0x0459(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedSprintBobbing                                       = new ExternalOffset<byte/*(bool)*/>(0x045A);                  // 0x045A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedHasMovement                                         = new ExternalOffset<byte/*(bool)*/>(0x045B);                  // 0x045B(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedIsPullingTrigger                                    = new ExternalOffset<byte/*(bool)*/>(0x045C);                  // 0x045C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedIsLeaningRight                                      = new ExternalOffset<byte/*(bool)*/>(0x045D);                  // 0x045D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedIsLeaningLeft                                       = new ExternalOffset<byte/*(bool)*/>(0x045E);                  // 0x045E(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCachedDeltaTime                                            = new ExternalOffset<float>(0x0460);                           // 0x0460(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USQItemStaticInfo                                  ItemStaticInfo                                                 => _offItemStaticInfo.GetValue();
	public UClass                                             ItemStaticInfoClass                                            => _offItemStaticInfoClass.GetValue();
	public FScriptMulticastDelegate                           OnPawnOwnerChangedEvent                                        => _offOnPawnOwnerChangedEvent.GetValue();
	public FText                                              DisplayName                                                    => _offDisplayName.GetValue();
	public FText                                              ItemDescription                                                => _offItemDescription.GetValue();
	public int                                                RearmTypesAllowed                                              => _offRearmTypesAllowed.GetValue();
	public byte/*(bool)*/                                     bUseOwnerAsMasterPose                                          => _offbUseOwnerAsMasterPose.GetValue();
	public float                                              AmmoPerRearmItem                                               => _offAmmoPerRearmItem.GetValue();
	public float                                              UnequippedNetUpdateRate                                        => _offUnequippedNetUpdateRate.GetValue();
	public ESQEquippableActionState                           ActionState                                                    => _offActionState.GetValue();
	public UBlendSpace1D                                      SprintBlendspace                                               => _offSprintBlendspace.GetValue();
	public UAnimSequence                                      WalkForwardAnim                                                => _offWalkForwardAnim.GetValue();
	public UAnimSequence                                      IdleAnim                                                       => _offIdleAnim.GetValue();
	public UAnimSequence                                      UseAnim                                                        => _offUseAnim.GetValue();
	public UAnimSequence                                      StandAnim                                                      => _offStandAnim.GetValue();
	public UAnimSequence                                      EquipAnim                                                      => _offEquipAnim.GetValue();
	public UAnimSequence                                      UnequipAnim                                                    => _offUnequipAnim.GetValue();
	public UAnimSequence                                      AltUseAnim                                                     => _offAltUseAnim.GetValue();
	public UAnimSequence                                      Custom1Anim                                                    => _offCustom1Anim.GetValue();
	public UAnimSequence                                      Custom2Anim                                                    => _offCustom2Anim.GetValue();
	public UAnimSequence                                      Custom3Anim                                                    => _offCustom3Anim.GetValue();
	public UAnimSequence                                      PreUseAnim                                                     => _offPreUseAnim.GetValue();
	public UAnimSequence                                      PostUseAnim                                                    => _offPostUseAnim.GetValue();
	public UAnimSequence                                      PreAltUseAnim                                                  => _offPreAltUseAnim.GetValue();
	public UAnimSequence                                      PostAltUseAnim                                                 => _offPostAltUseAnim.GetValue();
	public UTexture2D                                         HUDSelectedTexture                                             => _offHUDSelectedTexture.GetValue();
	public UTexture2D                                         HUDTexture                                                     => _offHUDTexture.GetValue();
	public byte/*(bool)*/                                     bShowItemCountInInventory                                      => _offbShowItemCountInInventory.GetValue();
	public byte/*(bool)*/                                     bShowMagCountInInventory                                       => _offbShowMagCountInInventory.GetValue();
	public byte/*(bool)*/                                     bShowAmmoDataInHud                                             => _offbShowAmmoDataInHud.GetValue();
	public int                                                ItemCount                                                      => _offItemCount.GetValue();
	public int                                                MaxItemCount                                                   => _offMaxItemCount.GetValue();
	public float                                              EquipDuration                                                  => _offEquipDuration.GetValue();
	public float                                              UnequipDuration                                                => _offUnequipDuration.GetValue();
	public float                                              RearmCounterMultiplier                                         => _offRearmCounterMultiplier.GetValue();
	public USceneComponent                                    Root                                                           => _offRoot.GetValue();
	public USkeletalMeshComponent                             Mesh1P                                                         => _offMesh1P.GetValue();
	public USkeletalMeshComponent                             Mesh3P                                                         => _offMesh3P.GetValue();
	public APawn                                              PawnOwner                                                      => _offPawnOwner.GetValue();
	public APlayerController                                  LocalPlayerController                                          => _offLocalPlayerController.GetValue();
	public FScriptMulticastDelegate                           PlayAnimationEvent                                             => _offPlayAnimationEvent.GetValue();
	public FScriptMulticastDelegate                           PauseAnimationEvent                                            => _offPauseAnimationEvent.GetValue();
	public FScriptMulticastDelegate                           ResumeAnimationEvent                                           => _offResumeAnimationEvent.GetValue();
	public FScriptMulticastDelegate                           SetAnimationPlayRateEvent                                      => _offSetAnimationPlayRateEvent.GetValue();
	public FScriptMulticastDelegate                           EndLoopAnimationEvent                                          => _offEndLoopAnimationEvent.GetValue();
	public FScriptMulticastDelegate                           StopAnimationEvent                                             => _offStopAnimationEvent.GetValue();
	public FSQAudioComponentPool                              AudioComponentPool                                             => _offAudioComponentPool.GetValue();
	public UAnimInstance                                      CachedWeapon1pAnimInstance                                     => _offCachedWeapon1pAnimInstance.GetValue();
	public UAnimInstance                                      CachedWeapon3pAnimInstance                                     => _offCachedWeapon3pAnimInstance.GetValue();
	public USQAnimInstanceSoldier1P                           CachedSoldier1pAnimInstance                                    => _offCachedSoldier1pAnimInstance.GetValue();
	public USQAnimInstanceSoldier3P                           CachedSoldier3pAnimInstance                                    => _offCachedSoldier3pAnimInstance.GetValue();
	public float                                              CachedEquipDuration                                            => _offCachedEquipDuration.GetValue();
	public float                                              CachedUnequipDuration                                          => _offCachedUnequipDuration.GetValue();
	public ESQEquippableState                                 EquipState                                                     => _offEquipState.GetValue();
	public byte/*(bool)*/                                     bCachedMoveBobbing                                             => _offbCachedMoveBobbing.GetValue();
	public byte/*(bool)*/                                     bCachedSprintBobbing                                           => _offbCachedSprintBobbing.GetValue();
	public byte/*(bool)*/                                     bCachedHasMovement                                             => _offbCachedHasMovement.GetValue();
	public byte/*(bool)*/                                     bCachedIsPullingTrigger                                        => _offbCachedIsPullingTrigger.GetValue();
	public byte/*(bool)*/                                     bCachedIsLeaningRight                                          => _offbCachedIsLeaningRight.GetValue();
	public byte/*(bool)*/                                     bCachedIsLeaningLeft                                           => _offbCachedIsLeaningLeft.GetValue();
	public float                                              CachedDeltaTime                                                => _offCachedDeltaTime.GetValue();
	#endregion


}

// Class Squad.SQHealingEquipableItem
// 0x0044 (0x04A8 - 0x0464)
public class ASQHealingEquipableItem : ASQEquipableItem
{
	#region Offsets
	private ExternalOffset<float>                             _offTraceLength                                                = new ExternalOffset<float>(0x0480);                           // 0x0480(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTraceSphereRadius                                          = new ExternalOffset<float>(0x0484);                           // 0x0484(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxDurationForCancel                                       = new ExternalOffset<float>(0x0488);                           // 0x0488(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FColor>                            _offErrorMessageColor                                          = new ExternalOffset<FColor>(0x048C, false);                   // 0x048C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offErrorMessageLifetime                                       = new ExternalOffset<float>(0x0490);                           // 0x0490(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSoldier>                        _offHealedTarget                                               = new ExternalOffset<ASQSoldier>(0x0498, true);                // 0x0498(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offHealthAudioComponent                                       = new ExternalOffset<UAudioComponent>(0x04A0, true);           // 0x04A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              TraceLength                                                    => _offTraceLength.GetValue();
	public float                                              TraceSphereRadius                                              => _offTraceSphereRadius.GetValue();
	public float                                              MaxDurationForCancel                                           => _offMaxDurationForCancel.GetValue();
	public FColor                                             ErrorMessageColor                                              => _offErrorMessageColor.GetValue();
	public float                                              ErrorMessageLifetime                                           => _offErrorMessageLifetime.GetValue();
	public ASQSoldier                                         HealedTarget                                                   => _offHealedTarget.GetValue();
	public UAudioComponent                                    HealthAudioComponent                                           => _offHealthAudioComponent.GetValue();
	#endregion


}

// Class Squad.SQFieldDressing
// 0x0038 (0x04E0 - 0x04A8)
public class ASQFieldDressing : ASQHealingEquipableItem
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbWasHealingSelf                                            = new ExternalOffset<byte/*(bool)*/>(0x04B0);                  // 0x04B0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbWasRevivingOther                                          = new ExternalOffset<byte/*(bool)*/>(0x04B1);                  // 0x04B1(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FTimerHandle>                      _offTimerHandle                                                = new ExternalOffset<FTimerHandle>(0x04B8, false);             // 0x04B8(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<USQFieldDressingStaticInfo>        _offFieldDressingStaticInfo                                    = new ExternalOffset<USQFieldDressingStaticInfo>(0x04C0, true); // 0x04C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<UAnimMontage>                      _offSelectedSoldier1pMontage                                   = new ExternalOffset<UAnimMontage>(0x04C8, true);              // 0x04C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<UAnimMontage>                      _offSelectedSoldier3pMontage                                   = new ExternalOffset<UAnimMontage>(0x04D0, true);              // 0x04D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<UAnimMontage>                      _offSelectedWeaponMontage                                      = new ExternalOffset<UAnimMontage>(0x04D8, true);              // 0x04D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bWasHealingSelf                                                => _offbWasHealingSelf.GetValue();
	public byte/*(bool)*/                                     bWasRevivingOther                                              => _offbWasRevivingOther.GetValue();
	public FTimerHandle                                       TimerHandle                                                    => _offTimerHandle.GetValue();
	public USQFieldDressingStaticInfo                         FieldDressingStaticInfo                                        => _offFieldDressingStaticInfo.GetValue();
	public UAnimMontage                                       SelectedSoldier1pMontage                                       => _offSelectedSoldier1pMontage.GetValue();
	public UAnimMontage                                       SelectedSoldier3pMontage                                       => _offSelectedSoldier3pMontage.GetValue();
	public UAnimMontage                                       SelectedWeaponMontage                                          => _offSelectedWeaponMontage.GetValue();
	#endregion


}

// Class Squad.SQFieldDressingStaticInfo
// 0x0114 (0x05EC - 0x04D8)
public class USQFieldDressingStaticInfo : USQItemStaticInfo
{
	#region Offsets
	private ExternalOffset<UAnimMontage>                      _offHealingSelfRightArm1pMontage                               = new ExternalOffset<UAnimMontage>(0x04D8, true);              // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealingSelfRightArm3pMontage                               = new ExternalOffset<UAnimMontage>(0x04E0, true);              // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealingSelfRightArm1pWeaponMontage                         = new ExternalOffset<UAnimMontage>(0x04E8, true);              // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealingSelfRightArm3pWeaponMontage                         = new ExternalOffset<UAnimMontage>(0x04F0, true);              // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealingSelfLeftArm1pMontage                                = new ExternalOffset<UAnimMontage>(0x04F8, true);              // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealingSelfLeftArm3pMontage                                = new ExternalOffset<UAnimMontage>(0x0500, true);              // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealingSelfLeftArm1pWeaponMontage                          = new ExternalOffset<UAnimMontage>(0x0508, true);              // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealingSelfLeftArm3pWeaponMontage                          = new ExternalOffset<UAnimMontage>(0x0510, true);              // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealingSelfEnd1pMontage                                    = new ExternalOffset<UAnimMontage>(0x0518, true);              // 0x0518(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealingSelfEnd3pMontage                                    = new ExternalOffset<UAnimMontage>(0x0520, true);              // 0x0520(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealingSelfEnd1pWeaponMontage                              = new ExternalOffset<UAnimMontage>(0x0528, true);              // 0x0528(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealingSelfEnd3pWeaponMontage                              = new ExternalOffset<UAnimMontage>(0x0530, true);              // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealing1pMontage                                           = new ExternalOffset<UAnimMontage>(0x0538, true);              // 0x0538(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealing3pMontage                                           = new ExternalOffset<UAnimMontage>(0x0540, true);              // 0x0540(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealingEnd1pMontage                                        = new ExternalOffset<UAnimMontage>(0x0548, true);              // 0x0548(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealingEnd3pMontage                                        = new ExternalOffset<UAnimMontage>(0x0550, true);              // 0x0550(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealing1pWeaponMontage                                     = new ExternalOffset<UAnimMontage>(0x0558, true);              // 0x0558(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealing3pWeaponMontage                                     = new ExternalOffset<UAnimMontage>(0x0560, true);              // 0x0560(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealingEnd1pWeaponMontage                                  = new ExternalOffset<UAnimMontage>(0x0568, true);              // 0x0568(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealingEnd3pWeaponMontage                                  = new ExternalOffset<UAnimMontage>(0x0570, true);              // 0x0570(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offReviving1pMontage                                          = new ExternalOffset<UAnimMontage>(0x0578, true);              // 0x0578(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offReviving3pMontage                                          = new ExternalOffset<UAnimMontage>(0x0580, true);              // 0x0580(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offRevivingEnd1pMontage                                       = new ExternalOffset<UAnimMontage>(0x0588, true);              // 0x0588(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offRevivingEnd3pMontage                                       = new ExternalOffset<UAnimMontage>(0x0590, true);              // 0x0590(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offReviving1pWeaponMontage                                    = new ExternalOffset<UAnimMontage>(0x0598, true);              // 0x0598(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offReviving3pWeaponMontage                                    = new ExternalOffset<UAnimMontage>(0x05A0, true);              // 0x05A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offRevivingEnd1pWeaponMontage                                 = new ExternalOffset<UAnimMontage>(0x05A8, true);              // 0x05A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offRevivingEnd3pWeaponMontage                                 = new ExternalOffset<UAnimMontage>(0x05B0, true);              // 0x05B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offHealSelfSound                                              = new ExternalOffset<USoundCue>(0x05B8, true);                 // 0x05B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offHealOtherSound                                             = new ExternalOffset<USoundCue>(0x05C0, true);                 // 0x05C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offReviveOtherSound                                           = new ExternalOffset<USoundCue>(0x05C8, true);                 // 0x05C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offNormalReviveDuration                                       = new ExternalOffset<float>(0x05D0);                           // 0x05D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMedicReviveDuration                                        = new ExternalOffset<float>(0x05D4);                           // 0x05D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offNormalStopBleedingOtherDuration                            = new ExternalOffset<float>(0x05D8);                           // 0x05D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offNormalStopBleedingSelfDuration                             = new ExternalOffset<float>(0x05DC);                           // 0x05DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMedicStopBleedingOtherDuration                             = new ExternalOffset<float>(0x05E0);                           // 0x05E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMedicStopBleedingSelfDuration                              = new ExternalOffset<float>(0x05E4);                           // 0x05E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAnimPlayRateMultiplier                                     = new ExternalOffset<float>(0x05E8);                           // 0x05E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UAnimMontage                                       HealingSelfRightArm1pMontage                                   => _offHealingSelfRightArm1pMontage.GetValue();
	public UAnimMontage                                       HealingSelfRightArm3pMontage                                   => _offHealingSelfRightArm3pMontage.GetValue();
	public UAnimMontage                                       HealingSelfRightArm1pWeaponMontage                             => _offHealingSelfRightArm1pWeaponMontage.GetValue();
	public UAnimMontage                                       HealingSelfRightArm3pWeaponMontage                             => _offHealingSelfRightArm3pWeaponMontage.GetValue();
	public UAnimMontage                                       HealingSelfLeftArm1pMontage                                    => _offHealingSelfLeftArm1pMontage.GetValue();
	public UAnimMontage                                       HealingSelfLeftArm3pMontage                                    => _offHealingSelfLeftArm3pMontage.GetValue();
	public UAnimMontage                                       HealingSelfLeftArm1pWeaponMontage                              => _offHealingSelfLeftArm1pWeaponMontage.GetValue();
	public UAnimMontage                                       HealingSelfLeftArm3pWeaponMontage                              => _offHealingSelfLeftArm3pWeaponMontage.GetValue();
	public UAnimMontage                                       HealingSelfEnd1pMontage                                        => _offHealingSelfEnd1pMontage.GetValue();
	public UAnimMontage                                       HealingSelfEnd3pMontage                                        => _offHealingSelfEnd3pMontage.GetValue();
	public UAnimMontage                                       HealingSelfEnd1pWeaponMontage                                  => _offHealingSelfEnd1pWeaponMontage.GetValue();
	public UAnimMontage                                       HealingSelfEnd3pWeaponMontage                                  => _offHealingSelfEnd3pWeaponMontage.GetValue();
	public UAnimMontage                                       Healing1pMontage                                               => _offHealing1pMontage.GetValue();
	public UAnimMontage                                       Healing3pMontage                                               => _offHealing3pMontage.GetValue();
	public UAnimMontage                                       HealingEnd1pMontage                                            => _offHealingEnd1pMontage.GetValue();
	public UAnimMontage                                       HealingEnd3pMontage                                            => _offHealingEnd3pMontage.GetValue();
	public UAnimMontage                                       Healing1pWeaponMontage                                         => _offHealing1pWeaponMontage.GetValue();
	public UAnimMontage                                       Healing3pWeaponMontage                                         => _offHealing3pWeaponMontage.GetValue();
	public UAnimMontage                                       HealingEnd1pWeaponMontage                                      => _offHealingEnd1pWeaponMontage.GetValue();
	public UAnimMontage                                       HealingEnd3pWeaponMontage                                      => _offHealingEnd3pWeaponMontage.GetValue();
	public UAnimMontage                                       Reviving1pMontage                                              => _offReviving1pMontage.GetValue();
	public UAnimMontage                                       Reviving3pMontage                                              => _offReviving3pMontage.GetValue();
	public UAnimMontage                                       RevivingEnd1pMontage                                           => _offRevivingEnd1pMontage.GetValue();
	public UAnimMontage                                       RevivingEnd3pMontage                                           => _offRevivingEnd3pMontage.GetValue();
	public UAnimMontage                                       Reviving1pWeaponMontage                                        => _offReviving1pWeaponMontage.GetValue();
	public UAnimMontage                                       Reviving3pWeaponMontage                                        => _offReviving3pWeaponMontage.GetValue();
	public UAnimMontage                                       RevivingEnd1pWeaponMontage                                     => _offRevivingEnd1pWeaponMontage.GetValue();
	public UAnimMontage                                       RevivingEnd3pWeaponMontage                                     => _offRevivingEnd3pWeaponMontage.GetValue();
	public USoundCue                                          HealSelfSound                                                  => _offHealSelfSound.GetValue();
	public USoundCue                                          HealOtherSound                                                 => _offHealOtherSound.GetValue();
	public USoundCue                                          ReviveOtherSound                                               => _offReviveOtherSound.GetValue();
	public float                                              NormalReviveDuration                                           => _offNormalReviveDuration.GetValue();
	public float                                              MedicReviveDuration                                            => _offMedicReviveDuration.GetValue();
	public float                                              NormalStopBleedingOtherDuration                                => _offNormalStopBleedingOtherDuration.GetValue();
	public float                                              NormalStopBleedingSelfDuration                                 => _offNormalStopBleedingSelfDuration.GetValue();
	public float                                              MedicStopBleedingOtherDuration                                 => _offMedicStopBleedingOtherDuration.GetValue();
	public float                                              MedicStopBleedingSelfDuration                                  => _offMedicStopBleedingSelfDuration.GetValue();
	public float                                              AnimPlayRateMultiplier                                         => _offAnimPlayRateMultiplier.GetValue();
	#endregion


}

// Class Squad.SQFindFriendsCallbackProxy
// 0x0030 (0x0058 - 0x0028)
public class USQFindFriendsCallbackProxy : UOnlineBlueprintCallProxyBase
{
	#region Offsets
	private ExternalOffset<APlayerController>                 _offPlayerController                                           = new ExternalOffset<APlayerController>(0x0050, true);         // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public APlayerController                                  PlayerController                                               => _offPlayerController.GetValue();
	#endregion


}

// Class Squad.SQFindSessionsCallbackProxy
// 0x0060 (0x0088 - 0x0028)
public class USQFindSessionsCallbackProxy : UOnlineBlueprintCallProxyBase
{
	#region Offsets
	private ExternalOffset<UObject>                           _offWorldContextObject                                         = new ExternalOffset<UObject>(0x0080, true);                   // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public UObject                                            WorldContextObject                                             => _offWorldContextObject.GetValue();
	#endregion


}

// Class Squad.SQFlagScoringRuleset
// 0x0050 (0x02C0 - 0x0270)
public class ASQFlagScoringRuleset : ASQGameRuleSet
{
	#region Offsets
	private ExternalOffset<float>                             _offRateOfScoreTick                                            = new ExternalOffset<float>(0x0270);                           // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQFlagScoreInfo>                  _offTeamOneFlagScores                                          = new ExternalOffset<FSQFlagScoreInfo>(0x0274, false);         // 0x0274(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQFlagScoreInfo>                  _offTeamTwoFlagScores                                          = new ExternalOffset<FSQFlagScoreInfo>(0x0290, false);         // 0x0290(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USQCaptureZoneComponent>>   _offCaptureZones                                               = new ExternalOffset<TArray<USQCaptureZoneComponent>>(0x02B0, false); // 0x02B0(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              RateOfScoreTick                                                => _offRateOfScoreTick.GetValue();
	public FSQFlagScoreInfo                                   TeamOneFlagScores                                              => _offTeamOneFlagScores.GetValue();
	public FSQFlagScoreInfo                                   TeamTwoFlagScores                                              => _offTeamTwoFlagScores.GetValue();
	public TArray<USQCaptureZoneComponent>                    CaptureZones                                                   => _offCaptureZones.GetValue();
	#endregion


}

// Class Squad.SQFloatingVehicle
// 0x0030 (0x0368 - 0x0338)
public class ASQFloatingVehicle : ASQPawn
{
	#region Offsets
	private ExternalOffset<USQSimpleMovementComponent>        _offSimpleMovementComponent                                    = new ExternalOffset<USQSimpleMovementComponent>(0x0340, true); // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCameraComponent>                  _offCameraComponent                                            = new ExternalOffset<UCameraComponent>(0x0348, true);          // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USpringArmComponent>               _offSpringArm                                                  = new ExternalOffset<USpringArmComponent>(0x0350, true);       // 0x0350(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USkeletalMeshComponent>            _offSkeletalMeshComponent                                      = new ExternalOffset<USkeletalMeshComponent>(0x0358, true);    // 0x0358(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCapsuleComponent>                 _offCapsuleComponent                                           = new ExternalOffset<UCapsuleComponent>(0x0360, true);         // 0x0360(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USQSimpleMovementComponent                         SimpleMovementComponent                                        => _offSimpleMovementComponent.GetValue();
	public UCameraComponent                                   CameraComponent                                                => _offCameraComponent.GetValue();
	public USpringArmComponent                                SpringArm                                                      => _offSpringArm.GetValue();
	public USkeletalMeshComponent                             SkeletalMeshComponent                                          => _offSkeletalMeshComponent.GetValue();
	public UCapsuleComponent                                  CapsuleComponent                                               => _offCapsuleComponent.GetValue();
	#endregion


}

// Class Squad.SQFoliageBender
// 0x002A (0x0262 - 0x0238)
public class ASQFoliageBender : AActor
{
	#region Offsets
	private ExternalOffset<UMaterialParameterCollection>      _offFoliageMaterialParameterCollection                         = new ExternalOffset<UMaterialParameterCollection>(0x0248, true); // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USphereComponent>                  _offSphere                                                     = new ExternalOffset<USphereComponent>(0x0250, true);          // 0x0250(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offStandSpreadMultiplier                                      = new ExternalOffset<float>(0x0258);                           // 0x0258(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offProneSpreadMultiplier                                      = new ExternalOffset<float>(0x025C);                           // 0x025C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbDrawDebugSpheres                                          = new ExternalOffset<byte/*(bool)*/>(0x0260);                  // 0x0260(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbDrawDebugPoints                                           = new ExternalOffset<byte/*(bool)*/>(0x0261);                  // 0x0261(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public UMaterialParameterCollection                       FoliageMaterialParameterCollection                             => _offFoliageMaterialParameterCollection.GetValue();
	public USphereComponent                                   Sphere                                                         => _offSphere.GetValue();
	public float                                              StandSpreadMultiplier                                          => _offStandSpreadMultiplier.GetValue();
	public float                                              ProneSpreadMultiplier                                          => _offProneSpreadMultiplier.GetValue();
	public byte/*(bool)*/                                     bDrawDebugSpheres                                              => _offbDrawDebugSpheres.GetValue();
	public byte/*(bool)*/                                     bDrawDebugPoints                                               => _offbDrawDebugPoints.GetValue();
	#endregion


}

// Class Squad.SQForceMovementComponentSettings
// 0x0054 (0x0084 - 0x0030)
public class USQForceMovementComponentSettings : UDataAsset
{
	#region Offsets
	private ExternalOffset<float>                             _offMass                                                       = new ExternalOffset<float>(0x0030);                           // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxSpeed                                                   = new ExternalOffset<float>(0x0034);                           // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offMaxRotationalVelocity                                      = new ExternalOffset<FRotator>(0x0038, false);                 // 0x0038(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLength                                                     = new ExternalOffset<float>(0x0044);                           // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWidth                                                      = new ExternalOffset<float>(0x0048);                           // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHeight                                                     = new ExternalOffset<float>(0x004C);                           // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offAirDensityByHeight                                         = new ExternalOffset<UCurveFloat>(0x0050, true);               // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDragCoefficient                                            = new ExternalOffset<float>(0x0058);                           // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offGravity                                                    = new ExternalOffset<float>(0x005C);                           // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbApplyGravity                                              = new ExternalOffset<byte/*(bool)*/>(0x0060);                  // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbApplyDrag                                                 = new ExternalOffset<byte/*(bool)*/>(0x0061);                  // 0x0061(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offDragApplicationSocket                                      = new ExternalOffset<FName>(0x0064, false);                    // 0x0064(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offDragTorqueMultiplier                                       = new ExternalOffset<FVector>(0x006C, false);                  // 0x006C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbApplyCentripedalForce                                     = new ExternalOffset<byte/*(bool)*/>(0x0078);                  // 0x0078(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUsePhysX                                                  = new ExternalOffset<byte/*(bool)*/>(0x0079);                  // 0x0079(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDebugForces                                               = new ExternalOffset<byte/*(bool)*/>(0x007A);                  // 0x007A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAngularDamping                                             = new ExternalOffset<float>(0x007C);                           // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLinearDamping                                              = new ExternalOffset<float>(0x0080);                           // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              Mass                                                           => _offMass.GetValue();
	public float                                              MaxSpeed                                                       => _offMaxSpeed.GetValue();
	public FRotator                                           MaxRotationalVelocity                                          => _offMaxRotationalVelocity.GetValue();
	public float                                              Length                                                         => _offLength.GetValue();
	public float                                              Width                                                          => _offWidth.GetValue();
	public float                                              Height                                                         => _offHeight.GetValue();
	public UCurveFloat                                        AirDensityByHeight                                             => _offAirDensityByHeight.GetValue();
	public float                                              DragCoefficient                                                => _offDragCoefficient.GetValue();
	public float                                              Gravity                                                        => _offGravity.GetValue();
	public byte/*(bool)*/                                     bApplyGravity                                                  => _offbApplyGravity.GetValue();
	public byte/*(bool)*/                                     bApplyDrag                                                     => _offbApplyDrag.GetValue();
	public FName                                              DragApplicationSocket                                          => _offDragApplicationSocket.GetValue();
	public FVector                                            DragTorqueMultiplier                                           => _offDragTorqueMultiplier.GetValue();
	public byte/*(bool)*/                                     bApplyCentripedalForce                                         => _offbApplyCentripedalForce.GetValue();
	public byte/*(bool)*/                                     bUsePhysX                                                      => _offbUsePhysX.GetValue();
	public byte/*(bool)*/                                     bDebugForces                                                   => _offbDebugForces.GetValue();
	public float                                              AngularDamping                                                 => _offAngularDamping.GetValue();
	public float                                              LinearDamping                                                  => _offLinearDamping.GetValue();
	#endregion


}

// Class Squad.SQForceNetMovementComponent
// 0x0090 (0x02B8 - 0x0228)
public class USQForceNetMovementComponent : USQNetMoveComponent
{
	#region Offsets
	private ExternalOffset<FVector>                           _offTorqueInput                                                = new ExternalOffset<FVector>(0x0260, false);                  // 0x0260(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FVector>                           _offForceInput                                                 = new ExternalOffset<FVector>(0x026C, false);                  // 0x026C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FRotator>                          _offCurrentRotationalVelocity                                  = new ExternalOffset<FRotator>(0x0278, false);                 // 0x0278(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<USQForceMovementComponentSettings> _offForceComponentSettings                                     = new ExternalOffset<USQForceMovementComponentSettings>(0x02A8, true); // 0x02A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USceneComponent>                   _offCenterOfMass                                               = new ExternalOffset<USceneComponent>(0x02B0, true);           // 0x02B0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public FVector                                            TorqueInput                                                    => _offTorqueInput.GetValue();
	public FVector                                            ForceInput                                                     => _offForceInput.GetValue();
	public FRotator                                           CurrentRotationalVelocity                                      => _offCurrentRotationalVelocity.GetValue();
	public USQForceMovementComponentSettings                  ForceComponentSettings                                         => _offForceComponentSettings.GetValue();
	public USceneComponent                                    CenterOfMass                                                   => _offCenterOfMass.GetValue();
	#endregion


}

// Class Squad.SQForwardBase
// 0x013C (0x050C - 0x03D0)
public class ASQForwardBase : ASQDeployable
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbIsSpawningEnabled                                         = new ExternalOffset<byte/*(bool)*/>(0x03D8);                  // 0x03D8(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTimeToEnableSpawning                                       = new ExternalOffset<float>(0x03DC);                           // 0x03DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCreatesFobSpawnPoints                                     = new ExternalOffset<byte/*(bool)*/>(0x03E0);                  // 0x03E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbSuppliesCreateSpawnPoints                                 = new ExternalOffset<byte/*(bool)*/>(0x03E1);                  // 0x03E1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSpawnPointRadius                                           = new ExternalOffset<float>(0x03E4);                           // 0x03E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offSpawnOffset                                                = new ExternalOffset<FVector>(0x03E8, false);                  // 0x03E8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offEnemiesToCapture                                           = new ExternalOffset<int>(0x03F4);                             // 0x03F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offCurrentNumDeployables                                      = new ExternalOffset<char>(0x03F8, false);                     // 0x03F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offName                                                       = new ExternalOffset<FString>(0x0400, false);                  // 0x0400(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offUseCaptureTick                                             = new ExternalOffset<byte/*(bool)*/>(0x0410);                  // 0x0410(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQDeployable>>             _offTrackedDeployables                                         = new ExternalOffset<TArray<ASQDeployable>>(0x0418, false);    // 0x0418(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, RepNotify, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQGameSpawn>>              _offSpawnPoints                                                = new ExternalOffset<TArray<ASQGameSpawn>>(0x0428, false);     // 0x0428(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<UClass>                            _offSpawnPointClass                                            = new ExternalOffset<UClass>(0x0438, true);                    // 0x0438(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbSieged                                                    = new ExternalOffset<byte/*(bool)*/>(0x0440);                  // 0x0440(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offNumberOfTeammatesNeededToDeploy                            = new ExternalOffset<int>(0x0444);                             // 0x0444(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offNumberOfLogisNeededToDeploy                                = new ExternalOffset<int>(0x0448);                             // 0x0448(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offPercentToDisableSpawns                                     = new ExternalOffset<float>(0x044C);                           // 0x044C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USphereComponent>                  _offCaptureZone                                                = new ExternalOffset<USphereComponent>(0x0450, true);          // 0x0450(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<USphereComponent>                  _offDeploymentRadius                                           = new ExternalOffset<USphereComponent>(0x0458, true);          // 0x0458(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<USphereComponent>                  _offConstructionRadius                                         = new ExternalOffset<USphereComponent>(0x0460, true);          // 0x0460(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseResourceTickRateToUpdateResources                      = new ExternalOffset<byte/*(bool)*/>(0x0468);                  // 0x0468(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxTicketsPerSecond                                        = new ExternalOffset<float>(0x046C);                           // 0x046C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTicketsPerPlayer                                           = new ExternalOffset<float>(0x0470);                           // 0x0470(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTicketsLostWhenOverrun                                     = new ExternalOffset<int>(0x0474);                             // 0x0474(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offEnemiesToDisableSpawn                                      = new ExternalOffset<int>(0x0478);                             // 0x0478(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offEnemiesNear                                                = new ExternalOffset<int>(0x047C);                             // 0x047C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offInitialConstructionPoints                                  = new ExternalOffset<float>(0x0480);                           // 0x0480(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxConstructionPoints                                      = new ExternalOffset<float>(0x0484);                           // 0x0484(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offInitialAmmo                                                = new ExternalOffset<float>(0x0488);                           // 0x0488(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxAmmo                                                    = new ExternalOffset<float>(0x048C);                           // 0x048C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCPPerSecond                                                = new ExternalOffset<float>(0x0490);                           // 0x0490(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAmmoPerSecond                                              = new ExternalOffset<float>(0x0494);                           // 0x0494(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offResourceGenerationRate                                     = new ExternalOffset<float>(0x0498);                           // 0x0498(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCaptureTickRate                                            = new ExternalOffset<float>(0x049C);                           // 0x049C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private TMap<class UClass*, unsigned char>                _offCurrentDeployablesOnFOB                                    = new ExternalOffset<TMap<char>>(0x04A0, false);               // 0x04A0(0x0050) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offSiegedMinNearbyEnemies                                     = new ExternalOffset<int>(0x04F0);                             // 0x04F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offNearbyEnemiesRadius                                        = new ExternalOffset<float>(0x04F4);                           // 0x04F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAmmo                                                       = new ExternalOffset<float>(0x04F8);                           // 0x04F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<float>                             _offConstructionPoints                                         = new ExternalOffset<float>(0x04FC);                           // 0x04FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<float>                             _offExclusionRadius                                            = new ExternalOffset<float>(0x0500);                           // 0x0500(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offNearbyEnemies                                              = new ExternalOffset<int>(0x0504);                             // 0x0504(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offSiegedSpawnPoints                                          = new ExternalOffset<int>(0x0508);                             // 0x0508(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bIsSpawningEnabled                                             => _offbIsSpawningEnabled.GetValue();
	public float                                              TimeToEnableSpawning                                           => _offTimeToEnableSpawning.GetValue();
	public byte/*(bool)*/                                     bCreatesFobSpawnPoints                                         => _offbCreatesFobSpawnPoints.GetValue();
	public byte/*(bool)*/                                     bSuppliesCreateSpawnPoints                                     => _offbSuppliesCreateSpawnPoints.GetValue();
	public float                                              SpawnPointRadius                                               => _offSpawnPointRadius.GetValue();
	public FVector                                            SpawnOffset                                                    => _offSpawnOffset.GetValue();
	public int                                                EnemiesToCapture                                               => _offEnemiesToCapture.GetValue();
	public FString                                            Name                                                           => _offName.GetValue();
	public byte/*(bool)*/                                     UseCaptureTick                                                 => _offUseCaptureTick.GetValue();
	public TArray<ASQDeployable>                              TrackedDeployables                                             => _offTrackedDeployables.GetValue();
	public TArray<ASQGameSpawn>                               SpawnPoints                                                    => _offSpawnPoints.GetValue();
	public UClass                                             SpawnPointClass                                                => _offSpawnPointClass.GetValue();
	public byte/*(bool)*/                                     bSieged                                                        => _offbSieged.GetValue();
	public int                                                NumberOfTeammatesNeededToDeploy                                => _offNumberOfTeammatesNeededToDeploy.GetValue();
	public int                                                NumberOfLogisNeededToDeploy                                    => _offNumberOfLogisNeededToDeploy.GetValue();
	public float                                              PercentToDisableSpawns                                         => _offPercentToDisableSpawns.GetValue();
	public USphereComponent                                   CaptureZone                                                    => _offCaptureZone.GetValue();
	public USphereComponent                                   DeploymentRadius                                               => _offDeploymentRadius.GetValue();
	public USphereComponent                                   ConstructionRadius                                             => _offConstructionRadius.GetValue();
	public byte/*(bool)*/                                     bUseResourceTickRateToUpdateResources                          => _offbUseResourceTickRateToUpdateResources.GetValue();
	public float                                              MaxTicketsPerSecond                                            => _offMaxTicketsPerSecond.GetValue();
	public float                                              TicketsPerPlayer                                               => _offTicketsPerPlayer.GetValue();
	public int                                                TicketsLostWhenOverrun                                         => _offTicketsLostWhenOverrun.GetValue();
	public int                                                EnemiesToDisableSpawn                                          => _offEnemiesToDisableSpawn.GetValue();
	public int                                                EnemiesNear                                                    => _offEnemiesNear.GetValue();
	public float                                              InitialConstructionPoints                                      => _offInitialConstructionPoints.GetValue();
	public float                                              MaxConstructionPoints                                          => _offMaxConstructionPoints.GetValue();
	public float                                              InitialAmmo                                                    => _offInitialAmmo.GetValue();
	public float                                              MaxAmmo                                                        => _offMaxAmmo.GetValue();
	public float                                              CPPerSecond                                                    => _offCPPerSecond.GetValue();
	public float                                              AmmoPerSecond                                                  => _offAmmoPerSecond.GetValue();
	public float                                              ResourceGenerationRate                                         => _offResourceGenerationRate.GetValue();
	public float                                              CaptureTickRate                                                => _offCaptureTickRate.GetValue();
	public int                                                SiegedMinNearbyEnemies                                         => _offSiegedMinNearbyEnemies.GetValue();
	public float                                              NearbyEnemiesRadius                                            => _offNearbyEnemiesRadius.GetValue();
	public float                                              Ammo                                                           => _offAmmo.GetValue();
	public float                                              ConstructionPoints                                             => _offConstructionPoints.GetValue();
	public float                                              ExclusionRadius                                                => _offExclusionRadius.GetValue();
	public int                                                NearbyEnemies                                                  => _offNearbyEnemies.GetValue();
	public int                                                SiegedSpawnPoints                                              => _offSiegedSpawnPoints.GetValue();
	#endregion


}

// Class Squad.SQFreeLookComponent
// 0x008E (0x0156 - 0x00C8)
public class USQFreeLookComponent : UActorComponent
{
	#region Offsets
	private ExternalOffset<APawn>                             _offOuterPawn                                                  = new ExternalOffset<APawn>(0x00E0, true);                     // 0x00E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<UCameraComponent>                  _offFreeLookCamera                                             = new ExternalOffset<UCameraComponent>(0x0100, true);          // 0x0100(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbCanFreelookWhileADS                                       = new ExternalOffset<byte/*(bool)*/>(0x0108);                  // 0x0108(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbFreelookCanRecenterWeapons                                = new ExternalOffset<byte/*(bool)*/>(0x0109);                  // 0x0109(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FVector2D>                         _offPitchLimits                                                = new ExternalOffset<FVector2D>(0x010C, false);                // 0x010C(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FVector2D>                         _offYawLimits                                                  = new ExternalOffset<FVector2D>(0x0114, false);                // 0x0114(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FVector2D>                         _offRotationSpeed                                              = new ExternalOffset<FVector2D>(0x011C, false);                // 0x011C(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<float>                             _offResetSpeed                                                 = new ExternalOffset<float>(0x0124);                           // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FSQRotator_NetQuantizeBytes>       _offReplicatedFreeLookRot                                      = new ExternalOffset<FSQRotator_NetQuantizeBytes>(0x0148, false); // 0x0148(0x000C) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	private ExternalOffset<EFreeLookMode>                     _offFreeLookMode                                               = new ExternalOffset<EFreeLookMode>(0x0154, false);            // 0x0154(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbReplicateFreeLookRotation                                 = new ExternalOffset<byte/*(bool)*/>(0x0155);                  // 0x0155(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public APawn                                              OuterPawn                                                      => _offOuterPawn.GetValue();
	public UCameraComponent                                   FreeLookCamera                                                 => _offFreeLookCamera.GetValue();
	public byte/*(bool)*/                                     bCanFreelookWhileADS                                           => _offbCanFreelookWhileADS.GetValue();
	public byte/*(bool)*/                                     bFreelookCanRecenterWeapons                                    => _offbFreelookCanRecenterWeapons.GetValue();
	public FVector2D                                          PitchLimits                                                    => _offPitchLimits.GetValue();
	public FVector2D                                          YawLimits                                                      => _offYawLimits.GetValue();
	public FVector2D                                          RotationSpeed                                                  => _offRotationSpeed.GetValue();
	public float                                              ResetSpeed                                                     => _offResetSpeed.GetValue();
	public FSQRotator_NetQuantizeBytes                        ReplicatedFreeLookRot                                          => _offReplicatedFreeLookRot.GetValue();
	public EFreeLookMode                                      FreeLookMode                                                   => _offFreeLookMode.GetValue();
	public byte/*(bool)*/                                     bReplicateFreeLookRotation                                     => _offbReplicateFreeLookRotation.GetValue();
	#endregion


}

// Class Squad.SQFreeLookInterface
// 0x0000 (0x0028 - 0x0028)
public class USQFreeLookInterface : UInterface
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQFriendsBrowserWidget
// 0x0010 (0x0240 - 0x0230)
public class USQFriendsBrowserWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbCanStartNewFindFriends                                    = new ExternalOffset<byte/*(bool)*/>(0x0230);                  // 0x0230(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQFindFriendsCallbackProxy>       _offCurrentCallback                                            = new ExternalOffset<USQFindFriendsCallbackProxy>(0x0238, true); // 0x0238(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bCanStartNewFindFriends                                        => _offbCanStartNewFindFriends.GetValue();
	public USQFindFriendsCallbackProxy                        CurrentCallback                                                => _offCurrentCallback.GetValue();
	#endregion


}

// Class Squad.SQGameState
// 0x012C (0x03C8 - 0x029C)
public class ASQGameState : AGameState
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbTimerPaused                                               = new ExternalOffset<byte/*(bool)*/>(0x02A8);                  // 0x02A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsTicketBasedGame                                         = new ExternalOffset<byte/*(bool)*/>(0x02A9);                  // 0x02A9(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbTeamPrepsActive                                           = new ExternalOffset<byte/*(bool)*/>(0x02AA);                  // 0x02AA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQTeamState>>              _offTeamStates                                                 = new ExternalOffset<TArray<ASQTeamState>>(0x02E8, false);     // 0x02E8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQTeamState>>              _offIndexedTeamStates                                          = new ExternalOffset<TArray<ASQTeamState>>(0x02F8, false);     // 0x02F8(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offChangeTeamWaitTime                                         = new ExternalOffset<int>(0x0308);                             // 0x0308(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQTeamState>                      _offWinningTeam                                                = new ExternalOffset<ASQTeamState>(0x0310, true);              // 0x0310(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offWinningTeamTickets                                         = new ExternalOffset<int>(0x0318);                             // 0x0318(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offServerTickRate                                             = new ExternalOffset<float>(0x031C);                           // 0x031C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offGameModeName                                               = new ExternalOffset<FString>(0x0320, false);                  // 0x0320(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQGameModeRules>>          _offGameModeRules                                              = new ExternalOffset<TArray<FSQGameModeRules>>(0x0330, false); // 0x0330(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offNextMapName                                                = new ExternalOffset<FString>(0x0340, false);                  // 0x0340(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQGameCommandComponent>           _offGameCommandComponent                                       = new ExternalOffset<USQGameCommandComponent>(0x0350, true);   // 0x0350(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offGameCommandComponentClass                                  = new ExternalOffset<UClass>(0x0358, true);                    // 0x0358(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMaxFireTeamCount                                           = new ExternalOffset<int>(0x0360);                             // 0x0360(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMaxFireTeamSize                                            = new ExternalOffset<int>(0x0364);                             // 0x0364(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offMapName                                                    = new ExternalOffset<FString>(0x0368, false);                  // 0x0368(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offMaxPlayers                                                 = new ExternalOffset<int>(0x0378);                             // 0x0378(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FString>                           _offServerName                                                 = new ExternalOffset<FString>(0x0380, false);                  // 0x0380(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FString>                           _offMessageOfTheDay                                            = new ExternalOffset<FString>(0x0390, false);                  // 0x0390(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQCoreStateConnectionChildActorComponent> _offCoreStateConnectionChildActorComponent                     = new ExternalOffset<USQCoreStateConnectionChildActorComponent>(0x03A0, true); // 0x03A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offTimeOfCompletion                                           = new ExternalOffset<float>(0x03A8);                           // 0x03A8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offServerStartTimeStamp                                       = new ExternalOffset<int>(0x03B8);                             // 0x03B8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQMapMarkerManagerComponent>      _offMapMarkerManagerComponent                                  = new ExternalOffset<USQMapMarkerManagerComponent>(0x03C0, true); // 0x03C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bTimerPaused                                                   => _offbTimerPaused.GetValue();
	public byte/*(bool)*/                                     bIsTicketBasedGame                                             => _offbIsTicketBasedGame.GetValue();
	public byte/*(bool)*/                                     bTeamPrepsActive                                               => _offbTeamPrepsActive.GetValue();
	public TArray<ASQTeamState>                               TeamStates                                                     => _offTeamStates.GetValue();
	public TArray<ASQTeamState>                               IndexedTeamStates                                              => _offIndexedTeamStates.GetValue();
	public int                                                ChangeTeamWaitTime                                             => _offChangeTeamWaitTime.GetValue();
	public ASQTeamState                                       WinningTeam                                                    => _offWinningTeam.GetValue();
	public int                                                WinningTeamTickets                                             => _offWinningTeamTickets.GetValue();
	public float                                              ServerTickRate                                                 => _offServerTickRate.GetValue();
	public FString                                            GameModeName                                                   => _offGameModeName.GetValue();
	public TArray<FSQGameModeRules>                           GameModeRules                                                  => _offGameModeRules.GetValue();
	public FString                                            NextMapName                                                    => _offNextMapName.GetValue();
	public USQGameCommandComponent                            GameCommandComponent                                           => _offGameCommandComponent.GetValue();
	public UClass                                             GameCommandComponentClass                                      => _offGameCommandComponentClass.GetValue();
	public int                                                MaxFireTeamCount                                               => _offMaxFireTeamCount.GetValue();
	public int                                                MaxFireTeamSize                                                => _offMaxFireTeamSize.GetValue();
	public FString                                            MapName                                                        => _offMapName.GetValue();
	public int                                                MaxPlayers                                                     => _offMaxPlayers.GetValue();
	public FString                                            ServerName                                                     => _offServerName.GetValue();
	public FString                                            MessageOfTheDay                                                => _offMessageOfTheDay.GetValue();
	public USQCoreStateConnectionChildActorComponent          CoreStateConnectionChildActorComponent                         => _offCoreStateConnectionChildActorComponent.GetValue();
	public float                                              TimeOfCompletion                                               => _offTimeOfCompletion.GetValue();
	public int                                                ServerStartTimeStamp                                           => _offServerStartTimeStamp.GetValue();
	public USQMapMarkerManagerComponent                       MapMarkerManagerComponent                                      => _offMapMarkerManagerComponent.GetValue();
	#endregion


}

// Class Squad.SQGameCommandComponent
// 0x0010 (0x00D8 - 0x00C8)
public class USQGameCommandComponent : UActorComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQGameEngine
// 0x0048 (0x0E10 - 0x0DC8)
public class USQGameEngine : UGameEngine
{
	#region Offsets
	private ExternalOffset<USQConfig>                         _offSquadConfig                                                = new ExternalOffset<USQConfig>(0x0E08, true);                 // 0x0E08(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USQConfig                                          SquadConfig                                                    => _offSquadConfig.GetValue();
	#endregion


}

// Class Squad.SQGameEventRuleset
// 0x0002 (0x0272 - 0x0270)
public class ASQGameEventRuleset : ASQGameRuleSet
{
	#region Offsets
	private ExternalOffset<ESQKillReportChannel>              _offJoinChannel                                                = new ExternalOffset<ESQKillReportChannel>(0x0270, false);     // 0x0270(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQKillReportChannel>              _offPartChannel                                                = new ExternalOffset<ESQKillReportChannel>(0x0271, false);     // 0x0271(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ESQKillReportChannel                               JoinChannel                                                    => _offJoinChannel.GetValue();
	public ESQKillReportChannel                               PartChannel                                                    => _offPartChannel.GetValue();
	#endregion


}

// Class Squad.SQGameInstance
// 0x0518 (0x0578 - 0x0060)
public class USQGameInstance : UGameInstance
{
	#region Offsets
//	private TMap<struct FString, struct FSQMapData>           _offMapsData                                                   = new ExternalOffset<TMap<FSQMapData>>(0x0168, false);         // 0x0168(0x0050) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQSoliderNetPriorityObject>> _offSoliderNetPriorities                                       = new ExternalOffset<TArray<FSQSoliderNetPriorityObject>>(0x01B8, false); // 0x01B8(0x0010) (ZeroConstructor, Config, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSoldierNetPriorityConeSensitivity                          = new ExternalOffset<float>(0x01C8);                           // 0x01C8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSoldierNetPriorityConeFactor                               = new ExternalOffset<float>(0x01CC);                           // 0x01CC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQConnectionCheckBeaconHostObj>   _offSQConnectionCheckHost                                      = new ExternalOffset<ASQConnectionCheckBeaconHostObj>(0x01D0, true); // 0x01D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQJoinBeaconHost>                 _offSQJoinQueueHost                                            = new ExternalOffset<ASQJoinBeaconHost>(0x01D8, true);         // 0x01D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<AOnlineBeaconHost>                 _offBeaconHost                                                 = new ExternalOffset<AOnlineBeaconHost>(0x01E0, true);         // 0x01E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQJoinBeaconClient>               _offJoinQueueClient                                            = new ExternalOffset<ASQJoinBeaconClient>(0x01E8, true);       // 0x01E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQFindSessionsCallbackProxy>      _offActiveFindSessionsCallback                                 = new ExternalOffset<USQFindSessionsCallbackProxy>(0x01F8, true); // 0x01F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQFindFriendsCallbackProxy>       _offActiveFindFriendsCallback                                  = new ExternalOffset<USQFindFriendsCallbackProxy>(0x0200, true); // 0x0200(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private TMap<struct FString, class ASQConnectionCheckBeaconClient*> _offConnectionCheckClients                                     = new ExternalOffset<TMap<ASQConnectionCheckBeaconClient>>(0x0208, false); // 0x0208(0x0050) (ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbSaveServerBrowserResultsToFile                            = new ExternalOffset<byte/*(bool)*/>(0x02E0);                  // 0x02E0(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offMainMenuMap                                                = new ExternalOffset<FString>(0x02E8, false);                  // 0x02E8(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<ESQRandomizeMapRotation>           _offRandomizeMapRotation                                       = new ExternalOffset<ESQRandomizeMapRotation>(0x02F8, false);  // 0x02F8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<USQGameInstanceEvents>             _offGameInstanceEvents                                         = new ExternalOffset<USQGameInstanceEvents>(0x0418, true);     // 0x0418(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<USQConfig>                         _offSquadConfig                                                = new ExternalOffset<USQConfig>(0x0420, true);                 // 0x0420(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnMapIconCreated                                           = new ExternalOffset<FScriptMulticastDelegate>(0x0428, false); // 0x0428(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnMapIconDestroyed                                         = new ExternalOffset<FScriptMulticastDelegate>(0x0438, false); // 0x0438(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnWorldOriginLocationChangedEvent                          = new ExternalOffset<FScriptMulticastDelegate>(0x0448, false); // 0x0448(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offUserEnteredPassword                                        = new ExternalOffset<FString>(0x0458, false);                  // 0x0458(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offMusicAudioComponent                                        = new ExternalOffset<UAudioComponent>(0x0468, true);           // 0x0468(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offMusicSoundCue                                              = new ExternalOffset<USoundBase>(0x0470, true);                // 0x0470(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FBlueprintSessionResult>           _offPendingServer                                              = new ExternalOffset<FBlueprintSessionResult>(0x0478, false);  // 0x0478(0x00B8) (BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbHasPendingServer                                          = new ExternalOffset<byte/*(bool)*/>(0x0530);                  // 0x0530(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<char>>                      _offLastTicket                                                 = new ExternalOffset<TArray<char>>(0x0538, false);             // 0x0538(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	private ExternalOffset<FDateTime>                         _offLastTicketRefresh                                          = new ExternalOffset<FDateTime>(0x0548, false);                // 0x0548(0x0008) (ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FString>                           _offServerPartMessage                                          = new ExternalOffset<FString>(0x0558, false);                  // 0x0558(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FModdingRuntimeModInfoDetails>> _offModInfo                                                    = new ExternalOffset<TArray<FModdingRuntimeModInfoDetails>>(0x0568, false); // 0x0568(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<FSQSoliderNetPriorityObject>                SoliderNetPriorities                                           => _offSoliderNetPriorities.GetValue();
	public float                                              SoldierNetPriorityConeSensitivity                              => _offSoldierNetPriorityConeSensitivity.GetValue();
	public float                                              SoldierNetPriorityConeFactor                                   => _offSoldierNetPriorityConeFactor.GetValue();
	public ASQConnectionCheckBeaconHostObj                    SQConnectionCheckHost                                          => _offSQConnectionCheckHost.GetValue();
	public ASQJoinBeaconHost                                  SQJoinQueueHost                                                => _offSQJoinQueueHost.GetValue();
	public AOnlineBeaconHost                                  BeaconHost                                                     => _offBeaconHost.GetValue();
	public ASQJoinBeaconClient                                JoinQueueClient                                                => _offJoinQueueClient.GetValue();
	public USQFindSessionsCallbackProxy                       ActiveFindSessionsCallback                                     => _offActiveFindSessionsCallback.GetValue();
	public USQFindFriendsCallbackProxy                        ActiveFindFriendsCallback                                      => _offActiveFindFriendsCallback.GetValue();
	public byte/*(bool)*/                                     bSaveServerBrowserResultsToFile                                => _offbSaveServerBrowserResultsToFile.GetValue();
	public FString                                            MainMenuMap                                                    => _offMainMenuMap.GetValue();
	public ESQRandomizeMapRotation                            RandomizeMapRotation                                           => _offRandomizeMapRotation.GetValue();
	public USQGameInstanceEvents                              GameInstanceEvents                                             => _offGameInstanceEvents.GetValue();
	public USQConfig                                          SquadConfig                                                    => _offSquadConfig.GetValue();
	public FScriptMulticastDelegate                           OnMapIconCreated                                               => _offOnMapIconCreated.GetValue();
	public FScriptMulticastDelegate                           OnMapIconDestroyed                                             => _offOnMapIconDestroyed.GetValue();
	public FScriptMulticastDelegate                           OnWorldOriginLocationChangedEvent                              => _offOnWorldOriginLocationChangedEvent.GetValue();
	public FString                                            UserEnteredPassword                                            => _offUserEnteredPassword.GetValue();
	public UAudioComponent                                    MusicAudioComponent                                            => _offMusicAudioComponent.GetValue();
	public USoundBase                                         MusicSoundCue                                                  => _offMusicSoundCue.GetValue();
	public FBlueprintSessionResult                            PendingServer                                                  => _offPendingServer.GetValue();
	public byte/*(bool)*/                                     bHasPendingServer                                              => _offbHasPendingServer.GetValue();
	public TArray<char>                                       LastTicket                                                     => _offLastTicket.GetValue();
	public FDateTime                                          LastTicketRefresh                                              => _offLastTicketRefresh.GetValue();
	public FString                                            ServerPartMessage                                              => _offServerPartMessage.GetValue();
	public TArray<FModdingRuntimeModInfoDetails>              ModInfo                                                        => _offModInfo.GetValue();
	#endregion


}

// Class Squad.SQGameInstanceEvents
// 0x0060 (0x0088 - 0x0028)
public class USQGameInstanceEvents : UObject
{
	#region Offsets
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPlayerDestroyedVehicle                                   = new ExternalOffset<FScriptMulticastDelegate>(0x0028, false); // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPlayerWounded                                            = new ExternalOffset<FScriptMulticastDelegate>(0x0038, false); // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPlayerDetonateExplosive                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0048, false); // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnEnteredMainMenu                                          = new ExternalOffset<FScriptMulticastDelegate>(0x0058, false); // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnGameStarted                                              = new ExternalOffset<FScriptMulticastDelegate>(0x0068, false); // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnGameEnded                                                = new ExternalOffset<FScriptMulticastDelegate>(0x0078, false); // 0x0078(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FScriptMulticastDelegate                           OnPlayerDestroyedVehicle                                       => _offOnPlayerDestroyedVehicle.GetValue();
	public FScriptMulticastDelegate                           OnPlayerWounded                                                => _offOnPlayerWounded.GetValue();
	public FScriptMulticastDelegate                           OnPlayerDetonateExplosive                                      => _offOnPlayerDetonateExplosive.GetValue();
	public FScriptMulticastDelegate                           OnEnteredMainMenu                                              => _offOnEnteredMainMenu.GetValue();
	public FScriptMulticastDelegate                           OnGameStarted                                                  => _offOnGameStarted.GetValue();
	public FScriptMulticastDelegate                           OnGameEnded                                                    => _offOnGameEnded.GetValue();
	#endregion


}

// Class Squad.SQGameInstanceSubsystems
// 0x0020 (0x0050 - 0x0030)
public class USQGameInstanceSubsystems : UGameInstanceSubsystem
{
	#region Offsets
	private ExternalOffset<TArray<FSQGameSubsystemObject>>    _offSquadGameSubsystemObjects                                  = new ExternalOffset<TArray<FSQGameSubsystemObject>>(0x0030, false); // 0x0030(0x0010) (ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	private ExternalOffset<TArray<UObject>>                   _offSubsystemInstances                                         = new ExternalOffset<TArray<UObject>>(0x0040, false);          // 0x0040(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public TArray<FSQGameSubsystemObject>                     SquadGameSubsystemObjects                                      => _offSquadGameSubsystemObjects.GetValue();
	public TArray<UObject>                                    SubsystemInstances                                             => _offSubsystemInstances.GetValue();
	#endregion


}

// Class Squad.SQGameMode
// 0x0107 (0x0490 - 0x0389)
public class ASQGameMode : AGameMode
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbTournamentMode                                            = new ExternalOffset<byte/*(bool)*/>(0x0390);                  // 0x0390(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCheckEndMatchConditionsTimeInterval                        = new ExternalOffset<float>(0x0394);                           // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offInitialLives                                               = new ExternalOffset<int>(0x0398);                             // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offStartupTime                                                = new ExternalOffset<int>(0x039C);                             // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbEditorIgnoreStartupTime                                   = new ExternalOffset<byte/*(bool)*/>(0x03A0);                  // 0x03A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offRoundTime                                                  = new ExternalOffset<int>(0x03A4);                             // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTimeBetweenMatches                                         = new ExternalOffset<int>(0x03A8);                             // 0x03A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQTeam>                           _offWinnerTeam                                                 = new ExternalOffset<ASQTeam>(0x03B0, true);                   // 0x03B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offTeamClass                                                  = new ExternalOffset<UClass>(0x03B8, true);                    // 0x03B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offSquadClass                                                 = new ExternalOffset<UClass>(0x03C0, true);                    // 0x03C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<UClass>>                    _offRuleSetClasses                                             = new ExternalOffset<TArray<UClass>>(0x03C8, false);           // 0x03C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NoClear, UObjectWrapper, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQGameRuleSet>>            _offRuleSets                                                   = new ExternalOffset<TArray<ASQGameRuleSet>>(0x03D8, false);   // 0x03D8(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQTeam>>                   _offTeams                                                      = new ExternalOffset<TArray<ASQTeam>>(0x03E8, false);          // 0x03E8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQTeam>>                   _offIndexedTeams                                               = new ExternalOffset<TArray<ASQTeam>>(0x03F8, false);          // 0x03F8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offEditorStartTeam                                            = new ExternalOffset<int>(0x0408);                             // 0x0408(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offNextMap                                                    = new ExternalOffset<FString>(0x0410, false);                  // 0x0410(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAdminOverrideNextMap                                      = new ExternalOffset<byte/*(bool)*/>(0x0420);                  // 0x0420(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offDisplayName                                                = new ExternalOffset<FText>(0x0478, false);                    // 0x0478(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bTournamentMode                                                => _offbTournamentMode.GetValue();
	public float                                              CheckEndMatchConditionsTimeInterval                            => _offCheckEndMatchConditionsTimeInterval.GetValue();
	public int                                                InitialLives                                                   => _offInitialLives.GetValue();
	public int                                                StartupTime                                                    => _offStartupTime.GetValue();
	public byte/*(bool)*/                                     bEditorIgnoreStartupTime                                       => _offbEditorIgnoreStartupTime.GetValue();
	public int                                                RoundTime                                                      => _offRoundTime.GetValue();
	public int                                                TimeBetweenMatches                                             => _offTimeBetweenMatches.GetValue();
	public ASQTeam                                            WinnerTeam                                                     => _offWinnerTeam.GetValue();
	public UClass                                             TeamClass                                                      => _offTeamClass.GetValue();
	public UClass                                             SquadClass                                                     => _offSquadClass.GetValue();
	public TArray<UClass>                                     RuleSetClasses                                                 => _offRuleSetClasses.GetValue();
	public TArray<ASQGameRuleSet>                             RuleSets                                                       => _offRuleSets.GetValue();
	public TArray<ASQTeam>                                    Teams                                                          => _offTeams.GetValue();
	public TArray<ASQTeam>                                    IndexedTeams                                                   => _offIndexedTeams.GetValue();
	public int                                                EditorStartTeam                                                => _offEditorStartTeam.GetValue();
	public FString                                            NextMap                                                        => _offNextMap.GetValue();
	public byte/*(bool)*/                                     bAdminOverrideNextMap                                          => _offbAdminOverrideNextMap.GetValue();
	public FText                                              DisplayName                                                    => _offDisplayName.GetValue();
	#endregion


}

// Class Squad.SQGameMode_Menu
// 0x0007 (0x0390 - 0x0389)
public class ASQGameMode_Menu : AGameMode
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQGameplayStatics
// 0x0000 (0x0028 - 0x0028)
public class USQGameplayStatics : UBlueprintFunctionLibrary
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQGameSpawn
// 0x0164 (0x03DC - 0x0278)
public class ASQGameSpawn : APlayerStart
{
	#region Offsets
	private ExternalOffset<FScriptMulticastDelegate>          _offOnSiegedStateChanged                                       = new ExternalOffset<FScriptMulticastDelegate>(0x0280, false); // 0x0280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnSpawningEnabledStateChanged                              = new ExternalOffset<FScriptMulticastDelegate>(0x0290, false); // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRespawnDelay                                               = new ExternalOffset<float>(0x02A0);                           // 0x02A0(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRespawnIncrease                                            = new ExternalOffset<float>(0x02A4);                           // 0x02A4(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSecondsOfSpawnProtection                                   = new ExternalOffset<float>(0x02A8);                           // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbSpawningEnabled                                           = new ExternalOffset<byte/*(bool)*/>(0x02AC);                  // 0x02AC(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbSieged                                                    = new ExternalOffset<byte/*(bool)*/>(0x02AD);                  // 0x02AD(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offSpawnIconComponentClass                                    = new ExternalOffset<UClass>(0x02B0, true);                    // 0x02B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxTimeIntervalBetweenSpawnPointLocationEvaluations        = new ExternalOffset<float>(0x02B8);                           // 0x02B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQCoreStateComponent>             _offStateObject                                                = new ExternalOffset<USQCoreStateComponent>(0x02C0, true);     // 0x02C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQMapIconComponent>               _offMapIcon                                                    = new ExternalOffset<USQMapIconComponent>(0x02C8, true);       // 0x02C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UClass>                            _offDefaultMapIconWidget                                       = new ExternalOffset<UClass>(0x02D0, true);                    // 0x02D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offSpawnSearchRadius                                          = new ExternalOffset<float>(0x02D8);                           // 0x02D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offSpawnSearchHeight                                          = new ExternalOffset<float>(0x02DC);                           // 0x02DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<FVector>>                   _offValidSpawnLocations                                        = new ExternalOffset<TArray<FVector>>(0x02E0, false);          // 0x02E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<FVector>>                   _offValidOutOfSightSpawnPoints                                 = new ExternalOffset<TArray<FVector>>(0x02F0, false);          // 0x02F0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbHasValidSpawnLocation                                     = new ExternalOffset<byte/*(bool)*/>(0x0300);                  // 0x0300(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCanEverDoNearbyEnemiesCheck                               = new ExternalOffset<byte/*(bool)*/>(0x0310);                  // 0x0310(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offSiegedMinNearbyEnemies                                     = new ExternalOffset<int>(0x0314);                             // 0x0314(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRespawnDelayPerNearbyEnemy                                 = new ExternalOffset<float>(0x0318);                           // 0x0318(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offNearbyEnemiesRadius                                        = new ExternalOffset<float>(0x031C);                           // 0x031C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNearbyEnemies                                              = new ExternalOffset<int>(0x0320);                             // 0x0320(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQTeam>                           _offTeam                                                       = new ExternalOffset<ESQTeam>(0x03B8, false);                  // 0x03B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQSpawnPointType>                 _offSpawnPointType                                             = new ExternalOffset<ESQSpawnPointType>(0x03B9, false);        // 0x03B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offWaveIntervalTime                                           = new ExternalOffset<float>(0x03BC);                           // 0x03BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offWaveSpawnStartTime                                         = new ExternalOffset<float>(0x03D8);                           // 0x03D8(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public FScriptMulticastDelegate                           OnSiegedStateChanged                                           => _offOnSiegedStateChanged.GetValue();
	public FScriptMulticastDelegate                           OnSpawningEnabledStateChanged                                  => _offOnSpawningEnabledStateChanged.GetValue();
	public float                                              RespawnDelay                                                   => _offRespawnDelay.GetValue();
	public float                                              RespawnIncrease                                                => _offRespawnIncrease.GetValue();
	public float                                              SecondsOfSpawnProtection                                       => _offSecondsOfSpawnProtection.GetValue();
	public byte/*(bool)*/                                     bSpawningEnabled                                               => _offbSpawningEnabled.GetValue();
	public byte/*(bool)*/                                     bSieged                                                        => _offbSieged.GetValue();
	public UClass                                             SpawnIconComponentClass                                        => _offSpawnIconComponentClass.GetValue();
	public float                                              MaxTimeIntervalBetweenSpawnPointLocationEvaluations            => _offMaxTimeIntervalBetweenSpawnPointLocationEvaluations.GetValue();
	public USQCoreStateComponent                              StateObject                                                    => _offStateObject.GetValue();
	public USQMapIconComponent                                MapIcon                                                        => _offMapIcon.GetValue();
	public UClass                                             DefaultMapIconWidget                                           => _offDefaultMapIconWidget.GetValue();
	public float                                              SpawnSearchRadius                                              => _offSpawnSearchRadius.GetValue();
	public float                                              SpawnSearchHeight                                              => _offSpawnSearchHeight.GetValue();
	public TArray<FVector>                                    ValidSpawnLocations                                            => _offValidSpawnLocations.GetValue();
	public TArray<FVector>                                    ValidOutOfSightSpawnPoints                                     => _offValidOutOfSightSpawnPoints.GetValue();
	public byte/*(bool)*/                                     bHasValidSpawnLocation                                         => _offbHasValidSpawnLocation.GetValue();
	public byte/*(bool)*/                                     bCanEverDoNearbyEnemiesCheck                                   => _offbCanEverDoNearbyEnemiesCheck.GetValue();
	public int                                                SiegedMinNearbyEnemies                                         => _offSiegedMinNearbyEnemies.GetValue();
	public float                                              RespawnDelayPerNearbyEnemy                                     => _offRespawnDelayPerNearbyEnemy.GetValue();
	public float                                              NearbyEnemiesRadius                                            => _offNearbyEnemiesRadius.GetValue();
	public int                                                NearbyEnemies                                                  => _offNearbyEnemies.GetValue();
	public ESQTeam                                            Team                                                           => _offTeam.GetValue();
	public ESQSpawnPointType                                  SpawnPointType                                                 => _offSpawnPointType.GetValue();
	public float                                              WaveIntervalTime                                               => _offWaveIntervalTime.GetValue();
	public float                                              WaveSpawnStartTime                                             => _offWaveSpawnStartTime.GetValue();
	#endregion


}

// Class Squad.SQGameRallyPoint
// 0x0030 (0x040C - 0x03DC)
public class ASQGameRallyPoint : ASQGameSpawn
{
	#region Offsets
	private ExternalOffset<UStaticMeshComponent>              _offMesh                                                       = new ExternalOffset<UStaticMeshComponent>(0x03E0, true);      // 0x03E0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USphereComponent>                  _offCollisionComp                                              = new ExternalOffset<USphereComponent>(0x03E8, true);          // 0x03E8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQMapIconComponent>               _offRallyPointMapIcon                                          = new ExternalOffset<USQMapIconComponent>(0x03F0, true);       // 0x03F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offEnemyDisableRadius                                         = new ExternalOffset<int>(0x03F8);                             // 0x03F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offPlacementSound                                             = new ExternalOffset<USoundBase>(0x0400, true);                // 0x0400(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumberOfSpawns                                             = new ExternalOffset<int>(0x0408);                             // 0x0408(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public UStaticMeshComponent                               Mesh                                                           => _offMesh.GetValue();
	public USphereComponent                                   CollisionComp                                                  => _offCollisionComp.GetValue();
	public USQMapIconComponent                                RallyPointMapIcon                                              => _offRallyPointMapIcon.GetValue();
	public int                                                EnemyDisableRadius                                             => _offEnemyDisableRadius.GetValue();
	public USoundBase                                         PlacementSound                                                 => _offPlacementSound.GetValue();
	public int                                                NumberOfSpawns                                                 => _offNumberOfSpawns.GetValue();
	#endregion


}

// Class Squad.SQGameSession
// 0x0270 (0x04D0 - 0x0260)
public class ASQGameSession : AGameSession
{
	#region Offsets
	private ExternalOffset<int>                               _offNumPlayersDiffForTeamChanges                               = new ExternalOffset<int>(0x03E8);                             // 0x03E8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAllowTeamChanges                                          = new ExternalOffset<byte/*(bool)*/>(0x03EC);                  // 0x03EC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbPreventTeamChangeIfUnbalanced                             = new ExternalOffset<byte/*(bool)*/>(0x03ED);                  // 0x03ED(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQConfig>                         _offSquadConfig                                                = new ExternalOffset<USQConfig>(0x04C8, true);                 // 0x04C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public int                                                NumPlayersDiffForTeamChanges                                   => _offNumPlayersDiffForTeamChanges.GetValue();
	public byte/*(bool)*/                                     bAllowTeamChanges                                              => _offbAllowTeamChanges.GetValue();
	public byte/*(bool)*/                                     bPreventTeamChangeIfUnbalanced                                 => _offbPreventTeamChangeIfUnbalanced.GetValue();
	public USQConfig                                          SquadConfig                                                    => _offSquadConfig.GetValue();
	#endregion


}

// Class Squad.SQGameSubsystemInterface
// 0x0000 (0x0028 - 0x0028)
public class USQGameSubsystemInterface : UInterface
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQGameUserSettings
// 0x0288 (0x03A0 - 0x0118)
public class USQGameUserSettings : UGameUserSettings
{
	#region Offsets
	private ExternalOffset<FString>                           _offPlayerNamePrefix                                           = new ExternalOffset<FString>(0x0130, false);                  // 0x0130(0x0010) (BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offNameTagOpacity                                             = new ExternalOffset<float>(0x0140);                           // 0x0140(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offNameTagScale                                               = new ExternalOffset<float>(0x0144);                           // 0x0144(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowNameTagText                                           = new ExternalOffset<byte/*(bool)*/>(0x0148);                  // 0x0148(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowNameTagKit                                            = new ExternalOffset<byte/*(bool)*/>(0x0149);                  // 0x0149(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDistanceFieldShadows                                      = new ExternalOffset<byte/*(bool)*/>(0x014A);                  // 0x014A(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbInvertedYAxis                                             = new ExternalOffset<byte/*(bool)*/>(0x014B);                  // 0x014B(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbEnableMouseSmoothing                                      = new ExternalOffset<byte/*(bool)*/>(0x014C);                  // 0x014C(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbKeyboardHighlight                                         = new ExternalOffset<byte/*(bool)*/>(0x014D);                  // 0x014D(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseMenuToolTips                                           = new ExternalOffset<byte/*(bool)*/>(0x014E);                  // 0x014E(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseRadialMenuToolTips                                     = new ExternalOffset<byte/*(bool)*/>(0x014F);                  // 0x014F(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseInGameHelp                                             = new ExternalOffset<byte/*(bool)*/>(0x0150);                  // 0x0150(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbHideServerIdentification                                  = new ExternalOffset<byte/*(bool)*/>(0x0151);                  // 0x0151(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFOV                                                        = new ExternalOffset<float>(0x0154);                           // 0x0154(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offGlobalSensitivity                                          = new ExternalOffset<float>(0x0158);                           // 0x0158(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDoubleKeyPressTime                                         = new ExternalOffset<float>(0x015C);                           // 0x015C(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offGamma                                                      = new ExternalOffset<float>(0x0160);                           // 0x0160(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDistanceFieldShadowDistance                                = new ExternalOffset<float>(0x0164);                           // 0x0164(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCascadeShadowMapDistance                                   = new ExternalOffset<float>(0x0168);                           // 0x0168(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbToggleCrouch                                              = new ExternalOffset<byte/*(bool)*/>(0x0170);                  // 0x0170(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbToggleADS                                                 = new ExternalOffset<byte/*(bool)*/>(0x0171);                  // 0x0171(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbToggleLean                                                = new ExternalOffset<byte/*(bool)*/>(0x0172);                  // 0x0172(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbToggleFreelook                                            = new ExternalOffset<byte/*(bool)*/>(0x0173);                  // 0x0173(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFreelookSensitivitySliderValue                             = new ExternalOffset<float>(0x0174);                           // 0x0174(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFreelookSensitivity                                        = new ExternalOffset<float>(0x0178);                           // 0x0178(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbHelicopterInvertMousePitch                                = new ExternalOffset<byte/*(bool)*/>(0x017C);                  // 0x017C(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHelicopterPitchSensitivitySliderValue                      = new ExternalOffset<float>(0x0180);                           // 0x0180(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHelicopterPitchSensitivity                                 = new ExternalOffset<float>(0x0184);                           // 0x0184(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHelicopterRollSensitivitySliderValue                       = new ExternalOffset<float>(0x0188);                           // 0x0188(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHelicopterRollSensitivity                                  = new ExternalOffset<float>(0x018C);                           // 0x018C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseSensivityScaling                                       = new ExternalOffset<byte/*(bool)*/>(0x0190);                  // 0x0190(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offGlobalSensitivitySliderValue                               = new ExternalOffset<float>(0x0194);                           // 0x0194(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSoldierSensitivitySliderValue                              = new ExternalOffset<float>(0x0198);                           // 0x0198(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSoldierSensitivity                                         = new ExternalOffset<float>(0x019C);                           // 0x019C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private TMap<float, float>                                _offSoldierZoomSensitivitiesSliderValues                       = new ExternalOffset<TMap<float>>(0x01A0, false);              // 0x01A0(0x0050) (BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
//	private TMap<float, float>                                _offSoldierZoomSensitivities                                   = new ExternalOffset<TMap<float>>(0x01F0, false);              // 0x01F0(0x0050) (ZeroConstructor, Config, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offVehicleSensitivitySliderValue                              = new ExternalOffset<float>(0x0240);                           // 0x0240(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offVehicleSensitivity                                         = new ExternalOffset<float>(0x0244);                           // 0x0244(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private TMap<float, float>                                _offVehicleZoomSensitivitiesSliderValues                       = new ExternalOffset<TMap<float>>(0x0248, false);              // 0x0248(0x0050) (BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
//	private TMap<float, float>                                _offVehicleZoomSensitivities                                   = new ExternalOffset<TMap<float>>(0x0298, false);              // 0x0298(0x0050) (ZeroConstructor, Config, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbFreelookRecentersWeapon                                   = new ExternalOffset<byte/*(bool)*/>(0x02E8);                  // 0x02E8(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbJumpCausesUnCrouch                                        = new ExternalOffset<byte/*(bool)*/>(0x02E9);                  // 0x02E9(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbJumpCausesUnProne                                         = new ExternalOffset<byte/*(bool)*/>(0x02EA);                  // 0x02EA(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsDoubleTapWalkingEnabled                                 = new ExternalOffset<byte/*(bool)*/>(0x02EB);                  // 0x02EB(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowDiffVerServers                                        = new ExternalOffset<byte/*(bool)*/>(0x02EC);                  // 0x02EC(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowEmptyServers                                          = new ExternalOffset<byte/*(bool)*/>(0x02ED);                  // 0x02ED(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowQueuesSeparately                                      = new ExternalOffset<byte/*(bool)*/>(0x02EE);                  // 0x02EE(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowReservedSlots                                         = new ExternalOffset<byte/*(bool)*/>(0x02EF);                  // 0x02EF(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offGraphicsQuality                                            = new ExternalOffset<int>(0x02F0);                             // 0x02F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offAntiAliasingMethod                                         = new ExternalOffset<int>(0x02F4);                             // 0x02F4(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offAntiAliasingMethodQuality                                  = new ExternalOffset<int>(0x02F8);                             // 0x02F8(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offScreenSharpening                                           = new ExternalOffset<float>(0x02FC);                           // 0x02FC(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMSAACompositingSampleCount                                 = new ExternalOffset<int>(0x0300);                             // 0x0300(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offAmbientOcclusion                                           = new ExternalOffset<int>(0x0304);                             // 0x0304(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offAmbientOcclusionStaticFraction                             = new ExternalOffset<int>(0x0308);                             // 0x0308(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offAmbientOcclusionLevels                                     = new ExternalOffset<int>(0x030C);                             // 0x030C(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAmbientOcclusionRadiusScale                                = new ExternalOffset<float>(0x0310);                           // 0x0310(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMotionBlur                                                 = new ExternalOffset<int>(0x0314);                             // 0x0314(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMotionBlurQuality                                          = new ExternalOffset<int>(0x0318);                             // 0x0318(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offLensFlare                                                  = new ExternalOffset<int>(0x031C);                             // 0x031C(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offLensFlareQuality                                           = new ExternalOffset<int>(0x0320);                             // 0x0320(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offBloom                                                      = new ExternalOffset<int>(0x0324);                             // 0x0324(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offBloomQuality                                               = new ExternalOffset<int>(0x0328);                             // 0x0328(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offAutoExposure                                               = new ExternalOffset<int>(0x032C);                             // 0x032C(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offEyeAdaptationQuality                                       = new ExternalOffset<int>(0x0330);                             // 0x0330(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMasterVolume                                               = new ExternalOffset<float>(0x0334);                           // 0x0334(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offEffectsVolume                                              = new ExternalOffset<float>(0x0338);                           // 0x0338(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offUIVolume                                                   = new ExternalOffset<float>(0x033C);                           // 0x033C(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMusicVolume                                                = new ExternalOffset<float>(0x0340);                           // 0x0340(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSquadVoiceVolume                                           = new ExternalOffset<float>(0x0344);                           // 0x0344(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offVoiceSide                                                  = new ExternalOffset<float>(0x0348);                           // 0x0348(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbApplyVoiceRadioFilter                                     = new ExternalOffset<byte/*(bool)*/>(0x034C);                  // 0x034C(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbApplyBiasWhileNonLeader                                   = new ExternalOffset<byte/*(bool)*/>(0x034D);                  // 0x034D(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbPlaySquadVOIPSounds                                       = new ExternalOffset<byte/*(bool)*/>(0x034F);                  // 0x034F(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbPlayCommandVOIPSounds                                     = new ExternalOffset<byte/*(bool)*/>(0x0350);                  // 0x0350(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLocalVoIPVolume                                            = new ExternalOffset<float>(0x0354);                           // 0x0354(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCommandVoIPVolume                                          = new ExternalOffset<float>(0x0358);                           // 0x0358(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCommandVoIPSide                                            = new ExternalOffset<float>(0x035C);                           // 0x035C(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLeaderVoipDucking                                          = new ExternalOffset<float>(0x0360);                           // 0x0360(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offUnfocusedVolumeMultiplier                                  = new ExternalOffset<float>(0x0364);                           // 0x0364(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxImpactEffectDecalLifeSpan                               = new ExternalOffset<float>(0x0368);                           // 0x0368(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQOnlineInventorySetting>> _offInventorySettings                                          = new ExternalOffset<TArray<FSQOnlineInventorySetting>>(0x0370, false); // 0x0370(0x0010) (BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTextureStreaming                                           = new ExternalOffset<int>(0x0380);                             // 0x0380(0x0004) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnGameUserSettingsChanged                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0388, false); // 0x0388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsLanMatch                                                = new ExternalOffset<byte/*(bool)*/>(0x0398);                  // 0x0398(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<uint>                              _offSquadIncrementalVersion                                    = new ExternalOffset<uint>(0x039C);                            // 0x039C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public FString                                            PlayerNamePrefix                                               => _offPlayerNamePrefix.GetValue();
	public float                                              NameTagOpacity                                                 => _offNameTagOpacity.GetValue();
	public float                                              NameTagScale                                                   => _offNameTagScale.GetValue();
	public byte/*(bool)*/                                     bShowNameTagText                                               => _offbShowNameTagText.GetValue();
	public byte/*(bool)*/                                     bShowNameTagKit                                                => _offbShowNameTagKit.GetValue();
	public byte/*(bool)*/                                     bDistanceFieldShadows                                          => _offbDistanceFieldShadows.GetValue();
	public byte/*(bool)*/                                     bInvertedYAxis                                                 => _offbInvertedYAxis.GetValue();
	public byte/*(bool)*/                                     bEnableMouseSmoothing                                          => _offbEnableMouseSmoothing.GetValue();
	public byte/*(bool)*/                                     bKeyboardHighlight                                             => _offbKeyboardHighlight.GetValue();
	public byte/*(bool)*/                                     bUseMenuToolTips                                               => _offbUseMenuToolTips.GetValue();
	public byte/*(bool)*/                                     bUseRadialMenuToolTips                                         => _offbUseRadialMenuToolTips.GetValue();
	public byte/*(bool)*/                                     bUseInGameHelp                                                 => _offbUseInGameHelp.GetValue();
	public byte/*(bool)*/                                     bHideServerIdentification                                      => _offbHideServerIdentification.GetValue();
	public float                                              FOV                                                            => _offFOV.GetValue();
	public float                                              GlobalSensitivity                                              => _offGlobalSensitivity.GetValue();
	public float                                              DoubleKeyPressTime                                             => _offDoubleKeyPressTime.GetValue();
	public float                                              Gamma                                                          => _offGamma.GetValue();
	public float                                              DistanceFieldShadowDistance                                    => _offDistanceFieldShadowDistance.GetValue();
	public float                                              CascadeShadowMapDistance                                       => _offCascadeShadowMapDistance.GetValue();
	public byte/*(bool)*/                                     bToggleCrouch                                                  => _offbToggleCrouch.GetValue();
	public byte/*(bool)*/                                     bToggleADS                                                     => _offbToggleADS.GetValue();
	public byte/*(bool)*/                                     bToggleLean                                                    => _offbToggleLean.GetValue();
	public byte/*(bool)*/                                     bToggleFreelook                                                => _offbToggleFreelook.GetValue();
	public float                                              FreelookSensitivitySliderValue                                 => _offFreelookSensitivitySliderValue.GetValue();
	public float                                              FreelookSensitivity                                            => _offFreelookSensitivity.GetValue();
	public byte/*(bool)*/                                     bHelicopterInvertMousePitch                                    => _offbHelicopterInvertMousePitch.GetValue();
	public float                                              HelicopterPitchSensitivitySliderValue                          => _offHelicopterPitchSensitivitySliderValue.GetValue();
	public float                                              HelicopterPitchSensitivity                                     => _offHelicopterPitchSensitivity.GetValue();
	public float                                              HelicopterRollSensitivitySliderValue                           => _offHelicopterRollSensitivitySliderValue.GetValue();
	public float                                              HelicopterRollSensitivity                                      => _offHelicopterRollSensitivity.GetValue();
	public byte/*(bool)*/                                     bUseSensivityScaling                                           => _offbUseSensivityScaling.GetValue();
	public float                                              GlobalSensitivitySliderValue                                   => _offGlobalSensitivitySliderValue.GetValue();
	public float                                              SoldierSensitivitySliderValue                                  => _offSoldierSensitivitySliderValue.GetValue();
	public float                                              SoldierSensitivity                                             => _offSoldierSensitivity.GetValue();
	public float                                              VehicleSensitivitySliderValue                                  => _offVehicleSensitivitySliderValue.GetValue();
	public float                                              VehicleSensitivity                                             => _offVehicleSensitivity.GetValue();
	public byte/*(bool)*/                                     bFreelookRecentersWeapon                                       => _offbFreelookRecentersWeapon.GetValue();
	public byte/*(bool)*/                                     bJumpCausesUnCrouch                                            => _offbJumpCausesUnCrouch.GetValue();
	public byte/*(bool)*/                                     bJumpCausesUnProne                                             => _offbJumpCausesUnProne.GetValue();
	public byte/*(bool)*/                                     bIsDoubleTapWalkingEnabled                                     => _offbIsDoubleTapWalkingEnabled.GetValue();
	public byte/*(bool)*/                                     bShowDiffVerServers                                            => _offbShowDiffVerServers.GetValue();
	public byte/*(bool)*/                                     bShowEmptyServers                                              => _offbShowEmptyServers.GetValue();
	public byte/*(bool)*/                                     bShowQueuesSeparately                                          => _offbShowQueuesSeparately.GetValue();
	public byte/*(bool)*/                                     bShowReservedSlots                                             => _offbShowReservedSlots.GetValue();
	public int                                                GraphicsQuality                                                => _offGraphicsQuality.GetValue();
	public int                                                AntiAliasingMethod                                             => _offAntiAliasingMethod.GetValue();
	public int                                                AntiAliasingMethodQuality                                      => _offAntiAliasingMethodQuality.GetValue();
	public float                                              ScreenSharpening                                               => _offScreenSharpening.GetValue();
	public int                                                MSAACompositingSampleCount                                     => _offMSAACompositingSampleCount.GetValue();
	public int                                                AmbientOcclusion                                               => _offAmbientOcclusion.GetValue();
	public int                                                AmbientOcclusionStaticFraction                                 => _offAmbientOcclusionStaticFraction.GetValue();
	public int                                                AmbientOcclusionLevels                                         => _offAmbientOcclusionLevels.GetValue();
	public float                                              AmbientOcclusionRadiusScale                                    => _offAmbientOcclusionRadiusScale.GetValue();
	public int                                                MotionBlur                                                     => _offMotionBlur.GetValue();
	public int                                                MotionBlurQuality                                              => _offMotionBlurQuality.GetValue();
	public int                                                LensFlare                                                      => _offLensFlare.GetValue();
	public int                                                LensFlareQuality                                               => _offLensFlareQuality.GetValue();
	public int                                                Bloom                                                          => _offBloom.GetValue();
	public int                                                BloomQuality                                                   => _offBloomQuality.GetValue();
	public int                                                AutoExposure                                                   => _offAutoExposure.GetValue();
	public int                                                EyeAdaptationQuality                                           => _offEyeAdaptationQuality.GetValue();
	public float                                              MasterVolume                                                   => _offMasterVolume.GetValue();
	public float                                              EffectsVolume                                                  => _offEffectsVolume.GetValue();
	public float                                              UIVolume                                                       => _offUIVolume.GetValue();
	public float                                              MusicVolume                                                    => _offMusicVolume.GetValue();
	public float                                              SquadVoiceVolume                                               => _offSquadVoiceVolume.GetValue();
	public float                                              VoiceSide                                                      => _offVoiceSide.GetValue();
	public byte/*(bool)*/                                     bApplyVoiceRadioFilter                                         => _offbApplyVoiceRadioFilter.GetValue();
	public byte/*(bool)*/                                     bApplyBiasWhileNonLeader                                       => _offbApplyBiasWhileNonLeader.GetValue();
	public byte/*(bool)*/                                     bPlaySquadVOIPSounds                                           => _offbPlaySquadVOIPSounds.GetValue();
	public byte/*(bool)*/                                     bPlayCommandVOIPSounds                                         => _offbPlayCommandVOIPSounds.GetValue();
	public float                                              LocalVoIPVolume                                                => _offLocalVoIPVolume.GetValue();
	public float                                              CommandVoIPVolume                                              => _offCommandVoIPVolume.GetValue();
	public float                                              CommandVoIPSide                                                => _offCommandVoIPSide.GetValue();
	public float                                              LeaderVoipDucking                                              => _offLeaderVoipDucking.GetValue();
	public float                                              UnfocusedVolumeMultiplier                                      => _offUnfocusedVolumeMultiplier.GetValue();
	public float                                              MaxImpactEffectDecalLifeSpan                                   => _offMaxImpactEffectDecalLifeSpan.GetValue();
	public TArray<FSQOnlineInventorySetting>                  InventorySettings                                              => _offInventorySettings.GetValue();
	public int                                                TextureStreaming                                               => _offTextureStreaming.GetValue();
	public FScriptMulticastDelegate                           OnGameUserSettingsChanged                                      => _offOnGameUserSettingsChanged.GetValue();
	public byte/*(bool)*/                                     bIsLanMatch                                                    => _offbIsLanMatch.GetValue();
	public uint                                               SquadIncrementalVersion                                        => _offSquadIncrementalVersion.GetValue();
	#endregion


}

// Class Squad.SQGraphInitializerComponent
// 0x0020 (0x00E8 - 0x00C8)
public class USQGraphInitializerComponent : UActorComponent
{
	#region Offsets
	private ExternalOffset<TArray<FSQDesignLink>>             _offDesignOutgoingLinks                                        = new ExternalOffset<TArray<FSQDesignLink>>(0x00D8, false);    // 0x00D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<FSQDesignLink>                              DesignOutgoingLinks                                            => _offDesignOutgoingLinks.GetValue();
	#endregion


}

// Class Squad.SQGraphAASInitializerComponent
// 0x0000 (0x00E8 - 0x00E8)
public class USQGraphAASInitializerComponent : USQGraphInitializerComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQGraphVisualizerComponent
// 0x0020 (0x00E8 - 0x00C8)
public class USQGraphVisualizerComponent : UActorComponent
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbShowDebugInfo                                             = new ExternalOffset<byte/*(bool)*/>(0x00D8);                  // 0x00D8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDebugNodeRadius                                            = new ExternalOffset<float>(0x00DC);                           // 0x00DC(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDebugNodeHeightOffset                                      = new ExternalOffset<float>(0x00E0);                           // 0x00E0(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDebugLineHeightOffset                                      = new ExternalOffset<float>(0x00E4);                           // 0x00E4(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bShowDebugInfo                                                 => _offbShowDebugInfo.GetValue();
	public float                                              DebugNodeRadius                                                => _offDebugNodeRadius.GetValue();
	public float                                              DebugNodeHeightOffset                                          => _offDebugNodeHeightOffset.GetValue();
	public float                                              DebugLineHeightOffset                                          => _offDebugLineHeightOffset.GetValue();
	#endregion


}

// Class Squad.SQGraphAASVisualizerComponent
// 0x0000 (0x00E8 - 0x00E8)
public class USQGraphAASVisualizerComponent : USQGraphVisualizerComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.RouteSelectorPredicate
// 0x0004 (0x002C - 0x0028)
public class URouteSelectorPredicate : UObject
{
	#region Offsets
	private ExternalOffset<int>                               _offNumLinksToChoose                                           = new ExternalOffset<int>(0x0028);                             // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public int                                                NumLinksToChoose                                               => _offNumLinksToChoose.GetValue();
	#endregion


}

// Class Squad.RouteSelectorPredicate2
// 0x0004 (0x0030 - 0x002C)
public class URouteSelectorPredicate2 : URouteSelectorPredicate
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.RouteCombinerPredicate
// 0x0000 (0x0028 - 0x0028)
public class URouteCombinerPredicate : UObject
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.RouteCombinerPredicate2
// 0x0000 (0x0028 - 0x0028)
public class URouteCombinerPredicate2 : URouteCombinerPredicate
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQGraphRAASInitializerComponent
// 0x0000 (0x00E8 - 0x00E8)
public class USQGraphRAASInitializerComponent : USQGraphAASInitializerComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQGraphRAASVisualizerComponent
// 0x0014 (0x00FC - 0x00E8)
public class USQGraphRAASVisualizerComponent : USQGraphAASVisualizerComponent
{
	#region Offsets
	private ExternalOffset<int>                               _offRouteIndex                                                 = new ExternalOffset<int>(0x00F8);                             // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public int                                                RouteIndex                                                     => _offRouteIndex.GetValue();
	#endregion


}

// Class Squad.SQGrenade
// 0x0114 (0x0578 - 0x0464)
public class ASQGrenade : ASQEquipableItem
{
	#region Offsets
	private ExternalOffset<ESQGrenadeState>                   _offGrenadeState                                               = new ExternalOffset<ESQGrenadeState>(0x0480, false);          // 0x0480(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQGrenadeData>                    _offGrenadeConfig                                              = new ExternalOffset<FSQGrenadeData>(0x0488, false);           // 0x0488(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<USQGrenadeStaticInfo>              _offGrenadeStaticInfo                                          = new ExternalOffset<USQGrenadeStaticInfo>(0x04E8, true);      // 0x04E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedOverhandPinpull                                     = new ExternalOffset<byte/*(bool)*/>(0x04F0);                  // 0x04F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedOverhandThrow                                       = new ExternalOffset<byte/*(bool)*/>(0x04F1);                  // 0x04F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedUnderhandPinpull                                    = new ExternalOffset<byte/*(bool)*/>(0x04F2);                  // 0x04F2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedUnderhandThrow                                      = new ExternalOffset<byte/*(bool)*/>(0x04F3);                  // 0x04F3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedReloading                                           = new ExternalOffset<byte/*(bool)*/>(0x04F4);                  // 0x04F4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offWeaponOverhandPinpull1pMontage                             = new ExternalOffset<UAnimMontage>(0x04F8, true);              // 0x04F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offWeaponOverhandPinpull3pMontage                             = new ExternalOffset<UAnimMontage>(0x0500, true);              // 0x0500(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offOverhandPinpull1pMontage                                   = new ExternalOffset<UAnimMontage>(0x0508, true);              // 0x0508(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offOverhandPinpull3pMontage                                   = new ExternalOffset<UAnimMontage>(0x0510, true);              // 0x0510(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offWeaponOverhandThrow1pMontage                               = new ExternalOffset<UAnimMontage>(0x0518, true);              // 0x0518(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offWeaponOverhandThrow3pMontage                               = new ExternalOffset<UAnimMontage>(0x0520, true);              // 0x0520(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offOverhandThrow1pMontage                                     = new ExternalOffset<UAnimMontage>(0x0528, true);              // 0x0528(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offOverhandThrow3pMontage                                     = new ExternalOffset<UAnimMontage>(0x0530, true);              // 0x0530(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offWeaponUnderhandPinpull1pMontage                            = new ExternalOffset<UAnimMontage>(0x0538, true);              // 0x0538(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offWeaponUnderhandPinpull3pMontage                            = new ExternalOffset<UAnimMontage>(0x0540, true);              // 0x0540(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offUnderhandPinpull1pMontage                                  = new ExternalOffset<UAnimMontage>(0x0548, true);              // 0x0548(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offUnderhandPinpull3pMontage                                  = new ExternalOffset<UAnimMontage>(0x0550, true);              // 0x0550(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offWeaponUnderhandThrow1pMontage                              = new ExternalOffset<UAnimMontage>(0x0558, true);              // 0x0558(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offWeaponUnderhandThrow3pMontage                              = new ExternalOffset<UAnimMontage>(0x0560, true);              // 0x0560(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offUnderhandThrow1pMontage                                    = new ExternalOffset<UAnimMontage>(0x0568, true);              // 0x0568(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAnimMontage>                      _offUnderhandThrow3pMontage                                    = new ExternalOffset<UAnimMontage>(0x0570, true);              // 0x0570(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public ESQGrenadeState                                    GrenadeState                                                   => _offGrenadeState.GetValue();
	public FSQGrenadeData                                     GrenadeConfig                                                  => _offGrenadeConfig.GetValue();
	public USQGrenadeStaticInfo                               GrenadeStaticInfo                                              => _offGrenadeStaticInfo.GetValue();
	public byte/*(bool)*/                                     bCachedOverhandPinpull                                         => _offbCachedOverhandPinpull.GetValue();
	public byte/*(bool)*/                                     bCachedOverhandThrow                                           => _offbCachedOverhandThrow.GetValue();
	public byte/*(bool)*/                                     bCachedUnderhandPinpull                                        => _offbCachedUnderhandPinpull.GetValue();
	public byte/*(bool)*/                                     bCachedUnderhandThrow                                          => _offbCachedUnderhandThrow.GetValue();
	public byte/*(bool)*/                                     bCachedReloading                                               => _offbCachedReloading.GetValue();
	public UAnimMontage                                       WeaponOverhandPinpull1pMontage                                 => _offWeaponOverhandPinpull1pMontage.GetValue();
	public UAnimMontage                                       WeaponOverhandPinpull3pMontage                                 => _offWeaponOverhandPinpull3pMontage.GetValue();
	public UAnimMontage                                       OverhandPinpull1pMontage                                       => _offOverhandPinpull1pMontage.GetValue();
	public UAnimMontage                                       OverhandPinpull3pMontage                                       => _offOverhandPinpull3pMontage.GetValue();
	public UAnimMontage                                       WeaponOverhandThrow1pMontage                                   => _offWeaponOverhandThrow1pMontage.GetValue();
	public UAnimMontage                                       WeaponOverhandThrow3pMontage                                   => _offWeaponOverhandThrow3pMontage.GetValue();
	public UAnimMontage                                       OverhandThrow1pMontage                                         => _offOverhandThrow1pMontage.GetValue();
	public UAnimMontage                                       OverhandThrow3pMontage                                         => _offOverhandThrow3pMontage.GetValue();
	public UAnimMontage                                       WeaponUnderhandPinpull1pMontage                                => _offWeaponUnderhandPinpull1pMontage.GetValue();
	public UAnimMontage                                       WeaponUnderhandPinpull3pMontage                                => _offWeaponUnderhandPinpull3pMontage.GetValue();
	public UAnimMontage                                       UnderhandPinpull1pMontage                                      => _offUnderhandPinpull1pMontage.GetValue();
	public UAnimMontage                                       UnderhandPinpull3pMontage                                      => _offUnderhandPinpull3pMontage.GetValue();
	public UAnimMontage                                       WeaponUnderhandThrow1pMontage                                  => _offWeaponUnderhandThrow1pMontage.GetValue();
	public UAnimMontage                                       WeaponUnderhandThrow3pMontage                                  => _offWeaponUnderhandThrow3pMontage.GetValue();
	public UAnimMontage                                       UnderhandThrow1pMontage                                        => _offUnderhandThrow1pMontage.GetValue();
	public UAnimMontage                                       UnderhandThrow3pMontage                                        => _offUnderhandThrow3pMontage.GetValue();
	#endregion


}

// Class Squad.SQProjectile
// 0x0228 (0x0460 - 0x0238)
public class ASQProjectile : AActor
{
	#region Offsets
	private ExternalOffset<USphereComponent>                  _offCollisionComp                                              = new ExternalOffset<USphereComponent>(0x0248, true);          // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UProjectileMovementComponent>      _offProjectileMovement                                         = new ExternalOffset<UProjectileMovementComponent>(0x0250, true); // 0x0250(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offDamageTypeToApply                                          = new ExternalOffset<UClass>(0x0258, true);                    // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FHitResult>                        _offLastImpactHitResult                                        = new ExternalOffset<FHitResult>(0x0260, false);               // 0x0260(0x0088) (BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbHasImpacted                                               = new ExternalOffset<byte/*(bool)*/>(0x02E8);                  // 0x02E8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDestroyOnImpact                                           = new ExternalOffset<byte/*(bool)*/>(0x02E9);                  // 0x02E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAppliesSuppression                                        = new ExternalOffset<byte/*(bool)*/>(0x02EA);                  // 0x02EA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCollisionSize                                              = new ExternalOffset<float>(0x02EC);                           // 0x02EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsExplosiveProjectile                                     = new ExternalOffset<byte/*(bool)*/>(0x031C);                  // 0x031C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offExplosiveBaseDamage                                        = new ExternalOffset<float>(0x0320);                           // 0x0320(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offExplosiveMinimumDamage                                     = new ExternalOffset<float>(0x0324);                           // 0x0324(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offExplosiveKillZoneRadius                                    = new ExternalOffset<float>(0x0328);                           // 0x0328(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offExplosiveDamageInnerRadius                                 = new ExternalOffset<float>(0x032C);                           // 0x032C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offExplosiveDamageOuterRadius                                 = new ExternalOffset<float>(0x0330);                           // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offExplosiveDamageFalloff                                     = new ExternalOffset<float>(0x0334);                           // 0x0334(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offArmorPenetrationDepthMillimeters                           = new ExternalOffset<float>(0x0338);                           // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTraceDistanceAfterPenetrationMeters                        = new ExternalOffset<float>(0x033C);                           // 0x033C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offExplosiveDamageDistanceFromImpactNormal                    = new ExternalOffset<float>(0x0340);                           // 0x0340(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offProjectileAC                                               = new ExternalOffset<UAudioComponent>(0x0348, true);           // 0x0348(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbOnlyPlayFlybySoundOnProjectile                            = new ExternalOffset<byte/*(bool)*/>(0x0350);                  // 0x0350(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offFlybySound                                                 = new ExternalOffset<USoundCue>(0x0358, true);                 // 0x0358(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offSuppressionInfoClass                                       = new ExternalOffset<UClass>(0x0360, true);                    // 0x0360(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private TMap<class USQPhysicalMaterial*, struct FSQProjectileImpactEffect> _offSpecificImpactEffects                                      = new ExternalOffset<TMap<FSQProjectileImpactEffect>>(0x0368, false); // 0x0368(0x0050) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
//	private TMap<class USQPhysicalMaterial*, struct FSQProjectileImpactEffect> _offSpecificThrowableEffects                                   = new ExternalOffset<TMap<FSQProjectileImpactEffect>>(0x03B8, false); // 0x03B8(0x0050) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
//	private TMap<class USQPhysicalMaterial*, struct FSQProjectileImpactEffect> _offSpecificExplosionEffects                                   = new ExternalOffset<TMap<FSQProjectileImpactEffect>>(0x0408, false); // 0x0408(0x0050) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offDefaultEffectsClass                                        = new ExternalOffset<UClass>(0x0458, true);                    // 0x0458(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USphereComponent                                   CollisionComp                                                  => _offCollisionComp.GetValue();
	public UProjectileMovementComponent                       ProjectileMovement                                             => _offProjectileMovement.GetValue();
	public UClass                                             DamageTypeToApply                                              => _offDamageTypeToApply.GetValue();
	public FHitResult                                         LastImpactHitResult                                            => _offLastImpactHitResult.GetValue();
	public byte/*(bool)*/                                     bHasImpacted                                                   => _offbHasImpacted.GetValue();
	public byte/*(bool)*/                                     bDestroyOnImpact                                               => _offbDestroyOnImpact.GetValue();
	public byte/*(bool)*/                                     bAppliesSuppression                                            => _offbAppliesSuppression.GetValue();
	public float                                              CollisionSize                                                  => _offCollisionSize.GetValue();
	public byte/*(bool)*/                                     bIsExplosiveProjectile                                         => _offbIsExplosiveProjectile.GetValue();
	public float                                              ExplosiveBaseDamage                                            => _offExplosiveBaseDamage.GetValue();
	public float                                              ExplosiveMinimumDamage                                         => _offExplosiveMinimumDamage.GetValue();
	public float                                              ExplosiveKillZoneRadius                                        => _offExplosiveKillZoneRadius.GetValue();
	public float                                              ExplosiveDamageInnerRadius                                     => _offExplosiveDamageInnerRadius.GetValue();
	public float                                              ExplosiveDamageOuterRadius                                     => _offExplosiveDamageOuterRadius.GetValue();
	public float                                              ExplosiveDamageFalloff                                         => _offExplosiveDamageFalloff.GetValue();
	public float                                              ArmorPenetrationDepthMillimeters                               => _offArmorPenetrationDepthMillimeters.GetValue();
	public float                                              TraceDistanceAfterPenetrationMeters                            => _offTraceDistanceAfterPenetrationMeters.GetValue();
	public float                                              ExplosiveDamageDistanceFromImpactNormal                        => _offExplosiveDamageDistanceFromImpactNormal.GetValue();
	public UAudioComponent                                    ProjectileAC                                                   => _offProjectileAC.GetValue();
	public byte/*(bool)*/                                     bOnlyPlayFlybySoundOnProjectile                                => _offbOnlyPlayFlybySoundOnProjectile.GetValue();
	public USoundCue                                          FlybySound                                                     => _offFlybySound.GetValue();
	public UClass                                             SuppressionInfoClass                                           => _offSuppressionInfoClass.GetValue();
	public UClass                                             DefaultEffectsClass                                            => _offDefaultEffectsClass.GetValue();
	#endregion


}

// Class Squad.SQGrenadeProjectile
// 0x002C (0x048C - 0x0460)
public class ASQGrenadeProjectile : ASQProjectile
{
	#region Offsets
	private ExternalOffset<float>                             _offMinimumVelocityToPlayThrowableEffects                      = new ExternalOffset<float>(0x0480);                           // 0x0480(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFuseTime                                                   = new ExternalOffset<float>(0x0484);                           // 0x0484(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsExploding                                               = new ExternalOffset<byte/*(bool)*/>(0x0488);                  // 0x0488(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbExplodeOnFuse                                             = new ExternalOffset<byte/*(bool)*/>(0x0489);                  // 0x0489(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbExplodeOnLifeSpanExpired                                  = new ExternalOffset<byte/*(bool)*/>(0x048A);                  // 0x048A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbExplodeOnLifeSpanExpiredAfterImpact                       = new ExternalOffset<byte/*(bool)*/>(0x048B);                  // 0x048B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              MinimumVelocityToPlayThrowableEffects                          => _offMinimumVelocityToPlayThrowableEffects.GetValue();
	public float                                              FuseTime                                                       => _offFuseTime.GetValue();
	public byte/*(bool)*/                                     bIsExploding                                                   => _offbIsExploding.GetValue();
	public byte/*(bool)*/                                     bExplodeOnFuse                                                 => _offbExplodeOnFuse.GetValue();
	public byte/*(bool)*/                                     bExplodeOnLifeSpanExpired                                      => _offbExplodeOnLifeSpanExpired.GetValue();
	public byte/*(bool)*/                                     bExplodeOnLifeSpanExpiredAfterImpact                           => _offbExplodeOnLifeSpanExpiredAfterImpact.GetValue();
	#endregion


}

// Class Squad.SQGrenadeStaticInfo
// 0x0080 (0x0558 - 0x04D8)
public class USQGrenadeStaticInfo : USQItemStaticInfo
{
	#region Offsets
	private ExternalOffset<UAnimMontage>                      _offWeaponOverhandPinpull1pMontage                             = new ExternalOffset<UAnimMontage>(0x04D8, true);              // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offWeaponOverhandPinpull3pMontage                             = new ExternalOffset<UAnimMontage>(0x04E0, true);              // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offOverhandPinpull1pMontage                                   = new ExternalOffset<UAnimMontage>(0x04E8, true);              // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offOverhandPinpull3pMontage                                   = new ExternalOffset<UAnimMontage>(0x04F0, true);              // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offWeaponOverhandThrow1pMontage                               = new ExternalOffset<UAnimMontage>(0x04F8, true);              // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offWeaponOverhandThrow3pMontage                               = new ExternalOffset<UAnimMontage>(0x0500, true);              // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offOverhandThrow1pMontage                                     = new ExternalOffset<UAnimMontage>(0x0508, true);              // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offOverhandThrow3pMontage                                     = new ExternalOffset<UAnimMontage>(0x0510, true);              // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offWeaponUnderhandPinpull1pMontage                            = new ExternalOffset<UAnimMontage>(0x0518, true);              // 0x0518(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offWeaponUnderhandPinpull3pMontage                            = new ExternalOffset<UAnimMontage>(0x0520, true);              // 0x0520(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offUnderhandPinpull1pMontage                                  = new ExternalOffset<UAnimMontage>(0x0528, true);              // 0x0528(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offUnderhandPinpull3pMontage                                  = new ExternalOffset<UAnimMontage>(0x0530, true);              // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offWeaponUnderhandThrow1pMontage                              = new ExternalOffset<UAnimMontage>(0x0538, true);              // 0x0538(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offWeaponUnderhandThrow3pMontage                              = new ExternalOffset<UAnimMontage>(0x0540, true);              // 0x0540(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offUnderhandThrow1pMontage                                    = new ExternalOffset<UAnimMontage>(0x0548, true);              // 0x0548(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offUnderhandThrow3pMontage                                    = new ExternalOffset<UAnimMontage>(0x0550, true);              // 0x0550(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UAnimMontage                                       WeaponOverhandPinpull1pMontage                                 => _offWeaponOverhandPinpull1pMontage.GetValue();
	public UAnimMontage                                       WeaponOverhandPinpull3pMontage                                 => _offWeaponOverhandPinpull3pMontage.GetValue();
	public UAnimMontage                                       OverhandPinpull1pMontage                                       => _offOverhandPinpull1pMontage.GetValue();
	public UAnimMontage                                       OverhandPinpull3pMontage                                       => _offOverhandPinpull3pMontage.GetValue();
	public UAnimMontage                                       WeaponOverhandThrow1pMontage                                   => _offWeaponOverhandThrow1pMontage.GetValue();
	public UAnimMontage                                       WeaponOverhandThrow3pMontage                                   => _offWeaponOverhandThrow3pMontage.GetValue();
	public UAnimMontage                                       OverhandThrow1pMontage                                         => _offOverhandThrow1pMontage.GetValue();
	public UAnimMontage                                       OverhandThrow3pMontage                                         => _offOverhandThrow3pMontage.GetValue();
	public UAnimMontage                                       WeaponUnderhandPinpull1pMontage                                => _offWeaponUnderhandPinpull1pMontage.GetValue();
	public UAnimMontage                                       WeaponUnderhandPinpull3pMontage                                => _offWeaponUnderhandPinpull3pMontage.GetValue();
	public UAnimMontage                                       UnderhandPinpull1pMontage                                      => _offUnderhandPinpull1pMontage.GetValue();
	public UAnimMontage                                       UnderhandPinpull3pMontage                                      => _offUnderhandPinpull3pMontage.GetValue();
	public UAnimMontage                                       WeaponUnderhandThrow1pMontage                                  => _offWeaponUnderhandThrow1pMontage.GetValue();
	public UAnimMontage                                       WeaponUnderhandThrow3pMontage                                  => _offWeaponUnderhandThrow3pMontage.GetValue();
	public UAnimMontage                                       UnderhandThrow1pMontage                                        => _offUnderhandThrow1pMontage.GetValue();
	public UAnimMontage                                       UnderhandThrow3pMontage                                        => _offUnderhandThrow3pMontage.GetValue();
	#endregion


}

// Class Squad.SQGridMarkerBase
// 0x0080 (0x02B0 - 0x0230)
public class USQGridMarkerBase : USQUserWidget
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbDrawVerticalNumbers                                       = new ExternalOffset<byte/*(bool)*/>(0x0230);                  // 0x0230(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbDrawHorizontalLetters                                     = new ExternalOffset<byte/*(bool)*/>(0x0231);                  // 0x0231(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FSlateFontInfo>                    _offGridMarkerFontInfo                                         = new ExternalOffset<FSlateFontInfo>(0x0238, false);           // 0x0238(0x0050) (Edit, BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FLinearColor>                      _offGridMarkerFontColor                                        = new ExternalOffset<FLinearColor>(0x0288, false);             // 0x0288(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offGridMarkerFontOffset                                       = new ExternalOffset<FVector2D>(0x0298, false);                // 0x0298(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQTextHorizontalAlignment>        _offHorizontalAlignment                                        = new ExternalOffset<ESQTextHorizontalAlignment>(0x02A0, false); // 0x02A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQTextVerticalAlignment>          _offVerticalAlignment                                          = new ExternalOffset<ESQTextVerticalAlignment>(0x02A1, false); // 0x02A1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQMap>                            _offOwnerMap                                                   = new ExternalOffset<USQMap>(0x02A8, true);                    // 0x02A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bDrawVerticalNumbers                                           => _offbDrawVerticalNumbers.GetValue();
	public byte/*(bool)*/                                     bDrawHorizontalLetters                                         => _offbDrawHorizontalLetters.GetValue();
	public FSlateFontInfo                                     GridMarkerFontInfo                                             => _offGridMarkerFontInfo.GetValue();
	public FLinearColor                                       GridMarkerFontColor                                            => _offGridMarkerFontColor.GetValue();
	public FVector2D                                          GridMarkerFontOffset                                           => _offGridMarkerFontOffset.GetValue();
	public ESQTextHorizontalAlignment                         HorizontalAlignment                                            => _offHorizontalAlignment.GetValue();
	public ESQTextVerticalAlignment                           VerticalAlignment                                              => _offVerticalAlignment.GetValue();
	public USQMap                                             OwnerMap                                                       => _offOwnerMap.GetValue();
	#endregion


}

// Class Squad.SQGridMarkerUnit
// 0x0018 (0x0248 - 0x0230)
public class USQGridMarkerUnit : USQUserWidget
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbIsVertical                                                = new ExternalOffset<byte/*(bool)*/>(0x0230);                  // 0x0230(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDefaultSize                                                = new ExternalOffset<float>(0x0234);                           // 0x0234(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCanvasPanel>                      _offSizeCanvas                                                 = new ExternalOffset<UCanvasPanel>(0x0238, true);              // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offTextBlock                                                  = new ExternalOffset<UTextBlock>(0x0240, true);                // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bIsVertical                                                    => _offbIsVertical.GetValue();
	public float                                              DefaultSize                                                    => _offDefaultSize.GetValue();
	public UCanvasPanel                                       SizeCanvas                                                     => _offSizeCanvas.GetValue();
	public UTextBlock                                         TextBlock                                                      => _offTextBlock.GetValue();
	#endregion


}

// Class Squad.SQGroundVehicle
// 0x01A0 (0x09B8 - 0x0818)
public class ASQGroundVehicle : ASQVehicle
{
	#region Offsets
	private ExternalOffset<TArray<FSQVehicleEffectsQualitySetting>> _offVehicleEffectsQualitySettings                              = new ExternalOffset<TArray<FSQVehicleEffectsQualitySetting>>(0x0818, false); // 0x0818(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQVehicleEffectConfig>>    _offVehicleEffectsConfig                                       = new ExternalOffset<TArray<FSQVehicleEffectConfig>>(0x0828, false); // 0x0828(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offWheelFXSound_RPMRate                                       = new ExternalOffset<FVector2D>(0x0838, false);                // 0x0838(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offWheelFXSound_LongSlipRate                                  = new ExternalOffset<FVector2D>(0x0840, false);                // 0x0840(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offWheelFXSound_LatSlipRate                                   = new ExternalOffset<FVector2D>(0x0848, false);                // 0x0848(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbEjectOpenSeatsOnHardLanding                               = new ExternalOffset<byte/*(bool)*/>(0x0850);                  // 0x0850(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDrawDebugTraces                                           = new ExternalOffset<byte/*(bool)*/>(0x0851);                  // 0x0851(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FTimerHandle>                      _offHardLandingCheckTimer                                      = new ExternalOffset<FTimerHandle>(0x0858, false);             // 0x0858(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FTimerHandle>                      _offIsFlyingTimer                                              = new ExternalOffset<FTimerHandle>(0x0860, false);             // 0x0860(0x0008) (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offIsFlyingUpdateInterval                                     = new ExternalOffset<float>(0x0868);                           // 0x0868(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offIsHardLandingUpdateInterval                                = new ExternalOffset<float>(0x086C);                           // 0x086C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FName>>                     _offLandingTraceSockets                                        = new ExternalOffset<TArray<FName>>(0x0870, false);            // 0x0870(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLandingTraceLenght                                         = new ExternalOffset<float>(0x0880);                           // 0x0880(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsFlying                                                  = new ExternalOffset<byte/*(bool)*/>(0x0884);                  // 0x0884(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLastFlyingZVelocity                                        = new ExternalOffset<float>(0x0888);                           // 0x0888(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offEjectZVelocityThreshold                                    = new ExternalOffset<float>(0x088C);                           // 0x088C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<AActor>>                    _offLandingCheckActorsToIgnore                                 = new ExternalOffset<TArray<AActor>>(0x0890, false);           // 0x0890(0x0010) (BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<USQVehicleCleanupComponent>        _offVehicleCleanupComponent                                    = new ExternalOffset<USQVehicleCleanupComponent>(0x08A0, true); // 0x08A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShouldSimulate                                            = new ExternalOffset<byte/*(bool)*/>(0x08A8);                  // 0x08A8(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offEngineRPMSound                                             = new ExternalOffset<USoundCue>(0x08B0, true);                 // 0x08B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offEngineRPMAC                                                = new ExternalOffset<UAudioComponent>(0x08B8, true);           // 0x08B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offEngineExhaustSound                                         = new ExternalOffset<USoundCue>(0x08C0, true);                 // 0x08C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offEngineExhaustStartAC                                       = new ExternalOffset<UAudioComponent>(0x08C8, true);           // 0x08C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offEngineExhaustAC                                            = new ExternalOffset<UAudioComponent>(0x08D0, true);           // 0x08D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offEngineExhaustStopAC                                        = new ExternalOffset<UAudioComponent>(0x08D8, true);           // 0x08D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offEngineStartSound                                           = new ExternalOffset<USoundCue>(0x08E0, true);                 // 0x08E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offEngineCompletedStartAC                                     = new ExternalOffset<UAudioComponent>(0x08E8, true);           // 0x08E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offEngineCompletedStartSound                                  = new ExternalOffset<USoundCue>(0x08F0, true);                 // 0x08F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offEngineFailedStartAC                                        = new ExternalOffset<UAudioComponent>(0x08F8, true);           // 0x08F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offEngineFailedStartSound                                     = new ExternalOffset<USoundCue>(0x0900, true);                 // 0x0900(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offEngineStartAC                                              = new ExternalOffset<UAudioComponent>(0x0908, true);           // 0x0908(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offEngineStopSound                                            = new ExternalOffset<USoundCue>(0x0910, true);                 // 0x0910(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offEngineStopAC                                               = new ExternalOffset<UAudioComponent>(0x0918, true);           // 0x0918(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offEngineSpeedAC                                              = new ExternalOffset<UAudioComponent>(0x0920, true);           // 0x0920(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offWheelFXAC                                                  = new ExternalOffset<UAudioComponent>(0x0928, true);           // 0x0928(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offLandingSound                                               = new ExternalOffset<USoundCue>(0x0930, true);                 // 0x0930(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offEngineIdleFadeInAfterEngineStartTime                       = new ExternalOffset<float>(0x0938);                           // 0x0938(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offEngineIdleFadeOutAfterEngineStopTime                       = new ExternalOffset<float>(0x093C);                           // 0x093C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offSpringCompressionLandingThreshold                          = new ExternalOffset<float>(0x0940);                           // 0x0940(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offSkidThresholdVelocity                                      = new ExternalOffset<float>(0x0944);                           // 0x0944(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offLongSlipSkidThreshold                                      = new ExternalOffset<float>(0x0948);                           // 0x0948(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offLateralSlipSkidThreshold                                   = new ExternalOffset<float>(0x094C);                           // 0x094C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UParticleSystemComponent>          _offExhaustPSC                                                 = new ExternalOffset<UParticleSystemComponent>(0x0950, true);  // 0x0950(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbTiresTouchingGround                                       = new ExternalOffset<byte/*(bool)*/>(0x0958);                  // 0x0958(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbHandbrakeActive                                           = new ExternalOffset<byte/*(bool)*/>(0x0959);                  // 0x0959(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsEngineActive                                            = new ExternalOffset<byte/*(bool)*/>(0x095A);                  // 0x095A(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsEngineToggleActive                                      = new ExternalOffset<byte/*(bool)*/>(0x095B);                  // 0x095B(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbAllowEngineBoosting                                       = new ExternalOffset<byte/*(bool)*/>(0x095C);                  // 0x095C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offEngineBoostTorqueMultiplier                                = new ExternalOffset<float>(0x0960);                           // 0x0960(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbHasEngineBoostBeenPressed                                 = new ExternalOffset<byte/*(bool)*/>(0x0964);                  // 0x0964(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<FSQEngineMovementSoundObject>> _offEngineMovementSounds                                       = new ExternalOffset<TArray<FSQEngineMovementSoundObject>>(0x0968, false); // 0x0968(0x0010) (Edit, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offActivateEngineDelay                                        = new ExternalOffset<float>(0x0978);                           // 0x0978(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDeActivateEngineDelay                                      = new ExternalOffset<float>(0x097C);                           // 0x097C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offGearChangingAlphaLerpSpeed                                 = new ExternalOffset<float>(0x0994);                           // 0x0994(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UWheeledVehicleMovementComponent>  _offVehicleMovement                                            = new ExternalOffset<UWheeledVehicleMovementComponent>(0x0998, true); // 0x0998(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UBoxComponent>                     _offVehicleRagdollOverlap                                      = new ExternalOffset<UBoxComponent>(0x09A0, true);             // 0x09A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offRagollOverlapTriggerSpeed                                  = new ExternalOffset<float>(0x09A8);                           // 0x09A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offCollisionKillSpeedKPH                                      = new ExternalOffset<int>(0x09AC);                             // 0x09AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCollisionsKillSoldiers                                    = new ExternalOffset<byte/*(bool)*/>(0x09B0);                  // 0x09B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offWheelInflationRate                                         = new ExternalOffset<float>(0x09B4);                           // 0x09B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public TArray<FSQVehicleEffectsQualitySetting>            VehicleEffectsQualitySettings                                  => _offVehicleEffectsQualitySettings.GetValue();
	public TArray<FSQVehicleEffectConfig>                     VehicleEffectsConfig                                           => _offVehicleEffectsConfig.GetValue();
	public FVector2D                                          WheelFXSound_RPMRate                                           => _offWheelFXSound_RPMRate.GetValue();
	public FVector2D                                          WheelFXSound_LongSlipRate                                      => _offWheelFXSound_LongSlipRate.GetValue();
	public FVector2D                                          WheelFXSound_LatSlipRate                                       => _offWheelFXSound_LatSlipRate.GetValue();
	public byte/*(bool)*/                                     bEjectOpenSeatsOnHardLanding                                   => _offbEjectOpenSeatsOnHardLanding.GetValue();
	public byte/*(bool)*/                                     bDrawDebugTraces                                               => _offbDrawDebugTraces.GetValue();
	public FTimerHandle                                       HardLandingCheckTimer                                          => _offHardLandingCheckTimer.GetValue();
	public FTimerHandle                                       IsFlyingTimer                                                  => _offIsFlyingTimer.GetValue();
	public float                                              IsFlyingUpdateInterval                                         => _offIsFlyingUpdateInterval.GetValue();
	public float                                              IsHardLandingUpdateInterval                                    => _offIsHardLandingUpdateInterval.GetValue();
	public TArray<FName>                                      LandingTraceSockets                                            => _offLandingTraceSockets.GetValue();
	public float                                              LandingTraceLenght                                             => _offLandingTraceLenght.GetValue();
	public byte/*(bool)*/                                     bIsFlying                                                      => _offbIsFlying.GetValue();
	public float                                              LastFlyingZVelocity                                            => _offLastFlyingZVelocity.GetValue();
	public float                                              EjectZVelocityThreshold                                        => _offEjectZVelocityThreshold.GetValue();
	public TArray<AActor>                                     LandingCheckActorsToIgnore                                     => _offLandingCheckActorsToIgnore.GetValue();
	public USQVehicleCleanupComponent                         VehicleCleanupComponent                                        => _offVehicleCleanupComponent.GetValue();
	public byte/*(bool)*/                                     bShouldSimulate                                                => _offbShouldSimulate.GetValue();
	public USoundCue                                          EngineRPMSound                                                 => _offEngineRPMSound.GetValue();
	public UAudioComponent                                    EngineRPMAC                                                    => _offEngineRPMAC.GetValue();
	public USoundCue                                          EngineExhaustSound                                             => _offEngineExhaustSound.GetValue();
	public UAudioComponent                                    EngineExhaustStartAC                                           => _offEngineExhaustStartAC.GetValue();
	public UAudioComponent                                    EngineExhaustAC                                                => _offEngineExhaustAC.GetValue();
	public UAudioComponent                                    EngineExhaustStopAC                                            => _offEngineExhaustStopAC.GetValue();
	public USoundCue                                          EngineStartSound                                               => _offEngineStartSound.GetValue();
	public UAudioComponent                                    EngineCompletedStartAC                                         => _offEngineCompletedStartAC.GetValue();
	public USoundCue                                          EngineCompletedStartSound                                      => _offEngineCompletedStartSound.GetValue();
	public UAudioComponent                                    EngineFailedStartAC                                            => _offEngineFailedStartAC.GetValue();
	public USoundCue                                          EngineFailedStartSound                                         => _offEngineFailedStartSound.GetValue();
	public UAudioComponent                                    EngineStartAC                                                  => _offEngineStartAC.GetValue();
	public USoundCue                                          EngineStopSound                                                => _offEngineStopSound.GetValue();
	public UAudioComponent                                    EngineStopAC                                                   => _offEngineStopAC.GetValue();
	public UAudioComponent                                    EngineSpeedAC                                                  => _offEngineSpeedAC.GetValue();
	public UAudioComponent                                    WheelFXAC                                                      => _offWheelFXAC.GetValue();
	public USoundCue                                          LandingSound                                                   => _offLandingSound.GetValue();
	public float                                              EngineIdleFadeInAfterEngineStartTime                           => _offEngineIdleFadeInAfterEngineStartTime.GetValue();
	public float                                              EngineIdleFadeOutAfterEngineStopTime                           => _offEngineIdleFadeOutAfterEngineStopTime.GetValue();
	public float                                              SpringCompressionLandingThreshold                              => _offSpringCompressionLandingThreshold.GetValue();
	public float                                              SkidThresholdVelocity                                          => _offSkidThresholdVelocity.GetValue();
	public float                                              LongSlipSkidThreshold                                          => _offLongSlipSkidThreshold.GetValue();
	public float                                              LateralSlipSkidThreshold                                       => _offLateralSlipSkidThreshold.GetValue();
	public UParticleSystemComponent                           ExhaustPSC                                                     => _offExhaustPSC.GetValue();
	public byte/*(bool)*/                                     bTiresTouchingGround                                           => _offbTiresTouchingGround.GetValue();
	public byte/*(bool)*/                                     bHandbrakeActive                                               => _offbHandbrakeActive.GetValue();
	public byte/*(bool)*/                                     bIsEngineActive                                                => _offbIsEngineActive.GetValue();
	public byte/*(bool)*/                                     bIsEngineToggleActive                                          => _offbIsEngineToggleActive.GetValue();
	public byte/*(bool)*/                                     bAllowEngineBoosting                                           => _offbAllowEngineBoosting.GetValue();
	public float                                              EngineBoostTorqueMultiplier                                    => _offEngineBoostTorqueMultiplier.GetValue();
	public byte/*(bool)*/                                     bHasEngineBoostBeenPressed                                     => _offbHasEngineBoostBeenPressed.GetValue();
	public TArray<FSQEngineMovementSoundObject>               EngineMovementSounds                                           => _offEngineMovementSounds.GetValue();
	public float                                              ActivateEngineDelay                                            => _offActivateEngineDelay.GetValue();
	public float                                              DeActivateEngineDelay                                          => _offDeActivateEngineDelay.GetValue();
	public float                                              GearChangingAlphaLerpSpeed                                     => _offGearChangingAlphaLerpSpeed.GetValue();
	public UWheeledVehicleMovementComponent                   VehicleMovement                                                => _offVehicleMovement.GetValue();
	public UBoxComponent                                      VehicleRagdollOverlap                                          => _offVehicleRagdollOverlap.GetValue();
	public float                                              RagollOverlapTriggerSpeed                                      => _offRagollOverlapTriggerSpeed.GetValue();
	public int                                                CollisionKillSpeedKPH                                          => _offCollisionKillSpeedKPH.GetValue();
	public byte/*(bool)*/                                     bCollisionsKillSoldiers                                        => _offbCollisionsKillSoldiers.GetValue();
	public float                                              WheelInflationRate                                             => _offWheelInflationRate.GetValue();
	#endregion


}

// Class Squad.SQHelicopter2
// 0x0060 (0x0878 - 0x0818)
public class ASQHelicopter2 : ASQVehicle
{
	#region Offsets
	private ExternalOffset<USQVehicleCleanupComponent>        _offVehicleCleanupComponent                                    = new ExternalOffset<USQVehicleCleanupComponent>(0x0820, true); // 0x0820(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPhysicsToggleThreshold                                     = new ExternalOffset<float>(0x0828);                           // 0x0828(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UBoxComponent>                     _offBoxCollider                                                = new ExternalOffset<UBoxComponent>(0x0830, true);             // 0x0830(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UCameraComponent>                  _offExternalCamera                                             = new ExternalOffset<UCameraComponent>(0x0838, true);          // 0x0838(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USpringArmComponent>               _offSpringArm                                                  = new ExternalOffset<USpringArmComponent>(0x0840, true);       // 0x0840(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQHelicopterMovementComponent>    _offMovementComponent                                          = new ExternalOffset<USQHelicopterMovementComponent>(0x0848, true); // 0x0848(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQVehicleEngineComponent>         _offEngine                                                     = new ExternalOffset<USQVehicleEngineComponent>(0x0850, true); // 0x0850(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQRotorBladesComponent>           _offMainRotor                                                  = new ExternalOffset<USQRotorBladesComponent>(0x0858, true);   // 0x0858(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQRotorBladesComponent>           _offTailRotor                                                  = new ExternalOffset<USQRotorBladesComponent>(0x0860, true);   // 0x0860(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UStaticMeshComponent>              _offMainBladesCollision                                        = new ExternalOffset<UStaticMeshComponent>(0x0868, true);      // 0x0868(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UStaticMeshComponent>              _offTailBladesCollision                                        = new ExternalOffset<UStaticMeshComponent>(0x0870, true);      // 0x0870(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public USQVehicleCleanupComponent                         VehicleCleanupComponent                                        => _offVehicleCleanupComponent.GetValue();
	public float                                              PhysicsToggleThreshold                                         => _offPhysicsToggleThreshold.GetValue();
	public UBoxComponent                                      BoxCollider                                                    => _offBoxCollider.GetValue();
	public UCameraComponent                                   ExternalCamera                                                 => _offExternalCamera.GetValue();
	public USpringArmComponent                                SpringArm                                                      => _offSpringArm.GetValue();
	public USQHelicopterMovementComponent                     MovementComponent                                              => _offMovementComponent.GetValue();
	public USQVehicleEngineComponent                          Engine                                                         => _offEngine.GetValue();
	public USQRotorBladesComponent                            MainRotor                                                      => _offMainRotor.GetValue();
	public USQRotorBladesComponent                            TailRotor                                                      => _offTailRotor.GetValue();
	public UStaticMeshComponent                               MainBladesCollision                                            => _offMainBladesCollision.GetValue();
	public UStaticMeshComponent                               TailBladesCollision                                            => _offTailBladesCollision.GetValue();
	#endregion


}

// Class Squad.SQHelicopterCollisionDamage
// 0x0004 (0x0114 - 0x0110)
public class USQHelicopterCollisionDamage : USQCollisionDamage
{
	#region Offsets
	private ExternalOffset<float>                             _offFlightDynamicImpulseMultiplier                             = new ExternalOffset<float>(0x0110);                           // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              FlightDynamicImpulseMultiplier                                 => _offFlightDynamicImpulseMultiplier.GetValue();
	#endregion


}

// Class Squad.SQHelicopterInstruments
// 0x0000 (0x0028 - 0x0028)
public class USQHelicopterInstruments : UInterface
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMovementComponentBase
// 0x00F4 (0x01BC - 0x00C8)
public class USQMovementComponentBase : UActorComponent
{
	#region Offsets
	private ExternalOffset<float>                             _offMaxMoveDeltaTime                                           = new ExternalOffset<float>(0x00F8);                           // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offVectorEqualityTolerance                                    = new ExternalOffset<float>(0x00FC);                           // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAccelDotThresholdCombine                                   = new ExternalOffset<float>(0x0100);                           // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAccelDotThreshold                                          = new ExternalOffset<float>(0x0104);                           // 0x0104(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAccelMagThreshold                                          = new ExternalOffset<float>(0x0108);                           // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAngularErrorTolerance                                      = new ExternalOffset<float>(0x010C);                           // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offNetworkMaxSmoothUpdateDistance                             = new ExternalOffset<float>(0x0110);                           // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinCorrectionDelay                                         = new ExternalOffset<float>(0x0114);                           // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offNetworkNoSmoothUpdateDistance                              = new ExternalOffset<float>(0x0118);                           // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<EVectorQuantization>               _offLocationQuantizationLevel                                  = new ExternalOffset<EVectorQuantization>(0x011C, false);      // 0x011C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<EVectorQuantization>               _offVelocityQuantizationLevel                                  = new ExternalOffset<EVectorQuantization>(0x011D, false);      // 0x011D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<EVectorQuantization>               _offAccelerationQuantizationLevel                              = new ExternalOffset<EVectorQuantization>(0x011E, false);      // 0x011E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ERotatorQuantization>              _offRotationQuantizationLevel                                  = new ExternalOffset<ERotatorQuantization>(0x011F, false);     // 0x011F(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<AActor>                            _offOwnerActor                                                 = new ExternalOffset<AActor>(0x0120, true);                    // 0x0120(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<AController>                       _offController                                                 = new ExternalOffset<AController>(0x0128, true);               // 0x0128(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQRepMovement>                    _offReplicatedMovement                                         = new ExternalOffset<FSQRepMovement>(0x0178, false);           // 0x0178(0x0040) (Net, RepNotify, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxSpeed                                                   = new ExternalOffset<float>(0x01B8);                           // 0x01B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              MaxMoveDeltaTime                                               => _offMaxMoveDeltaTime.GetValue();
	public float                                              VectorEqualityTolerance                                        => _offVectorEqualityTolerance.GetValue();
	public float                                              AccelDotThresholdCombine                                       => _offAccelDotThresholdCombine.GetValue();
	public float                                              AccelDotThreshold                                              => _offAccelDotThreshold.GetValue();
	public float                                              AccelMagThreshold                                              => _offAccelMagThreshold.GetValue();
	public float                                              AngularErrorTolerance                                          => _offAngularErrorTolerance.GetValue();
	public float                                              NetworkMaxSmoothUpdateDistance                                 => _offNetworkMaxSmoothUpdateDistance.GetValue();
	public float                                              MinCorrectionDelay                                             => _offMinCorrectionDelay.GetValue();
	public float                                              NetworkNoSmoothUpdateDistance                                  => _offNetworkNoSmoothUpdateDistance.GetValue();
	public EVectorQuantization                                LocationQuantizationLevel                                      => _offLocationQuantizationLevel.GetValue();
	public EVectorQuantization                                VelocityQuantizationLevel                                      => _offVelocityQuantizationLevel.GetValue();
	public EVectorQuantization                                AccelerationQuantizationLevel                                  => _offAccelerationQuantizationLevel.GetValue();
	public ERotatorQuantization                               RotationQuantizationLevel                                      => _offRotationQuantizationLevel.GetValue();
	public AActor                                             OwnerActor                                                     => _offOwnerActor.GetValue();
	public AController                                        Controller                                                     => _offController.GetValue();
	public FSQRepMovement                                     ReplicatedMovement                                             => _offReplicatedMovement.GetValue();
	public float                                              MaxSpeed                                                       => _offMaxSpeed.GetValue();
	#endregion


}

// Class Squad.SQHelicopterMovementComponent
// 0x00C5 (0x0281 - 0x01BC)
public class USQHelicopterMovementComponent : USQMovementComponentBase
{
	#region Offsets
	private ExternalOffset<float>                             _offBrakingDecelerationFlying                                  = new ExternalOffset<float>(0x01C0);                           // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxFlySpeed                                                = new ExternalOffset<float>(0x01C4);                           // 0x01C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxAcceleration                                            = new ExternalOffset<float>(0x01C8);                           // 0x01C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAirFriction                                                = new ExternalOffset<float>(0x01CC);                           // 0x01CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBrakingFriction                                            = new ExternalOffset<float>(0x01D0);                           // 0x01D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBrakingFrictionFactor                                      = new ExternalOffset<float>(0x01D4);                           // 0x01D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLinearDamping                                              = new ExternalOffset<float>(0x01D8);                           // 0x01D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offLinearDampingCurve                                         = new ExternalOffset<UCurveFloat>(0x01E0, true);               // 0x01E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbUseSeparateBrakingFriction                                = new ExternalOffset<char>(0x01E8, false);                     // 0x01E8(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offGravityScale                                               = new ExternalOffset<float>(0x01EC);                           // 0x01EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMass                                                       = new ExternalOffset<float>(0x01F0);                           // 0x01F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbEnablePhysicsInteraction                                  = new ExternalOffset<char>(0x01F4, false);                     // 0x01F4(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTouchForceFactor                                           = new ExternalOffset<float>(0x01F8);                           // 0x01F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinTouchForce                                              = new ExternalOffset<float>(0x01FC);                           // 0x01FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxTouchForce                                              = new ExternalOffset<float>(0x0200);                           // 0x0200(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbTouchForceScaledToMass                                    = new ExternalOffset<char>(0x0204, false);                     // 0x0204(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPenetrationPullbackDistance                                = new ExternalOffset<float>(0x0208);                           // 0x0208(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPenetrationOverlapCheckInflation                           = new ExternalOffset<float>(0x020C);                           // 0x020C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offMoveIgnoreFirstBlockingOverlap                             = new ExternalOffset<byte/*(bool)*/>(0x0210);                  // 0x0210(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnImpact                                                   = new ExternalOffset<FScriptMulticastDelegate>(0x0218, false); // 0x0218(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnRep_Physics                                              = new ExternalOffset<FScriptMulticastDelegate>(0x0228, false); // 0x0228(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAllowablePositionErrorSquared                              = new ExternalOffset<float>(0x0238);                           // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinProxyMovementPredictionSpeed                            = new ExternalOffset<float>(0x023C);                           // 0x023C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAnalogInputModifier                                        = new ExternalOffset<float>(0x0240);                           // 0x0240(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offPendingImpulseToApply                                      = new ExternalOffset<FVector>(0x0244, false);                  // 0x0244(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offPendingForceToApply                                        = new ExternalOffset<FVector>(0x0250, false);                  // 0x0250(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbForceMaxAccel                                             = new ExternalOffset<char>(0x025C, false);                     // 0x025C(0x0001) BIT_FIELD (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<APawn>                             _offPawnOwner                                                  = new ExternalOffset<APawn>(0x0260, true);                     // 0x0260(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UPrimitiveComponent>               _offUpdatedComponent                                           = new ExternalOffset<UPrimitiveComponent>(0x0268, true);       // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsSimulatingPhysics                                       = new ExternalOffset<byte/*(bool)*/>(0x0280);                  // 0x0280(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              BrakingDecelerationFlying                                      => _offBrakingDecelerationFlying.GetValue();
	public float                                              MaxFlySpeed                                                    => _offMaxFlySpeed.GetValue();
	public float                                              MaxAcceleration                                                => _offMaxAcceleration.GetValue();
	public float                                              AirFriction                                                    => _offAirFriction.GetValue();
	public float                                              BrakingFriction                                                => _offBrakingFriction.GetValue();
	public float                                              BrakingFrictionFactor                                          => _offBrakingFrictionFactor.GetValue();
	public float                                              LinearDamping                                                  => _offLinearDamping.GetValue();
	public UCurveFloat                                        LinearDampingCurve                                             => _offLinearDampingCurve.GetValue();
	public float                                              GravityScale                                                   => _offGravityScale.GetValue();
	public float                                              Mass                                                           => _offMass.GetValue();
	public float                                              TouchForceFactor                                               => _offTouchForceFactor.GetValue();
	public float                                              MinTouchForce                                                  => _offMinTouchForce.GetValue();
	public float                                              MaxTouchForce                                                  => _offMaxTouchForce.GetValue();
	public float                                              PenetrationPullbackDistance                                    => _offPenetrationPullbackDistance.GetValue();
	public float                                              PenetrationOverlapCheckInflation                               => _offPenetrationOverlapCheckInflation.GetValue();
	public byte/*(bool)*/                                     MoveIgnoreFirstBlockingOverlap                                 => _offMoveIgnoreFirstBlockingOverlap.GetValue();
	public FScriptMulticastDelegate                           OnImpact                                                       => _offOnImpact.GetValue();
	public FScriptMulticastDelegate                           OnRep_Physics                                                  => _offOnRep_Physics.GetValue();
	public float                                              AllowablePositionErrorSquared                                  => _offAllowablePositionErrorSquared.GetValue();
	public float                                              MinProxyMovementPredictionSpeed                                => _offMinProxyMovementPredictionSpeed.GetValue();
	public float                                              AnalogInputModifier                                            => _offAnalogInputModifier.GetValue();
	public FVector                                            PendingImpulseToApply                                          => _offPendingImpulseToApply.GetValue();
	public FVector                                            PendingForceToApply                                            => _offPendingForceToApply.GetValue();
	public APawn                                              PawnOwner                                                      => _offPawnOwner.GetValue();
	public UPrimitiveComponent                                UpdatedComponent                                               => _offUpdatedComponent.GetValue();
	public byte/*(bool)*/                                     bIsSimulatingPhysics                                           => _offbIsSimulatingPhysics.GetValue();
	#endregion


}

// Class Squad.SQChatBoxInfo
// 0x0034 (0x005C - 0x0028)
public class USQChatBoxInfo : UObject
{
	#region Offsets
	private ExternalOffset<UFont>                             _offFont                                                       = new ExternalOffset<UFont>(0x0028, true);                     // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQHUDMessage>>             _offMessages                                                   = new ExternalOffset<TArray<FSQHUDMessage>>(0x0030, false);    // 0x0030(0x0010) (BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offMessageBoxLocation                                         = new ExternalOffset<FVector2D>(0x0040, false);                // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMaxNumberOfMessagesToShow                                  = new ExternalOffset<int>(0x0048);                             // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMessagesLifetime                                           = new ExternalOffset<float>(0x004C);                           // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMessagesFadeTime                                           = new ExternalOffset<float>(0x0050);                           // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQTextHorizontalAlignment>        _offMessageHorizontalAlignment                                 = new ExternalOffset<ESQTextHorizontalAlignment>(0x0054, false); // 0x0054(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQTextVerticalAlignment>          _offMessageVerticalAlignment                                   = new ExternalOffset<ESQTextVerticalAlignment>(0x0055, false); // 0x0055(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbOutlineMessages                                           = new ExternalOffset<byte/*(bool)*/>(0x0056);                  // 0x0056(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbScrollUp                                                  = new ExternalOffset<byte/*(bool)*/>(0x0057);                  // 0x0057(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTextScale                                                  = new ExternalOffset<float>(0x0058);                           // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UFont                                              Font                                                           => _offFont.GetValue();
	public TArray<FSQHUDMessage>                              Messages                                                       => _offMessages.GetValue();
	public FVector2D                                          MessageBoxLocation                                             => _offMessageBoxLocation.GetValue();
	public int                                                MaxNumberOfMessagesToShow                                      => _offMaxNumberOfMessagesToShow.GetValue();
	public float                                              MessagesLifetime                                               => _offMessagesLifetime.GetValue();
	public float                                              MessagesFadeTime                                               => _offMessagesFadeTime.GetValue();
	public ESQTextHorizontalAlignment                         MessageHorizontalAlignment                                     => _offMessageHorizontalAlignment.GetValue();
	public ESQTextVerticalAlignment                           MessageVerticalAlignment                                       => _offMessageVerticalAlignment.GetValue();
	public byte/*(bool)*/                                     bOutlineMessages                                               => _offbOutlineMessages.GetValue();
	public byte/*(bool)*/                                     bScrollUp                                                      => _offbScrollUp.GetValue();
	public float                                              TextScale                                                      => _offTextScale.GetValue();
	#endregion


}

// Class Squad.SQHUD
// 0x06E0 (0x09A8 - 0x02C8)
public class ASQHUD : AHUD
{
	#region Offsets
	private ExternalOffset<TArray<FSQInputState>>             _offInputStateStack                                            = new ExternalOffset<TArray<FSQInputState>>(0x0338, false);    // 0x0338(0x0010) (BlueprintVisible, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbTraceViewEnabled                                          = new ExternalOffset<byte/*(bool)*/>(0x0348);                  // 0x0348(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQVehicleViewWidget>              _offVehicleOverlayWidget                                       = new ExternalOffset<USQVehicleViewWidget>(0x0350, true);      // 0x0350(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQBaseHudWidget>                  _offBaseHudWidget                                              = new ExternalOffset<USQBaseHudWidget>(0x0358, true);          // 0x0358(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQMapMarker>                      _offCurrentlyShownHudMarker                                    = new ExternalOffset<ASQMapMarker>(0x0360, true);              // 0x0360(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbEndOfRound                                                = new ExternalOffset<byte/*(bool)*/>(0x0368);                  // 0x0368(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMapTopPadding                                              = new ExternalOffset<float>(0x036C);                           // 0x036C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMapRightPadding                                            = new ExternalOffset<float>(0x0370);                           // 0x0370(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMapBottomPadding                                           = new ExternalOffset<float>(0x0374);                           // 0x0374(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMapMaxWidthRatio                                           = new ExternalOffset<float>(0x0378);                           // 0x0378(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offMapGridLetterColor                                         = new ExternalOffset<FLinearColor>(0x037C, false);             // 0x037C(0x0010) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offSquadToSquadRadioColor                                     = new ExternalOffset<FLinearColor>(0x038C, false);             // 0x038C(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offSquadToAllSquadsRadioColor                                 = new ExternalOffset<FLinearColor>(0x039C, false);             // 0x039C(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMapGridLetterPadding                                       = new ExternalOffset<float>(0x03AC);                           // 0x03AC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMapGridLetterScale                                         = new ExternalOffset<float>(0x03B0);                           // 0x03B0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<AActor>>                    _offLineOfSightDrawTextCache                                   = new ExternalOffset<TArray<AActor>>(0x03B8, false);           // 0x03B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<USQCoreStateSelectionHUB>          _offSelectionHUB                                               = new ExternalOffset<USQCoreStateSelectionHUB>(0x03C8, true);  // 0x03C8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQCoreStateMapComponent>          _offMapComponent                                               = new ExternalOffset<USQCoreStateMapComponent>(0x03D0, true);  // 0x03D0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQMapWidgetBase>                  _offMapWidgetBase                                              = new ExternalOffset<USQMapWidgetBase>(0x03D8, true);          // 0x03D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQCoreStateSpawnPointsListComponent> _offSpawnPointsListComponent                                   = new ExternalOffset<USQCoreStateSpawnPointsListComponent>(0x03E0, true); // 0x03E0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQCoreStateSquadListComponent>    _offSquadListComponent                                         = new ExternalOffset<USQCoreStateSquadListComponent>(0x03E8, true); // 0x03E8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQCoreStateRolesSquadListComponent> _offRoleSquadListComponent                                     = new ExternalOffset<USQCoreStateRolesSquadListComponent>(0x03F0, true); // 0x03F0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQNetworkPollingComponent>        _offNetworkPolling                                             = new ExternalOffset<USQNetworkPollingComponent>(0x03F8, true); // 0x03F8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture2D>                        _offHUDMainTexture                                             = new ExternalOffset<UTexture2D>(0x0438, true);                // 0x0438(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture2D>                        _offLowHealthOverlayTexture                                    = new ExternalOffset<UTexture2D>(0x0440, true);                // 0x0440(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UMaterialInterface>                _offCircularProgressMaterial                                   = new ExternalOffset<UMaterialInterface>(0x0448, true);        // 0x0448(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FName>                             _offCircularProgressMaterialPercentageName                     = new ExternalOffset<FName>(0x0450, false);                    // 0x0450(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FName>                             _offCircularProgressMaterialTransparencyName                   = new ExternalOffset<FName>(0x0458, false);                    // 0x0458(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FName>                             _offCircularProgressMaterialColorName                          = new ExternalOffset<FName>(0x0460, false);                    // 0x0460(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private TMap<class ASQSoldier*, class UMaterialInstanceDynamic*> _offCircularProgressMIDMap                                     = new ExternalOffset<TMap<UMaterialInstanceDynamic>>(0x0468, false); // 0x0468(0x0050) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture>                          _offMedicIconTexture                                           = new ExternalOffset<UTexture>(0x04B8, true);                  // 0x04B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture>                          _offHealedIconTexture                                          = new ExternalOffset<UTexture>(0x04C0, true);                  // 0x04C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture>                          _offDragIconTexture                                            = new ExternalOffset<UTexture>(0x04C8, true);                  // 0x04C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture>                          _offVehicleRepairIconTexture                                   = new ExternalOffset<UTexture>(0x04D0, true);                  // 0x04D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture>                          _offBleedingIconTexture                                        = new ExternalOffset<UTexture>(0x04D8, true);                  // 0x04D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture>                          _offItemCollisionIconTexture                                   = new ExternalOffset<UTexture>(0x04E0, true);                  // 0x04E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UFont>                             _offBigFont                                                    = new ExternalOffset<UFont>(0x04E8, true);                     // 0x04E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UFont>                             _offNormalFont                                                 = new ExternalOffset<UFont>(0x04F0, true);                     // 0x04F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UFont>                             _offNametagFont                                                = new ExternalOffset<UFont>(0x04F8, true);                     // 0x04F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UFont>                             _offChatMessageFont                                            = new ExternalOffset<UFont>(0x0500, true);                     // 0x0500(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UFont>                             _offSystemMessageFont                                          = new ExternalOffset<UFont>(0x0508, true);                     // 0x0508(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FLinearColor>                      _offTicketTextColor                                            = new ExternalOffset<FLinearColor>(0x0510, false);             // 0x0510(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<FSQRemoteTalkerDisplayInfo>> _offRemoteTalkers                                              = new ExternalOffset<TArray<FSQRemoteTalkerDisplayInfo>>(0x0520, false); // 0x0520(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<FSQRemoteTalkerDisplayInfo>> _offTestTalkers                                                = new ExternalOffset<TArray<FSQRemoteTalkerDisplayInfo>>(0x0530, false); // 0x0530(0x0010) (BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseTestTalkers                                            = new ExternalOffset<byte/*(bool)*/>(0x0540);                  // 0x0540(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQVoiceChannel>                   _offOwnerSpeakingState                                         = new ExternalOffset<ESQVoiceChannel>(0x0541, false);          // 0x0541(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQMessageBoxInfo>                 _offChatBoxInfo                                                = new ExternalOffset<FSQMessageBoxInfo>(0x0548, false);        // 0x0548(0x0078) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQMessageBoxInfo>                 _offSystemMessageBoxInfo                                       = new ExternalOffset<FSQMessageBoxInfo>(0x05C0, false);        // 0x05C0(0x0078) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQMessageBoxInfo>                 _offGameNotificationBoxInfo                                    = new ExternalOffset<FSQMessageBoxInfo>(0x0638, false);        // 0x0638(0x0078) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQMessageBoxInfo>                 _offPlayerNotificationBoxInfo                                  = new ExternalOffset<FSQMessageBoxInfo>(0x06B0, false);        // 0x06B0(0x0078) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FLinearColor>                      _offSystemMessagesColor                                        = new ExternalOffset<FLinearColor>(0x0728, false);             // 0x0728(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbShouldOffsetSpawnText                                     = new ExternalOffset<char>(0x073C, false);                     // 0x073C(0x0001) BIT_FIELD (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbShouldShowEnemyFobWidgets                                 = new ExternalOffset<char>(0x073C, false);                     // 0x073C(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offStartingMapZoomLevel                                       = new ExternalOffset<int>(0x0740);                             // 0x0740(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<float>>                     _offMapZoomLevels                                              = new ExternalOffset<TArray<float>>(0x0748, false);            // 0x0748(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<USQScoreboard>                     _offScoreBoard                                                 = new ExternalOffset<USQScoreboard>(0x0788, true);             // 0x0788(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQDrawChatWidget>                 _offChatDrawingWidget                                          = new ExternalOffset<USQDrawChatWidget>(0x0790, true);         // 0x0790(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offNametagDistantVisibilityDropoffStart                       = new ExternalOffset<float>(0x07A8);                           // 0x07A8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offNametagDistantVisibilityDropoffFinish                      = new ExternalOffset<float>(0x07AC);                           // 0x07AC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offNametagDistantVisibilitySize                               = new ExternalOffset<float>(0x07B0);                           // 0x07B0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offNametagNearVerticalOffset                                  = new ExternalOffset<float>(0x07B4);                           // 0x07B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offNametagFarVerticalOffset                                   = new ExternalOffset<float>(0x07B8);                           // 0x07B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offNametagNearVerticalInterpStart                             = new ExternalOffset<float>(0x07BC);                           // 0x07BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offNametagFadingInterpStart                                   = new ExternalOffset<float>(0x07C0);                           // 0x07C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offUsableDistantVisibilityDropoffStart                        = new ExternalOffset<float>(0x07C4);                           // 0x07C4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offUsableDistantVisibilityDropoffFinish                       = new ExternalOffset<float>(0x07C8);                           // 0x07C8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offUsableDistantVisibilitySize                                = new ExternalOffset<float>(0x07CC);                           // 0x07CC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offUsableNearVerticalOffset                                   = new ExternalOffset<float>(0x07D0);                           // 0x07D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offUsableFarVerticalOffset                                    = new ExternalOffset<float>(0x07D4);                           // 0x07D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offUsableNearVerticalInterpStart                              = new ExternalOffset<float>(0x07D8);                           // 0x07D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offUsableFadingInterpStart                                    = new ExternalOffset<float>(0x07DC);                           // 0x07DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FLinearColor>                      _offEnemyColor                                                 = new ExternalOffset<FLinearColor>(0x07E0, false);             // 0x07E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FLinearColor>                      _offTeamColor                                                  = new ExternalOffset<FLinearColor>(0x07F0, false);             // 0x07F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FLinearColor>                      _offSquadColor                                                 = new ExternalOffset<FLinearColor>(0x0800, false);             // 0x0800(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FLinearColor>                      _offFireTeamColor                                              = new ExternalOffset<FLinearColor>(0x0810, false);             // 0x0810(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FLinearColor>                      _offNametagOutlineColor                                        = new ExternalOffset<FLinearColor>(0x0820, false);             // 0x0820(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxDistanceToShowHUDIcons                                  = new ExternalOffset<float>(0x0830);                           // 0x0830(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxDistanceToShowWoundedHUDIcons                           = new ExternalOffset<float>(0x0834);                           // 0x0834(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxDistanceToShowDragHUDIcons                              = new ExternalOffset<float>(0x0838);                           // 0x0838(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FName>                             _offBoneForDragIcon                                            = new ExternalOffset<FName>(0x083C, false);                    // 0x083C(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDragIconXOffset                                            = new ExternalOffset<float>(0x0844);                           // 0x0844(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDragIconYOffset                                            = new ExternalOffset<float>(0x0848);                           // 0x0848(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FLinearColor>                      _offDragHUDIconColor                                           = new ExternalOffset<FLinearColor>(0x084C, false);             // 0x084C(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDragHUDIconSizeMultiplier                                  = new ExternalOffset<float>(0x085C);                           // 0x085C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FName>                             _offBoneForBleedingIcon                                        = new ExternalOffset<FName>(0x0860, false);                    // 0x0860(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offHUDIconOffset                                              = new ExternalOffset<FVector>(0x0868, false);                  // 0x0868(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offHUDIconCrouchedOffset                                      = new ExternalOffset<FVector>(0x0874, false);                  // 0x0874(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offHUDIconProneOffset                                         = new ExternalOffset<FVector>(0x0880, false);                  // 0x0880(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offHUDIconWoundedOffset                                       = new ExternalOffset<FVector>(0x088C, false);                  // 0x088C(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offHUDIconFarSize                                             = new ExternalOffset<float>(0x0898);                           // 0x0898(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offHUDIconNearSize                                            = new ExternalOffset<float>(0x089C);                           // 0x089C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offHealedIconOffset                                           = new ExternalOffset<FVector2D>(0x08A0, false);                // 0x08A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offHealedIconSize                                             = new ExternalOffset<FVector2D>(0x08A8, false);                // 0x08A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offItemCollisionIconOffset                                    = new ExternalOffset<FVector2D>(0x08B0, false);                // 0x08B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offItemCollisionIconSize                                      = new ExternalOffset<FVector2D>(0x08B8, false);                // 0x08B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxTimeSinceLastHealedToDrawHealedIcon                     = new ExternalOffset<float>(0x08C0);                           // 0x08C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxTimeSinceLastRepairedToDrawRepairedIcon                 = new ExternalOffset<float>(0x08C4);                           // 0x08C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UCurveLinearColor>                 _offHealthColorCurve                                           = new ExternalOffset<UCurveLinearColor>(0x08C8, true);         // 0x08C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbHudWidgetsEnabled                                         = new ExternalOffset<byte/*(bool)*/>(0x08D0);                  // 0x08D0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnChatReceived                                             = new ExternalOffset<FScriptMulticastDelegate>(0x08E8, false); // 0x08E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offCommandVoiceStartingSound                                  = new ExternalOffset<USoundBase>(0x08F8, true);                // 0x08F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundBase>                        _offCommandVoiceEndingSound                                    = new ExternalOffset<USoundBase>(0x0900, true);                // 0x0900(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundBase>                        _offSquadVoiceStartingSound                                    = new ExternalOffset<USoundBase>(0x0908, true);                // 0x0908(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundBase>                        _offSquadVoiceEndingSound                                      = new ExternalOffset<USoundBase>(0x0910, true);                // 0x0910(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQLedColorScheme>                 _offLedColorScheme                                             = new ExternalOffset<FSQLedColorScheme>(0x0920, false);        // 0x0920(0x0078) (Edit, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<USQColorsDataAsset>                _offColorsDataAsset                                            = new ExternalOffset<USQColorsDataAsset>(0x0998, true);        // 0x0998(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UEnum>                             _offChatEnumObj                                                = new ExternalOffset<UEnum>(0x09A0, true);                     // 0x09A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public TArray<FSQInputState>                              InputStateStack                                                => _offInputStateStack.GetValue();
	public byte/*(bool)*/                                     bTraceViewEnabled                                              => _offbTraceViewEnabled.GetValue();
	public USQVehicleViewWidget                               VehicleOverlayWidget                                           => _offVehicleOverlayWidget.GetValue();
	public USQBaseHudWidget                                   BaseHudWidget                                                  => _offBaseHudWidget.GetValue();
	public ASQMapMarker                                       CurrentlyShownHudMarker                                        => _offCurrentlyShownHudMarker.GetValue();
	public byte/*(bool)*/                                     bEndOfRound                                                    => _offbEndOfRound.GetValue();
	public float                                              MapTopPadding                                                  => _offMapTopPadding.GetValue();
	public float                                              MapRightPadding                                                => _offMapRightPadding.GetValue();
	public float                                              MapBottomPadding                                               => _offMapBottomPadding.GetValue();
	public float                                              MapMaxWidthRatio                                               => _offMapMaxWidthRatio.GetValue();
	public FLinearColor                                       MapGridLetterColor                                             => _offMapGridLetterColor.GetValue();
	public FLinearColor                                       SquadToSquadRadioColor                                         => _offSquadToSquadRadioColor.GetValue();
	public FLinearColor                                       SquadToAllSquadsRadioColor                                     => _offSquadToAllSquadsRadioColor.GetValue();
	public float                                              MapGridLetterPadding                                           => _offMapGridLetterPadding.GetValue();
	public float                                              MapGridLetterScale                                             => _offMapGridLetterScale.GetValue();
	public TArray<AActor>                                     LineOfSightDrawTextCache                                       => _offLineOfSightDrawTextCache.GetValue();
	public USQCoreStateSelectionHUB                           SelectionHUB                                                   => _offSelectionHUB.GetValue();
	public USQCoreStateMapComponent                           MapComponent                                                   => _offMapComponent.GetValue();
	public USQMapWidgetBase                                   MapWidgetBase                                                  => _offMapWidgetBase.GetValue();
	public USQCoreStateSpawnPointsListComponent               SpawnPointsListComponent                                       => _offSpawnPointsListComponent.GetValue();
	public USQCoreStateSquadListComponent                     SquadListComponent                                             => _offSquadListComponent.GetValue();
	public USQCoreStateRolesSquadListComponent                RoleSquadListComponent                                         => _offRoleSquadListComponent.GetValue();
	public USQNetworkPollingComponent                         NetworkPolling                                                 => _offNetworkPolling.GetValue();
	public UTexture2D                                         HUDMainTexture                                                 => _offHUDMainTexture.GetValue();
	public UTexture2D                                         LowHealthOverlayTexture                                        => _offLowHealthOverlayTexture.GetValue();
	public UMaterialInterface                                 CircularProgressMaterial                                       => _offCircularProgressMaterial.GetValue();
	public FName                                              CircularProgressMaterialPercentageName                         => _offCircularProgressMaterialPercentageName.GetValue();
	public FName                                              CircularProgressMaterialTransparencyName                       => _offCircularProgressMaterialTransparencyName.GetValue();
	public FName                                              CircularProgressMaterialColorName                              => _offCircularProgressMaterialColorName.GetValue();
	public UTexture                                           MedicIconTexture                                               => _offMedicIconTexture.GetValue();
	public UTexture                                           HealedIconTexture                                              => _offHealedIconTexture.GetValue();
	public UTexture                                           DragIconTexture                                                => _offDragIconTexture.GetValue();
	public UTexture                                           VehicleRepairIconTexture                                       => _offVehicleRepairIconTexture.GetValue();
	public UTexture                                           BleedingIconTexture                                            => _offBleedingIconTexture.GetValue();
	public UTexture                                           ItemCollisionIconTexture                                       => _offItemCollisionIconTexture.GetValue();
	public UFont                                              BigFont                                                        => _offBigFont.GetValue();
	public UFont                                              NormalFont                                                     => _offNormalFont.GetValue();
	public UFont                                              NametagFont                                                    => _offNametagFont.GetValue();
	public UFont                                              ChatMessageFont                                                => _offChatMessageFont.GetValue();
	public UFont                                              SystemMessageFont                                              => _offSystemMessageFont.GetValue();
	public FLinearColor                                       TicketTextColor                                                => _offTicketTextColor.GetValue();
	public TArray<FSQRemoteTalkerDisplayInfo>                 RemoteTalkers                                                  => _offRemoteTalkers.GetValue();
	public TArray<FSQRemoteTalkerDisplayInfo>                 TestTalkers                                                    => _offTestTalkers.GetValue();
	public byte/*(bool)*/                                     bUseTestTalkers                                                => _offbUseTestTalkers.GetValue();
	public ESQVoiceChannel                                    OwnerSpeakingState                                             => _offOwnerSpeakingState.GetValue();
	public FSQMessageBoxInfo                                  ChatBoxInfo                                                    => _offChatBoxInfo.GetValue();
	public FSQMessageBoxInfo                                  SystemMessageBoxInfo                                           => _offSystemMessageBoxInfo.GetValue();
	public FSQMessageBoxInfo                                  GameNotificationBoxInfo                                        => _offGameNotificationBoxInfo.GetValue();
	public FSQMessageBoxInfo                                  PlayerNotificationBoxInfo                                      => _offPlayerNotificationBoxInfo.GetValue();
	public FLinearColor                                       SystemMessagesColor                                            => _offSystemMessagesColor.GetValue();
	public int                                                StartingMapZoomLevel                                           => _offStartingMapZoomLevel.GetValue();
	public TArray<float>                                      MapZoomLevels                                                  => _offMapZoomLevels.GetValue();
	public USQScoreboard                                      ScoreBoard                                                     => _offScoreBoard.GetValue();
	public USQDrawChatWidget                                  ChatDrawingWidget                                              => _offChatDrawingWidget.GetValue();
	public float                                              NametagDistantVisibilityDropoffStart                           => _offNametagDistantVisibilityDropoffStart.GetValue();
	public float                                              NametagDistantVisibilityDropoffFinish                          => _offNametagDistantVisibilityDropoffFinish.GetValue();
	public float                                              NametagDistantVisibilitySize                                   => _offNametagDistantVisibilitySize.GetValue();
	public float                                              NametagNearVerticalOffset                                      => _offNametagNearVerticalOffset.GetValue();
	public float                                              NametagFarVerticalOffset                                       => _offNametagFarVerticalOffset.GetValue();
	public float                                              NametagNearVerticalInterpStart                                 => _offNametagNearVerticalInterpStart.GetValue();
	public float                                              NametagFadingInterpStart                                       => _offNametagFadingInterpStart.GetValue();
	public float                                              UsableDistantVisibilityDropoffStart                            => _offUsableDistantVisibilityDropoffStart.GetValue();
	public float                                              UsableDistantVisibilityDropoffFinish                           => _offUsableDistantVisibilityDropoffFinish.GetValue();
	public float                                              UsableDistantVisibilitySize                                    => _offUsableDistantVisibilitySize.GetValue();
	public float                                              UsableNearVerticalOffset                                       => _offUsableNearVerticalOffset.GetValue();
	public float                                              UsableFarVerticalOffset                                        => _offUsableFarVerticalOffset.GetValue();
	public float                                              UsableNearVerticalInterpStart                                  => _offUsableNearVerticalInterpStart.GetValue();
	public float                                              UsableFadingInterpStart                                        => _offUsableFadingInterpStart.GetValue();
	public FLinearColor                                       EnemyColor                                                     => _offEnemyColor.GetValue();
	public FLinearColor                                       TeamColor                                                      => _offTeamColor.GetValue();
	public FLinearColor                                       SquadColor                                                     => _offSquadColor.GetValue();
	public FLinearColor                                       FireTeamColor                                                  => _offFireTeamColor.GetValue();
	public FLinearColor                                       NametagOutlineColor                                            => _offNametagOutlineColor.GetValue();
	public float                                              MaxDistanceToShowHUDIcons                                      => _offMaxDistanceToShowHUDIcons.GetValue();
	public float                                              MaxDistanceToShowWoundedHUDIcons                               => _offMaxDistanceToShowWoundedHUDIcons.GetValue();
	public float                                              MaxDistanceToShowDragHUDIcons                                  => _offMaxDistanceToShowDragHUDIcons.GetValue();
	public FName                                              BoneForDragIcon                                                => _offBoneForDragIcon.GetValue();
	public float                                              DragIconXOffset                                                => _offDragIconXOffset.GetValue();
	public float                                              DragIconYOffset                                                => _offDragIconYOffset.GetValue();
	public FLinearColor                                       DragHUDIconColor                                               => _offDragHUDIconColor.GetValue();
	public float                                              DragHUDIconSizeMultiplier                                      => _offDragHUDIconSizeMultiplier.GetValue();
	public FName                                              BoneForBleedingIcon                                            => _offBoneForBleedingIcon.GetValue();
	public FVector                                            HUDIconOffset                                                  => _offHUDIconOffset.GetValue();
	public FVector                                            HUDIconCrouchedOffset                                          => _offHUDIconCrouchedOffset.GetValue();
	public FVector                                            HUDIconProneOffset                                             => _offHUDIconProneOffset.GetValue();
	public FVector                                            HUDIconWoundedOffset                                           => _offHUDIconWoundedOffset.GetValue();
	public float                                              HUDIconFarSize                                                 => _offHUDIconFarSize.GetValue();
	public float                                              HUDIconNearSize                                                => _offHUDIconNearSize.GetValue();
	public FVector2D                                          HealedIconOffset                                               => _offHealedIconOffset.GetValue();
	public FVector2D                                          HealedIconSize                                                 => _offHealedIconSize.GetValue();
	public FVector2D                                          ItemCollisionIconOffset                                        => _offItemCollisionIconOffset.GetValue();
	public FVector2D                                          ItemCollisionIconSize                                          => _offItemCollisionIconSize.GetValue();
	public float                                              MaxTimeSinceLastHealedToDrawHealedIcon                         => _offMaxTimeSinceLastHealedToDrawHealedIcon.GetValue();
	public float                                              MaxTimeSinceLastRepairedToDrawRepairedIcon                     => _offMaxTimeSinceLastRepairedToDrawRepairedIcon.GetValue();
	public UCurveLinearColor                                  HealthColorCurve                                               => _offHealthColorCurve.GetValue();
	public byte/*(bool)*/                                     bHudWidgetsEnabled                                             => _offbHudWidgetsEnabled.GetValue();
	public FScriptMulticastDelegate                           OnChatReceived                                                 => _offOnChatReceived.GetValue();
	public USoundBase                                         CommandVoiceStartingSound                                      => _offCommandVoiceStartingSound.GetValue();
	public USoundBase                                         CommandVoiceEndingSound                                        => _offCommandVoiceEndingSound.GetValue();
	public USoundBase                                         SquadVoiceStartingSound                                        => _offSquadVoiceStartingSound.GetValue();
	public USoundBase                                         SquadVoiceEndingSound                                          => _offSquadVoiceEndingSound.GetValue();
	public FSQLedColorScheme                                  LedColorScheme                                                 => _offLedColorScheme.GetValue();
	public USQColorsDataAsset                                 ColorsDataAsset                                                => _offColorsDataAsset.GetValue();
	public UEnum                                              ChatEnumObj                                                    => _offChatEnumObj.GetValue();
	#endregion


}

// Class Squad.SQHUDWidget
// 0x00A4 (0x00CC - 0x0028)
public class USQHUDWidget : UObject
{
	#region Offsets
	private ExternalOffset<UClass>                            _offUMGWidget                                                  = new ExternalOffset<UClass>(0x0028, true);                    // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offPosition                                                   = new ExternalOffset<FVector2D>(0x0030, false);                // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offOffsetPosition                                             = new ExternalOffset<FVector2D>(0x0038, false);                // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offWidgetOrigin                                               = new ExternalOffset<FVector2D>(0x0040, false);                // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offSize                                                       = new ExternalOffset<FVector2D>(0x0048, false);                // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offZOrder                                                     = new ExternalOffset<float>(0x0050);                           // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseScreenNormalizedCoordinates                            = new ExternalOffset<byte/*(bool)*/>(0x0054);                  // 0x0054(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbBypassResolutionScaling                                   = new ExternalOffset<byte/*(bool)*/>(0x0055);                  // 0x0055(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDesignedResolution                                         = new ExternalOffset<float>(0x0058);                           // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbMaintainOriginalAspectRatio                               = new ExternalOffset<byte/*(bool)*/>(0x005C);                  // 0x005C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAlpha                                                      = new ExternalOffset<float>(0x0060);                           // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbHidden                                                    = new ExternalOffset<byte/*(bool)*/>(0x0064);                  // 0x0064(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQGameState>                      _offGameState                                                  = new ExternalOffset<ASQGameState>(0x0068, true);              // 0x0068(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQHUD>                            _offHUD                                                        = new ExternalOffset<ASQHUD>(0x0070, true);                    // 0x0070(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQPlayerController>               _offPlayerController                                           = new ExternalOffset<ASQPlayerController>(0x0078, true);       // 0x0078(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQPlayerState>                    _offPlayerState                                                = new ExternalOffset<ASQPlayerState>(0x0080, true);            // 0x0080(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQSoldier>                        _offSoldier                                                    = new ExternalOffset<ASQSoldier>(0x0088, true);                // 0x0088(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UCanvas>                           _offCanvas                                                     = new ExternalOffset<UCanvas>(0x0090, true);                   // 0x0090(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture2D>                        _offDefaultTexture                                             = new ExternalOffset<UTexture2D>(0x0098, true);                // 0x0098(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture2D>                        _offGradientTexture0                                           = new ExternalOffset<UTexture2D>(0x00A0, true);                // 0x00A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offCanvasCenter                                               = new ExternalOffset<FVector2D>(0x00A8, false);                // 0x00A8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offCanvasSize                                                 = new ExternalOffset<FVector2D>(0x00B0, false);                // 0x00B0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offDrawingPosition                                            = new ExternalOffset<FVector2D>(0x00B8, false);                // 0x00B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offDrawingSize                                                = new ExternalOffset<FVector2D>(0x00C0, false);                // 0x00C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDrawingScale                                               = new ExternalOffset<float>(0x00C8);                           // 0x00C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public UClass                                             UMGWidget                                                      => _offUMGWidget.GetValue();
	public FVector2D                                          Position                                                       => _offPosition.GetValue();
	public FVector2D                                          OffsetPosition                                                 => _offOffsetPosition.GetValue();
	public FVector2D                                          WidgetOrigin                                                   => _offWidgetOrigin.GetValue();
	public FVector2D                                          Size                                                           => _offSize.GetValue();
	public float                                              ZOrder                                                         => _offZOrder.GetValue();
	public byte/*(bool)*/                                     bUseScreenNormalizedCoordinates                                => _offbUseScreenNormalizedCoordinates.GetValue();
	public byte/*(bool)*/                                     bBypassResolutionScaling                                       => _offbBypassResolutionScaling.GetValue();
	public float                                              DesignedResolution                                             => _offDesignedResolution.GetValue();
	public byte/*(bool)*/                                     bMaintainOriginalAspectRatio                                   => _offbMaintainOriginalAspectRatio.GetValue();
	public float                                              Alpha                                                          => _offAlpha.GetValue();
	public byte/*(bool)*/                                     bHidden                                                        => _offbHidden.GetValue();
	public ASQGameState                                       GameState                                                      => _offGameState.GetValue();
	public ASQHUD                                             HUD                                                            => _offHUD.GetValue();
	public ASQPlayerController                                PlayerController                                               => _offPlayerController.GetValue();
	public ASQPlayerState                                     PlayerState                                                    => _offPlayerState.GetValue();
	public ASQSoldier                                         Soldier                                                        => _offSoldier.GetValue();
	public UCanvas                                            Canvas                                                         => _offCanvas.GetValue();
	public UTexture2D                                         DefaultTexture                                                 => _offDefaultTexture.GetValue();
	public UTexture2D                                         GradientTexture0                                               => _offGradientTexture0.GetValue();
	public FVector2D                                          CanvasCenter                                                   => _offCanvasCenter.GetValue();
	public FVector2D                                          CanvasSize                                                     => _offCanvasSize.GetValue();
	public FVector2D                                          DrawingPosition                                                => _offDrawingPosition.GetValue();
	public FVector2D                                          DrawingSize                                                    => _offDrawingSize.GetValue();
	public float                                              DrawingScale                                                   => _offDrawingScale.GetValue();
	#endregion


}

// Class Squad.SQWeapon
// 0x027E (0x06E2 - 0x0464)
public class ASQWeapon : ASQEquipableItem
{
	#region Offsets
	private ExternalOffset<USQWeaponStaticInfo>               _offWeaponStaticInfo                                           = new ExternalOffset<USQWeaponStaticInfo>(0x0480, true);       // 0x0480(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQAudioComponentPool>             _offFiringAudioComponentPool                                   = new ExternalOffset<FSQAudioComponentPool>(0x0488, false);    // 0x0488(0x0020) (ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FTimerHandle>                      _offZoomFinishAdsTransitionTimerHandle                         = new ExternalOffset<FTimerHandle>(0x04D0, false);             // 0x04D0(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbWaitingForMagazineLoad                                    = new ExternalOffset<byte/*(bool)*/>(0x04D8);                  // 0x04D8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbFiring                                                    = new ExternalOffset<char>(0x04DC, false);                     // 0x04DC(0x0001) BIT_FIELD (Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbReloading                                                 = new ExternalOffset<char>(0x04DC, false);                     // 0x04DC(0x0001) BIT_FIELD (Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQWeaponData>                     _offWeaponConfig                                               = new ExternalOffset<FSQWeaponData>(0x04E0, false);            // 0x04E0(0x00C0) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQWeaponState>                    _offCurrentState                                               = new ExternalOffset<ESQWeaponState>(0x05A0, false);           // 0x05A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offADSMoveSpeedMultiplier                                     = new ExternalOffset<float>(0x05A4);                           // 0x05A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbAimingDownSights                                          = new ExternalOffset<byte/*(bool)*/>(0x05A8);                  // 0x05A8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFireInput                                                 = new ExternalOffset<byte/*(bool)*/>(0x05A9);                  // 0x05A9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbPendingFire                                               = new ExternalOffset<byte/*(bool)*/>(0x05AA);                  // 0x05AA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxTimeToLoopSoundsAfterLastFire                           = new ExternalOffset<float>(0x05B8);                           // 0x05B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offCurrentFireMode                                            = new ExternalOffset<int>(0x05D8);                             // 0x05D8(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQMagazineData>>           _offMagazines                                                  = new ExternalOffset<TArray<FSQMagazineData>>(0x05E8, false);  // 0x05E8(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<UClass>>                    _offAttachmentClasses                                          = new ExternalOffset<TArray<UClass>>(0x05F8, false);           // 0x05F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USQWeaponAttachment>>       _offAttachments                                                = new ExternalOffset<TArray<USQWeaponAttachment>>(0x0608, false); // 0x0608(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<UADSPostProcessSettings>           _offADSPostProcessSettings                                     = new ExternalOffset<UADSPostProcessSettings>(0x0618, true);   // 0x0618(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseStopADSPPDrawing                                       = new ExternalOffset<byte/*(bool)*/>(0x0620);                  // 0x0620(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStopADSPPDrawing                                          = new ExternalOffset<byte/*(bool)*/>(0x0621);                  // 0x0621(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQDynamicEasingStruct>            _offHoldingZoomEasing                                          = new ExternalOffset<FSQDynamicEasingStruct>(0x0624, false);   // 0x0624(0x0014) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHoldingZoomEasingAlpha                                     = new ExternalOffset<float>(0x0638);                           // 0x0638(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHoldingZoomRawAlpha                                        = new ExternalOffset<float>(0x063C);                           // 0x063C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHoldingZoomIntermediateAlpha                               = new ExternalOffset<float>(0x0640);                           // 0x0640(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHoldingZoomTargetAlpha                                     = new ExternalOffset<float>(0x0644);                           // 0x0644(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCurrentFOV                                                 = new ExternalOffset<float>(0x0648);                           // 0x0648(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offZoomedFOV                                                  = new ExternalOffset<float>(0x064C);                           // 0x064C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFocusZoomTime                                              = new ExternalOffset<float>(0x0650);                           // 0x0650(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFocusAdditionalZoom                                        = new ExternalOffset<float>(0x0654);                           // 0x0654(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTimeSinceLastZoomToggle                                    = new ExternalOffset<float>(0x0658);                           // 0x0658(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLastZoomProgressAtToggle                                   = new ExternalOffset<float>(0x065C);                           // 0x065C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAdjustAdsSightItemAnimPos                                  = new ExternalOffset<float>(0x0660);                           // 0x0660(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCachedAdjustAdsSightItemAnimPos                            = new ExternalOffset<float>(0x0664);                           // 0x0664(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offNewAdjustAdsSightItemAnimPos                               = new ExternalOffset<float>(0x0668);                           // 0x0668(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAdjustAdsSightItemAnimPosAlpha                             = new ExternalOffset<float>(0x066C);                           // 0x066C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMaxConcurrentSounds                                        = new ExternalOffset<int>(0x0670);                             // 0x0670(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxConcurrentSoundsFadeOut                                 = new ExternalOffset<float>(0x0674);                           // 0x0674(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIs1PUsingSquadSoundNodeLooping                            = new ExternalOffset<byte/*(bool)*/>(0x0678);                  // 0x0678(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIs3PUsingSquadSoundNodeLooping                            = new ExternalOffset<byte/*(bool)*/>(0x0679);                  // 0x0679(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offCurrentFiringAC                                            = new ExternalOffset<UAudioComponent>(0x0680, true);           // 0x0680(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<UAudioComponent>>           _offFiringACs                                                  = new ExternalOffset<TArray<UAudioComponent>>(0x0688, false);  // 0x0688(0x0010) (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offSemiAutoSound1P                                            = new ExternalOffset<USoundCue>(0x0698, true);                 // 0x0698(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offSemiAutoSound3P                                            = new ExternalOffset<USoundCue>(0x06A0, true);                 // 0x06A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offStartingSound1P                                            = new ExternalOffset<USoundCue>(0x06A8, true);                 // 0x06A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offStartingSound3P                                            = new ExternalOffset<USoundCue>(0x06B0, true);                 // 0x06B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsModifyingZeroing                                        = new ExternalOffset<byte/*(bool)*/>(0x06C8);                  // 0x06C8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offAdjustableSightItemPos                                     = new ExternalOffset<int>(0x06CC);                             // 0x06CC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCachedLastZeroingTime                                      = new ExternalOffset<float>(0x06D0);                           // 0x06D0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCachedLastZeroingPlayTime                                  = new ExternalOffset<float>(0x06D4);                           // 0x06D4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offCachedLastZeroingPosition                                  = new ExternalOffset<int>(0x06D8);                             // 0x06D8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedIsBipodDeployed                                     = new ExternalOffset<byte/*(bool)*/>(0x06DC);                  // 0x06DC(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedAimProneBobbing                                     = new ExternalOffset<byte/*(bool)*/>(0x06DD);                  // 0x06DD(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbFinishedAdsTransition                                     = new ExternalOffset<byte/*(bool)*/>(0x06DE);                  // 0x06DE(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbLastNewZoom                                               = new ExternalOffset<byte/*(bool)*/>(0x06DF);                  // 0x06DF(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offFireSwaySelector                                           = new ExternalOffset<byte/*(bool)*/>(0x06E0);                  // 0x06E0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offPreFireSwaySelector                                        = new ExternalOffset<byte/*(bool)*/>(0x06E1);                  // 0x06E1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public USQWeaponStaticInfo                                WeaponStaticInfo                                               => _offWeaponStaticInfo.GetValue();
	public FSQAudioComponentPool                              FiringAudioComponentPool                                       => _offFiringAudioComponentPool.GetValue();
	public FTimerHandle                                       ZoomFinishAdsTransitionTimerHandle                             => _offZoomFinishAdsTransitionTimerHandle.GetValue();
	public byte/*(bool)*/                                     bWaitingForMagazineLoad                                        => _offbWaitingForMagazineLoad.GetValue();
	public FSQWeaponData                                      WeaponConfig                                                   => _offWeaponConfig.GetValue();
	public ESQWeaponState                                     CurrentState                                                   => _offCurrentState.GetValue();
	public float                                              ADSMoveSpeedMultiplier                                         => _offADSMoveSpeedMultiplier.GetValue();
	public byte/*(bool)*/                                     bAimingDownSights                                              => _offbAimingDownSights.GetValue();
	public byte/*(bool)*/                                     bFireInput                                                     => _offbFireInput.GetValue();
	public byte/*(bool)*/                                     bPendingFire                                                   => _offbPendingFire.GetValue();
	public float                                              MaxTimeToLoopSoundsAfterLastFire                               => _offMaxTimeToLoopSoundsAfterLastFire.GetValue();
	public int                                                CurrentFireMode                                                => _offCurrentFireMode.GetValue();
	public TArray<FSQMagazineData>                            Magazines                                                      => _offMagazines.GetValue();
	public TArray<UClass>                                     AttachmentClasses                                              => _offAttachmentClasses.GetValue();
	public TArray<USQWeaponAttachment>                        Attachments                                                    => _offAttachments.GetValue();
	public UADSPostProcessSettings                            ADSPostProcessSettings                                         => _offADSPostProcessSettings.GetValue();
	public byte/*(bool)*/                                     bUseStopADSPPDrawing                                           => _offbUseStopADSPPDrawing.GetValue();
	public byte/*(bool)*/                                     bStopADSPPDrawing                                              => _offbStopADSPPDrawing.GetValue();
	public FSQDynamicEasingStruct                             HoldingZoomEasing                                              => _offHoldingZoomEasing.GetValue();
	public float                                              HoldingZoomEasingAlpha                                         => _offHoldingZoomEasingAlpha.GetValue();
	public float                                              HoldingZoomRawAlpha                                            => _offHoldingZoomRawAlpha.GetValue();
	public float                                              HoldingZoomIntermediateAlpha                                   => _offHoldingZoomIntermediateAlpha.GetValue();
	public float                                              HoldingZoomTargetAlpha                                         => _offHoldingZoomTargetAlpha.GetValue();
	public float                                              CurrentFOV                                                     => _offCurrentFOV.GetValue();
	public float                                              ZoomedFOV                                                      => _offZoomedFOV.GetValue();
	public float                                              FocusZoomTime                                                  => _offFocusZoomTime.GetValue();
	public float                                              FocusAdditionalZoom                                            => _offFocusAdditionalZoom.GetValue();
	public float                                              TimeSinceLastZoomToggle                                        => _offTimeSinceLastZoomToggle.GetValue();
	public float                                              LastZoomProgressAtToggle                                       => _offLastZoomProgressAtToggle.GetValue();
	public float                                              AdjustAdsSightItemAnimPos                                      => _offAdjustAdsSightItemAnimPos.GetValue();
	public float                                              CachedAdjustAdsSightItemAnimPos                                => _offCachedAdjustAdsSightItemAnimPos.GetValue();
	public float                                              NewAdjustAdsSightItemAnimPos                                   => _offNewAdjustAdsSightItemAnimPos.GetValue();
	public float                                              AdjustAdsSightItemAnimPosAlpha                                 => _offAdjustAdsSightItemAnimPosAlpha.GetValue();
	public int                                                MaxConcurrentSounds                                            => _offMaxConcurrentSounds.GetValue();
	public float                                              MaxConcurrentSoundsFadeOut                                     => _offMaxConcurrentSoundsFadeOut.GetValue();
	public byte/*(bool)*/                                     bIs1PUsingSquadSoundNodeLooping                                => _offbIs1PUsingSquadSoundNodeLooping.GetValue();
	public byte/*(bool)*/                                     bIs3PUsingSquadSoundNodeLooping                                => _offbIs3PUsingSquadSoundNodeLooping.GetValue();
	public UAudioComponent                                    CurrentFiringAC                                                => _offCurrentFiringAC.GetValue();
	public TArray<UAudioComponent>                            FiringACs                                                      => _offFiringACs.GetValue();
	public USoundCue                                          SemiAutoSound1P                                                => _offSemiAutoSound1P.GetValue();
	public USoundCue                                          SemiAutoSound3P                                                => _offSemiAutoSound3P.GetValue();
	public USoundCue                                          StartingSound1P                                                => _offStartingSound1P.GetValue();
	public USoundCue                                          StartingSound3P                                                => _offStartingSound3P.GetValue();
	public byte/*(bool)*/                                     bIsModifyingZeroing                                            => _offbIsModifyingZeroing.GetValue();
	public int                                                AdjustableSightItemPos                                         => _offAdjustableSightItemPos.GetValue();
	public float                                              CachedLastZeroingTime                                          => _offCachedLastZeroingTime.GetValue();
	public float                                              CachedLastZeroingPlayTime                                      => _offCachedLastZeroingPlayTime.GetValue();
	public int                                                CachedLastZeroingPosition                                      => _offCachedLastZeroingPosition.GetValue();
	public byte/*(bool)*/                                     bCachedIsBipodDeployed                                         => _offbCachedIsBipodDeployed.GetValue();
	public byte/*(bool)*/                                     bCachedAimProneBobbing                                         => _offbCachedAimProneBobbing.GetValue();
	public byte/*(bool)*/                                     bFinishedAdsTransition                                         => _offbFinishedAdsTransition.GetValue();
	public byte/*(bool)*/                                     bLastNewZoom                                                   => _offbLastNewZoom.GetValue();
	public byte/*(bool)*/                                     FireSwaySelector                                               => _offFireSwaySelector.GetValue();
	public byte/*(bool)*/                                     PreFireSwaySelector                                            => _offPreFireSwaySelector.GetValue();
	#endregion


}

// Class Squad.SQInfantryWeapon
// 0x0016 (0x06F8 - 0x06E2)
public class ASQInfantryWeapon : ASQWeapon
{
	#region Offsets
	private ExternalOffset<UMaterialParameterCollection>      _offAdsScopeFovParameterCollection                             = new ExternalOffset<UMaterialParameterCollection>(0x06E8, true); // 0x06E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offAdsScopeFovParameterName                                   = new ExternalOffset<FName>(0x06F0, false);                    // 0x06F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UMaterialParameterCollection                       AdsScopeFovParameterCollection                                 => _offAdsScopeFovParameterCollection.GetValue();
	public FName                                              AdsScopeFovParameterName                                       => _offAdsScopeFovParameterName.GetValue();
	#endregion


}

// Class Squad.SQInputComponent
// 0x0008 (0x0160 - 0x0158)
public class USQInputComponent : UInputComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQInstancedStaticMeshActor
// 0x0018 (0x0250 - 0x0238)
public class ASQInstancedStaticMeshActor : AActor
{
	#region Offsets
	private ExternalOffset<UInstancedStaticMeshComponent>     _offInstancedStaticMeshComponent                               = new ExternalOffset<UInstancedStaticMeshComponent>(0x0248, true); // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UInstancedStaticMeshComponent                      InstancedStaticMeshComponent                                   => _offInstancedStaticMeshComponent.GetValue();
	#endregion


}

// Class Squad.SQObjectiveRuleset
// 0x008B (0x0333 - 0x02A8)
public class ASQObjectiveRuleset : ASQGameModeRuleset
{
	#region Offsets
	private ExternalOffset<int>                               _offNumberOfObjectives                                         = new ExternalOffset<int>(0x02A8);                             // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMaxNumberOfObjectivesShownAtSameTime                       = new ExternalOffset<int>(0x02AC);                             // 0x02AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTicketsGainedUponMeetingObjective                          = new ExternalOffset<int>(0x02B0);                             // 0x02B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTicketsLostUponLosingObjective                             = new ExternalOffset<int>(0x02B4);                             // 0x02B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offKnownAttackObjectiveMarkerClass                            = new ExternalOffset<UClass>(0x02B8, true);                    // 0x02B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offKnownDefendObjectiveMarkerClass                            = new ExternalOffset<UClass>(0x02C0, true);                    // 0x02C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offUnknownDefendObjectiveMarkerClass                          = new ExternalOffset<UClass>(0x02C8, true);                    // 0x02C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offSatisfiedObjectiveMarkerClass                              = new ExternalOffset<UClass>(0x02D0, true);                    // 0x02D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinObjectiveDistance                                       = new ExternalOffset<float>(0x02D8);                           // 0x02D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbOnlyCheckMinDistanceAgainstActiveObjectives               = new ExternalOffset<byte/*(bool)*/>(0x02DC);                  // 0x02DC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbRandomlyPickObjectiveIfAllFailDistanceCheck               = new ExternalOffset<byte/*(bool)*/>(0x02DD);                  // 0x02DD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQMapMarker>>              _offMarkers                                                    = new ExternalOffset<TArray<ASQMapMarker>>(0x02E0, false);     // 0x02E0(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FTransform>>                _offAllAvailableObjectiveLocations                             = new ExternalOffset<TArray<FTransform>>(0x02F0, false);       // 0x02F0(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FTransform>>                _offFilteredObjectiveLocations                                 = new ExternalOffset<TArray<FTransform>>(0x0300, false);       // 0x0300(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQObjective>>              _offObjectives                                                 = new ExternalOffset<TArray<ASQObjective>>(0x0310, false);     // 0x0310(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offObjectiveType                                              = new ExternalOffset<UClass>(0x0320, true);                    // 0x0320(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTimeSinceLastObjectiveSpawn                                = new ExternalOffset<float>(0x0328);                           // 0x0328(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbOverrideObjectiveSpawning                                 = new ExternalOffset<byte/*(bool)*/>(0x032C);                  // 0x032C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbGenerateMarkersForTeamOneUponObjectiveSpawn               = new ExternalOffset<byte/*(bool)*/>(0x032D);                  // 0x032D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbGenerateMarkersForTeamTwoUponObjectiveSpawn               = new ExternalOffset<byte/*(bool)*/>(0x032E);                  // 0x032E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQTeam>                           _offWinningTeamUponAllObjectivesCompleted                      = new ExternalOffset<ESQTeam>(0x032F, false);                  // 0x032F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQTeam>                           _offWinningTeamUponTimerExpired                                = new ExternalOffset<ESQTeam>(0x0330, false);                  // 0x0330(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQTeam>                           _offWinningTeamIfTeamOneHasNoTickets                           = new ExternalOffset<ESQTeam>(0x0331, false);                  // 0x0331(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQTeam>                           _offWinningTeamIfTeamTwoHasNoTickets                           = new ExternalOffset<ESQTeam>(0x0332, false);                  // 0x0332(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public int                                                NumberOfObjectives                                             => _offNumberOfObjectives.GetValue();
	public int                                                MaxNumberOfObjectivesShownAtSameTime                           => _offMaxNumberOfObjectivesShownAtSameTime.GetValue();
	public int                                                TicketsGainedUponMeetingObjective                              => _offTicketsGainedUponMeetingObjective.GetValue();
	public int                                                TicketsLostUponLosingObjective                                 => _offTicketsLostUponLosingObjective.GetValue();
	public UClass                                             KnownAttackObjectiveMarkerClass                                => _offKnownAttackObjectiveMarkerClass.GetValue();
	public UClass                                             KnownDefendObjectiveMarkerClass                                => _offKnownDefendObjectiveMarkerClass.GetValue();
	public UClass                                             UnknownDefendObjectiveMarkerClass                              => _offUnknownDefendObjectiveMarkerClass.GetValue();
	public UClass                                             SatisfiedObjectiveMarkerClass                                  => _offSatisfiedObjectiveMarkerClass.GetValue();
	public float                                              MinObjectiveDistance                                           => _offMinObjectiveDistance.GetValue();
	public byte/*(bool)*/                                     bOnlyCheckMinDistanceAgainstActiveObjectives                   => _offbOnlyCheckMinDistanceAgainstActiveObjectives.GetValue();
	public byte/*(bool)*/                                     bRandomlyPickObjectiveIfAllFailDistanceCheck                   => _offbRandomlyPickObjectiveIfAllFailDistanceCheck.GetValue();
	public TArray<ASQMapMarker>                               Markers                                                        => _offMarkers.GetValue();
	public TArray<FTransform>                                 AllAvailableObjectiveLocations                                 => _offAllAvailableObjectiveLocations.GetValue();
	public TArray<FTransform>                                 FilteredObjectiveLocations                                     => _offFilteredObjectiveLocations.GetValue();
	public TArray<ASQObjective>                               Objectives                                                     => _offObjectives.GetValue();
	public UClass                                             ObjectiveType                                                  => _offObjectiveType.GetValue();
	public float                                              TimeSinceLastObjectiveSpawn                                    => _offTimeSinceLastObjectiveSpawn.GetValue();
	public byte/*(bool)*/                                     bOverrideObjectiveSpawning                                     => _offbOverrideObjectiveSpawning.GetValue();
	public byte/*(bool)*/                                     bGenerateMarkersForTeamOneUponObjectiveSpawn                   => _offbGenerateMarkersForTeamOneUponObjectiveSpawn.GetValue();
	public byte/*(bool)*/                                     bGenerateMarkersForTeamTwoUponObjectiveSpawn                   => _offbGenerateMarkersForTeamTwoUponObjectiveSpawn.GetValue();
	public ESQTeam                                            WinningTeamUponAllObjectivesCompleted                          => _offWinningTeamUponAllObjectivesCompleted.GetValue();
	public ESQTeam                                            WinningTeamUponTimerExpired                                    => _offWinningTeamUponTimerExpired.GetValue();
	public ESQTeam                                            WinningTeamIfTeamOneHasNoTickets                               => _offWinningTeamIfTeamOneHasNoTickets.GetValue();
	public ESQTeam                                            WinningTeamIfTeamTwoHasNoTickets                               => _offWinningTeamIfTeamTwoHasNoTickets.GetValue();
	#endregion


}

// Class Squad.SQInsurgencyRuleset
// 0x0055 (0x0388 - 0x0333)
public class ASQInsurgencyRuleset : ASQObjectiveRuleset
{
	#region Offsets
	private ExternalOffset<int>                               _offIntelligencePoints                                         = new ExternalOffset<int>(0x0338);                             // 0x0338(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQTeam>                           _offCoalitionTeam                                              = new ExternalOffset<ESQTeam>(0x033C, false);                  // 0x033C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQTeam>                           _offInsurgentTeam                                              = new ExternalOffset<ESQTeam>(0x033D, false);                  // 0x033D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMaxNumberOfFirstCachesToShowCoalition                      = new ExternalOffset<int>(0x0340);                             // 0x0340(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offTimeDelayToShowFirstCache                                  = new ExternalOffset<FVector2D>(0x0344, false);                // 0x0344(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offTimeDelayToShowNextCache                                   = new ExternalOffset<FVector2D>(0x034C, false);                // 0x034C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offTimeDelayToNotifyCoalitionOfFirstCaches                    = new ExternalOffset<FVector2D>(0x0354, false);                // 0x0354(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offTimeDelayToNotifyCoalitionOfCache                          = new ExternalOffset<FVector2D>(0x035C, false);                // 0x035C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offIntelligencePointsPerInsurgentKilled                       = new ExternalOffset<int>(0x0364);                             // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offIntelligencePointsPerInsurgentArrested                     = new ExternalOffset<int>(0x0368);                             // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offIntelligencePointsPerCivilianKilled                        = new ExternalOffset<int>(0x036C);                             // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQPlayerLimiter>>          _offIntelligencePointsRequiredToShowCache                      = new ExternalOffset<TArray<FSQPlayerLimiter>>(0x0370, false); // 0x0370(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<USQRoleSettings>                   _offCivilianRole                                               = new ExternalOffset<USQRoleSettings>(0x0380, true);           // 0x0380(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public int                                                IntelligencePoints                                             => _offIntelligencePoints.GetValue();
	public ESQTeam                                            CoalitionTeam                                                  => _offCoalitionTeam.GetValue();
	public ESQTeam                                            InsurgentTeam                                                  => _offInsurgentTeam.GetValue();
	public int                                                MaxNumberOfFirstCachesToShowCoalition                          => _offMaxNumberOfFirstCachesToShowCoalition.GetValue();
	public FVector2D                                          TimeDelayToShowFirstCache                                      => _offTimeDelayToShowFirstCache.GetValue();
	public FVector2D                                          TimeDelayToShowNextCache                                       => _offTimeDelayToShowNextCache.GetValue();
	public FVector2D                                          TimeDelayToNotifyCoalitionOfFirstCaches                        => _offTimeDelayToNotifyCoalitionOfFirstCaches.GetValue();
	public FVector2D                                          TimeDelayToNotifyCoalitionOfCache                              => _offTimeDelayToNotifyCoalitionOfCache.GetValue();
	public int                                                IntelligencePointsPerInsurgentKilled                           => _offIntelligencePointsPerInsurgentKilled.GetValue();
	public int                                                IntelligencePointsPerInsurgentArrested                         => _offIntelligencePointsPerInsurgentArrested.GetValue();
	public int                                                IntelligencePointsPerCivilianKilled                            => _offIntelligencePointsPerCivilianKilled.GetValue();
	public TArray<FSQPlayerLimiter>                           IntelligencePointsRequiredToShowCache                          => _offIntelligencePointsRequiredToShowCache.GetValue();
	public USQRoleSettings                                    CivilianRole                                                   => _offCivilianRole.GetValue();
	#endregion


}

// Class Squad.SQInteractableWidgetItem
// 0x0050 (0x0230 - 0x01E0)
public class USQInteractableWidgetItem : UUserWidget
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQInteractableWidgetList
// 0x0050 (0x0230 - 0x01E0)
public class USQInteractableWidgetList : UUserWidget
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQInventoryGroupWidget
// 0x0058 (0x0288 - 0x0230)
public class USQInventoryGroupWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<TArray<USQInventoryItemWidget>>    _offItemsArray                                                 = new ExternalOffset<TArray<USQInventoryItemWidget>>(0x0230, false); // 0x0230(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<UCanvasPanel>                      _offUnselectedGroupPanel                                       = new ExternalOffset<UCanvasPanel>(0x0240, true);              // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UHorizontalBox>                    _offItemWidgetsHorizontalBox                                   = new ExternalOffset<UHorizontalBox>(0x0248, true);            // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offUnselectedImage                                            = new ExternalOffset<UImage>(0x0250, true);                    // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offGroupNumber                                                = new ExternalOffset<UTextBlock>(0x0258, true);                // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offGroupImage                                                 = new ExternalOffset<UImage>(0x0260, true);                    // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offItemNameTextBlock                                          = new ExternalOffset<UTextBlock>(0x0268, true);                // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offGroupName                                                  = new ExternalOffset<FText>(0x0270, false);                    // 0x0270(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<USQInventoryItemWidget>                     ItemsArray                                                     => _offItemsArray.GetValue();
	public UCanvasPanel                                       UnselectedGroupPanel                                           => _offUnselectedGroupPanel.GetValue();
	public UHorizontalBox                                     ItemWidgetsHorizontalBox                                       => _offItemWidgetsHorizontalBox.GetValue();
	public UImage                                             UnselectedImage                                                => _offUnselectedImage.GetValue();
	public UTextBlock                                         GroupNumber                                                    => _offGroupNumber.GetValue();
	public UImage                                             GroupImage                                                     => _offGroupImage.GetValue();
	public UTextBlock                                         ItemNameTextBlock                                              => _offItemNameTextBlock.GetValue();
	public FText                                              GroupName                                                      => _offGroupName.GetValue();
	#endregion


}

// Class Squad.SQInventoryInterface
// 0x0000 (0x0028 - 0x0028)
public class USQInventoryInterface : UInterface
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQInventoryItemWidget
// 0x0020 (0x0250 - 0x0230)
public class USQInventoryItemWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<UImage>                            _offItemImage                                                  = new ExternalOffset<UImage>(0x0230, true);                    // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQEquipableItem>                  _offCurrentItem                                                = new ExternalOffset<ASQEquipableItem>(0x0238, true);          // 0x0238(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offMagTextBlock                                               = new ExternalOffset<UTextBlock>(0x0240, true);                // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offBackgroundImage                                            = new ExternalOffset<UImage>(0x0248, true);                    // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UImage                                             ItemImage                                                      => _offItemImage.GetValue();
	public ASQEquipableItem                                   CurrentItem                                                    => _offCurrentItem.GetValue();
	public UTextBlock                                         MagTextBlock                                                   => _offMagTextBlock.GetValue();
	public UImage                                             BackgroundImage                                                => _offBackgroundImage.GetValue();
	#endregion


}

// Class Squad.SQInventoryWidget
// 0x0048 (0x0278 - 0x0230)
public class USQInventoryWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<TArray<USQInventoryGroupWidget>>   _offGroupsArray                                                = new ExternalOffset<TArray<USQInventoryGroupWidget>>(0x0230, false); // 0x0230(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerController>               _offOwningController                                           = new ExternalOffset<ASQPlayerController>(0x0240, true);       // 0x0240(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQPawnInventoryComponent>         _offRenderedInventory                                          = new ExternalOffset<USQPawnInventoryComponent>(0x0248, true); // 0x0248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxTranslucencyAlpha                                       = new ExternalOffset<float>(0x025C);                           // 0x025C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offItemSelectedAlpha                                          = new ExternalOffset<float>(0x0260);                           // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offItemUnselectedAlpha                                        = new ExternalOffset<float>(0x0264);                           // 0x0264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFadeoutDuration                                            = new ExternalOffset<float>(0x0268);                           // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFadeoutDelay                                               = new ExternalOffset<float>(0x026C);                           // 0x026C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offItemScrollSound                                            = new ExternalOffset<USoundCue>(0x0270, true);                 // 0x0270(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public TArray<USQInventoryGroupWidget>                    GroupsArray                                                    => _offGroupsArray.GetValue();
	public ASQPlayerController                                OwningController                                               => _offOwningController.GetValue();
	public USQPawnInventoryComponent                          RenderedInventory                                              => _offRenderedInventory.GetValue();
	public float                                              MaxTranslucencyAlpha                                           => _offMaxTranslucencyAlpha.GetValue();
	public float                                              ItemSelectedAlpha                                              => _offItemSelectedAlpha.GetValue();
	public float                                              ItemUnselectedAlpha                                            => _offItemUnselectedAlpha.GetValue();
	public float                                              FadeoutDuration                                                => _offFadeoutDuration.GetValue();
	public float                                              FadeoutDelay                                                   => _offFadeoutDelay.GetValue();
	public USoundCue                                          ItemScrollSound                                                => _offItemScrollSound.GetValue();
	#endregion


}

// Class Squad.SQItemAnimInstance
// 0x0002 (0x0292 - 0x0290)
public class USQItemAnimInstance : USQAnimInstance
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbPlay1PAnimNotifiesWhenInFirstPerson                       = new ExternalOffset<byte/*(bool)*/>(0x0290);                  // 0x0290(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbPlay3PAnimNotifiesWhenInFirstPerson                       = new ExternalOffset<byte/*(bool)*/>(0x0291);                  // 0x0291(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bPlay1PAnimNotifiesWhenInFirstPerson                           => _offbPlay1PAnimNotifiesWhenInFirstPerson.GetValue();
	public byte/*(bool)*/                                     bPlay3PAnimNotifiesWhenInFirstPerson                           => _offbPlay3PAnimNotifiesWhenInFirstPerson.GetValue();
	#endregion


}

// Class Squad.SQJoinBeaconClient
// 0x0067 (0x02F0 - 0x0289)
public class ASQJoinBeaconClient : AOnlineBeaconClient
{
	#region Offsets
	private ExternalOffset<int>                               _offPlayerCount                                                = new ExternalOffset<int>(0x02C8);                             // 0x02C8(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offQueuePosition                                              = new ExternalOffset<int>(0x02CC);                             // 0x02CC(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offReservedQueueCount                                         = new ExternalOffset<int>(0x02D0);                             // 0x02D0(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offPublicQueueCount                                           = new ExternalOffset<int>(0x02D4);                             // 0x02D4(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsReservedMember                                          = new ExternalOffset<byte/*(bool)*/>(0x02D8);                  // 0x02D8(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbHasReplicated                                             = new ExternalOffset<byte/*(bool)*/>(0x02D9);                  // 0x02D9(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQServerListItemWidget>           _offServerWidget                                               = new ExternalOffset<USQServerListItemWidget>(0x02E0, true);   // 0x02E0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<double>                            _offSecondsToKeepAttemptingReconnect                           = new ExternalOffset<double>(0x02E8, false);                   // 0x02E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public int                                                PlayerCount                                                    => _offPlayerCount.GetValue();
	public int                                                QueuePosition                                                  => _offQueuePosition.GetValue();
	public int                                                ReservedQueueCount                                             => _offReservedQueueCount.GetValue();
	public int                                                PublicQueueCount                                               => _offPublicQueueCount.GetValue();
	public byte/*(bool)*/                                     bIsReservedMember                                              => _offbIsReservedMember.GetValue();
	public byte/*(bool)*/                                     bHasReplicated                                                 => _offbHasReplicated.GetValue();
	public USQServerListItemWidget                            ServerWidget                                                   => _offServerWidget.GetValue();
	public double                                             SecondsToKeepAttemptingReconnect                               => _offSecondsToKeepAttemptingReconnect.GetValue();
	#endregion


}

// Class Squad.SQJoinBeaconHost
// 0x0030 (0x02A0 - 0x0270)
public class ASQJoinBeaconHost : AOnlineBeaconHostObject
{
	#region Offsets
	private ExternalOffset<TArray<FSQServerSlot>>             _offPublicQueue                                                = new ExternalOffset<TArray<FSQServerSlot>>(0x0270, false);    // 0x0270(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQServerSlot>>             _offReservedQueue                                              = new ExternalOffset<TArray<FSQServerSlot>>(0x0280, false);    // 0x0280(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQServerSlot>>             _offJoiningServerSlots                                         = new ExternalOffset<TArray<FSQServerSlot>>(0x0290, false);    // 0x0290(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<FSQServerSlot>                              PublicQueue                                                    => _offPublicQueue.GetValue();
	public TArray<FSQServerSlot>                              ReservedQueue                                                  => _offReservedQueue.GetValue();
	public TArray<FSQServerSlot>                              JoiningServerSlots                                             => _offJoiningServerSlots.GetValue();
	#endregion


}

// Class Squad.SQJoinBeaconState
// 0x0030 (0x0058 - 0x0028)
public class USQJoinBeaconState : UObject
{
	#region Offsets
	private ExternalOffset<TArray<FSQServerSlot>>             _offPublicQueue                                                = new ExternalOffset<TArray<FSQServerSlot>>(0x0028, false);    // 0x0028(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQServerSlot>>             _offReservedQueue                                              = new ExternalOffset<TArray<FSQServerSlot>>(0x0038, false);    // 0x0038(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQServerSlot>>             _offJoiningServerSlots                                         = new ExternalOffset<TArray<FSQServerSlot>>(0x0048, false);    // 0x0048(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<FSQServerSlot>                              PublicQueue                                                    => _offPublicQueue.GetValue();
	public TArray<FSQServerSlot>                              ReservedQueue                                                  => _offReservedQueue.GetValue();
	public TArray<FSQServerSlot>                              JoiningServerSlots                                             => _offJoiningServerSlots.GetValue();
	#endregion


}

// Class Squad.SQJoinSessionCallbackProxy
// 0x0100 (0x0128 - 0x0028)
public class USQJoinSessionCallbackProxy : UOnlineBlueprintCallProxyBase
{
	#region Offsets
	private ExternalOffset<FScriptMulticastDelegate>          _offOnSuccess                                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0028, false); // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnFailure                                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0038, false); // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<UObject>                           _offWorldContextObject                                         = new ExternalOffset<UObject>(0x0120, true);                   // 0x0120(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public FScriptMulticastDelegate                           OnSuccess                                                      => _offOnSuccess.GetValue();
	public FScriptMulticastDelegate                           OnFailure                                                      => _offOnFailure.GetValue();
	public UObject                                            WorldContextObject                                             => _offWorldContextObject.GetValue();
	#endregion


}

// Class Squad.SQKickBanComponent
// 0x0010 (0x00D8 - 0x00C8)
public class USQKickBanComponent : UActorComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQKillDeathRuleset
// 0x0101 (0x0371 - 0x0270)
public class ASQKillDeathRuleset : ASQGameRuleSet
{
	#region Offsets
	private ExternalOffset<FSQKillDeathSettings>              _offTeamOneSettings                                            = new ExternalOffset<FSQKillDeathSettings>(0x0270, false);     // 0x0270(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQKillDeathSettings>              _offTeamTwoSettings                                            = new ExternalOffset<FSQKillDeathSettings>(0x02C0, false);     // 0x02C0(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSpawnDelayPenaltyForSuicide                                = new ExternalOffset<float>(0x0310);                           // 0x0310(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSpawnDelayPenaltyForTeamKill                               = new ExternalOffset<float>(0x0314);                           // 0x0314(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQHealSettings>                   _offTeamOneHealSettings                                        = new ExternalOffset<FSQHealSettings>(0x0318, false);          // 0x0318(0x0024) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQHealSettings>                   _offTeamTwoHealSettings                                        = new ExternalOffset<FSQHealSettings>(0x033C, false);          // 0x033C(0x0024) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamkillsBeforeKick                                        = new ExternalOffset<int>(0x0360);                             // 0x0360(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDefaultPointsForVehicleDestroy                             = new ExternalOffset<float>(0x0364);                           // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDefaultShouldDelayScoreForVehicleDestroy                  = new ExternalOffset<byte/*(bool)*/>(0x0368);                  // 0x0368(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offDefaultTicketsLostForVehicleDestroy                        = new ExternalOffset<int>(0x036C);                             // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbTKAutoKickEnabled                                         = new ExternalOffset<byte/*(bool)*/>(0x0370);                  // 0x0370(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FSQKillDeathSettings                               TeamOneSettings                                                => _offTeamOneSettings.GetValue();
	public FSQKillDeathSettings                               TeamTwoSettings                                                => _offTeamTwoSettings.GetValue();
	public float                                              SpawnDelayPenaltyForSuicide                                    => _offSpawnDelayPenaltyForSuicide.GetValue();
	public float                                              SpawnDelayPenaltyForTeamKill                                   => _offSpawnDelayPenaltyForTeamKill.GetValue();
	public FSQHealSettings                                    TeamOneHealSettings                                            => _offTeamOneHealSettings.GetValue();
	public FSQHealSettings                                    TeamTwoHealSettings                                            => _offTeamTwoHealSettings.GetValue();
	public int                                                TeamkillsBeforeKick                                            => _offTeamkillsBeforeKick.GetValue();
	public float                                              DefaultPointsForVehicleDestroy                                 => _offDefaultPointsForVehicleDestroy.GetValue();
	public byte/*(bool)*/                                     bDefaultShouldDelayScoreForVehicleDestroy                      => _offbDefaultShouldDelayScoreForVehicleDestroy.GetValue();
	public int                                                DefaultTicketsLostForVehicleDestroy                            => _offDefaultTicketsLostForVehicleDestroy.GetValue();
	public byte/*(bool)*/                                     bTKAutoKickEnabled                                             => _offbTKAutoKickEnabled.GetValue();
	#endregion


}

// Class Squad.SQLastingEffect
// 0x0050 (0x0288 - 0x0238)
public class ASQLastingEffect : AActor
{
	#region Offsets
	private ExternalOffset<UParticleSystemComponent>          _offParticleSystem                                             = new ExternalOffset<UParticleSystemComponent>(0x0248, true);  // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offAudio                                                      = new ExternalOffset<UAudioComponent>(0x0250, true);           // 0x0250(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offShockwaveEffect                                            = new ExternalOffset<UClass>(0x0258, true);                    // 0x0258(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTimeToFireTriggerLastingEffectEventAfterBeginPlay          = new ExternalOffset<float>(0x0260);                           // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTimeToLiveAfterBeginPlay                                   = new ExternalOffset<float>(0x0264);                           // 0x0264(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTimeToLiveAfterTriggerLastingEffect                        = new ExternalOffset<float>(0x0268);                           // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbListenForOnActorHitEvents                                 = new ExternalOffset<byte/*(bool)*/>(0x026C);                  // 0x026C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbListenForOnDestroyedEvents                                = new ExternalOffset<byte/*(bool)*/>(0x026D);                  // 0x026D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbActivateParticleSystemUponBeginPlay                       = new ExternalOffset<byte/*(bool)*/>(0x026E);                  // 0x026E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbActivateParticleSystemUponTriggerLastingEffect            = new ExternalOffset<byte/*(bool)*/>(0x026F);                  // 0x026F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbActivateAudioUponBeginPlay                                = new ExternalOffset<byte/*(bool)*/>(0x0270);                  // 0x0270(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbActivateAudioUponTriggerLastingEffect                     = new ExternalOffset<byte/*(bool)*/>(0x0271);                  // 0x0271(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbActivateShockwaveUponBeginPlay                            = new ExternalOffset<byte/*(bool)*/>(0x0272);                  // 0x0272(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbActivateShockwaveUponTriggerLastingEffect                 = new ExternalOffset<byte/*(bool)*/>(0x0273);                  // 0x0273(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDetachFromActorUponTriggerLastingEffect                   = new ExternalOffset<byte/*(bool)*/>(0x0274);                  // 0x0274(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDeactivateParticleSystemUponTriggerLastingEffect          = new ExternalOffset<byte/*(bool)*/>(0x0275);                  // 0x0275(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDeactivateParticleSystemUponTriggerLastingEffectTimerExpired = new ExternalOffset<byte/*(bool)*/>(0x0276);                  // 0x0276(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDeactivateAudioUponTriggerLastingEffectTimerExpired       = new ExternalOffset<byte/*(bool)*/>(0x0277);                  // 0x0277(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDestroyUponTriggerLastingEffectTimerExpired               = new ExternalOffset<byte/*(bool)*/>(0x0278);                  // 0x0278(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDrawDebugSphere                                           = new ExternalOffset<byte/*(bool)*/>(0x0279);                  // 0x0279(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDebugSphereRadius                                          = new ExternalOffset<float>(0x027C);                           // 0x027C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offDebugSphereSegments                                        = new ExternalOffset<int>(0x0280);                             // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FColor>                            _offDebugSphereColor                                           = new ExternalOffset<FColor>(0x0284, false);                   // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public UParticleSystemComponent                           ParticleSystem                                                 => _offParticleSystem.GetValue();
	public UAudioComponent                                    Audio                                                          => _offAudio.GetValue();
	public UClass                                             ShockwaveEffect                                                => _offShockwaveEffect.GetValue();
	public float                                              TimeToFireTriggerLastingEffectEventAfterBeginPlay              => _offTimeToFireTriggerLastingEffectEventAfterBeginPlay.GetValue();
	public float                                              TimeToLiveAfterBeginPlay                                       => _offTimeToLiveAfterBeginPlay.GetValue();
	public float                                              TimeToLiveAfterTriggerLastingEffect                            => _offTimeToLiveAfterTriggerLastingEffect.GetValue();
	public byte/*(bool)*/                                     bListenForOnActorHitEvents                                     => _offbListenForOnActorHitEvents.GetValue();
	public byte/*(bool)*/                                     bListenForOnDestroyedEvents                                    => _offbListenForOnDestroyedEvents.GetValue();
	public byte/*(bool)*/                                     bActivateParticleSystemUponBeginPlay                           => _offbActivateParticleSystemUponBeginPlay.GetValue();
	public byte/*(bool)*/                                     bActivateParticleSystemUponTriggerLastingEffect                => _offbActivateParticleSystemUponTriggerLastingEffect.GetValue();
	public byte/*(bool)*/                                     bActivateAudioUponBeginPlay                                    => _offbActivateAudioUponBeginPlay.GetValue();
	public byte/*(bool)*/                                     bActivateAudioUponTriggerLastingEffect                         => _offbActivateAudioUponTriggerLastingEffect.GetValue();
	public byte/*(bool)*/                                     bActivateShockwaveUponBeginPlay                                => _offbActivateShockwaveUponBeginPlay.GetValue();
	public byte/*(bool)*/                                     bActivateShockwaveUponTriggerLastingEffect                     => _offbActivateShockwaveUponTriggerLastingEffect.GetValue();
	public byte/*(bool)*/                                     bDetachFromActorUponTriggerLastingEffect                       => _offbDetachFromActorUponTriggerLastingEffect.GetValue();
	public byte/*(bool)*/                                     bDeactivateParticleSystemUponTriggerLastingEffect              => _offbDeactivateParticleSystemUponTriggerLastingEffect.GetValue();
	public byte/*(bool)*/                                     bDeactivateParticleSystemUponTriggerLastingEffectTimerExpired  => _offbDeactivateParticleSystemUponTriggerLastingEffectTimerExpired.GetValue();
	public byte/*(bool)*/                                     bDeactivateAudioUponTriggerLastingEffectTimerExpired           => _offbDeactivateAudioUponTriggerLastingEffectTimerExpired.GetValue();
	public byte/*(bool)*/                                     bDestroyUponTriggerLastingEffectTimerExpired                   => _offbDestroyUponTriggerLastingEffectTimerExpired.GetValue();
	public byte/*(bool)*/                                     bDrawDebugSphere                                               => _offbDrawDebugSphere.GetValue();
	public float                                              DebugSphereRadius                                              => _offDebugSphereRadius.GetValue();
	public int                                                DebugSphereSegments                                            => _offDebugSphereSegments.GetValue();
	public FColor                                             DebugSphereColor                                               => _offDebugSphereColor.GetValue();
	#endregion


}

// Class Squad.SQLicensedServerManager
// 0x0000 (0x0030 - 0x0030)
public class USQLicensedServerManager : UGameInstanceSubsystem
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQLocalPlayer
// 0x019C (0x0280 - 0x00E4)
public class USQLocalPlayer : ULocalPlayer
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQLockButtonWidget
// 0x0000 (0x0230 - 0x0230)
public class USQLockButtonWidget : USQUserWidget
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQLoginCallbackProxy
// 0x0068 (0x0090 - 0x0028)
public class USQLoginCallbackProxy : UOnlineBlueprintCallProxyBase
{
	#region Offsets
	private ExternalOffset<FScriptMulticastDelegate>          _offOnSuccess                                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0028, false); // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnFailure                                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0038, false); // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<UObject>                           _offWorldContextObject                                         = new ExternalOffset<UObject>(0x0088, true);                   // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public FScriptMulticastDelegate                           OnSuccess                                                      => _offOnSuccess.GetValue();
	public FScriptMulticastDelegate                           OnFailure                                                      => _offOnFailure.GetValue();
	public UObject                                            WorldContextObject                                             => _offWorldContextObject.GetValue();
	#endregion


}

// Class Squad.SQLogisticsRuleSet
// 0x000C (0x027C - 0x0270)
public class ASQLogisticsRuleSet : ASQGameRuleSet
{
	#region Offsets
	private ExternalOffset<FSQLogisticsSettings>              _offRuleSettings                                               = new ExternalOffset<FSQLogisticsSettings>(0x0270, false);     // 0x0270(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FSQLogisticsSettings                               RuleSettings                                                   => _offRuleSettings.GetValue();
	#endregion


}

// Class Squad.SQMagazineGroupWidget
// 0x0010 (0x0240 - 0x0230)
public class USQMagazineGroupWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<TArray<USQMagazineWidget>>         _offMagazineWidgets                                            = new ExternalOffset<TArray<USQMagazineWidget>>(0x0230, false); // 0x0230(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<USQMagazineWidget>                          MagazineWidgets                                                => _offMagazineWidgets.GetValue();
	#endregion


}

// Class Squad.SQMagazineWidget
// 0x0010 (0x0240 - 0x0230)
public class USQMagazineWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<UImage>                            _offSelectedImage                                              = new ExternalOffset<UImage>(0x0230, true);                    // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offAmmoImage                                                  = new ExternalOffset<UImage>(0x0238, true);                    // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UImage                                             SelectedImage                                                  => _offSelectedImage.GetValue();
	public UImage                                             AmmoImage                                                      => _offAmmoImage.GetValue();
	#endregion


}

// Class Squad.SQMap
// 0x0089 (0x02B9 - 0x0230)
public class USQMap : USQUserWidget
{
	#region Offsets
	private ExternalOffset<float>                             _offPositionUpdateRate                                         = new ExternalOffset<float>(0x0230);                           // 0x0230(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPositionUpdateTimer                                        = new ExternalOffset<float>(0x0234);                           // 0x0234(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsMapFollowing                                            = new ExternalOffset<byte/*(bool)*/>(0x0238);                  // 0x0238(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbMapFollowToggle                                           = new ExternalOffset<byte/*(bool)*/>(0x0239);                  // 0x0239(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbMapFollowPlayerOnByDefault                                = new ExternalOffset<byte/*(bool)*/>(0x023A);                  // 0x023A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offMapCurrentCoord                                            = new ExternalOffset<FVector2D>(0x023C, false);                // 0x023C(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offMapCenterCoord                                             = new ExternalOffset<FVector2D>(0x0244, false);                // 0x0244(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbRunCameraPP                                               = new ExternalOffset<byte/*(bool)*/>(0x024C);                  // 0x024C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbRunCameraPPForward                                        = new ExternalOffset<byte/*(bool)*/>(0x024D);                  // 0x024D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPPBlendMultiplier                                          = new ExternalOffset<float>(0x0250);                           // 0x0250(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPPBlendValue                                               = new ExternalOffset<float>(0x0254);                           // 0x0254(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPPBlendFarDistance                                         = new ExternalOffset<float>(0x0258);                           // 0x0258(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMapDrawX                                                   = new ExternalOffset<float>(0x025C);                           // 0x025C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMapDrawY                                                   = new ExternalOffset<float>(0x0260);                           // 0x0260(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMapWidth                                                   = new ExternalOffset<float>(0x0264);                           // 0x0264(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMapHeight                                                  = new ExternalOffset<float>(0x0268);                           // 0x0268(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offWorldTR                                                    = new ExternalOffset<FVector2D>(0x026C, false);                // 0x026C(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offWorldBL                                                    = new ExternalOffset<FVector2D>(0x0274, false);                // 0x0274(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMajorGridSpacing                                           = new ExternalOffset<float>(0x027C);                           // 0x027C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offMapLastClickPosition                                       = new ExternalOffset<FVector2D>(0x0280, false);                // 0x0280(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offLastMapZoomPos                                             = new ExternalOffset<FVector2D>(0x0288, false);                // 0x0288(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<int>>                       _offMapZoomLevels                                              = new ExternalOffset<TArray<int>>(0x0290, false);              // 0x0290(0x0010) (BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offZoomFloatCurrent                                           = new ExternalOffset<float>(0x02A0);                           // 0x02A0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offZoomStep                                                   = new ExternalOffset<int>(0x02A4);                             // 0x02A4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offZoomStepMax                                                = new ExternalOffset<int>(0x02A8);                             // 0x02A8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offZoomStepMin                                                = new ExternalOffset<int>(0x02AC);                             // 0x02AC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offZoomAlpha                                                  = new ExternalOffset<float>(0x02B0);                           // 0x02B0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsZooming                                                 = new ExternalOffset<byte/*(bool)*/>(0x02B4);                  // 0x02B4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbMapIsClosing                                              = new ExternalOffset<byte/*(bool)*/>(0x02B5);                  // 0x02B5(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbMapIsOpening                                              = new ExternalOffset<byte/*(bool)*/>(0x02B6);                  // 0x02B6(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsSpawnScreen                                             = new ExternalOffset<byte/*(bool)*/>(0x02B7);                  // 0x02B7(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsMapOn                                                   = new ExternalOffset<byte/*(bool)*/>(0x02B8);                  // 0x02B8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              PositionUpdateRate                                             => _offPositionUpdateRate.GetValue();
	public float                                              PositionUpdateTimer                                            => _offPositionUpdateTimer.GetValue();
	public byte/*(bool)*/                                     bIsMapFollowing                                                => _offbIsMapFollowing.GetValue();
	public byte/*(bool)*/                                     bMapFollowToggle                                               => _offbMapFollowToggle.GetValue();
	public byte/*(bool)*/                                     bMapFollowPlayerOnByDefault                                    => _offbMapFollowPlayerOnByDefault.GetValue();
	public FVector2D                                          MapCurrentCoord                                                => _offMapCurrentCoord.GetValue();
	public FVector2D                                          MapCenterCoord                                                 => _offMapCenterCoord.GetValue();
	public byte/*(bool)*/                                     bRunCameraPP                                                   => _offbRunCameraPP.GetValue();
	public byte/*(bool)*/                                     bRunCameraPPForward                                            => _offbRunCameraPPForward.GetValue();
	public float                                              PPBlendMultiplier                                              => _offPPBlendMultiplier.GetValue();
	public float                                              PPBlendValue                                                   => _offPPBlendValue.GetValue();
	public float                                              PPBlendFarDistance                                             => _offPPBlendFarDistance.GetValue();
	public float                                              MapDrawX                                                       => _offMapDrawX.GetValue();
	public float                                              MapDrawY                                                       => _offMapDrawY.GetValue();
	public float                                              MapWidth                                                       => _offMapWidth.GetValue();
	public float                                              MapHeight                                                      => _offMapHeight.GetValue();
	public FVector2D                                          WorldTR                                                        => _offWorldTR.GetValue();
	public FVector2D                                          WorldBL                                                        => _offWorldBL.GetValue();
	public float                                              MajorGridSpacing                                               => _offMajorGridSpacing.GetValue();
	public FVector2D                                          MapLastClickPosition                                           => _offMapLastClickPosition.GetValue();
	public FVector2D                                          LastMapZoomPos                                                 => _offLastMapZoomPos.GetValue();
	public TArray<int>                                        MapZoomLevels                                                  => _offMapZoomLevels.GetValue();
	public float                                              ZoomFloatCurrent                                               => _offZoomFloatCurrent.GetValue();
	public int                                                ZoomStep                                                       => _offZoomStep.GetValue();
	public int                                                ZoomStepMax                                                    => _offZoomStepMax.GetValue();
	public int                                                ZoomStepMin                                                    => _offZoomStepMin.GetValue();
	public float                                              ZoomAlpha                                                      => _offZoomAlpha.GetValue();
	public byte/*(bool)*/                                     bIsZooming                                                     => _offbIsZooming.GetValue();
	public byte/*(bool)*/                                     bMapIsClosing                                                  => _offbMapIsClosing.GetValue();
	public byte/*(bool)*/                                     bMapIsOpening                                                  => _offbMapIsOpening.GetValue();
	public byte/*(bool)*/                                     bIsSpawnScreen                                                 => _offbIsSpawnScreen.GetValue();
	public byte/*(bool)*/                                     bIsMapOn                                                       => _offbIsMapOn.GetValue();
	#endregion


}

// Class Squad.SQMapBoundarySettings
// 0x0058 (0x0088 - 0x0030)
public class USQMapBoundarySettings : UDataAsset
{
	#region Offsets
	private ExternalOffset<float>                             _offDefaultKillTime                                            = new ExternalOffset<float>(0x0030);                           // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private TMap<class UClass*, float>                        _offClassKillTimes                                             = new ExternalOffset<TMap<float>>(0x0038, false);              // 0x0038(0x0050) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              DefaultKillTime                                                => _offDefaultKillTime.GetValue();
	#endregion


}

// Class Squad.SQMapBoundary
// 0x0068 (0x0368 - 0x0300)
public class ASQMapBoundary : ASQBoundary
{
	#region Offsets
	private ExternalOffset<USQMapBoundarySettings>            _offCommonSettings                                             = new ExternalOffset<USQMapBoundarySettings>(0x0308, true);    // 0x0308(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbOverrideDefaultKillTime                                   = new ExternalOffset<byte/*(bool)*/>(0x0310);                  // 0x0310(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDefaultKillTime                                            = new ExternalOffset<float>(0x0314);                           // 0x0314(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private TMap<class UClass*, float>                        _offClassKillTimes                                             = new ExternalOffset<TMap<float>>(0x0318, false);              // 0x0318(0x0050) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USQMapBoundarySettings                             CommonSettings                                                 => _offCommonSettings.GetValue();
	public byte/*(bool)*/                                     bOverrideDefaultKillTime                                       => _offbOverrideDefaultKillTime.GetValue();
	public float                                              DefaultKillTime                                                => _offDefaultKillTime.GetValue();
	#endregion


}

// Class Squad.SQMapConversions
// 0x0000 (0x0028 - 0x0028)
public class USQMapConversions : UBlueprintFunctionLibrary
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMapGrid
// 0x00E4 (0x0314 - 0x0230)
public class USQMapGrid : USQUserWidget
{
	#region Offsets
	private ExternalOffset<FLinearColor>                      _offMajorGridColor                                             = new ExternalOffset<FLinearColor>(0x0230, false);             // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offMinorGridColor                                             = new ExternalOffset<FLinearColor>(0x0240, false);             // 0x0240(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offTinyGridColor                                              = new ExternalOffset<FLinearColor>(0x0250, false);             // 0x0250(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offMajorGridOpacityCurve                                      = new ExternalOffset<UCurveFloat>(0x0260, true);               // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offMinorGridOpacityCurve                                      = new ExternalOffset<UCurveFloat>(0x0268, true);               // 0x0268(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offTinyGridOpacityCurve                                       = new ExternalOffset<UCurveFloat>(0x0270, true);               // 0x0270(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMajorGridWidth                                             = new ExternalOffset<int>(0x0278);                             // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMinorGridWidth                                             = new ExternalOffset<int>(0x027C);                             // 0x027C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTinyGridWidth                                              = new ExternalOffset<int>(0x0280);                             // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offLegendPercentageLocation                                   = new ExternalOffset<FVector2D>(0x0284, false);                // 0x0284(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offLegendTextOffset                                           = new ExternalOffset<FVector2D>(0x028C, false);                // 0x028C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxLegendPercentageSize                                    = new ExternalOffset<float>(0x0294);                           // 0x0294(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSlateFontInfo>                    _offLegendScaleFontInfo                                        = new ExternalOffset<FSlateFontInfo>(0x0298, false);           // 0x0298(0x0050) (Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQMap>                            _offOwnerMap                                                   = new ExternalOffset<USQMap>(0x02E8, true);                    // 0x02E8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDrawGridMarkers                                           = new ExternalOffset<byte/*(bool)*/>(0x02F0);                  // 0x02F0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offRealMapSize                                                = new ExternalOffset<FVector2D>(0x02F4, false);                // 0x02F4(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offRealToPixel                                                = new ExternalOffset<FVector2D>(0x02FC, false);                // 0x02FC(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offPixelSize                                                  = new ExternalOffset<FVector2D>(0x0304, false);                // 0x0304(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offLinesNeeded                                                = new ExternalOffset<FVector2D>(0x030C, false);                // 0x030C(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public FLinearColor                                       MajorGridColor                                                 => _offMajorGridColor.GetValue();
	public FLinearColor                                       MinorGridColor                                                 => _offMinorGridColor.GetValue();
	public FLinearColor                                       TinyGridColor                                                  => _offTinyGridColor.GetValue();
	public UCurveFloat                                        MajorGridOpacityCurve                                          => _offMajorGridOpacityCurve.GetValue();
	public UCurveFloat                                        MinorGridOpacityCurve                                          => _offMinorGridOpacityCurve.GetValue();
	public UCurveFloat                                        TinyGridOpacityCurve                                           => _offTinyGridOpacityCurve.GetValue();
	public int                                                MajorGridWidth                                                 => _offMajorGridWidth.GetValue();
	public int                                                MinorGridWidth                                                 => _offMinorGridWidth.GetValue();
	public int                                                TinyGridWidth                                                  => _offTinyGridWidth.GetValue();
	public FVector2D                                          LegendPercentageLocation                                       => _offLegendPercentageLocation.GetValue();
	public FVector2D                                          LegendTextOffset                                               => _offLegendTextOffset.GetValue();
	public float                                              MaxLegendPercentageSize                                        => _offMaxLegendPercentageSize.GetValue();
	public FSlateFontInfo                                     LegendScaleFontInfo                                            => _offLegendScaleFontInfo.GetValue();
	public USQMap                                             OwnerMap                                                       => _offOwnerMap.GetValue();
	public byte/*(bool)*/                                     bDrawGridMarkers                                               => _offbDrawGridMarkers.GetValue();
	public FVector2D                                          RealMapSize                                                    => _offRealMapSize.GetValue();
	public FVector2D                                          RealToPixel                                                    => _offRealToPixel.GetValue();
	public FVector2D                                          PixelSize                                                      => _offPixelSize.GetValue();
	public FVector2D                                          LinesNeeded                                                    => _offLinesNeeded.GetValue();
	#endregion


}

// Class Squad.SQMapItemComponent
// 0x0060 (0x0128 - 0x00C8)
public class USQMapItemComponent : UActorComponent
{
	#region Offsets
	private ExternalOffset<FLinearColor>                      _offTint                                                       = new ExternalOffset<FLinearColor>(0x00D8, false);             // 0x00D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offCustomWorldPosition                                        = new ExternalOffset<FVector2D>(0x00E8, false);                // 0x00E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseCustomWorldPosition                                    = new ExternalOffset<byte/*(bool)*/>(0x00F0);                  // 0x00F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseWorldRotation                                          = new ExternalOffset<byte/*(bool)*/>(0x00F1);                  // 0x00F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRotation                                                   = new ExternalOffset<float>(0x00F4);                           // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offRotPivot                                                   = new ExternalOffset<FVector2D>(0x00F8, false);                // 0x00F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offSize                                                       = new ExternalOffset<FVector2D>(0x0100, false);                // 0x0100(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offOffset                                                     = new ExternalOffset<FVector2D>(0x0108, false);                // 0x0108(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQMapItemDrawMode>                _offDrawModeX                                                  = new ExternalOffset<ESQMapItemDrawMode>(0x0110, false);       // 0x0110(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQMapItemDrawMode>                _offDrawModeY                                                  = new ExternalOffset<ESQMapItemDrawMode>(0x0111, false);       // 0x0111(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsVisible                                                 = new ExternalOffset<byte/*(bool)*/>(0x0112);                  // 0x0112(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamIndex                                                  = new ExternalOffset<int>(0x0114);                             // 0x0114(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offSquadId                                                    = new ExternalOffset<int>(0x0118);                             // 0x0118(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQMapMarkerType>                  _offMapMarkerType                                              = new ExternalOffset<ESQMapMarkerType>(0x011C, false);         // 0x011C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQMapMarkerVisibleTo>             _offMapMarkerVisibleTo                                         = new ExternalOffset<ESQMapMarkerVisibleTo>(0x011D, false);    // 0x011D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQMapItemType>                    _offType                                                       = new ExternalOffset<ESQMapItemType>(0x011E, false);           // 0x011E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offCustomMapWidget                                            = new ExternalOffset<UClass>(0x0120, true);                    // 0x0120(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FLinearColor                                       Tint                                                           => _offTint.GetValue();
	public FVector2D                                          CustomWorldPosition                                            => _offCustomWorldPosition.GetValue();
	public byte/*(bool)*/                                     bUseCustomWorldPosition                                        => _offbUseCustomWorldPosition.GetValue();
	public byte/*(bool)*/                                     bUseWorldRotation                                              => _offbUseWorldRotation.GetValue();
	public float                                              Rotation                                                       => _offRotation.GetValue();
	public FVector2D                                          RotPivot                                                       => _offRotPivot.GetValue();
	public FVector2D                                          Size                                                           => _offSize.GetValue();
	public FVector2D                                          Offset                                                         => _offOffset.GetValue();
	public ESQMapItemDrawMode                                 DrawModeX                                                      => _offDrawModeX.GetValue();
	public ESQMapItemDrawMode                                 DrawModeY                                                      => _offDrawModeY.GetValue();
	public byte/*(bool)*/                                     bIsVisible                                                     => _offbIsVisible.GetValue();
	public int                                                TeamIndex                                                      => _offTeamIndex.GetValue();
	public int                                                SquadId                                                        => _offSquadId.GetValue();
	public ESQMapMarkerType                                   MapMarkerType                                                  => _offMapMarkerType.GetValue();
	public ESQMapMarkerVisibleTo                              MapMarkerVisibleTo                                             => _offMapMarkerVisibleTo.GetValue();
	public ESQMapItemType                                     Type                                                           => _offType.GetValue();
	public UClass                                             CustomMapWidget                                                => _offCustomMapWidget.GetValue();
	#endregion


}

// Class Squad.SQMapIconComponent
// 0x0030 (0x0158 - 0x0128)
public class USQMapIconComponent : USQMapItemComponent
{
	#region Offsets
	private ExternalOffset<UTexture>                          _offTexture                                                    = new ExternalOffset<UTexture>(0x0130, true);                  // 0x0130(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQMapIconSelectionGroup>          _offSelectionGroup                                             = new ExternalOffset<ESQMapIconSelectionGroup>(0x0138, false); // 0x0138(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture>                          _offSelectedTexture                                            = new ExternalOffset<UTexture>(0x0140, true);                  // 0x0140(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offSelectedTint                                               = new ExternalOffset<FLinearColor>(0x0148, false);             // 0x0148(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UTexture                                           Texture                                                        => _offTexture.GetValue();
	public ESQMapIconSelectionGroup                           SelectionGroup                                                 => _offSelectionGroup.GetValue();
	public UTexture                                           SelectedTexture                                                => _offSelectedTexture.GetValue();
	public FLinearColor                                       SelectedTint                                                   => _offSelectedTint.GetValue();
	#endregion


}

// Class Squad.SQMapIconWidget
// 0x0070 (0x0250 - 0x01E0)
public class USQMapIconWidget : UUserWidget
{
	#region Offsets
	private ExternalOffset<USQMapItemComponent>               _offRefItem                                                    = new ExternalOffset<USQMapItemComponent>(0x0230, true);       // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMapZOrder                                                  = new ExternalOffset<int>(0x0238);                             // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offTooltipType                                                = new ExternalOffset<UClass>(0x0240, true);                    // 0x0240(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQMap>                            _offParentMap                                                  = new ExternalOffset<USQMap>(0x0248, true);                    // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USQMapItemComponent                                RefItem                                                        => _offRefItem.GetValue();
	public int                                                MapZOrder                                                      => _offMapZOrder.GetValue();
	public UClass                                             TooltipType                                                    => _offTooltipType.GetValue();
	public USQMap                                             ParentMap                                                      => _offParentMap.GetValue();
	#endregion


}

// Class Squad.SQMapList
// 0x0038 (0x0068 - 0x0030)
public class USQMapList : UPrimaryDataAsset
{
	#region Offsets
	private ExternalOffset<FPrimaryAssetRules>                _offRules                                                      = new ExternalOffset<FPrimaryAssetRules>(0x0030, false);       // 0x0030(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offListName                                                   = new ExternalOffset<FString>(0x0040, false);                  // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offRandomizer                                                 = new ExternalOffset<byte/*(bool)*/>(0x0050);                  // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQMapListItem>>            _offMapList                                                    = new ExternalOffset<TArray<FSQMapListItem>>(0x0080, false);   // 0x0080(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FPrimaryAssetRules                                 Rules                                                          => _offRules.GetValue();
	public FString                                            ListName                                                       => _offListName.GetValue();
	public byte/*(bool)*/                                     Randomizer                                                     => _offRandomizer.GetValue();
	public TArray<FSQMapListItem>                             MapList                                                        => _offMapList.GetValue();
	#endregion


}

// Class Squad.SQTeamActor
// 0x0019 (0x0251 - 0x0238)
public class ASQTeamActor : AActor
{
	#region Offsets
	private ExternalOffset<ESQTeam>                           _offTeam                                                       = new ExternalOffset<ESQTeam>(0x0250, false);                  // 0x0250(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public ESQTeam                                            Team                                                           => _offTeam.GetValue();
	#endregion


}

// Class Squad.SQMapMarker
// 0x0028 (0x0279 - 0x0251)
public class ASQMapMarker : ASQTeamActor
{
	#region Offsets
	private ExternalOffset<USQMapIconComponent>               _offMapIcon                                                    = new ExternalOffset<USQMapIconComponent>(0x0260, true);       // 0x0260(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQCoreStateComponent>             _offStateObject                                                = new ExternalOffset<USQCoreStateComponent>(0x0268, true);     // 0x0268(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offSquad                                                      = new ExternalOffset<int>(0x0270);                             // 0x0270(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offFireTeamId                                                 = new ExternalOffset<int>(0x0274);                             // 0x0274(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQEmotes>                         _offPlacementEmote                                             = new ExternalOffset<ESQEmotes>(0x0278, false);                // 0x0278(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public USQMapIconComponent                                MapIcon                                                        => _offMapIcon.GetValue();
	public USQCoreStateComponent                              StateObject                                                    => _offStateObject.GetValue();
	public int                                                Squad                                                          => _offSquad.GetValue();
	public int                                                FireTeamId                                                     => _offFireTeamId.GetValue();
	public ESQEmotes                                          PlacementEmote                                                 => _offPlacementEmote.GetValue();
	#endregion


}

// Class Squad.SQMapMarkerBase
// 0x0139 (0x0319 - 0x01E0)
public class USQMapMarkerBase : UUserWidget
{
	#region Offsets
	private ExternalOffset<UImage>                            _offMarkerImage                                                = new ExternalOffset<UImage>(0x0230, true);                    // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCanvasPanelSlot>                  _offCanvasPanelSlot                                            = new ExternalOffset<UCanvasPanelSlot>(0x0238, true);          // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAnimationEpsilon                                           = new ExternalOffset<float>(0x0240);                           // 0x0240(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQColorsDataAsset>                _offColorsDataAsset                                            = new ExternalOffset<USQColorsDataAsset>(0x0248, true);        // 0x0248(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQMapMarkerVisualData>            _offMarkerData                                                 = new ExternalOffset<FSQMapMarkerVisualData>(0x0250, false);   // 0x0250(0x00C8) (BlueprintVisible, BlueprintReadOnly, NoDestructor, ExposeOnSpawn, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbHasFaded                                                  = new ExternalOffset<byte/*(bool)*/>(0x0318);                  // 0x0318(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public UImage                                             MarkerImage                                                    => _offMarkerImage.GetValue();
	public UCanvasPanelSlot                                   CanvasPanelSlot                                                => _offCanvasPanelSlot.GetValue();
	public float                                              AnimationEpsilon                                               => _offAnimationEpsilon.GetValue();
	public USQColorsDataAsset                                 ColorsDataAsset                                                => _offColorsDataAsset.GetValue();
	public FSQMapMarkerVisualData                             MarkerData                                                     => _offMarkerData.GetValue();
	public byte/*(bool)*/                                     bHasFaded                                                      => _offbHasFaded.GetValue();
	#endregion


}

// Class Squad.SQMapMarkerDataAsset
// 0x00C9 (0x00F9 - 0x0030)
public class USQMapMarkerDataAsset : UPrimaryDataAsset
{
	#region Offsets
	private ExternalOffset<FSQMapMarkerVisualData>            _offMarkerVisualData                                           = new ExternalOffset<FSQMapMarkerVisualData>(0x0030, false);   // 0x0030(0x00C8) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsGlobalMarker                                            = new ExternalOffset<byte/*(bool)*/>(0x00F8);                  // 0x00F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FSQMapMarkerVisualData                             MarkerVisualData                                               => _offMarkerVisualData.GetValue();
	public byte/*(bool)*/                                     bIsGlobalMarker                                                => _offbIsGlobalMarker.GetValue();
	#endregion


}

// Class Squad.SQMapMarkerInputComponent
// 0x0010 (0x00D8 - 0x00C8)
public class USQMapMarkerInputComponent : UActorComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMapMarkerManagerComponent
// 0x02E8 (0x03B0 - 0x00C8)
public class USQMapMarkerManagerComponent : UActorComponent
{
	#region Offsets
	private ExternalOffset<FSQStaticMapMarkerArray>           _offMarkerArray                                                = new ExternalOffset<FSQStaticMapMarkerArray>(0x00D8, false);  // 0x00D8(0x0148) (Net, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offMapMarkerWidgetCreatedEvent                                = new ExternalOffset<FScriptMulticastDelegate>(0x0220, false); // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<USQMapWidgetBase>                  _offRootWidget                                                 = new ExternalOffset<USQMapWidgetBase>(0x0230, true);          // 0x0230(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<ASQHUD>                            _offRootHUD                                                    = new ExternalOffset<ASQHUD>(0x0238, true);                    // 0x0238(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
//	private ExternalOffset<int>                               _offCOMarkerTypeLimits[0x8]                                    = new ExternalOffset<int>(0x0240);                             // 0x0240(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
//	private ExternalOffset<int>                               _offSLMarkerTypeLimits[0x8]                                    = new ExternalOffset<int>(0x0260);                             // 0x0260(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
//	private ExternalOffset<int>                               _offFTMarkerTypeLimits[0x8]                                    = new ExternalOffset<int>(0x0280);                             // 0x0280(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<float>                             _offWidgetScale                                                = new ExternalOffset<float>(0x02A0);                           // 0x02A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
//	private TMap<unsigned char, class USQMapMarkerBase*>      _offRelevantMarkerWidgets                                      = new ExternalOffset<TMap<USQMapMarkerBase>>(0x02A8, false);   // 0x02A8(0x0050) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
//	private TMap<unsigned char, struct FSQMapMarkerVisualData> _offRelevantMarkers                                            = new ExternalOffset<TMap<FSQMapMarkerVisualData>>(0x02F8, false); // 0x02F8(0x0050) (ZeroConstructor, NativeAccessSpecifierPrivate)
	private ExternalOffset<TArray<UClass>>                    _offAdminTypes                                                 = new ExternalOffset<TArray<UClass>>(0x03A0, false);           // 0x03A0(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public FSQStaticMapMarkerArray                            MarkerArray                                                    => _offMarkerArray.GetValue();
	public FScriptMulticastDelegate                           MapMarkerWidgetCreatedEvent                                    => _offMapMarkerWidgetCreatedEvent.GetValue();
	public USQMapWidgetBase                                   RootWidget                                                     => _offRootWidget.GetValue();
	public ASQHUD                                             RootHUD                                                        => _offRootHUD.GetValue();
	public float                                              WidgetScale                                                    => _offWidgetScale.GetValue();
	public TArray<UClass>                                     AdminTypes                                                     => _offAdminTypes.GetValue();
	#endregion


}

// Class Squad.SQMapMK2
// 0x0037 (0x02F0 - 0x02B9)
public class USQMapMK2 : USQMap
{
	#region Offsets
	private ExternalOffset<USQGridMarkerBase>                 _offTopGrid                                                    = new ExternalOffset<USQGridMarkerBase>(0x02C0, true);         // 0x02C0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQGridMarkerBase>                 _offBottomGrid                                                 = new ExternalOffset<USQGridMarkerBase>(0x02C8, true);         // 0x02C8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQGridMarkerBase>                 _offLeftGrid                                                   = new ExternalOffset<USQGridMarkerBase>(0x02D0, true);         // 0x02D0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQGridMarkerBase>                 _offRightGrid                                                  = new ExternalOffset<USQGridMarkerBase>(0x02D8, true);         // 0x02D8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCanvasPanel>                      _offMapCanvas                                                  = new ExternalOffset<UCanvasPanel>(0x02E0, true);              // 0x02E0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCanvasPanel>                      _offRootMapPanel                                               = new ExternalOffset<UCanvasPanel>(0x02E8, true);              // 0x02E8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USQGridMarkerBase                                  TopGrid                                                        => _offTopGrid.GetValue();
	public USQGridMarkerBase                                  BottomGrid                                                     => _offBottomGrid.GetValue();
	public USQGridMarkerBase                                  LeftGrid                                                       => _offLeftGrid.GetValue();
	public USQGridMarkerBase                                  RightGrid                                                      => _offRightGrid.GetValue();
	public UCanvasPanel                                       MapCanvas                                                      => _offMapCanvas.GetValue();
	public UCanvasPanel                                       RootMapPanel                                                   => _offRootMapPanel.GetValue();
	#endregion


}

// Class Squad.SQMapPawnIconWidget
// 0x0011 (0x0261 - 0x0250)
public class USQMapPawnIconWidget : USQMapIconWidget
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbIsSL                                                      = new ExternalOffset<byte/*(bool)*/>(0x0250);                  // 0x0250(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsInSameSquad                                             = new ExternalOffset<byte/*(bool)*/>(0x0251);                  // 0x0251(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsInSameTeam                                              = new ExternalOffset<byte/*(bool)*/>(0x0252);                  // 0x0252(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQTeamState>                      _offCurrentTeam                                                = new ExternalOffset<ASQTeamState>(0x0258, true);              // 0x0258(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsSelf                                                    = new ExternalOffset<byte/*(bool)*/>(0x0260);                  // 0x0260(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bIsSL                                                          => _offbIsSL.GetValue();
	public byte/*(bool)*/                                     bIsInSameSquad                                                 => _offbIsInSameSquad.GetValue();
	public byte/*(bool)*/                                     bIsInSameTeam                                                  => _offbIsInSameTeam.GetValue();
	public ASQTeamState                                       CurrentTeam                                                    => _offCurrentTeam.GetValue();
	public byte/*(bool)*/                                     bIsSelf                                                        => _offbIsSelf.GetValue();
	#endregion


}

// Class Squad.SQMapSoldierIconWidget
// 0x0013 (0x0274 - 0x0261)
public class USQMapSoldierIconWidget : USQMapPawnIconWidget
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbIsSelfMedic                                               = new ExternalOffset<byte/*(bool)*/>(0x0268);                  // 0x0268(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsWithinMedicRange                                        = new ExternalOffset<byte/*(bool)*/>(0x0269);                  // 0x0269(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMedicRange                                                 = new ExternalOffset<float>(0x026C);                           // 0x026C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsMedic                                                   = new ExternalOffset<byte/*(bool)*/>(0x0270);                  // 0x0270(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsAlive                                                   = new ExternalOffset<byte/*(bool)*/>(0x0271);                  // 0x0271(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsBleeding                                                = new ExternalOffset<byte/*(bool)*/>(0x0272);                  // 0x0272(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsInVehicle                                               = new ExternalOffset<byte/*(bool)*/>(0x0273);                  // 0x0273(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bIsSelfMedic                                                   => _offbIsSelfMedic.GetValue();
	public byte/*(bool)*/                                     bIsWithinMedicRange                                            => _offbIsWithinMedicRange.GetValue();
	public float                                              MedicRange                                                     => _offMedicRange.GetValue();
	public byte/*(bool)*/                                     bIsMedic                                                       => _offbIsMedic.GetValue();
	public byte/*(bool)*/                                     bIsAlive                                                       => _offbIsAlive.GetValue();
	public byte/*(bool)*/                                     bIsBleeding                                                    => _offbIsBleeding.GetValue();
	public byte/*(bool)*/                                     bIsInVehicle                                                   => _offbIsInVehicle.GetValue();
	#endregion


}

// Class Squad.SQMapTextComponent
// 0x0020 (0x0148 - 0x0128)
public class USQMapTextComponent : USQMapItemComponent
{
	#region Offsets
	private ExternalOffset<FText>                             _offText                                                       = new ExternalOffset<FText>(0x0130, false);                    // 0x0130(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FText                                              Text                                                           => _offText.GetValue();
	#endregion


}

// Class Squad.SQMapVehicleIconWidget
// 0x0007 (0x0268 - 0x0261)
public class USQMapVehicleIconWidget : USQMapPawnIconWidget
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMapWidget
// 0x001C (0x028C - 0x0270)
public class USQMapWidget : USQCoreStateMapWidget
{
	#region Offsets
	private ExternalOffset<float>                             _offAngle                                                      = new ExternalOffset<float>(0x0270);                           // 0x0270(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQColorsDataAsset>                _offColorsDataAsset                                            = new ExternalOffset<USQColorsDataAsset>(0x0278, true);        // 0x0278(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseAngleEvent                                             = new ExternalOffset<byte/*(bool)*/>(0x0280);                  // 0x0280(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<float>                             _offAngleTolerance                                             = new ExternalOffset<float>(0x0284);                           // 0x0284(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<float>                             _offLocationTolerance                                          = new ExternalOffset<float>(0x0288);                           // 0x0288(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public float                                              Angle                                                          => _offAngle.GetValue();
	public USQColorsDataAsset                                 ColorsDataAsset                                                => _offColorsDataAsset.GetValue();
	public byte/*(bool)*/                                     bUseAngleEvent                                                 => _offbUseAngleEvent.GetValue();
	public float                                              AngleTolerance                                                 => _offAngleTolerance.GetValue();
	public float                                              LocationTolerance                                              => _offLocationTolerance.GetValue();
	#endregion


}

// Class Squad.SQMapWidgetDeployable
// 0x001D (0x02A9 - 0x028C)
public class USQMapWidgetDeployable : USQMapWidget
{
	#region Offsets
	private ExternalOffset<ESQBuildState>                     _offBuildState                                                 = new ExternalOffset<ESQBuildState>(0x02A8, false);            // 0x02A8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public ESQBuildState                                      BuildState                                                     => _offBuildState.GetValue();
	#endregion


}

// Class Squad.SQMapWidgetAmmoCrate
// 0x0007 (0x02B0 - 0x02A9)
public class USQMapWidgetAmmoCrate : USQMapWidgetDeployable
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMapWidgetBase
// 0x0058 (0x0238 - 0x01E0)
public class USQMapWidgetBase : UUserWidget
{
	#region Offsets
	private ExternalOffset<UPanelWidget>                      _offMapBody                                                    = new ExternalOffset<UPanelWidget>(0x0230, true);              // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public UPanelWidget                                       MapBody                                                        => _offMapBody.GetValue();
	#endregion


}

// Class Squad.SQMapWidgetPawn
// 0x002C (0x02B8 - 0x028C)
public class USQMapWidgetPawn : USQMapWidget
{
	#region Offsets
//	private ExternalOffset<char>                              _offbIsOwned                                                   = new ExternalOffset<char>(0x02A8, false);                     // 0x02A8(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbIsOwnedBySelf                                             = new ExternalOffset<char>(0x02A8, false);                     // 0x02A8(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbIsInSelfTeam                                              = new ExternalOffset<char>(0x02A8, false);                     // 0x02A8(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbIsInSelfSquad                                             = new ExternalOffset<char>(0x02A8, false);                     // 0x02A8(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offFireTeamIndex                                              = new ExternalOffset<int>(0x02AC);                             // 0x02AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCameraRotationYaw                                          = new ExternalOffset<float>(0x02B0);                           // 0x02B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offIsSelfZOrder                                               = new ExternalOffset<float>(0x02B4);                           // 0x02B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public int                                                FireTeamIndex                                                  => _offFireTeamIndex.GetValue();
	public float                                              CameraRotationYaw                                              => _offCameraRotationYaw.GetValue();
	public float                                              IsSelfZOrder                                                   => _offIsSelfZOrder.GetValue();
	#endregion


}

// Class Squad.SQMapWidgetCameraman
// 0x0000 (0x02B8 - 0x02B8)
public class USQMapWidgetCameraman : USQMapWidgetPawn
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMapWidgetCaptureZone
// 0x0050 (0x02DC - 0x028C)
public class USQMapWidgetCaptureZone : USQMapWidget
{
	#region Offsets
	private ExternalOffset<FText>                             _offFlagName                                                   = new ExternalOffset<FText>(0x02A8, false);                    // 0x02A8(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture2D>                        _offFlagTexture                                                = new ExternalOffset<UTexture2D>(0x02C0, true);                // 0x02C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTexture2D>                        _offDefaultFlag                                                = new ExternalOffset<UTexture2D>(0x02C8, true);                // 0x02C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbUncappable                                                = new ExternalOffset<char>(0x02D0, false);                     // 0x02D0(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQContestingState>                _offContestingState                                            = new ExternalOffset<ESQContestingState>(0x02D4, false);       // 0x02D4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offOwningTeam                                                 = new ExternalOffset<char>(0x02D5, false);                     // 0x02D5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offCapturingTeam                                              = new ExternalOffset<char>(0x02D6, false);                     // 0x02D6(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offCapturePercent                                             = new ExternalOffset<float>(0x02D8);                           // 0x02D8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public FText                                              FlagName                                                       => _offFlagName.GetValue();
	public UTexture2D                                         FlagTexture                                                    => _offFlagTexture.GetValue();
	public UTexture2D                                         DefaultFlag                                                    => _offDefaultFlag.GetValue();
	public ESQContestingState                                 ContestingState                                                => _offContestingState.GetValue();
	public float                                              CapturePercent                                                 => _offCapturePercent.GetValue();
	#endregion


}

// Class Squad.SQMapWidgetDeployableExplosive
// 0x0008 (0x02B1 - 0x02A9)
public class USQMapWidgetDeployableExplosive : USQMapWidgetDeployable
{
	#region Offsets
	private ExternalOffset<ESQExplosiveType>                  _offExplosiveType                                              = new ExternalOffset<ESQExplosiveType>(0x02B0, false);         // 0x02B0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public ESQExplosiveType                                   ExplosiveType                                                  => _offExplosiveType.GetValue();
	#endregion


}

// Class Squad.SQMapWidgetSQPawn
// 0x0000 (0x02B8 - 0x02B8)
public class USQMapWidgetSQPawn : USQMapWidgetPawn
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMapWidgetVehicleSeat
// 0x0000 (0x02B8 - 0x02B8)
public class USQMapWidgetVehicleSeat : USQMapWidgetSQPawn
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMapWidgetVehicle
// 0x003C (0x02F4 - 0x02B8)
public class USQMapWidgetVehicle : USQMapWidgetVehicleSeat
{
	#region Offsets
	private ExternalOffset<UTexture2D>                        _offDefaultIcon                                                = new ExternalOffset<UTexture2D>(0x02B8, true);                // 0x02B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDefaultIconRotation                                        = new ExternalOffset<float>(0x02C0);                           // 0x02C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQVehicleUIStaticDataAsset>       _offStaticUIData                                               = new ExternalOffset<USQVehicleUIStaticDataAsset>(0x02C8, true); // 0x02C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbHoldsOccupant                                             = new ExternalOffset<byte/*(bool)*/>(0x02D0);                  // 0x02D0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbHoldsSquadLeader                                          = new ExternalOffset<byte/*(bool)*/>(0x02D1);                  // 0x02D1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbHoldsCommander                                            = new ExternalOffset<byte/*(bool)*/>(0x02D2);                  // 0x02D2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offClaimingSquadID                                            = new ExternalOffset<int>(0x02D4);                             // 0x02D4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbIsInClaimingSquad                                         = new ExternalOffset<char>(0x02D8, false);                     // 0x02D8(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<FSQVehicleOccupantInfo>>    _offVehicleOccupants                                           = new ExternalOffset<TArray<FSQVehicleOccupantInfo>>(0x02E0, false); // 0x02E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offSelfInVehicleSeat                                          = new ExternalOffset<int>(0x02F0);                             // 0x02F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public UTexture2D                                         DefaultIcon                                                    => _offDefaultIcon.GetValue();
	public float                                              DefaultIconRotation                                            => _offDefaultIconRotation.GetValue();
	public USQVehicleUIStaticDataAsset                        StaticUIData                                                   => _offStaticUIData.GetValue();
	public byte/*(bool)*/                                     bHoldsOccupant                                                 => _offbHoldsOccupant.GetValue();
	public byte/*(bool)*/                                     bHoldsSquadLeader                                              => _offbHoldsSquadLeader.GetValue();
	public byte/*(bool)*/                                     bHoldsCommander                                                => _offbHoldsCommander.GetValue();
	public int                                                ClaimingSquadID                                                => _offClaimingSquadID.GetValue();
	public TArray<FSQVehicleOccupantInfo>                     VehicleOccupants                                               => _offVehicleOccupants.GetValue();
	public int                                                SelfInVehicleSeat                                              => _offSelfInVehicleSeat.GetValue();
	#endregion


}

// Class Squad.SQMapWidgetEmplacement
// 0x0034 (0x0328 - 0x02F4)
public class USQMapWidgetEmplacement : USQMapWidgetVehicle
{
	#region Offsets
	private ExternalOffset<int>                               _offTeamId                                                     = new ExternalOffset<int>(0x0310);                             // 0x0310(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<UClass>>                    _offAdminTypes                                                 = new ExternalOffset<TArray<UClass>>(0x0318, false);           // 0x0318(0x0010) (Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public int                                                TeamId                                                         => _offTeamId.GetValue();
	public TArray<UClass>                                     AdminTypes                                                     => _offAdminTypes.GetValue();
	#endregion


}

// Class Squad.SQMapWidgetForwardBase
// 0x001B (0x02C4 - 0x02A9)
public class USQMapWidgetForwardBase : USQMapWidgetDeployable
{
	#region Offsets
//	private ExternalOffset<char>                              _offbCanSpawn                                                  = new ExternalOffset<char>(0x02B0, false);                     // 0x02B0(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbSieged                                                    = new ExternalOffset<char>(0x02B0, false);                     // 0x02B0(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offExclusionRadius                                            = new ExternalOffset<float>(0x02B4);                           // 0x02B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offConstructionRadius                                         = new ExternalOffset<float>(0x02B8);                           // 0x02B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offAmmoPoints                                                 = new ExternalOffset<float>(0x02BC);                           // 0x02BC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offConstructionPoints                                         = new ExternalOffset<float>(0x02C0);                           // 0x02C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              ExclusionRadius                                                => _offExclusionRadius.GetValue();
	public float                                              ConstructionRadius                                             => _offConstructionRadius.GetValue();
	public float                                              AmmoPoints                                                     => _offAmmoPoints.GetValue();
	public float                                              ConstructionPoints                                             => _offConstructionPoints.GetValue();
	#endregion


}

// Class Squad.SQMapWidgetHAB
// 0x0007 (0x02B0 - 0x02A9)
public class USQMapWidgetHAB : USQMapWidgetDeployable
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMapWidgetMapMarker
// 0x003C (0x02C8 - 0x028C)
public class USQMapWidgetMapMarker : USQMapWidget
{
	#region Offsets
	private ExternalOffset<UTexture2D>                        _offTexture                                                    = new ExternalOffset<UTexture2D>(0x02A8, true);                // 0x02A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FLinearColor>                      _offTint                                                       = new ExternalOffset<FLinearColor>(0x02B0, false);             // 0x02B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offSquadId                                                    = new ExternalOffset<int>(0x02C0);                             // 0x02C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offFireTeamId                                                 = new ExternalOffset<int>(0x02C4);                             // 0x02C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public UTexture2D                                         Texture                                                        => _offTexture.GetValue();
	public FLinearColor                                       Tint                                                           => _offTint.GetValue();
	public int                                                SquadId                                                        => _offSquadId.GetValue();
	public int                                                FireTeamId                                                     => _offFireTeamId.GetValue();
	#endregion


}

// Class Squad.SQMapWidgetMapMarkerObjective
// 0x0000 (0x02C8 - 0x02C8)
public class USQMapWidgetMapMarkerObjective : USQMapWidgetMapMarker
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMapWidgetMapMarkerSelectable
// 0x0008 (0x02D0 - 0x02C8)
public class USQMapWidgetMapMarkerSelectable : USQMapWidgetMapMarker
{
	#region Offsets
	private ExternalOffset<USQMapIconComponent>               _offMapIcon                                                    = new ExternalOffset<USQMapIconComponent>(0x02C8, true);       // 0x02C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public USQMapIconComponent                                MapIcon                                                        => _offMapIcon.GetValue();
	#endregion


}

// Class Squad.SQMapWidgetMapMarkerSpotted
// 0x0000 (0x02D0 - 0x02D0)
public class USQMapWidgetMapMarkerSpotted : USQMapWidgetMapMarkerSelectable
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMapWidgetMapMarkerWaypoint
// 0x0000 (0x02D0 - 0x02D0)
public class USQMapWidgetMapMarkerWaypoint : USQMapWidgetMapMarkerSelectable
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMapWidgetSpawnPoint
// 0x0034 (0x02C0 - 0x028C)
public class USQMapWidgetSpawnPoint : USQMapWidget
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbSpawnOnSingleClick                                        = new ExternalOffset<byte/*(bool)*/>(0x02A8);                  // 0x02A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbSpawnOnDoubleClick                                        = new ExternalOffset<byte/*(bool)*/>(0x02A9);                  // 0x02A9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbIsSelected                                                = new ExternalOffset<char>(0x02AC, false);                     // 0x02AC(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbSieged                                                    = new ExternalOffset<char>(0x02AC, false);                     // 0x02AC(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbSpawningEnabled                                           = new ExternalOffset<char>(0x02AC, false);                     // 0x02AC(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQSpawnPointType>                 _offSpawnPointType                                             = new ExternalOffset<ESQSpawnPointType>(0x02B0, false);        // 0x02B0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQGameSpawn>                      _offOwningGameSpawn                                            = new ExternalOffset<ASQGameSpawn>(0x02B8, true);              // 0x02B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bSpawnOnSingleClick                                            => _offbSpawnOnSingleClick.GetValue();
	public byte/*(bool)*/                                     bSpawnOnDoubleClick                                            => _offbSpawnOnDoubleClick.GetValue();
	public ESQSpawnPointType                                  SpawnPointType                                                 => _offSpawnPointType.GetValue();
	public ASQGameSpawn                                       OwningGameSpawn                                                => _offOwningGameSpawn.GetValue();
	#endregion


}

// Class Squad.SQMapWidgetRallyPoint
// 0x0020 (0x02E0 - 0x02C0)
public class USQMapWidgetRallyPoint : USQMapWidgetSpawnPoint
{
	#region Offsets
	private ExternalOffset<int>                               _offNumberOfSpawns                                             = new ExternalOffset<int>(0x02C8);                             // 0x02C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offSquadId                                                    = new ExternalOffset<int>(0x02CC);                             // 0x02CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbIsInSelfSquad                                             = new ExternalOffset<char>(0x02D0, false);                     // 0x02D0(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQSquadState>                     _offSquadState                                                 = new ExternalOffset<ASQSquadState>(0x02D8, true);             // 0x02D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public int                                                NumberOfSpawns                                                 => _offNumberOfSpawns.GetValue();
	public int                                                SquadId                                                        => _offSquadId.GetValue();
	public ASQSquadState                                      SquadState                                                     => _offSquadState.GetValue();
	#endregion


}

// Class Squad.SQMapWidgetRepairStation
// 0x0007 (0x02B0 - 0x02A9)
public class USQMapWidgetRepairStation : USQMapWidgetDeployable
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMapWidgetSoldier
// 0x0064 (0x031C - 0x02B8)
public class USQMapWidgetSoldier : USQMapWidgetPawn
{
	#region Offsets
//	private ExternalOffset<char>                              _offbIsWounded                                                 = new ExternalOffset<char>(0x02B8, false);                     // 0x02B8(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbIsBleeding                                                = new ExternalOffset<char>(0x02B8, false);                     // 0x02B8(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbIsAlive                                                   = new ExternalOffset<char>(0x02B8, false);                     // 0x02B8(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbIsInVehicle                                               = new ExternalOffset<char>(0x02B8, false);                     // 0x02B8(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbIsUsingFreeLook                                           = new ExternalOffset<char>(0x02B8, false);                     // 0x02B8(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQAuthorityTypes>                 _offLeaderState                                                = new ExternalOffset<ESQAuthorityTypes>(0x02BC, false);        // 0x02BC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offSquadId                                                    = new ExternalOffset<int>(0x02C0);                             // 0x02C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offFireTeamId                                                 = new ExternalOffset<int>(0x02C4);                             // 0x02C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbIsMedic                                                   = new ExternalOffset<char>(0x02C8, false);                     // 0x02C8(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbIsWithinCanSelfSeeHealthSatusRange                        = new ExternalOffset<char>(0x02C8, false);                     // 0x02C8(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbCanSelfSeeHealthStatus                                    = new ExternalOffset<char>(0x02C8, false);                     // 0x02C8(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offHealthStatusRange                                          = new ExternalOffset<float>(0x02CC);                           // 0x02CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offSoldierLocation                                            = new ExternalOffset<FVector>(0x02D0, false);                  // 0x02D0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQRoleSettings>                   _offCurrentRole                                                = new ExternalOffset<USQRoleSettings>(0x02E0, true);           // 0x02E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQSoldierInfo>                    _offSoldierInfo                                                = new ExternalOffset<FSQSoldierInfo>(0x02E8, false);           // 0x02E8(0x0028) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offSquadLeaderZOrder                                          = new ExternalOffset<float>(0x0310);                           // 0x0310(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMedicZOrder                                                = new ExternalOffset<float>(0x0314);                           // 0x0314(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offVehicleViewConeZOrder                                      = new ExternalOffset<float>(0x0318);                           // 0x0318(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public ESQAuthorityTypes                                  LeaderState                                                    => _offLeaderState.GetValue();
	public int                                                SquadId                                                        => _offSquadId.GetValue();
	public int                                                FireTeamId                                                     => _offFireTeamId.GetValue();
	public float                                              HealthStatusRange                                              => _offHealthStatusRange.GetValue();
	public FVector                                            SoldierLocation                                                => _offSoldierLocation.GetValue();
	public USQRoleSettings                                    CurrentRole                                                    => _offCurrentRole.GetValue();
	public FSQSoldierInfo                                     SoldierInfo                                                    => _offSoldierInfo.GetValue();
	public float                                              SquadLeaderZOrder                                              => _offSquadLeaderZOrder.GetValue();
	public float                                              MedicZOrder                                                    => _offMedicZOrder.GetValue();
	public float                                              VehicleViewConeZOrder                                          => _offVehicleViewConeZOrder.GetValue();
	#endregion


}

// Class Squad.SQMarker
// 0x0010 (0x0248 - 0x0238)
public class ASQMarker : AActor
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMedicBag
// 0x0090 (0x0538 - 0x04A8)
public class ASQMedicBag : ASQHealingEquipableItem
{
	#region Offsets
	private ExternalOffset<USQMedicBagStaticInfo>             _offMedicBagStaticInfo                                         = new ExternalOffset<USQMedicBagStaticInfo>(0x0528, true);     // 0x0528(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FTimerHandle>                      _offTimerHandle                                                = new ExternalOffset<FTimerHandle>(0x0530, false);             // 0x0530(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public USQMedicBagStaticInfo                              MedicBagStaticInfo                                             => _offMedicBagStaticInfo.GetValue();
	public FTimerHandle                                       TimerHandle                                                    => _offTimerHandle.GetValue();
	#endregion


}

// Class Squad.SQMedicBagStaticInfo
// 0x0038 (0x0510 - 0x04D8)
public class USQMedicBagStaticInfo : USQItemStaticInfo
{
	#region Offsets
	private ExternalOffset<UAnimMontage>                      _offHealing1pBeginUseMontage                                   = new ExternalOffset<UAnimMontage>(0x04D8, true);              // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealing3pBeginUseMontage                                   = new ExternalOffset<UAnimMontage>(0x04E0, true);              // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealing1pEndUseMontage                                     = new ExternalOffset<UAnimMontage>(0x04E8, true);              // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offHealing3pEndUseMontage                                     = new ExternalOffset<UAnimMontage>(0x04F0, true);              // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offHealSelfSound                                              = new ExternalOffset<USoundCue>(0x04F8, true);                 // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offHealOtherSound                                             = new ExternalOffset<USoundCue>(0x0500, true);                 // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHealingDelay                                               = new ExternalOffset<float>(0x0508);                           // 0x0508(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHealingAmount                                              = new ExternalOffset<float>(0x050C);                           // 0x050C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UAnimMontage                                       Healing1pBeginUseMontage                                       => _offHealing1pBeginUseMontage.GetValue();
	public UAnimMontage                                       Healing3pBeginUseMontage                                       => _offHealing3pBeginUseMontage.GetValue();
	public UAnimMontage                                       Healing1pEndUseMontage                                         => _offHealing1pEndUseMontage.GetValue();
	public UAnimMontage                                       Healing3pEndUseMontage                                         => _offHealing3pEndUseMontage.GetValue();
	public USoundCue                                          HealSelfSound                                                  => _offHealSelfSound.GetValue();
	public USoundCue                                          HealOtherSound                                                 => _offHealOtherSound.GetValue();
	public float                                              HealingDelay                                                   => _offHealingDelay.GetValue();
	public float                                              HealingAmount                                                  => _offHealingAmount.GetValue();
	#endregion


}

// Class Squad.SQMenuItemWidgetStyle
// 0x01A8 (0x01D0 - 0x0028)
public class USQMenuItemWidgetStyle : USlateWidgetStyleContainerBase
{
	#region Offsets
	private ExternalOffset<FSQMenuItemStyle>                  _offMenuItemStyle                                              = new ExternalOffset<FSQMenuItemStyle>(0x0030, false);         // 0x0030(0x01A0) (Edit, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FSQMenuItemStyle                                   MenuItemStyle                                                  => _offMenuItemStyle.GetValue();
	#endregion


}

// Class Squad.SQMenuSoundsWidgetStyle
// 0x0040 (0x0068 - 0x0028)
public class USQMenuSoundsWidgetStyle : USlateWidgetStyleContainerBase
{
	#region Offsets
	private ExternalOffset<FSQMenuSoundsStyle>                _offSoundsStyle                                                = new ExternalOffset<FSQMenuSoundsStyle>(0x0030, false);       // 0x0030(0x0038) (Edit, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FSQMenuSoundsStyle                                 SoundsStyle                                                    => _offSoundsStyle.GetValue();
	#endregion


}

// Class Squad.SQMenuWidgetStyle
// 0x0208 (0x0230 - 0x0028)
public class USQMenuWidgetStyle : USlateWidgetStyleContainerBase
{
	#region Offsets
	private ExternalOffset<FSQMenuStyle>                      _offMenuStyle                                                  = new ExternalOffset<FSQMenuStyle>(0x0030, false);             // 0x0030(0x0200) (Edit, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FSQMenuStyle                                       MenuStyle                                                      => _offMenuStyle.GetValue();
	#endregion


}

// Class Squad.SQMeshOwnerInterface
// 0x0000 (0x0028 - 0x0028)
public class USQMeshOwnerInterface : UInterface
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMortarProjectile
// 0x0074 (0x04D4 - 0x0460)
public class ASQMortarProjectile : ASQProjectile
{
	#region Offsets
	private ExternalOffset<UParticleSystem>                   _offSmokeParticleEffect                                        = new ExternalOffset<UParticleSystem>(0x0490, true);           // 0x0490(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offSmokeSoundCue                                              = new ExternalOffset<USoundCue>(0x0498, true);                 // 0x0498(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offSmokeColor                                                 = new ExternalOffset<FLinearColor>(0x04A0, false);             // 0x04A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offNearGroundTriggerDistance                                  = new ExternalOffset<float>(0x04B0);                           // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinFlightTime                                              = new ExternalOffset<float>(0x04B4);                           // 0x04B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbWatchFlightTime                                           = new ExternalOffset<byte/*(bool)*/>(0x04B8);                  // 0x04B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShouldDestroyByLifespan                                   = new ExternalOffset<byte/*(bool)*/>(0x04B9);                  // 0x04B9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offLastingEffectClass                                         = new ExternalOffset<UClass>(0x04C0, true);                    // 0x04C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offSocketName                                                 = new ExternalOffset<FName>(0x04C8, false);                    // 0x04C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offImpactDamageToApply                                        = new ExternalOffset<float>(0x04D0);                           // 0x04D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UParticleSystem                                    SmokeParticleEffect                                            => _offSmokeParticleEffect.GetValue();
	public USoundCue                                          SmokeSoundCue                                                  => _offSmokeSoundCue.GetValue();
	public FLinearColor                                       SmokeColor                                                     => _offSmokeColor.GetValue();
	public float                                              NearGroundTriggerDistance                                      => _offNearGroundTriggerDistance.GetValue();
	public float                                              MinFlightTime                                                  => _offMinFlightTime.GetValue();
	public byte/*(bool)*/                                     bWatchFlightTime                                               => _offbWatchFlightTime.GetValue();
	public byte/*(bool)*/                                     bShouldDestroyByLifespan                                       => _offbShouldDestroyByLifespan.GetValue();
	public UClass                                             LastingEffectClass                                             => _offLastingEffectClass.GetValue();
	public FName                                              SocketName                                                     => _offSocketName.GetValue();
	public float                                              ImpactDamageToApply                                            => _offImpactDamageToApply.GetValue();
	#endregion


}

// Class Squad.SQVehicleViewWidget
// 0x0028 (0x0258 - 0x0230)
public class USQVehicleViewWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<TArray<UImage>>                    _offZoomImages                                                 = new ExternalOffset<TArray<UImage>>(0x0230, false);           // 0x0230(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offCurrentZoomIndex                                           = new ExternalOffset<int>(0x0240);                             // 0x0240(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<UClass>>                    _offIgnoredShakeClasses                                        = new ExternalOffset<TArray<UClass>>(0x0248, false);           // 0x0248(0x0010) (BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<UImage>                                     ZoomImages                                                     => _offZoomImages.GetValue();
	public int                                                CurrentZoomIndex                                               => _offCurrentZoomIndex.GetValue();
	public TArray<UClass>                                     IgnoredShakeClasses                                            => _offIgnoredShakeClasses.GetValue();
	#endregion


}

// Class Squad.SQMortarViewWidget
// 0x0008 (0x0260 - 0x0258)
public class USQMortarViewWidget : USQVehicleViewWidget
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMovementAdjustmentComponent
// 0x0004 (0x0434 - 0x0430)
public class USQMovementAdjustmentComponent : UBoxComponent
{
	#region Offsets
	private ExternalOffset<float>                             _offSoldierMovementSpeedMultiplayer                            = new ExternalOffset<float>(0x0430);                           // 0x0430(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              SoldierMovementSpeedMultiplayer                                => _offSoldierMovementSpeedMultiplayer.GetValue();
	#endregion


}

// Class Squad.SQMovementComponentInterface
// 0x0000 (0x0028 - 0x0028)
public class USQMovementComponentInterface : UInterface
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQMovementComponentManager
// 0x0020 (0x0180 - 0x0160)
public class USQMovementComponentManager : UPawnMovementComponent
{
	#region Offsets
	private ExternalOffset<TArray<USQMovementComponentBase>>  _offManagedMovementComponents                                  = new ExternalOffset<TArray<USQMovementComponentBase>>(0x0170, false); // 0x0170(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, DuplicateTransient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public TArray<USQMovementComponentBase>                   ManagedMovementComponents                                      => _offManagedMovementComponents.GetValue();
	#endregion


}

// Class Squad.SQMovementComponentNetworker
// 0x0040 (0x0108 - 0x00C8)
public class USQMovementComponentNetworker : UActorComponent
{
	#region Offsets
	private ExternalOffset<TArray<USQMovementComponentPacked>> _offNetworkedComponents                                        = new ExternalOffset<TArray<USQMovementComponentPacked>>(0x00D8, false); // 0x00D8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<FAdjustPositionAndRotationPacket>> _offPendingClientAdjustPositionAndRotation                     = new ExternalOffset<TArray<FAdjustPositionAndRotationPacket>>(0x00E8, false); // 0x00E8(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<FMovePacket>>               _offPendingServerMove                                          = new ExternalOffset<TArray<FMovePacket>>(0x00F8, false);      // 0x00F8(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public TArray<USQMovementComponentPacked>                 NetworkedComponents                                            => _offNetworkedComponents.GetValue();
	public TArray<FAdjustPositionAndRotationPacket>           PendingClientAdjustPositionAndRotation                         => _offPendingClientAdjustPositionAndRotation.GetValue();
	public TArray<FMovePacket>                                PendingServerMove                                              => _offPendingServerMove.GetValue();
	#endregion


}

// Class Squad.SQMovementComponentPacked
// 0x0004 (0x01C0 - 0x01BC)
public class USQMovementComponentPacked : USQMovementComponentBase
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQNetworkPollingComponent
// 0x0018 (0x00E0 - 0x00C8)
public class USQNetworkPollingComponent : UActorComponent
{
	#region Offsets
	private ExternalOffset<float>                             _offRollingPacketLossTime                                      = new ExternalOffset<float>(0x00D8);                           // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTimeoutForFullPacketLoss                                   = new ExternalOffset<float>(0x00DC);                           // 0x00DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              RollingPacketLossTime                                          => _offRollingPacketLossTime.GetValue();
	public float                                              TimeoutForFullPacketLoss                                       => _offTimeoutForFullPacketLoss.GetValue();
	#endregion


}

// Class Squad.SQNoDeployZone
// 0x0028 (0x0278 - 0x0250)
public class ASQNoDeployZone : ATriggerBox
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offUseBlacklisting                                            = new ExternalOffset<byte/*(bool)*/>(0x0250);                  // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<UClass>>                    _offAllowedDeployableClasses                                   = new ExternalOffset<TArray<UClass>>(0x0258, false);           // 0x0258(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<UClass>>                    _offDisallowedDeployableClasses                                = new ExternalOffset<TArray<UClass>>(0x0268, false);           // 0x0268(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public byte/*(bool)*/                                     UseBlacklisting                                                => _offUseBlacklisting.GetValue();
	public TArray<UClass>                                     AllowedDeployableClasses                                       => _offAllowedDeployableClasses.GetValue();
	public TArray<UClass>                                     DisallowedDeployableClasses                                    => _offDisallowedDeployableClasses.GetValue();
	#endregion


}

// Class Squad.SQNotificationData
// 0x0210 (0x0240 - 0x0030)
public class USQNotificationData : UDataAsset
{
	#region Offsets
//	private ExternalOffset<FSQNotificationLayout>             _offNotificationLayouts[0xB]                                   = new ExternalOffset<FSQNotificationLayout>(0x0030, false);    // 0x0030(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQWheeledVehicleBase
// 0x0060 (0x0A18 - 0x09B8)
public class ASQWheeledVehicleBase : ASQGroundVehicle
{
	#region Offsets
	private ExternalOffset<float>                             _offDamagedDampingRateMultiplier                               = new ExternalOffset<float>(0x0A10);                           // 0x0A10(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDampingRateMultiplier                                      = new ExternalOffset<float>(0x0A14);                           // 0x0A14(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              DamagedDampingRateMultiplier                                   => _offDamagedDampingRateMultiplier.GetValue();
	public float                                              DampingRateMultiplier                                          => _offDampingRateMultiplier.GetValue();
	#endregion


}

// Class Squad.SQNWheeledVehicle
// 0x0008 (0x0A20 - 0x0A18)
public class ASQNWheeledVehicle : ASQWheeledVehicleBase
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQNWheeledVehicleMovementComponent
// 0x0040 (0x0490 - 0x0450)
public class USQNWheeledVehicleMovementComponent : UWheeledVehicleMovementComponentNW
{
	#region Offsets
	private ExternalOffset<TArray<int>>                       _offWheelShaderCounts                                          = new ExternalOffset<TArray<int>>(0x0468, false);              // 0x0468(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbEnableTurboBoost                                          = new ExternalOffset<byte/*(bool)*/>(0x0478);                  // 0x0478(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxSpeedAllowedForEngineBoosting                           = new ExternalOffset<float>(0x047C);                           // 0x047C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxSpeedToAssistWheels                                     = new ExternalOffset<float>(0x0480);                           // 0x0480(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offWheelLongForceAssistMultiplier                             = new ExternalOffset<float>(0x0484);                           // 0x0484(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offWheelTorqueAssistMultiplier                                = new ExternalOffset<float>(0x0488);                           // 0x0488(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMaxWheelRPMDuringWheelAssist                               = new ExternalOffset<float>(0x048C);                           // 0x048C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public TArray<int>                                        WheelShaderCounts                                              => _offWheelShaderCounts.GetValue();
	public byte/*(bool)*/                                     bEnableTurboBoost                                              => _offbEnableTurboBoost.GetValue();
	public float                                              MaxSpeedAllowedForEngineBoosting                               => _offMaxSpeedAllowedForEngineBoosting.GetValue();
	public float                                              MaxSpeedToAssistWheels                                         => _offMaxSpeedToAssistWheels.GetValue();
	public float                                              WheelLongForceAssistMultiplier                                 => _offWheelLongForceAssistMultiplier.GetValue();
	public float                                              WheelTorqueAssistMultiplier                                    => _offWheelTorqueAssistMultiplier.GetValue();
	public float                                              MaxWheelRPMDuringWheelAssist                                   => _offMaxWheelRPMDuringWheelAssist.GetValue();
	#endregion


}

// Class Squad.SQObjective
// 0x00EC (0x033D - 0x0251)
public class ASQObjective : ASQTeamActor
{
	#region Offsets
	private ExternalOffset<int>                               _offTicketAdjustmentByObjectiveMeetingTeamUponObjectiveBeingMet = new ExternalOffset<int>(0x02A0);                             // 0x02A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTicketAdjustmentByOwningTeamUponObjectiveBeingMet          = new ExternalOffset<int>(0x02A4);                             // 0x02A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTicketAdjustmentByOpposingTeamUponObjectiveBeingMet        = new ExternalOffset<int>(0x02A8);                             // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbHasObjectiveBeenMet                                       = new ExternalOffset<byte/*(bool)*/>(0x02AC);                  // 0x02AC(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FText>                             _offObjectiveMetOwningTeamMessage                              = new ExternalOffset<FText>(0x02B0, false);                    // 0x02B0(0x0018) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FText>                             _offObjectiveMetOpposingTeamMessage                            = new ExternalOffset<FText>(0x02C8, false);                    // 0x02C8(0x0018) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FText>                             _offObjectiveShownOwningTeamMessage                            = new ExternalOffset<FText>(0x02E0, false);                    // 0x02E0(0x0018) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FText>                             _offObjectiveShownOpposingTeamMessage                          = new ExternalOffset<FText>(0x02F8, false);                    // 0x02F8(0x0018) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsKnownToEveryone                                         = new ExternalOffset<byte/*(bool)*/>(0x0310);                  // 0x0310(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsWaitingToBeShown                                        = new ExternalOffset<byte/*(bool)*/>(0x0311);                  // 0x0311(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbHiddenUponSpawn                                           = new ExternalOffset<byte/*(bool)*/>(0x0312);                  // 0x0312(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offDistanceRangeForAttackMarker                               = new ExternalOffset<FVector2D>(0x0314, false);                // 0x0314(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector2D>                         _offDistanceRangeForDefendMarker                               = new ExternalOffset<FVector2D>(0x031C, false);                // 0x031C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offTeamOneLocationZeroBased                                   = new ExternalOffset<FVector>(0x0324, false);                  // 0x0324(0x000C) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offTeamTwoLocationZeroBased                                   = new ExternalOffset<FVector>(0x0330, false);                  // 0x0330(0x000C) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQTeam>                           _offObjectiveMetByTeam                                         = new ExternalOffset<ESQTeam>(0x033C, false);                  // 0x033C(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public int                                                TicketAdjustmentByObjectiveMeetingTeamUponObjectiveBeingMet    => _offTicketAdjustmentByObjectiveMeetingTeamUponObjectiveBeingMet.GetValue();
	public int                                                TicketAdjustmentByOwningTeamUponObjectiveBeingMet              => _offTicketAdjustmentByOwningTeamUponObjectiveBeingMet.GetValue();
	public int                                                TicketAdjustmentByOpposingTeamUponObjectiveBeingMet            => _offTicketAdjustmentByOpposingTeamUponObjectiveBeingMet.GetValue();
	public byte/*(bool)*/                                     bHasObjectiveBeenMet                                           => _offbHasObjectiveBeenMet.GetValue();
	public FText                                              ObjectiveMetOwningTeamMessage                                  => _offObjectiveMetOwningTeamMessage.GetValue();
	public FText                                              ObjectiveMetOpposingTeamMessage                                => _offObjectiveMetOpposingTeamMessage.GetValue();
	public FText                                              ObjectiveShownOwningTeamMessage                                => _offObjectiveShownOwningTeamMessage.GetValue();
	public FText                                              ObjectiveShownOpposingTeamMessage                              => _offObjectiveShownOpposingTeamMessage.GetValue();
	public byte/*(bool)*/                                     bIsKnownToEveryone                                             => _offbIsKnownToEveryone.GetValue();
	public byte/*(bool)*/                                     bIsWaitingToBeShown                                            => _offbIsWaitingToBeShown.GetValue();
	public byte/*(bool)*/                                     bHiddenUponSpawn                                               => _offbHiddenUponSpawn.GetValue();
	public FVector2D                                          DistanceRangeForAttackMarker                                   => _offDistanceRangeForAttackMarker.GetValue();
	public FVector2D                                          DistanceRangeForDefendMarker                                   => _offDistanceRangeForDefendMarker.GetValue();
	public FVector                                            TeamOneLocationZeroBased                                       => _offTeamOneLocationZeroBased.GetValue();
	public FVector                                            TeamTwoLocationZeroBased                                       => _offTeamTwoLocationZeroBased.GetValue();
	public ESQTeam                                            ObjectiveMetByTeam                                             => _offObjectiveMetByTeam.GetValue();
	#endregion


}

// Class Squad.SQObjective_Destroyable
// 0x00F3 (0x0430 - 0x033D)
public class ASQObjective_Destroyable : ASQObjective
{
	#region Offsets
	private ExternalOffset<FText>                             _offWorldText                                                  = new ExternalOffset<FText>(0x0348, false);                    // 0x0348(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offWorldTextColor                                             = new ExternalOffset<FLinearColor>(0x0360, false);             // 0x0360(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQUsableData>                     _offUsableData                                                 = new ExternalOffset<FSQUsableData>(0x0370, false);            // 0x0370(0x0040) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbHasBeenDestroyed                                          = new ExternalOffset<byte/*(bool)*/>(0x03B0);                  // 0x03B0(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offHealth                                                     = new ExternalOffset<float>(0x03B4);                           // 0x03B4(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<UClass>>                    _offAllowableDamageTypes                                       = new ExternalOffset<TArray<UClass>>(0x03B8, false);           // 0x03B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	private ExternalOffset<UParticleSystem>                   _offDestroyedParticleEffect                                    = new ExternalOffset<UParticleSystem>(0x03C8, true);           // 0x03C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UClass>                            _offDestroyedShockwaveEffect                                   = new ExternalOffset<UClass>(0x03D0, true);                    // 0x03D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offDestroyedSound                                             = new ExternalOffset<USoundCue>(0x03D8, true);                 // 0x03D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offDestroyedDebrisSound                                       = new ExternalOffset<USoundCue>(0x03E0, true);                 // 0x03E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQDamageTypeEffects>              _offDamageEffects                                              = new ExternalOffset<FSQDamageTypeEffects>(0x03E8, false);     // 0x03E8(0x0028) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<UClass>                            _offSpawnClass                                                 = new ExternalOffset<UClass>(0x0410, true);                    // 0x0410(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQGameSpawn>                      _offSpawnPoint                                                 = new ExternalOffset<ASQGameSpawn>(0x0418, true);              // 0x0418(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offSpawnLocationZOffset                                       = new ExternalOffset<float>(0x0420);                           // 0x0420(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UClass>                            _offDefaultEffectsClass                                        = new ExternalOffset<UClass>(0x0428, true);                    // 0x0428(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public FText                                              WorldText                                                      => _offWorldText.GetValue();
	public FLinearColor                                       WorldTextColor                                                 => _offWorldTextColor.GetValue();
	public FSQUsableData                                      UsableData                                                     => _offUsableData.GetValue();
	public byte/*(bool)*/                                     bHasBeenDestroyed                                              => _offbHasBeenDestroyed.GetValue();
	public float                                              Health                                                         => _offHealth.GetValue();
	public TArray<UClass>                                     AllowableDamageTypes                                           => _offAllowableDamageTypes.GetValue();
	public UParticleSystem                                    DestroyedParticleEffect                                        => _offDestroyedParticleEffect.GetValue();
	public UClass                                             DestroyedShockwaveEffect                                       => _offDestroyedShockwaveEffect.GetValue();
	public USoundCue                                          DestroyedSound                                                 => _offDestroyedSound.GetValue();
	public USoundCue                                          DestroyedDebrisSound                                           => _offDestroyedDebrisSound.GetValue();
	public FSQDamageTypeEffects                               DamageEffects                                                  => _offDamageEffects.GetValue();
	public UClass                                             SpawnClass                                                     => _offSpawnClass.GetValue();
	public ASQGameSpawn                                       SpawnPoint                                                     => _offSpawnPoint.GetValue();
	public float                                              SpawnLocationZOffset                                           => _offSpawnLocationZOffset.GetValue();
	public UClass                                             DefaultEffectsClass                                            => _offDefaultEffectsClass.GetValue();
	#endregion


}

// Class Squad.SQObjectiveSpawnLocation
// 0x0010 (0x0248 - 0x0238)
public class ASQObjectiveSpawnLocation : AActor
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQOnlineHelpers
// 0x0000 (0x0028 - 0x0028)
public class USQOnlineHelpers : UObject
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQOptionsWidgetStyle
// 0x0040 (0x0068 - 0x0028)
public class USQOptionsWidgetStyle : USlateWidgetStyleContainerBase
{
	#region Offsets
	private ExternalOffset<FSQOptionsStyle>                   _offOptionsStyle                                               = new ExternalOffset<FSQOptionsStyle>(0x0030, false);          // 0x0030(0x0038) (Edit, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FSQOptionsStyle                                    OptionsStyle                                                   => _offOptionsStyle.GetValue();
	#endregion


}

// Class Squad.SQOrderLines
// 0x0020 (0x0268 - 0x0248)
public class USQOrderLines : USQMapLattice
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbShowTeamOrderLines                                        = new ExternalOffset<byte/*(bool)*/>(0x0250);                  // 0x0250(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offSelfSquadLineThickness                                     = new ExternalOffset<float>(0x0254);                           // 0x0254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offOtherSquadLineThickness                                    = new ExternalOffset<float>(0x0258);                           // 0x0258(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQMapMarkerManagerComponent>      _offMapMarkerManagerComponent                                  = new ExternalOffset<USQMapMarkerManagerComponent>(0x0260, true); // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bShowTeamOrderLines                                            => _offbShowTeamOrderLines.GetValue();
	public float                                              SelfSquadLineThickness                                         => _offSelfSquadLineThickness.GetValue();
	public float                                              OtherSquadLineThickness                                        => _offOtherSquadLineThickness.GetValue();
	public USQMapMarkerManagerComponent                       MapMarkerManagerComponent                                      => _offMapMarkerManagerComponent.GetValue();
	#endregion


}

// Class Squad.SQPacketLossWidget
// 0x0030 (0x0260 - 0x0230)
public class USQPacketLossWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<UImage>                            _offDisplayedImage                                             = new ExternalOffset<UImage>(0x0230, true);                    // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offDisplayedText                                              = new ExternalOffset<UTextBlock>(0x0238, true);                // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UMaterialInterface>                _offPacketLossMaterial                                         = new ExternalOffset<UMaterialInterface>(0x0240, true);        // 0x0240(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offShowIndicatorThreasholdFrac                                = new ExternalOffset<float>(0x0248);                           // 0x0248(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UMaterialInstanceDynamic>          _offPacketLossMID                                              = new ExternalOffset<UMaterialInstanceDynamic>(0x0258, true);  // 0x0258(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public UImage                                             DisplayedImage                                                 => _offDisplayedImage.GetValue();
	public UTextBlock                                         DisplayedText                                                  => _offDisplayedText.GetValue();
	public UMaterialInterface                                 PacketLossMaterial                                             => _offPacketLossMaterial.GetValue();
	public float                                              ShowIndicatorThreasholdFrac                                    => _offShowIndicatorThreasholdFrac.GetValue();
	public UMaterialInstanceDynamic                           PacketLossMID                                                  => _offPacketLossMID.GetValue();
	#endregion


}

// Class Squad.SQPainCausingVolumeComponent
// 0x0020 (0x0450 - 0x0430)
public class USQPainCausingVolumeComponent : UBoxComponent
{
	#region Offsets
//	private ExternalOffset<char>                              _offbPainCausing                                               = new ExternalOffset<char>(0x0430, false);                     // 0x0430(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDamagePerSec                                               = new ExternalOffset<float>(0x0434);                           // 0x0434(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offDamageType                                                 = new ExternalOffset<UClass>(0x0438, true);                    // 0x0438(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPainInterval                                               = new ExternalOffset<float>(0x0440);                           // 0x0440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbEntryPain                                                 = new ExternalOffset<char>(0x0444, false);                     // 0x0444(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<AController>                       _offDamageInstigator                                           = new ExternalOffset<AController>(0x0448, true);               // 0x0448(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              DamagePerSec                                                   => _offDamagePerSec.GetValue();
	public UClass                                             DamageType                                                     => _offDamageType.GetValue();
	public float                                              PainInterval                                                   => _offPainInterval.GetValue();
	public AController                                        DamageInstigator                                               => _offDamageInstigator.GetValue();
	#endregion


}

// Class Squad.SQPawnInventoryComponent
// 0x0218 (0x02E0 - 0x00C8)
public class USQPawnInventoryComponent : UActorComponent
{
	#region Offsets
	private ExternalOffset<FScriptMulticastDelegate>          _offEquippedNewItemEvent                                       = new ExternalOffset<FScriptMulticastDelegate>(0x00D8, false); // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offPlayAnimationEvent                                         = new ExternalOffset<FScriptMulticastDelegate>(0x00E8, false); // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offPauseAnimationEvent                                        = new ExternalOffset<FScriptMulticastDelegate>(0x00F8, false); // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offResumeAnimationEvent                                       = new ExternalOffset<FScriptMulticastDelegate>(0x0108, false); // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offSetAnimationPlayRateEvent                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0118, false); // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offEndLoopAnimationEvent                                      = new ExternalOffset<FScriptMulticastDelegate>(0x0128, false); // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offStopAnimationEvent                                         = new ExternalOffset<FScriptMulticastDelegate>(0x0138, false); // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offAmmoChangedEvent                                           = new ExternalOffset<FScriptMulticastDelegate>(0x0148, false); // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<USQItemStaticInfo>                 _offCurrentItemStaticInfo                                      = new ExternalOffset<USQItemStaticInfo>(0x0158, true);         // 0x0158(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offDefaultStaticInfoClass                                     = new ExternalOffset<UClass>(0x0160, true);                    // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQEquipableItem>                  _offCurrentWeapon                                              = new ExternalOffset<ASQEquipableItem>(0x0168, true);          // 0x0168(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsInteracting                                             = new ExternalOffset<byte/*(bool)*/>(0x0188);                  // 0x0188(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsTimingOut                                               = new ExternalOffset<byte/*(bool)*/>(0x0189);                  // 0x0189(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCurrentFadeOut                                             = new ExternalOffset<float>(0x018C);                           // 0x018C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFadeoutDuration                                            = new ExternalOffset<float>(0x0190);                           // 0x0190(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFadeoutDelay                                               = new ExternalOffset<float>(0x0194);                           // 0x0194(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbClickInventoryToggle                                      = new ExternalOffset<char>(0x0198, false);                     // 0x0198(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNextItemSlot                                               = new ExternalOffset<int>(0x019C);                             // 0x019C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNextItemOffset                                             = new ExternalOffset<int>(0x01A0);                             // 0x01A0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offCurrentWeaponSlot                                          = new ExternalOffset<int>(0x01A4);                             // 0x01A4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offCurrentWeaponOffset                                        = new ExternalOffset<int>(0x01A8);                             // 0x01A8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQWeaponGroupData>>        _offInventory                                                  = new ExternalOffset<TArray<FSQWeaponGroupData>>(0x01B0, false); // 0x01B0(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQWeaponGroupDataArray>           _offRepInventory                                               = new ExternalOffset<FSQWeaponGroupDataArray>(0x01C0, false);  // 0x01C0(0x0118) (Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQEquipableItem>                  _offPendingWeapon                                              = new ExternalOffset<ASQEquipableItem>(0x02D8, true);          // 0x02D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public FScriptMulticastDelegate                           EquippedNewItemEvent                                           => _offEquippedNewItemEvent.GetValue();
	public FScriptMulticastDelegate                           PlayAnimationEvent                                             => _offPlayAnimationEvent.GetValue();
	public FScriptMulticastDelegate                           PauseAnimationEvent                                            => _offPauseAnimationEvent.GetValue();
	public FScriptMulticastDelegate                           ResumeAnimationEvent                                           => _offResumeAnimationEvent.GetValue();
	public FScriptMulticastDelegate                           SetAnimationPlayRateEvent                                      => _offSetAnimationPlayRateEvent.GetValue();
	public FScriptMulticastDelegate                           EndLoopAnimationEvent                                          => _offEndLoopAnimationEvent.GetValue();
	public FScriptMulticastDelegate                           StopAnimationEvent                                             => _offStopAnimationEvent.GetValue();
	public FScriptMulticastDelegate                           AmmoChangedEvent                                               => _offAmmoChangedEvent.GetValue();
	public USQItemStaticInfo                                  CurrentItemStaticInfo                                          => _offCurrentItemStaticInfo.GetValue();
	public UClass                                             DefaultStaticInfoClass                                         => _offDefaultStaticInfoClass.GetValue();
	public ASQEquipableItem                                   CurrentWeapon                                                  => _offCurrentWeapon.GetValue();
	public byte/*(bool)*/                                     bIsInteracting                                                 => _offbIsInteracting.GetValue();
	public byte/*(bool)*/                                     bIsTimingOut                                                   => _offbIsTimingOut.GetValue();
	public float                                              CurrentFadeOut                                                 => _offCurrentFadeOut.GetValue();
	public float                                              FadeoutDuration                                                => _offFadeoutDuration.GetValue();
	public float                                              FadeoutDelay                                                   => _offFadeoutDelay.GetValue();
	public int                                                NextItemSlot                                                   => _offNextItemSlot.GetValue();
	public int                                                NextItemOffset                                                 => _offNextItemOffset.GetValue();
	public int                                                CurrentWeaponSlot                                              => _offCurrentWeaponSlot.GetValue();
	public int                                                CurrentWeaponOffset                                            => _offCurrentWeaponOffset.GetValue();
	public TArray<FSQWeaponGroupData>                         Inventory                                                      => _offInventory.GetValue();
	public FSQWeaponGroupDataArray                            RepInventory                                                   => _offRepInventory.GetValue();
	public ASQEquipableItem                                   PendingWeapon                                                  => _offPendingWeapon.GetValue();
	#endregion


}

// Class Squad.SQPhysicalMaterial
// 0x0030 (0x0098 - 0x0068)
public class USQPhysicalMaterial : UPhysicalMaterial
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbConsiderForPenetration                                    = new ExternalOffset<byte/*(bool)*/>(0x0080);                  // 0x0080(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAllowPenetration                                          = new ExternalOffset<byte/*(bool)*/>(0x0081);                  // 0x0081(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDamageAbsorbed                                             = new ExternalOffset<float>(0x0084);                           // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offArmorDamageMultiplier                                      = new ExternalOffset<float>(0x0088);                           // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDamageParentActor                                         = new ExternalOffset<byte/*(bool)*/>(0x008C);                  // 0x008C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWheelDampingRateMultiplier                                 = new ExternalOffset<float>(0x0090);                           // 0x0090(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offArmorThicknessMillimeters                                  = new ExternalOffset<int>(0x0094);                             // 0x0094(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bConsiderForPenetration                                        => _offbConsiderForPenetration.GetValue();
	public byte/*(bool)*/                                     bAllowPenetration                                              => _offbAllowPenetration.GetValue();
	public float                                              DamageAbsorbed                                                 => _offDamageAbsorbed.GetValue();
	public float                                              ArmorDamageMultiplier                                          => _offArmorDamageMultiplier.GetValue();
	public byte/*(bool)*/                                     bDamageParentActor                                             => _offbDamageParentActor.GetValue();
	public float                                              WheelDampingRateMultiplier                                     => _offWheelDampingRateMultiplier.GetValue();
	public int                                                ArmorThicknessMillimeters                                      => _offArmorThicknessMillimeters.GetValue();
	#endregion


}

// Class Squad.SQPhysicalMaterialEffects
// 0x0050 (0x0078 - 0x0028)
public class USQPhysicalMaterialEffects : UObject
{
	#region Offsets
//	private TMap<class USQPhysicalMaterial*, struct FSQEffectsSet> _offEffects                                                    = new ExternalOffset<TMap<FSQEffectsSet>>(0x0028, false);      // 0x0028(0x0050) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQPhysicalMaterialVehiclesEffects
// 0x0050 (0x0078 - 0x0028)
public class USQPhysicalMaterialVehiclesEffects : UObject
{
	#region Offsets
//	private TMap<class USQPhysicalMaterial*, struct FSQVehicleEffect> _offEffects                                                    = new ExternalOffset<TMap<FSQVehicleEffect>>(0x0028, false);   // 0x0028(0x0050) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQPhysicalMaterialSoldiersEffects
// 0x0050 (0x0078 - 0x0028)
public class USQPhysicalMaterialSoldiersEffects : UObject
{
	#region Offsets
//	private TMap<class USQPhysicalMaterial*, struct FSQSoldierEffect> _offEffects                                                    = new ExternalOffset<TMap<FSQSoldierEffect>>(0x0028, false);   // 0x0028(0x0050) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQPhysicsVolume
// 0x0003 (0x0290 - 0x028D)
public class ASQPhysicsVolume : APhysicsVolume
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQPlayerCameraManager
// 0x0024 (0x2718 - 0x26F4)
public class ASQPlayerCameraManager : APlayerCameraManager
{
	#region Offsets
	private ExternalOffset<TArray<UClass>>                    _offIgnoredShakeClasses                                        = new ExternalOffset<TArray<UClass>>(0x26F8, false);           // 0x26F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDrawStencils                                              = new ExternalOffset<byte/*(bool)*/>(0x2708);                  // 0x2708(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIgnoreInactiveEffects                                     = new ExternalOffset<byte/*(bool)*/>(0x2709);                  // 0x2709(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UMaterialInterface>                _offStencilPostProcessMaterial                                 = new ExternalOffset<UMaterialInterface>(0x2710, true);        // 0x2710(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<UClass>                                     IgnoredShakeClasses                                            => _offIgnoredShakeClasses.GetValue();
	public byte/*(bool)*/                                     bDrawStencils                                                  => _offbDrawStencils.GetValue();
	public byte/*(bool)*/                                     bIgnoreInactiveEffects                                         => _offbIgnoreInactiveEffects.GetValue();
	public UMaterialInterface                                 StencilPostProcessMaterial                                     => _offStencilPostProcessMaterial.GetValue();
	#endregion


}

// Class Squad.SQPlayerController_Menu
// 0x000C (0x0598 - 0x058C)
public class ASQPlayerController_Menu : APlayerController
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQPlayerState
// 0x0418 (0x0778 - 0x0360)
public class ASQPlayerState : APlayerState
{
	#region Offsets
	private ExternalOffset<float>                             _offTimeBetweenPlayerCacheChecking                             = new ExternalOffset<float>(0x03A4);                           // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnTeamStateChangedEvent                                    = new ExternalOffset<FScriptMulticastDelegate>(0x03D8, false); // 0x03D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnRoleChangedEvent                                         = new ExternalOffset<FScriptMulticastDelegate>(0x03E8, false); // 0x03E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQMapMarker>>              _offRelevantMapMarkers                                         = new ExternalOffset<TArray<ASQMapMarker>>(0x0410, false);     // 0x0410(0x0010) (BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQTeamState>                      _offOldTeamState                                               = new ExternalOffset<ASQTeamState>(0x0420, true);              // 0x0420(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamId                                                     = new ExternalOffset<int>(0x0428);                             // 0x0428(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offLastTeamChangeTime                                         = new ExternalOffset<int>(0x042C);                             // 0x042C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQSoldier>>                _offSoldiersOnScreenSortedByNearestDistanceCache               = new ExternalOffset<TArray<ASQSoldier>>(0x0440, false);       // 0x0440(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQSoldier>>                _offSoldiersHaveLineOfSightCache                               = new ExternalOffset<TArray<ASQSoldier>>(0x0450, false);       // 0x0450(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQSoldier>>                _offEnemiesHaveLineOfSightCache                                = new ExternalOffset<TArray<ASQSoldier>>(0x0460, false);       // 0x0460(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQSoldier>>                _offFriendliesHaveLineOfSightCache                             = new ExternalOffset<TArray<ASQSoldier>>(0x0470, false);       // 0x0470(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQSoldier>>                _offAllSoldiersCache                                           = new ExternalOffset<TArray<ASQSoldier>>(0x0480, false);       // 0x0480(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQSoldier>>                _offEnemiesCache                                               = new ExternalOffset<TArray<ASQSoldier>>(0x0490, false);       // 0x0490(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQSoldier>>                _offFriendliesCache                                            = new ExternalOffset<TArray<ASQSoldier>>(0x04A0, false);       // 0x04A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQSoldier>>                _offAllSoldiersSortedByNearestDistanceCache                    = new ExternalOffset<TArray<ASQSoldier>>(0x04B0, false);       // 0x04B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<APawn>>                     _offPawnsOnScreenSortedByNearestDistanceCache                  = new ExternalOffset<TArray<APawn>>(0x04C0, false);            // 0x04C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<APawn>>                     _offPawnsHaveLineOfSightCache                                  = new ExternalOffset<TArray<APawn>>(0x04D0, false);            // 0x04D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<APawn>>                     _offEnemyPawnsHaveLineOfSightCache                             = new ExternalOffset<TArray<APawn>>(0x04E0, false);            // 0x04E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<APawn>>                     _offFriendlyPawnsHaveLineOfSightCache                          = new ExternalOffset<TArray<APawn>>(0x04F0, false);            // 0x04F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<APawn>>                     _offAllPawnsCache                                              = new ExternalOffset<TArray<APawn>>(0x0500, false);            // 0x0500(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<APawn>>                     _offEnemyPawnsCache                                            = new ExternalOffset<TArray<APawn>>(0x0510, false);            // 0x0510(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<APawn>>                     _offFriendlyPawnsCache                                         = new ExternalOffset<TArray<APawn>>(0x0520, false);            // 0x0520(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<APawn>>                     _offAllPawnsSortedByNearestDistanceCache                       = new ExternalOffset<TArray<APawn>>(0x0530, false);            // 0x0530(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USQVehicleClaim>>           _offAuthorityVehicleClaimsNotExpired                           = new ExternalOffset<TArray<USQVehicleClaim>>(0x0540, false);  // 0x0540(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<FDeployableItemsArray>             _offPlacedDeployablesArray                                     = new ExternalOffset<FDeployableItemsArray>(0x0550, false);    // 0x0550(0x0118) (Net, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FPlayerStateDataObject>            _offPlayerStateData                                            = new ExternalOffset<FPlayerStateDataObject>(0x0668, false);   // 0x0668(0x0060) (BlueprintVisible, BlueprintReadOnly, Net, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<USQVehicleSeatComponent>           _offCurrentSeat                                                = new ExternalOffset<USQVehicleSeatComponent>(0x06C8, true);   // 0x06C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQTeamState>                      _offTeamState                                                  = new ExternalOffset<ASQTeamState>(0x06D0, true);              // 0x06D0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQSquadState>                     _offSquadState                                                 = new ExternalOffset<ASQSquadState>(0x06D8, true);             // 0x06D8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQSoldier>                        _offSoldier                                                    = new ExternalOffset<ASQSoldier>(0x06E0, true);                // 0x06E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<APawn>                             _offCurrentPawn                                                = new ExternalOffset<APawn>(0x06E8, true);                     // 0x06E8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQRoleSettings>                   _offCurrentRole                                                = new ExternalOffset<USQRoleSettings>(0x06F0, true);           // 0x06F0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQRoleSettings>                   _offDeployRole                                                 = new ExternalOffset<USQRoleSettings>(0x06F8, true);           // 0x06F8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offDeployRoleAvaliable                                        = new ExternalOffset<byte/*(bool)*/>(0x0700);                  // 0x0700(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQPersistedAmmoState>             _offPersistedAmmoState                                         = new ExternalOffset<FSQPersistedAmmoState>(0x0708, false);    // 0x0708(0x0018) (NativeAccessSpecifierPrivate)
//	private TMap<class UClass*, class UClass*>                _offReplacementClassesMap                                      = new ExternalOffset<TMap<UClass>>(0x0720, false);             // 0x0720(0x0050) (ZeroConstructor, NativeAccessSpecifierPrivate)
	private ExternalOffset<USQCoreStateComponent>             _offStateObject                                                = new ExternalOffset<USQCoreStateComponent>(0x0770, true);     // 0x0770(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              TimeBetweenPlayerCacheChecking                                 => _offTimeBetweenPlayerCacheChecking.GetValue();
	public FScriptMulticastDelegate                           OnTeamStateChangedEvent                                        => _offOnTeamStateChangedEvent.GetValue();
	public FScriptMulticastDelegate                           OnRoleChangedEvent                                             => _offOnRoleChangedEvent.GetValue();
	public TArray<ASQMapMarker>                               RelevantMapMarkers                                             => _offRelevantMapMarkers.GetValue();
	public ASQTeamState                                       OldTeamState                                                   => _offOldTeamState.GetValue();
	public int                                                TeamId                                                         => _offTeamId.GetValue();
	public int                                                LastTeamChangeTime                                             => _offLastTeamChangeTime.GetValue();
	public TArray<ASQSoldier>                                 SoldiersOnScreenSortedByNearestDistanceCache                   => _offSoldiersOnScreenSortedByNearestDistanceCache.GetValue();
	public TArray<ASQSoldier>                                 SoldiersHaveLineOfSightCache                                   => _offSoldiersHaveLineOfSightCache.GetValue();
	public TArray<ASQSoldier>                                 EnemiesHaveLineOfSightCache                                    => _offEnemiesHaveLineOfSightCache.GetValue();
	public TArray<ASQSoldier>                                 FriendliesHaveLineOfSightCache                                 => _offFriendliesHaveLineOfSightCache.GetValue();
	public TArray<ASQSoldier>                                 AllSoldiersCache                                               => _offAllSoldiersCache.GetValue();
	public TArray<ASQSoldier>                                 EnemiesCache                                                   => _offEnemiesCache.GetValue();
	public TArray<ASQSoldier>                                 FriendliesCache                                                => _offFriendliesCache.GetValue();
	public TArray<ASQSoldier>                                 AllSoldiersSortedByNearestDistanceCache                        => _offAllSoldiersSortedByNearestDistanceCache.GetValue();
	public TArray<APawn>                                      PawnsOnScreenSortedByNearestDistanceCache                      => _offPawnsOnScreenSortedByNearestDistanceCache.GetValue();
	public TArray<APawn>                                      PawnsHaveLineOfSightCache                                      => _offPawnsHaveLineOfSightCache.GetValue();
	public TArray<APawn>                                      EnemyPawnsHaveLineOfSightCache                                 => _offEnemyPawnsHaveLineOfSightCache.GetValue();
	public TArray<APawn>                                      FriendlyPawnsHaveLineOfSightCache                              => _offFriendlyPawnsHaveLineOfSightCache.GetValue();
	public TArray<APawn>                                      AllPawnsCache                                                  => _offAllPawnsCache.GetValue();
	public TArray<APawn>                                      EnemyPawnsCache                                                => _offEnemyPawnsCache.GetValue();
	public TArray<APawn>                                      FriendlyPawnsCache                                             => _offFriendlyPawnsCache.GetValue();
	public TArray<APawn>                                      AllPawnsSortedByNearestDistanceCache                           => _offAllPawnsSortedByNearestDistanceCache.GetValue();
	public TArray<USQVehicleClaim>                            AuthorityVehicleClaimsNotExpired                               => _offAuthorityVehicleClaimsNotExpired.GetValue();
	public FDeployableItemsArray                              PlacedDeployablesArray                                         => _offPlacedDeployablesArray.GetValue();
	public FPlayerStateDataObject                             PlayerStateData                                                => _offPlayerStateData.GetValue();
	public USQVehicleSeatComponent                            CurrentSeat                                                    => _offCurrentSeat.GetValue();
	public ASQTeamState                                       TeamState                                                      => _offTeamState.GetValue();
	public ASQSquadState                                      SquadState                                                     => _offSquadState.GetValue();
	public ASQSoldier                                         Soldier                                                        => _offSoldier.GetValue();
	public APawn                                              CurrentPawn                                                    => _offCurrentPawn.GetValue();
	public USQRoleSettings                                    CurrentRole                                                    => _offCurrentRole.GetValue();
	public USQRoleSettings                                    DeployRole                                                     => _offDeployRole.GetValue();
	public byte/*(bool)*/                                     DeployRoleAvaliable                                            => _offDeployRoleAvaliable.GetValue();
	public FSQPersistedAmmoState                              PersistedAmmoState                                             => _offPersistedAmmoState.GetValue();
	public USQCoreStateComponent                              StateObject                                                    => _offStateObject.GetValue();
	#endregion


}

// Class Squad.SQProgressWidget
// 0x0020 (0x0250 - 0x0230)
public class USQProgressWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<float>                             _offTimerDuration                                              = new ExternalOffset<float>(0x0230);                           // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbTimerActive                                               = new ExternalOffset<byte/*(bool)*/>(0x0234);                  // 0x0234(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offTimeRemaining                                              = new ExternalOffset<float>(0x0238);                           // 0x0238(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnTimerReached                                             = new ExternalOffset<FScriptMulticastDelegate>(0x0240, false); // 0x0240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              TimerDuration                                                  => _offTimerDuration.GetValue();
	public byte/*(bool)*/                                     bTimerActive                                                   => _offbTimerActive.GetValue();
	public float                                              TimeRemaining                                                  => _offTimeRemaining.GetValue();
	public FScriptMulticastDelegate                           OnTimerReached                                                 => _offOnTimerReached.GetValue();
	#endregion


}

// Class Squad.SQProjectileMovement
// 0x005A (0x01F2 - 0x0198)
public class USQProjectileMovement : UProjectileMovementComponent
{
	#region Offsets
	private ExternalOffset<FVector>                           _offConstantAcceleration                                       = new ExternalOffset<FVector>(0x01E0, false);                  // 0x01E0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offConstantAccelerationTimeout                                = new ExternalOffset<float>(0x01EC);                           // 0x01EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIgnoreGravityDuringConstantAcceleration                   = new ExternalOffset<byte/*(bool)*/>(0x01F0);                  // 0x01F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIgnoreGravity                                             = new ExternalOffset<byte/*(bool)*/>(0x01F1);                  // 0x01F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FVector                                            ConstantAcceleration                                           => _offConstantAcceleration.GetValue();
	public float                                              ConstantAccelerationTimeout                                    => _offConstantAccelerationTimeout.GetValue();
	public byte/*(bool)*/                                     bIgnoreGravityDuringConstantAcceleration                       => _offbIgnoreGravityDuringConstantAcceleration.GetValue();
	public byte/*(bool)*/                                     bIgnoreGravity                                                 => _offbIgnoreGravity.GetValue();
	#endregion


}

// Class Squad.SQProjectileRootComponent
// 0x000B (0x0410 - 0x0405)
public class USQProjectileRootComponent : UPrimitiveComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQProjectileSpawnerComponent
// 0x00E8 (0x0268 - 0x0180)
public class USQProjectileSpawnerComponent : USceneComponent
{
	#region Offsets
	private ExternalOffset<float>                             _offMuzzleVelocity                                             = new ExternalOffset<float>(0x0268);                           // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxDamageToApply                                           = new ExternalOffset<float>(0x026C);                           // 0x026C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCreatedOnServerForDamage                                  = new ExternalOffset<byte/*(bool)*/>(0x0270);                  // 0x0270(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTimeBetweenShots                                           = new ExternalOffset<float>(0x0274);                           // 0x0274(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offRoundsBetweenTracer                                        = new ExternalOffset<int>(0x0278);                             // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offShotDeviation                                              = new ExternalOffset<float>(0x027C);                           // 0x027C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offShotCounter                                                = new ExternalOffset<int>(0x0280);                             // 0x0280(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsFiring                                                  = new ExternalOffset<byte/*(bool)*/>(0x0284);                  // 0x0284(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnFired                                                    = new ExternalOffset<FScriptMulticastDelegate>(0x0288, false); // 0x0288(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnStartFiring                                              = new ExternalOffset<FScriptMulticastDelegate>(0x0298, false); // 0x0298(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnStopFiring                                               = new ExternalOffset<FScriptMulticastDelegate>(0x02A8, false); // 0x02A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              MuzzleVelocity                                                 => _offMuzzleVelocity.GetValue();
	public float                                              MaxDamageToApply                                               => _offMaxDamageToApply.GetValue();
	public byte/*(bool)*/                                     bCreatedOnServerForDamage                                      => _offbCreatedOnServerForDamage.GetValue();
	public float                                              TimeBetweenShots                                               => _offTimeBetweenShots.GetValue();
	public int                                                RoundsBetweenTracer                                            => _offRoundsBetweenTracer.GetValue();
	public float                                              ShotDeviation                                                  => _offShotDeviation.GetValue();
	public int                                                ShotCounter                                                    => _offShotCounter.GetValue();
	public byte/*(bool)*/                                     bIsFiring                                                      => _offbIsFiring.GetValue();
	public FScriptMulticastDelegate                           OnFired                                                        => _offOnFired.GetValue();
	public FScriptMulticastDelegate                           OnStartFiring                                                  => _offOnStartFiring.GetValue();
	public FScriptMulticastDelegate                           OnStopFiring                                                   => _offOnStopFiring.GetValue();
	#endregion


}

// Class Squad.SQProtectionZone
// 0x00B8 (0x02F0 - 0x0238)
public class ASQProtectionZone : AActor
{
	#region Offsets
	private ExternalOffset<UBoxComponent>                     _offDummyPresetCollisionCPP                                    = new ExternalOffset<UBoxComponent>(0x0250, true);             // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offKillHostileInSeconds                                       = new ExternalOffset<float>(0x0258);                           // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offTeamId                                                     = new ExternalOffset<char>(0x0288, false);                     // 0x0288(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offDeployableDestroyedText                                    = new ExternalOffset<FText>(0x0290, false);                    // 0x0290(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offProjectileDestroyedText                                    = new ExternalOffset<FText>(0x02A8, false);                    // 0x02A8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offAccessDeniedText                                           = new ExternalOffset<FText>(0x02C0, false);                    // 0x02C0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offEnemyProtectionZoneText                                    = new ExternalOffset<FText>(0x02D8, false);                    // 0x02D8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UBoxComponent                                      DummyPresetCollisionCPP                                        => _offDummyPresetCollisionCPP.GetValue();
	public float                                              KillHostileInSeconds                                           => _offKillHostileInSeconds.GetValue();
	public FText                                              DeployableDestroyedText                                        => _offDeployableDestroyedText.GetValue();
	public FText                                              ProjectileDestroyedText                                        => _offProjectileDestroyedText.GetValue();
	public FText                                              AccessDeniedText                                               => _offAccessDeniedText.GetValue();
	public FText                                              EnemyProtectionZoneText                                        => _offEnemyProtectionZoneText.GetValue();
	#endregion


}

// Class Squad.SQRadialButton
// 0x0014 (0x02F8 - 0x02E4)
public class USQRadialButton : USQBaseButton
{
	#region Offsets
	private ExternalOffset<ESQRadialWidgetSizeEnum>           _offRadialWidgetSize                                           = new ExternalOffset<ESQRadialWidgetSizeEnum>(0x02E8, false);  // 0x02E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRadialWidgetAngle                                          = new ExternalOffset<float>(0x02EC);                           // 0x02EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offMouseEnterSoundCue                                         = new ExternalOffset<USoundCue>(0x02F0, true);                 // 0x02F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ESQRadialWidgetSizeEnum                            RadialWidgetSize                                               => _offRadialWidgetSize.GetValue();
	public float                                              RadialWidgetAngle                                              => _offRadialWidgetAngle.GetValue();
	public USoundCue                                          MouseEnterSoundCue                                             => _offMouseEnterSoundCue.GetValue();
	#endregion


}

// Class Squad.SQRadialIconButton
// 0x0114 (0x040C - 0x02F8)
public class USQRadialIconButton : USQRadialButton
{
	#region Offsets
	private ExternalOffset<FVector2D>                         _offSmallOuterRimDistOffset                                    = new ExternalOffset<FVector2D>(0x02F8, false);                // 0x02F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offMediumOuterRimDistOffset                                   = new ExternalOffset<FVector2D>(0x0300, false);                // 0x0300(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offLargeOuterRimDistOffset                                    = new ExternalOffset<FVector2D>(0x0308, false);                // 0x0308(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offSmallIconDistOffset                                        = new ExternalOffset<FVector2D>(0x0310, false);                // 0x0310(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offMediumIconDistOffset                                       = new ExternalOffset<FVector2D>(0x0318, false);                // 0x0318(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offLargeIconDistOffset                                        = new ExternalOffset<FVector2D>(0x0320, false);                // 0x0320(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offInnerHoverImage                                            = new ExternalOffset<UImage>(0x0328, true);                    // 0x0328(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offIconImage                                                  = new ExternalOffset<UImage>(0x0330, true);                    // 0x0330(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offOuterRimImage                                              = new ExternalOffset<UImage>(0x0338, true);                    // 0x0338(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offIconImageTexture                                           = new ExternalOffset<UTexture2D>(0x0340, true);                // 0x0340(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offIconImageActiveColor                                       = new ExternalOffset<FLinearColor>(0x0348, false);             // 0x0348(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offIconImageInactiveColor                                     = new ExternalOffset<FLinearColor>(0x0358, false);             // 0x0358(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offIconImageHoveredColor                                      = new ExternalOffset<FLinearColor>(0x0368, false);             // 0x0368(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offIconImagePressedColor                                      = new ExternalOffset<FLinearColor>(0x0378, false);             // 0x0378(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offInnerHoverSmallImageTexture                                = new ExternalOffset<UTexture2D>(0x0388, true);                // 0x0388(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offInnerHoverMediumImageTexture                               = new ExternalOffset<UTexture2D>(0x0390, true);                // 0x0390(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offInnerHoverLargeImageTexture                                = new ExternalOffset<UTexture2D>(0x0398, true);                // 0x0398(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offInnerHoverInactiveColor                                    = new ExternalOffset<FLinearColor>(0x03A0, false);             // 0x03A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offInnerHoverHoveredColor                                     = new ExternalOffset<FLinearColor>(0x03B0, false);             // 0x03B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offInnerHoverPressedColor                                     = new ExternalOffset<FLinearColor>(0x03C0, false);             // 0x03C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offOuterRimSmallImageTexture                                  = new ExternalOffset<UTexture2D>(0x03D0, true);                // 0x03D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offOuterRimMediumImageTexture                                 = new ExternalOffset<UTexture2D>(0x03D8, true);                // 0x03D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offOuterRimLargeImageTexture                                  = new ExternalOffset<UTexture2D>(0x03E0, true);                // 0x03E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offOuterRimActiveColor                                        = new ExternalOffset<FLinearColor>(0x03E8, false);             // 0x03E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offOuterRimInactiveColor                                      = new ExternalOffset<FLinearColor>(0x03F8, false);             // 0x03F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offIconSize                                                   = new ExternalOffset<float>(0x0408);                           // 0x0408(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FVector2D                                          SmallOuterRimDistOffset                                        => _offSmallOuterRimDistOffset.GetValue();
	public FVector2D                                          MediumOuterRimDistOffset                                       => _offMediumOuterRimDistOffset.GetValue();
	public FVector2D                                          LargeOuterRimDistOffset                                        => _offLargeOuterRimDistOffset.GetValue();
	public FVector2D                                          SmallIconDistOffset                                            => _offSmallIconDistOffset.GetValue();
	public FVector2D                                          MediumIconDistOffset                                           => _offMediumIconDistOffset.GetValue();
	public FVector2D                                          LargeIconDistOffset                                            => _offLargeIconDistOffset.GetValue();
	public UImage                                             InnerHoverImage                                                => _offInnerHoverImage.GetValue();
	public UImage                                             IconImage                                                      => _offIconImage.GetValue();
	public UImage                                             OuterRimImage                                                  => _offOuterRimImage.GetValue();
	public UTexture2D                                         IconImageTexture                                               => _offIconImageTexture.GetValue();
	public FLinearColor                                       IconImageActiveColor                                           => _offIconImageActiveColor.GetValue();
	public FLinearColor                                       IconImageInactiveColor                                         => _offIconImageInactiveColor.GetValue();
	public FLinearColor                                       IconImageHoveredColor                                          => _offIconImageHoveredColor.GetValue();
	public FLinearColor                                       IconImagePressedColor                                          => _offIconImagePressedColor.GetValue();
	public UTexture2D                                         InnerHoverSmallImageTexture                                    => _offInnerHoverSmallImageTexture.GetValue();
	public UTexture2D                                         InnerHoverMediumImageTexture                                   => _offInnerHoverMediumImageTexture.GetValue();
	public UTexture2D                                         InnerHoverLargeImageTexture                                    => _offInnerHoverLargeImageTexture.GetValue();
	public FLinearColor                                       InnerHoverInactiveColor                                        => _offInnerHoverInactiveColor.GetValue();
	public FLinearColor                                       InnerHoverHoveredColor                                         => _offInnerHoverHoveredColor.GetValue();
	public FLinearColor                                       InnerHoverPressedColor                                         => _offInnerHoverPressedColor.GetValue();
	public UTexture2D                                         OuterRimSmallImageTexture                                      => _offOuterRimSmallImageTexture.GetValue();
	public UTexture2D                                         OuterRimMediumImageTexture                                     => _offOuterRimMediumImageTexture.GetValue();
	public UTexture2D                                         OuterRimLargeImageTexture                                      => _offOuterRimLargeImageTexture.GetValue();
	public FLinearColor                                       OuterRimActiveColor                                            => _offOuterRimActiveColor.GetValue();
	public FLinearColor                                       OuterRimInactiveColor                                          => _offOuterRimInactiveColor.GetValue();
	public float                                              IconSize                                                       => _offIconSize.GetValue();
	#endregion


}

// Class Squad.SQRadialCenterRoleButton
// 0x0014 (0x0420 - 0x040C)
public class USQRadialCenterRoleButton : USQRadialIconButton
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbIsUnavailable                                             = new ExternalOffset<byte/*(bool)*/>(0x0410);                  // 0x0410(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQRoleSettings>                   _offReferenceRole                                              = new ExternalOffset<USQRoleSettings>(0x0418, true);           // 0x0418(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bIsUnavailable                                                 => _offbIsUnavailable.GetValue();
	public USQRoleSettings                                    ReferenceRole                                                  => _offReferenceRole.GetValue();
	#endregion


}

// Class Squad.SQRadialDeployableButton
// 0x008C (0x0498 - 0x040C)
public class USQRadialDeployableButton : USQRadialIconButton
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbIsUnavailable                                             = new ExternalOffset<byte/*(bool)*/>(0x0410);                  // 0x0410(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offDeployableLimit                                            = new ExternalOffset<int>(0x0414);                             // 0x0414(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offPlacedDeployables                                          = new ExternalOffset<int>(0x0418);                             // 0x0418(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offPlacementCost                                              = new ExternalOffset<int>(0x041C);                             // 0x041C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offCurrentConstructionPoints                                  = new ExternalOffset<int>(0x0420);                             // 0x0420(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQForwardBase>                    _offCurrentFob                                                 = new ExternalOffset<ASQForwardBase>(0x0428, true);            // 0x0428(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offTextUnAvailableColor                                       = new ExternalOffset<FLinearColor>(0x0430, false);             // 0x0430(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offTextAvailableColor                                         = new ExternalOffset<FLinearColor>(0x0440, false);             // 0x0440(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offRimAvailableColor                                          = new ExternalOffset<FLinearColor>(0x0450, false);             // 0x0450(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offRimUnAvailableColor                                        = new ExternalOffset<FLinearColor>(0x0460, false);             // 0x0460(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offIconUnavailableColor                                       = new ExternalOffset<FLinearColor>(0x0470, false);             // 0x0470(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offInnerHoverUnavailableColor                                 = new ExternalOffset<FLinearColor>(0x0480, false);             // 0x0480(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offRelatedDeployable                                          = new ExternalOffset<UClass>(0x0490, true);                    // 0x0490(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bIsUnavailable                                                 => _offbIsUnavailable.GetValue();
	public int                                                DeployableLimit                                                => _offDeployableLimit.GetValue();
	public int                                                PlacedDeployables                                              => _offPlacedDeployables.GetValue();
	public int                                                PlacementCost                                                  => _offPlacementCost.GetValue();
	public int                                                CurrentConstructionPoints                                      => _offCurrentConstructionPoints.GetValue();
	public ASQForwardBase                                     CurrentFob                                                     => _offCurrentFob.GetValue();
	public FLinearColor                                       TextUnAvailableColor                                           => _offTextUnAvailableColor.GetValue();
	public FLinearColor                                       TextAvailableColor                                             => _offTextAvailableColor.GetValue();
	public FLinearColor                                       RimAvailableColor                                              => _offRimAvailableColor.GetValue();
	public FLinearColor                                       RimUnAvailableColor                                            => _offRimUnAvailableColor.GetValue();
	public FLinearColor                                       IconUnavailableColor                                           => _offIconUnavailableColor.GetValue();
	public FLinearColor                                       InnerHoverUnavailableColor                                     => _offInnerHoverUnavailableColor.GetValue();
	public UClass                                             RelatedDeployable                                              => _offRelatedDeployable.GetValue();
	#endregion


}

// Class Squad.SQRadialIconToggleButton
// 0x0018 (0x0424 - 0x040C)
public class USQRadialIconToggleButton : USQRadialIconButton
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbToggled                                                   = new ExternalOffset<byte/*(bool)*/>(0x0410);                  // 0x0410(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offInnerHoverToggledColor                                     = new ExternalOffset<FLinearColor>(0x0414, false);             // 0x0414(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bToggled                                                       => _offbToggled.GetValue();
	public FLinearColor                                       InnerHoverToggledColor                                         => _offInnerHoverToggledColor.GetValue();
	#endregion


}

// Class Squad.SQRadialRoleIconButton
// 0x0054 (0x0460 - 0x040C)
public class USQRadialRoleIconButton : USQRadialIconButton
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbIsUnavailable                                             = new ExternalOffset<byte/*(bool)*/>(0x0410);                  // 0x0410(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offRimAvailableColor                                          = new ExternalOffset<FLinearColor>(0x0414, false);             // 0x0414(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offRimUnAvailableColor                                        = new ExternalOffset<FLinearColor>(0x0424, false);             // 0x0424(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offIconUnavailableColor                                       = new ExternalOffset<FLinearColor>(0x0434, false);             // 0x0434(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offInnerHoverUnavailableColor                                 = new ExternalOffset<FLinearColor>(0x0444, false);             // 0x0444(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQRoleSettings>                   _offReferenceRole                                              = new ExternalOffset<USQRoleSettings>(0x0458, true);           // 0x0458(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bIsUnavailable                                                 => _offbIsUnavailable.GetValue();
	public FLinearColor                                       RimAvailableColor                                              => _offRimAvailableColor.GetValue();
	public FLinearColor                                       RimUnAvailableColor                                            => _offRimUnAvailableColor.GetValue();
	public FLinearColor                                       IconUnavailableColor                                           => _offIconUnavailableColor.GetValue();
	public FLinearColor                                       InnerHoverUnavailableColor                                     => _offInnerHoverUnavailableColor.GetValue();
	public USQRoleSettings                                    ReferenceRole                                                  => _offReferenceRole.GetValue();
	#endregion


}

// Class Squad.SQRandomizer
// 0x001C (0x0254 - 0x0238)
public class ASQRandomizer : AActor
{
	#region Offsets
	private ExternalOffset<USceneComponent>                   _offRoot                                                       = new ExternalOffset<USceneComponent>(0x0248, true);           // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offRandomSeed                                                 = new ExternalOffset<int>(0x0250);                             // 0x0250(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public USceneComponent                                    Root                                                           => _offRoot.GetValue();
	public int                                                RandomSeed                                                     => _offRandomSeed.GetValue();
	#endregion


}

// Class Squad.SQRandomizer_SceneComponent
// 0x000C (0x0260 - 0x0254)
public class ASQRandomizer_SceneComponent : ASQRandomizer
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQRandomizer_StaticMesh
// 0x0024 (0x0278 - 0x0254)
public class ASQRandomizer_StaticMesh : ASQRandomizer
{
	#region Offsets
	private ExternalOffset<UStaticMeshComponent>              _offMeshComponent                                              = new ExternalOffset<UStaticMeshComponent>(0x0260, true);      // 0x0260(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<UStaticMesh>>               _offMeshes                                                     = new ExternalOffset<TArray<UStaticMesh>>(0x0268, false);      // 0x0268(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public UStaticMeshComponent                               MeshComponent                                                  => _offMeshComponent.GetValue();
	public TArray<UStaticMesh>                                Meshes                                                         => _offMeshes.GetValue();
	#endregion


}

// Class Squad.SQRearmSource
// 0x0000 (0x0028 - 0x0028)
public class USQRearmSource : UInterface
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQRepairEquipable
// 0x0034 (0x0498 - 0x0464)
public class ASQRepairEquipable : ASQEquipableItem
{
	#region Offsets
	private ExternalOffset<float>                             _offTraceLengthCentimeters                                     = new ExternalOffset<float>(0x0480);                           // 0x0480(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQVehicle>                        _offRepairTarget                                               = new ExternalOffset<ASQVehicle>(0x0488, true);                // 0x0488(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offAudioComponent                                             = new ExternalOffset<UAudioComponent>(0x0490, true);           // 0x0490(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              TraceLengthCentimeters                                         => _offTraceLengthCentimeters.GetValue();
	public ASQVehicle                                         RepairTarget                                                   => _offRepairTarget.GetValue();
	public UAudioComponent                                    AudioComponent                                                 => _offAudioComponent.GetValue();
	#endregion


}

// Class Squad.SQRepairTool
// 0x0011 (0x04A9 - 0x0498)
public class ASQRepairTool : ASQRepairEquipable
{
	#region Offsets
	private ExternalOffset<USQRepairToolStaticInfo>           _offRepairToolStaticInfo                                       = new ExternalOffset<USQRepairToolStaticInfo>(0x0498, true);   // 0x0498(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FTimerHandle>                      _offTimerHandle                                                = new ExternalOffset<FTimerHandle>(0x04A0, false);             // 0x04A0(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseHammer                                                 = new ExternalOffset<byte/*(bool)*/>(0x04A8);                  // 0x04A8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public USQRepairToolStaticInfo                            RepairToolStaticInfo                                           => _offRepairToolStaticInfo.GetValue();
	public FTimerHandle                                       TimerHandle                                                    => _offTimerHandle.GetValue();
	public byte/*(bool)*/                                     bUseHammer                                                     => _offbUseHammer.GetValue();
	#endregion


}

// Class Squad.SQRepairToolStaticInfo
// 0x0070 (0x0548 - 0x04D8)
public class USQRepairToolStaticInfo : USQItemStaticInfo
{
	#region Offsets
	private ExternalOffset<UAnimMontage>                      _offRepairingWeaponBeginUseMontage                             = new ExternalOffset<UAnimMontage>(0x04D8, true);              // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offRepairing1pBeginUseMontage                                 = new ExternalOffset<UAnimMontage>(0x04E0, true);              // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offRepairing3pBeginUseMontage                                 = new ExternalOffset<UAnimMontage>(0x04E8, true);              // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offRepairingWeaponEndUseMontage                               = new ExternalOffset<UAnimMontage>(0x04F0, true);              // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offRepairing1pEndUseMontage                                   = new ExternalOffset<UAnimMontage>(0x04F8, true);              // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offRepairing3pEndUseMontage                                   = new ExternalOffset<UAnimMontage>(0x0500, true);              // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offAltRepairingWeaponBeginUseMontage                          = new ExternalOffset<UAnimMontage>(0x0508, true);              // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offAltRepairing1pBeginUseMontage                              = new ExternalOffset<UAnimMontage>(0x0510, true);              // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offAltRepairing3pBeginUseMontage                              = new ExternalOffset<UAnimMontage>(0x0518, true);              // 0x0518(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offAltRepairingWeaponEndUseMontage                            = new ExternalOffset<UAnimMontage>(0x0520, true);              // 0x0520(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offAltRepairing1pEndUseMontage                                = new ExternalOffset<UAnimMontage>(0x0528, true);              // 0x0528(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offAltRepairing3pEndUseMontage                                = new ExternalOffset<UAnimMontage>(0x0530, true);              // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offRepairingSound                                             = new ExternalOffset<USoundCue>(0x0538, true);                 // 0x0538(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRepairingInterval                                          = new ExternalOffset<float>(0x0540);                           // 0x0540(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRepairAmount                                               = new ExternalOffset<float>(0x0544);                           // 0x0544(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UAnimMontage                                       RepairingWeaponBeginUseMontage                                 => _offRepairingWeaponBeginUseMontage.GetValue();
	public UAnimMontage                                       Repairing1pBeginUseMontage                                     => _offRepairing1pBeginUseMontage.GetValue();
	public UAnimMontage                                       Repairing3pBeginUseMontage                                     => _offRepairing3pBeginUseMontage.GetValue();
	public UAnimMontage                                       RepairingWeaponEndUseMontage                                   => _offRepairingWeaponEndUseMontage.GetValue();
	public UAnimMontage                                       Repairing1pEndUseMontage                                       => _offRepairing1pEndUseMontage.GetValue();
	public UAnimMontage                                       Repairing3pEndUseMontage                                       => _offRepairing3pEndUseMontage.GetValue();
	public UAnimMontage                                       AltRepairingWeaponBeginUseMontage                              => _offAltRepairingWeaponBeginUseMontage.GetValue();
	public UAnimMontage                                       AltRepairing1pBeginUseMontage                                  => _offAltRepairing1pBeginUseMontage.GetValue();
	public UAnimMontage                                       AltRepairing3pBeginUseMontage                                  => _offAltRepairing3pBeginUseMontage.GetValue();
	public UAnimMontage                                       AltRepairingWeaponEndUseMontage                                => _offAltRepairingWeaponEndUseMontage.GetValue();
	public UAnimMontage                                       AltRepairing1pEndUseMontage                                    => _offAltRepairing1pEndUseMontage.GetValue();
	public UAnimMontage                                       AltRepairing3pEndUseMontage                                    => _offAltRepairing3pEndUseMontage.GetValue();
	public USoundCue                                          RepairingSound                                                 => _offRepairingSound.GetValue();
	public float                                              RepairingInterval                                              => _offRepairingInterval.GetValue();
	public float                                              RepairAmount                                                   => _offRepairAmount.GetValue();
	#endregion


}

// Class Squad.SQReplicationGraph
// 0x0510 (0x05C8 - 0x00B8)
public class USQReplicationGraph : UReplicationGraph
{
	#region Offsets
	private ExternalOffset<TArray<UClass>>                    _offSpatializedClasses                                         = new ExternalOffset<TArray<UClass>>(0x0498, false);           // 0x0498(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<UClass>>                    _offNonSpatializedChildClasses                                 = new ExternalOffset<TArray<UClass>>(0x04A8, false);           // 0x04A8(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<UClass>>                    _offAlwaysRelevantClasses                                      = new ExternalOffset<TArray<UClass>>(0x04B8, false);           // 0x04B8(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<UReplicationGraphNode_ActorList>   _offAlwaysRelevantNode                                         = new ExternalOffset<UReplicationGraphNode_ActorList>(0x04C8, true); // 0x04C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UReplicationGraphNode_GridSpatialization2D> _offGridNode                                                   = new ExternalOffset<UReplicationGraphNode_GridSpatialization2D>(0x04D0, true); // 0x04D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private TMap<int, class USQReplicationGraphNode_GridSpatialization2DEx*> _offTeamGridNodes                                              = new ExternalOffset<TMap<USQReplicationGraphNode_GridSpatialization2DEx>>(0x04D8, false); // 0x04D8(0x0050) (ZeroConstructor, NativeAccessSpecifierPublic)
//	private TMap<int, class UReplicationGraphNode_ActorList*> _offTeamAlwaysRelevantNodes                                    = new ExternalOffset<TMap<UReplicationGraphNode_ActorList>>(0x0528, false); // 0x0528(0x0050) (ZeroConstructor, NativeAccessSpecifierPublic)
//	private TMap<struct FTeamSquadId, class UReplicationGraphNode_ActorList*> _offTeamSquadsAlwaysRelevantNodes                              = new ExternalOffset<TMap<UReplicationGraphNode_ActorList>>(0x0578, false); // 0x0578(0x0050) (ZeroConstructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<UClass>                                     SpatializedClasses                                             => _offSpatializedClasses.GetValue();
	public TArray<UClass>                                     NonSpatializedChildClasses                                     => _offNonSpatializedChildClasses.GetValue();
	public TArray<UClass>                                     AlwaysRelevantClasses                                          => _offAlwaysRelevantClasses.GetValue();
	public UReplicationGraphNode_ActorList                    AlwaysRelevantNode                                             => _offAlwaysRelevantNode.GetValue();
	public UReplicationGraphNode_GridSpatialization2D         GridNode                                                       => _offGridNode.GetValue();
	#endregion


}

// Class Squad.SQReplicationGraphNode_AlwaysRelevant_ForConnection
// 0x0258 (0x0290 - 0x0038)
public class USQReplicationGraphNode_AlwaysRelevant_ForConnection : UReplicationGraphNode
{
	#region Offsets
	private ExternalOffset<AActor>                            _offLastPawn                                                   = new ExternalOffset<AActor>(0x0278, true);                    // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<TArray<FAlwaysRelevantActorInfo>>  _offPastRelevantActors                                         = new ExternalOffset<TArray<FAlwaysRelevantActorInfo>>(0x0280, false); // 0x0280(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public AActor                                             LastPawn                                                       => _offLastPawn.GetValue();
	public TArray<FAlwaysRelevantActorInfo>                   PastRelevantActors                                             => _offPastRelevantActors.GetValue();
	#endregion


}

// Class Squad.SQReplicationGraphNode_PlayerStateFrequencyLimiter
// 0x0018 (0x0050 - 0x0038)
public class USQReplicationGraphNode_PlayerStateFrequencyLimiter : UReplicationGraphNode
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQReplicationGraphNode_GridSpatialization2DEx
// 0x01F0 (0x0240 - 0x0050)
public class USQReplicationGraphNode_GridSpatialization2DEx : UReplicationGraphNode_GridSpatialization2D
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQRichTextBlock
// 0x0120 (0x0228 - 0x0108)
public class USQRichTextBlock : UWidget
{
	#region Offsets
	private ExternalOffset<FText>                             _offText                                                       = new ExternalOffset<FText>(0x0108, false);                    // 0x0108(0x0018) (Edit, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FScriptDelegate>                   _offTextDelegate                                               = new ExternalOffset<FScriptDelegate>(0x0120, false);          // 0x0120(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FSlateFontInfo>                    _offFont                                                       = new ExternalOffset<FSlateFontInfo>(0x0130, false);           // 0x0130(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FLinearColor>                      _offColor                                                      = new ExternalOffset<FLinearColor>(0x0180, false);             // 0x0180(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FSlateFontInfo>                    _offHyperlinkFont                                              = new ExternalOffset<FSlateFontInfo>(0x0190, false);           // 0x0190(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FLinearColor>                      _offHyperlinkColor                                             = new ExternalOffset<FLinearColor>(0x01E0, false);             // 0x01E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TEnumAsByte<ETextJustify>>         _offJustification                                              = new ExternalOffset<TEnumAsByte<ETextJustify>>(0x01F0, false); // 0x01F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offAutoWrapText                                               = new ExternalOffset<byte/*(bool)*/>(0x01F1);                  // 0x01F1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offWrapTextAt                                                 = new ExternalOffset<float>(0x01F4);                           // 0x01F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FMargin>                           _offMargin                                                     = new ExternalOffset<FMargin>(0x01F8, false);                  // 0x01F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offLineHeightPercentage                                       = new ExternalOffset<float>(0x0208);                           // 0x0208(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FText>                             _offTextWithMarkup                                             = new ExternalOffset<FText>(0x0210, false);                    // 0x0210(0x0018) (Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public FText                                              Text                                                           => _offText.GetValue();
	public FScriptDelegate                                    TextDelegate                                                   => _offTextDelegate.GetValue();
	public FSlateFontInfo                                     Font                                                           => _offFont.GetValue();
	public FLinearColor                                       Color                                                          => _offColor.GetValue();
	public FSlateFontInfo                                     HyperlinkFont                                                  => _offHyperlinkFont.GetValue();
	public FLinearColor                                       HyperlinkColor                                                 => _offHyperlinkColor.GetValue();
	public TEnumAsByte<ETextJustify>                          Justification                                                  => _offJustification.GetValue();
	public byte/*(bool)*/                                     AutoWrapText                                                   => _offAutoWrapText.GetValue();
	public float                                              WrapTextAt                                                     => _offWrapTextAt.GetValue();
	public FMargin                                            Margin                                                         => _offMargin.GetValue();
	public float                                              LineHeightPercentage                                           => _offLineHeightPercentage.GetValue();
	public FText                                              TextWithMarkup                                                 => _offTextWithMarkup.GetValue();
	#endregion


}

// Class Squad.SQRoleList
// 0x0048 (0x0278 - 0x0230)
public class USQRoleList : USQUserWidget
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbCanRunTick                                                = new ExternalOffset<byte/*(bool)*/>(0x0230);                  // 0x0230(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USQRoleListGroup>>          _offRoleGroupWidgets                                           = new ExternalOffset<TArray<USQRoleListGroup>>(0x0238, false); // 0x0238(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USQRoleListUnit>>           _offRoleUnitWidgets                                            = new ExternalOffset<TArray<USQRoleListUnit>>(0x0248, false);  // 0x0248(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offGridColumns                                                = new ExternalOffset<int>(0x0258);                             // 0x0258(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offOwnerPlayerState                                           = new ExternalOffset<ASQPlayerState>(0x0260, true);            // 0x0260(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerController>               _offOwnerController                                            = new ExternalOffset<ASQPlayerController>(0x0268, true);       // 0x0268(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offRoleWidgetType                                             = new ExternalOffset<UClass>(0x02C0, true);                    // 0x02C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bCanRunTick                                                    => _offbCanRunTick.GetValue();
	public TArray<USQRoleListGroup>                           RoleGroupWidgets                                               => _offRoleGroupWidgets.GetValue();
	public TArray<USQRoleListUnit>                            RoleUnitWidgets                                                => _offRoleUnitWidgets.GetValue();
	public int                                                GridColumns                                                    => _offGridColumns.GetValue();
	public ASQPlayerState                                     OwnerPlayerState                                               => _offOwnerPlayerState.GetValue();
	public ASQPlayerController                                OwnerController                                                => _offOwnerController.GetValue();
	public UClass                                             RoleWidgetType                                                 => _offRoleWidgetType.GetValue();
	#endregion


}

// Class Squad.SQRoleListGroup
// 0x0038 (0x0268 - 0x0230)
public class USQRoleListGroup : USQUserWidget
{
	#region Offsets
	private ExternalOffset<ESQRoleTypeEnum>                   _offRoleType                                                   = new ExternalOffset<ESQRoleTypeEnum>(0x0230, false);          // 0x0230(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offGroupHeaderText                                            = new ExternalOffset<FText>(0x0238, false);                    // 0x0238(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<UCanvasPanel>                      _offGroupHeader                                                = new ExternalOffset<UCanvasPanel>(0x0250, true);              // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UUniformGridPanel>                 _offRoleGrid                                                   = new ExternalOffset<UUniformGridPanel>(0x0258, true);         // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offOwnerPlayerState                                           = new ExternalOffset<ASQPlayerState>(0x0260, true);            // 0x0260(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ESQRoleTypeEnum                                    RoleType                                                       => _offRoleType.GetValue();
	public FText                                              GroupHeaderText                                                => _offGroupHeaderText.GetValue();
	public UCanvasPanel                                       GroupHeader                                                    => _offGroupHeader.GetValue();
	public UUniformGridPanel                                  RoleGrid                                                       => _offRoleGrid.GetValue();
	public ASQPlayerState                                     OwnerPlayerState                                               => _offOwnerPlayerState.GetValue();
	#endregion


}

// Class Squad.SQRoleListUnit
// 0x00D0 (0x0300 - 0x0230)
public class USQRoleListUnit : USQUserWidget
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbCanTick                                                   = new ExternalOffset<byte/*(bool)*/>(0x0230);                  // 0x0230(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCanvasPanel>                      _offSizeCanvas                                                 = new ExternalOffset<UCanvasPanel>(0x0238, true);              // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offMainBgImage                                                = new ExternalOffset<UImage>(0x0240, true);                    // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offKitNameBgImage                                             = new ExternalOffset<UImage>(0x0248, true);                    // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offKitIcon                                                    = new ExternalOffset<UImage>(0x0250, true);                    // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offSpecialIcon                                                = new ExternalOffset<UImage>(0x0258, true);                    // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offKitNameTextBlock                                           = new ExternalOffset<UTextBlock>(0x0260, true);                // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offKitCountTeamTextBlock                                      = new ExternalOffset<UTextBlock>(0x0268, true);                // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offKitCountTextBlock                                          = new ExternalOffset<UTextBlock>(0x0270, true);                // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offRoleToolTipWidgetClass                                     = new ExternalOffset<UClass>(0x0278, true);                    // 0x0278(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offBgColorSelectedRole                                        = new ExternalOffset<FLinearColor>(0x0280, false);             // 0x0280(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offBgColorNotAvaliable                                        = new ExternalOffset<FLinearColor>(0x0290, false);             // 0x0290(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offBgColorNotSelectedRole                                     = new ExternalOffset<FLinearColor>(0x02A0, false);             // 0x02A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offColorKitIconAvailable                                      = new ExternalOffset<FLinearColor>(0x02B0, false);             // 0x02B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offColorKitIconUnavailable                                    = new ExternalOffset<FLinearColor>(0x02C0, false);             // 0x02C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offSquadLeaderAbilityIcon                                     = new ExternalOffset<UTexture2D>(0x02D0, true);                // 0x02D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offMedicAbilityIcon                                           = new ExternalOffset<UTexture2D>(0x02D8, true);                // 0x02D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQRoleSettings>                   _offRoleReference                                              = new ExternalOffset<USQRoleSettings>(0x02E0, true);           // 0x02E0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offOwnerPlayerState                                           = new ExternalOffset<ASQPlayerState>(0x02E8, true);            // 0x02E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UWidgetAnimation>                  _offOpenAnimation                                              = new ExternalOffset<UWidgetAnimation>(0x02F0, true);          // 0x02F0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offMouseEnterSoundCue                                         = new ExternalOffset<USoundCue>(0x02F8, true);                 // 0x02F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bCanTick                                                       => _offbCanTick.GetValue();
	public UCanvasPanel                                       SizeCanvas                                                     => _offSizeCanvas.GetValue();
	public UImage                                             MainBgImage                                                    => _offMainBgImage.GetValue();
	public UImage                                             KitNameBgImage                                                 => _offKitNameBgImage.GetValue();
	public UImage                                             KitIcon                                                        => _offKitIcon.GetValue();
	public UImage                                             SpecialIcon                                                    => _offSpecialIcon.GetValue();
	public UTextBlock                                         KitNameTextBlock                                               => _offKitNameTextBlock.GetValue();
	public UTextBlock                                         KitCountTeamTextBlock                                          => _offKitCountTeamTextBlock.GetValue();
	public UTextBlock                                         KitCountTextBlock                                              => _offKitCountTextBlock.GetValue();
	public UClass                                             RoleToolTipWidgetClass                                         => _offRoleToolTipWidgetClass.GetValue();
	public FLinearColor                                       BgColorSelectedRole                                            => _offBgColorSelectedRole.GetValue();
	public FLinearColor                                       BgColorNotAvaliable                                            => _offBgColorNotAvaliable.GetValue();
	public FLinearColor                                       BgColorNotSelectedRole                                         => _offBgColorNotSelectedRole.GetValue();
	public FLinearColor                                       ColorKitIconAvailable                                          => _offColorKitIconAvailable.GetValue();
	public FLinearColor                                       ColorKitIconUnavailable                                        => _offColorKitIconUnavailable.GetValue();
	public UTexture2D                                         SquadLeaderAbilityIcon                                         => _offSquadLeaderAbilityIcon.GetValue();
	public UTexture2D                                         MedicAbilityIcon                                               => _offMedicAbilityIcon.GetValue();
	public USQRoleSettings                                    RoleReference                                                  => _offRoleReference.GetValue();
	public ASQPlayerState                                     OwnerPlayerState                                               => _offOwnerPlayerState.GetValue();
	public UWidgetAnimation                                   OpenAnimation                                                  => _offOpenAnimation.GetValue();
	public USoundCue                                          MouseEnterSoundCue                                             => _offMouseEnterSoundCue.GetValue();
	#endregion


}

// Class Squad.SQRoleSettings
// 0x00BF (0x00EF - 0x0030)
public class USQRoleSettings : UDataAsset
{
	#region Offsets
	private ExternalOffset<FText>                             _offDisplayName                                                = new ExternalOffset<FText>(0x0030, false);                    // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offUiIcon                                                     = new ExternalOffset<UTexture2D>(0x0048, true);                // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offSpecialWeaponIcon                                          = new ExternalOffset<UTexture2D>(0x0050, true);                // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offRole_Details                                               = new ExternalOffset<FText>(0x0058, false);                    // 0x0058(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offRole_Specifics                                             = new ExternalOffset<FText>(0x0070, false);                    // 0x0070(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offRole_Specifics_ActionName                                  = new ExternalOffset<FName>(0x0088, false);                    // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offRole_Specifics_ActionName1                                 = new ExternalOffset<FName>(0x0090, false);                    // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQRoleLimit>                      _offDefaultLimit                                               = new ExternalOffset<FSQRoleLimit>(0x0098, false);             // 0x0098(0x0024) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQRoleTypeEnum>                   _offRoleType                                                   = new ExternalOffset<ESQRoleTypeEnum>(0x00BC, false);          // 0x00BC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offSoldierClass                                               = new ExternalOffset<UClass>(0x00C0, true);                    // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offSoldierMenuAnimMontage                                     = new ExternalOffset<UAnimMontage>(0x00C8, true);              // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbLeavingSquadChangesRole                                   = new ExternalOffset<byte/*(bool)*/>(0x00D0);                  // 0x00D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQInventoryWeaponGroupData>> _offTestInventory                                              = new ExternalOffset<TArray<FSQInventoryWeaponGroupData>>(0x00D8, false); // 0x00D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQVehicleRoleAbility>             _offVehicleAbility                                             = new ExternalOffset<ESQVehicleRoleAbility>(0x00E8, false);    // 0x00E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCanBuild                                                  = new ExternalOffset<byte/*(bool)*/>(0x00E9);                  // 0x00E9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCanPlaceRallyPoint                                        = new ExternalOffset<byte/*(bool)*/>(0x00EA);                  // 0x00EA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCanSeeHealthStatus                                        = new ExternalOffset<byte/*(bool)*/>(0x00EB);                  // 0x00EB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsLeader                                                  = new ExternalOffset<byte/*(bool)*/>(0x00EC);                  // 0x00EC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsMedic                                                   = new ExternalOffset<byte/*(bool)*/>(0x00ED);                  // 0x00ED(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsRecruit                                                 = new ExternalOffset<byte/*(bool)*/>(0x00EE);                  // 0x00EE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FText                                              DisplayName                                                    => _offDisplayName.GetValue();
	public UTexture2D                                         UiIcon                                                         => _offUiIcon.GetValue();
	public UTexture2D                                         SpecialWeaponIcon                                              => _offSpecialWeaponIcon.GetValue();
	public FText                                              Role_Details                                                   => _offRole_Details.GetValue();
	public FText                                              Role_Specifics                                                 => _offRole_Specifics.GetValue();
	public FName                                              Role_Specifics_ActionName                                      => _offRole_Specifics_ActionName.GetValue();
	public FName                                              Role_Specifics_ActionName1                                     => _offRole_Specifics_ActionName1.GetValue();
	public FSQRoleLimit                                       DefaultLimit                                                   => _offDefaultLimit.GetValue();
	public ESQRoleTypeEnum                                    RoleType                                                       => _offRoleType.GetValue();
	public UClass                                             SoldierClass                                                   => _offSoldierClass.GetValue();
	public UAnimMontage                                       SoldierMenuAnimMontage                                         => _offSoldierMenuAnimMontage.GetValue();
	public byte/*(bool)*/                                     bLeavingSquadChangesRole                                       => _offbLeavingSquadChangesRole.GetValue();
	public TArray<FSQInventoryWeaponGroupData>                TestInventory                                                  => _offTestInventory.GetValue();
	public ESQVehicleRoleAbility                              VehicleAbility                                                 => _offVehicleAbility.GetValue();
	public byte/*(bool)*/                                     bCanBuild                                                      => _offbCanBuild.GetValue();
	public byte/*(bool)*/                                     bCanPlaceRallyPoint                                            => _offbCanPlaceRallyPoint.GetValue();
	public byte/*(bool)*/                                     bCanSeeHealthStatus                                            => _offbCanSeeHealthStatus.GetValue();
	public byte/*(bool)*/                                     bIsLeader                                                      => _offbIsLeader.GetValue();
	public byte/*(bool)*/                                     bIsMedic                                                       => _offbIsMedic.GetValue();
	public byte/*(bool)*/                                     bIsRecruit                                                     => _offbIsRecruit.GetValue();
	#endregion


}

// Class Squad.SQRotatingMovementComponent
// 0x00C0 (0x0280 - 0x01C0)
public class USQRotatingMovementComponent : USQMovementComponentPacked
{
	#region Offsets
	private ExternalOffset<USceneComponent>                   _offUpdatedComponent                                           = new ExternalOffset<USceneComponent>(0x01E0, true);           // 0x01E0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offInputMultiplier                                            = new ExternalOffset<float>(0x01E8);                           // 0x01E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offErrorTolerance                                             = new ExternalOffset<float>(0x01EC);                           // 0x01EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAngularDeltaCombineThreshold                               = new ExternalOffset<float>(0x01F0);                           // 0x01F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQRotationConstraints>            _offRotationConstraints                                        = new ExternalOffset<FSQRotationConstraints>(0x01F4, false);   // 0x01F4(0x001C) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQRotationRepMovement>            _offRotationReplicatedMovement                                 = new ExternalOffset<FSQRotationRepMovement>(0x0240, false);   // 0x0240(0x0040) (Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public USceneComponent                                    UpdatedComponent                                               => _offUpdatedComponent.GetValue();
	public float                                              InputMultiplier                                                => _offInputMultiplier.GetValue();
	public float                                              ErrorTolerance                                                 => _offErrorTolerance.GetValue();
	public float                                              AngularDeltaCombineThreshold                                   => _offAngularDeltaCombineThreshold.GetValue();
	public FSQRotationConstraints                             RotationConstraints                                            => _offRotationConstraints.GetValue();
	public FSQRotationRepMovement                             RotationReplicatedMovement                                     => _offRotationReplicatedMovement.GetValue();
	#endregion


}

// Class Squad.SQRotationMovementAudioComponent
// 0x0128 (0x0778 - 0x0650)
public class USQRotationMovementAudioComponent : UAudioComponent
{
	#region Offsets
	private ExternalOffset<USQMovementComponentBase>          _offPitchMovementComponent                                     = new ExternalOffset<USQMovementComponentBase>(0x0730, true);  // 0x0730(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQMovementComponentBase>          _offYawMovementComponent                                       = new ExternalOffset<USQMovementComponentBase>(0x0738, true);  // 0x0738(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQRotationMovementState>          _offRotationMovementState                                      = new ExternalOffset<ESQRotationMovementState>(0x0740, false); // 0x0740(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offStartingSound                                              = new ExternalOffset<USoundBase>(0x0748, true);                // 0x0748(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offMovingSound                                                = new ExternalOffset<USoundBase>(0x0750, true);                // 0x0750(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offStoppingSound                                              = new ExternalOffset<USoundBase>(0x0758, true);                // 0x0758(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSlowIdleDuration                                           = new ExternalOffset<float>(0x0760);                           // 0x0760(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSlowIdleTickInterval                                       = new ExternalOffset<float>(0x0764);                           // 0x0764(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offIdleFadeOutDuration                                        = new ExternalOffset<float>(0x0768);                           // 0x0768(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStartingDuration                                           = new ExternalOffset<float>(0x076C);                           // 0x076C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMovingToStoppingDuration                                   = new ExternalOffset<float>(0x0770);                           // 0x0770(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStoppingDuration                                           = new ExternalOffset<float>(0x0774);                           // 0x0774(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USQMovementComponentBase                           PitchMovementComponent                                         => _offPitchMovementComponent.GetValue();
	public USQMovementComponentBase                           YawMovementComponent                                           => _offYawMovementComponent.GetValue();
	public ESQRotationMovementState                           RotationMovementState                                          => _offRotationMovementState.GetValue();
	public USoundBase                                         StartingSound                                                  => _offStartingSound.GetValue();
	public USoundBase                                         MovingSound                                                    => _offMovingSound.GetValue();
	public USoundBase                                         StoppingSound                                                  => _offStoppingSound.GetValue();
	public float                                              SlowIdleDuration                                               => _offSlowIdleDuration.GetValue();
	public float                                              SlowIdleTickInterval                                           => _offSlowIdleTickInterval.GetValue();
	public float                                              IdleFadeOutDuration                                            => _offIdleFadeOutDuration.GetValue();
	public float                                              StartingDuration                                               => _offStartingDuration.GetValue();
	public float                                              MovingToStoppingDuration                                       => _offMovingToStoppingDuration.GetValue();
	public float                                              StoppingDuration                                               => _offStoppingDuration.GetValue();
	#endregion


}

// Class Squad.SQRotorSetup
// 0x009D (0x00CD - 0x0030)
public class USQRotorSetup : UDataAsset
{
	#region Offsets
	private ExternalOffset<FName>                             _offRotorName                                                  = new ExternalOffset<FName>(0x0030, false);                    // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offRotorClass                                                 = new ExternalOffset<UClass>(0x0038, true);                    // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRadius                                                     = new ExternalOffset<float>(0x0040);                           // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMass                                                       = new ExternalOffset<float>(0x0044);                           // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offThrustAxis                                                 = new ExternalOffset<FVector>(0x0048, false);                  // 0x0048(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offThrustVectoring                                            = new ExternalOffset<FVector>(0x0054, false);                  // 0x0054(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offThrustCoefficient                                          = new ExternalOffset<float>(0x0060);                           // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offThrustSocketName                                           = new ExternalOffset<FName>(0x0064, false);                    // 0x0064(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTorqueMultiplier                                           = new ExternalOffset<float>(0x006C);                           // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRotationalTorqueMultiplier                                 = new ExternalOffset<float>(0x0070);                           // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offThrustMultiplier                                           = new ExternalOffset<float>(0x0074);                           // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offAnimatedSocketName                                         = new ExternalOffset<FName>(0x0078, false);                    // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAnimationSpeedMultiplier                                   = new ExternalOffset<float>(0x0080);                           // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQAxis>                           _offAnimationAxis                                              = new ExternalOffset<ESQAxis>(0x0084, false);                  // 0x0084(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offStartupAcceleration                                        = new ExternalOffset<UCurveFloat>(0x0088, true);               // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStartupAccelerationFactor                                  = new ExternalOffset<float>(0x0090);                           // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offStoppingDeceleration                                       = new ExternalOffset<UCurveFloat>(0x0098, true);               // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStoppingDecelerationFactor                                 = new ExternalOffset<float>(0x00A0);                           // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offNoInputDeceleration                                        = new ExternalOffset<UCurveFloat>(0x00A8, true);               // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDecelerationMultiplier                                     = new ExternalOffset<float>(0x00B0);                           // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offInputAcceleration                                          = new ExternalOffset<UCurveFloat>(0x00B8, true);               // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offInputFactor                                                = new ExternalOffset<float>(0x00C0);                           // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxRPM                                                     = new ExternalOffset<float>(0x00C4);                           // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offIdleRPM                                                    = new ExternalOffset<float>(0x00C8);                           // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQRotorType>                      _offRotorType                                                  = new ExternalOffset<ESQRotorType>(0x00CC, false);             // 0x00CC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FName                                              RotorName                                                      => _offRotorName.GetValue();
	public UClass                                             RotorClass                                                     => _offRotorClass.GetValue();
	public float                                              Radius                                                         => _offRadius.GetValue();
	public float                                              Mass                                                           => _offMass.GetValue();
	public FVector                                            ThrustAxis                                                     => _offThrustAxis.GetValue();
	public FVector                                            ThrustVectoring                                                => _offThrustVectoring.GetValue();
	public float                                              ThrustCoefficient                                              => _offThrustCoefficient.GetValue();
	public FName                                              ThrustSocketName                                               => _offThrustSocketName.GetValue();
	public float                                              TorqueMultiplier                                               => _offTorqueMultiplier.GetValue();
	public float                                              RotationalTorqueMultiplier                                     => _offRotationalTorqueMultiplier.GetValue();
	public float                                              ThrustMultiplier                                               => _offThrustMultiplier.GetValue();
	public FName                                              AnimatedSocketName                                             => _offAnimatedSocketName.GetValue();
	public float                                              AnimationSpeedMultiplier                                       => _offAnimationSpeedMultiplier.GetValue();
	public ESQAxis                                            AnimationAxis                                                  => _offAnimationAxis.GetValue();
	public UCurveFloat                                        StartupAcceleration                                            => _offStartupAcceleration.GetValue();
	public float                                              StartupAccelerationFactor                                      => _offStartupAccelerationFactor.GetValue();
	public UCurveFloat                                        StoppingDeceleration                                           => _offStoppingDeceleration.GetValue();
	public float                                              StoppingDecelerationFactor                                     => _offStoppingDecelerationFactor.GetValue();
	public UCurveFloat                                        NoInputDeceleration                                            => _offNoInputDeceleration.GetValue();
	public float                                              DecelerationMultiplier                                         => _offDecelerationMultiplier.GetValue();
	public UCurveFloat                                        InputAcceleration                                              => _offInputAcceleration.GetValue();
	public float                                              InputFactor                                                    => _offInputFactor.GetValue();
	public float                                              MaxRPM                                                         => _offMaxRPM.GetValue();
	public float                                              IdleRPM                                                        => _offIdleRPM.GetValue();
	public ESQRotorType                                       RotorType                                                      => _offRotorType.GetValue();
	#endregion


}

// Class Squad.SQRotor
// 0x0038 (0x0060 - 0x0028)
public class USQRotor : UObject
{
	#region Offsets
	private ExternalOffset<USQRotorSetup>                     _offRotorSetup                                                 = new ExternalOffset<USQRotorSetup>(0x0028, true);             // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UObject>                           _offWorldContextObject                                         = new ExternalOffset<UObject>(0x0058, true);                   // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public USQRotorSetup                                      RotorSetup                                                     => _offRotorSetup.GetValue();
	public UObject                                            WorldContextObject                                             => _offWorldContextObject.GetValue();
	#endregion


}

// Class Squad.SQRotorBladesComponent
// 0x00C0 (0x0628 - 0x0568)
public class USQRotorBladesComponent : USQVehicleComponent
{
	#region Offsets
	private ExternalOffset<UClass>                            _offDestructionCameraShake                                     = new ExternalOffset<UClass>(0x0568, true);                    // 0x0568(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDestructionShakeScale                                      = new ExternalOffset<float>(0x0570);                           // 0x0570(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCollisionDestructionThrustThreshold                        = new ExternalOffset<float>(0x0574);                           // 0x0574(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<TEnumAsByte<EObjectTypeQuery>>> _offObjectTypes                                                = new ExternalOffset<TArray<TEnumAsByte<EObjectTypeQuery>>>(0x0578, false); // 0x0578(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDamagePerSec                                               = new ExternalOffset<float>(0x0588);                           // 0x0588(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsMainRotor                                               = new ExternalOffset<byte/*(bool)*/>(0x058C);                  // 0x058C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<AActor>>                    _offIgnoredActors                                              = new ExternalOffset<TArray<AActor>>(0x0590, false);           // 0x0590(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQHelicopter2>                    _offOwner                                                      = new ExternalOffset<ASQHelicopter2>(0x0610, true);            // 0x0610(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbInCollision                                               = new ExternalOffset<byte/*(bool)*/>(0x0618);                  // 0x0618(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UStaticMeshComponent>              _offOverlapMesh                                                = new ExternalOffset<UStaticMeshComponent>(0x0620, true);      // 0x0620(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public UClass                                             DestructionCameraShake                                         => _offDestructionCameraShake.GetValue();
	public float                                              DestructionShakeScale                                          => _offDestructionShakeScale.GetValue();
	public float                                              CollisionDestructionThrustThreshold                            => _offCollisionDestructionThrustThreshold.GetValue();
	public TArray<TEnumAsByte<EObjectTypeQuery>>              ObjectTypes                                                    => _offObjectTypes.GetValue();
	public float                                              DamagePerSec                                                   => _offDamagePerSec.GetValue();
	public byte/*(bool)*/                                     bIsMainRotor                                                   => _offbIsMainRotor.GetValue();
	public TArray<AActor>                                     IgnoredActors                                                  => _offIgnoredActors.GetValue();
	public ASQHelicopter2                                     Owner                                                          => _offOwner.GetValue();
	public byte/*(bool)*/                                     bInCollision                                                   => _offbInCollision.GetValue();
	public UStaticMeshComponent                               OverlapMesh                                                    => _offOverlapMesh.GetValue();
	#endregion


}

// Class Squad.SQVehicleEngine
// 0x0008 (0x0570 - 0x0568)
public class USQVehicleEngine : USQVehicleComponent
{
	#region Offsets
	private ExternalOffset<UCurveFloat>                       _offHealthVsDamageCurve                                        = new ExternalOffset<UCurveFloat>(0x0568, true);               // 0x0568(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public UCurveFloat                                        HealthVsDamageCurve                                            => _offHealthVsDamageCurve.GetValue();
	#endregion


}

// Class Squad.SQVehicleEngineComponent
// 0x00F0 (0x0660 - 0x0570)
public class USQVehicleEngineComponent : USQVehicleEngine
{
	#region Offsets
	private ExternalOffset<FScriptMulticastDelegate>          _offOnEngineActiveEvent                                        = new ExternalOffset<FScriptMulticastDelegate>(0x0570, false); // 0x0570(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundCue>                         _offEngineStartSound                                           = new ExternalOffset<USoundCue>(0x0580, true);                 // 0x0580(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offEngineCompletedStartSound                                  = new ExternalOffset<USoundCue>(0x0588, true);                 // 0x0588(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offEngineFailedStartSound                                     = new ExternalOffset<USoundCue>(0x0590, true);                 // 0x0590(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offEngineStopSound                                            = new ExternalOffset<USoundCue>(0x0598, true);                 // 0x0598(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offEngineRPMSound                                             = new ExternalOffset<USoundCue>(0x05A0, true);                 // 0x05A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offEngineExhaustSound                                         = new ExternalOffset<USoundCue>(0x05A8, true);                 // 0x05A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offLandingSound                                               = new ExternalOffset<USoundCue>(0x05B0, true);                 // 0x05B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offEngineIdleFadeInAfterEngineStartTime                       = new ExternalOffset<float>(0x05B8);                           // 0x05B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offEngineIdleFadeOutAfterEngineStopTime                       = new ExternalOffset<float>(0x05BC);                           // 0x05BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offGearChangingAlphaLerpSpeed                                 = new ExternalOffset<float>(0x05C0);                           // 0x05C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQEngineMovementSoundObject>> _offEngineMovementSounds                                       = new ExternalOffset<TArray<FSQEngineMovementSoundObject>>(0x05C8, false); // 0x05C8(0x0010) (Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offEngineExhaustStartAC                                       = new ExternalOffset<UAudioComponent>(0x05D8, true);           // 0x05D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offEngineRPMAC                                                = new ExternalOffset<UAudioComponent>(0x05E0, true);           // 0x05E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offEngineExhaustAC                                            = new ExternalOffset<UAudioComponent>(0x05E8, true);           // 0x05E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offEngineExhaustStopAC                                        = new ExternalOffset<UAudioComponent>(0x05F0, true);           // 0x05F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offEngineStartAC                                              = new ExternalOffset<UAudioComponent>(0x05F8, true);           // 0x05F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offEngineCompletedStartAC                                     = new ExternalOffset<UAudioComponent>(0x0600, true);           // 0x0600(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offEngineFailedStartAC                                        = new ExternalOffset<UAudioComponent>(0x0608, true);           // 0x0608(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offEngineStopAC                                               = new ExternalOffset<UAudioComponent>(0x0610, true);           // 0x0610(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offEngineSpeedAC                                              = new ExternalOffset<UAudioComponent>(0x0618, true);           // 0x0618(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UParticleSystemComponent>          _offExhaustPSC                                                 = new ExternalOffset<UParticleSystemComponent>(0x0620, true);  // 0x0620(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offEngineVibrationCameraShake                                 = new ExternalOffset<UClass>(0x0628, true);                    // 0x0628(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offRPMToShakeScaleCurve                                       = new ExternalOffset<UCurveFloat>(0x0630, true);               // 0x0630(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsEngineActive                                            = new ExternalOffset<byte/*(bool)*/>(0x0638);                  // 0x0638(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsEngineToggleActive                                      = new ExternalOffset<byte/*(bool)*/>(0x0639);                  // 0x0639(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offActivateEngineDelay                                        = new ExternalOffset<float>(0x063C);                           // 0x063C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDeActivateEngineDelay                                      = new ExternalOffset<float>(0x0640);                           // 0x0640(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UCameraShake>                      _offVibrationCameraShake                                       = new ExternalOffset<UCameraShake>(0x0650, true);              // 0x0650(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<APlayerCameraManager>              _offVibrationCameraManager                                     = new ExternalOffset<APlayerCameraManager>(0x0658, true);      // 0x0658(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public FScriptMulticastDelegate                           OnEngineActiveEvent                                            => _offOnEngineActiveEvent.GetValue();
	public USoundCue                                          EngineStartSound                                               => _offEngineStartSound.GetValue();
	public USoundCue                                          EngineCompletedStartSound                                      => _offEngineCompletedStartSound.GetValue();
	public USoundCue                                          EngineFailedStartSound                                         => _offEngineFailedStartSound.GetValue();
	public USoundCue                                          EngineStopSound                                                => _offEngineStopSound.GetValue();
	public USoundCue                                          EngineRPMSound                                                 => _offEngineRPMSound.GetValue();
	public USoundCue                                          EngineExhaustSound                                             => _offEngineExhaustSound.GetValue();
	public USoundCue                                          LandingSound                                                   => _offLandingSound.GetValue();
	public float                                              EngineIdleFadeInAfterEngineStartTime                           => _offEngineIdleFadeInAfterEngineStartTime.GetValue();
	public float                                              EngineIdleFadeOutAfterEngineStopTime                           => _offEngineIdleFadeOutAfterEngineStopTime.GetValue();
	public float                                              GearChangingAlphaLerpSpeed                                     => _offGearChangingAlphaLerpSpeed.GetValue();
	public TArray<FSQEngineMovementSoundObject>               EngineMovementSounds                                           => _offEngineMovementSounds.GetValue();
	public UAudioComponent                                    EngineExhaustStartAC                                           => _offEngineExhaustStartAC.GetValue();
	public UAudioComponent                                    EngineRPMAC                                                    => _offEngineRPMAC.GetValue();
	public UAudioComponent                                    EngineExhaustAC                                                => _offEngineExhaustAC.GetValue();
	public UAudioComponent                                    EngineExhaustStopAC                                            => _offEngineExhaustStopAC.GetValue();
	public UAudioComponent                                    EngineStartAC                                                  => _offEngineStartAC.GetValue();
	public UAudioComponent                                    EngineCompletedStartAC                                         => _offEngineCompletedStartAC.GetValue();
	public UAudioComponent                                    EngineFailedStartAC                                            => _offEngineFailedStartAC.GetValue();
	public UAudioComponent                                    EngineStopAC                                                   => _offEngineStopAC.GetValue();
	public UAudioComponent                                    EngineSpeedAC                                                  => _offEngineSpeedAC.GetValue();
	public UParticleSystemComponent                           ExhaustPSC                                                     => _offExhaustPSC.GetValue();
	public UClass                                             EngineVibrationCameraShake                                     => _offEngineVibrationCameraShake.GetValue();
	public UCurveFloat                                        RPMToShakeScaleCurve                                           => _offRPMToShakeScaleCurve.GetValue();
	public byte/*(bool)*/                                     bIsEngineActive                                                => _offbIsEngineActive.GetValue();
	public byte/*(bool)*/                                     bIsEngineToggleActive                                          => _offbIsEngineToggleActive.GetValue();
	public float                                              ActivateEngineDelay                                            => _offActivateEngineDelay.GetValue();
	public float                                              DeActivateEngineDelay                                          => _offDeActivateEngineDelay.GetValue();
	public UCameraShake                                       VibrationCameraShake                                           => _offVibrationCameraShake.GetValue();
	public APlayerCameraManager                               VibrationCameraManager                                         => _offVibrationCameraManager.GetValue();
	#endregion


}

// Class Squad.SQRotorComponent
// 0x0000 (0x0660 - 0x0660)
public class USQRotorComponent : USQVehicleEngineComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQRotorVehicleMovementComponent
// 0x0030 (0x02E8 - 0x02B8)
public class USQRotorVehicleMovementComponent : USQForceNetMovementComponent
{
	#region Offsets
	private ExternalOffset<TArray<USQRotorSetup>>             _offRotorsSetup                                                = new ExternalOffset<TArray<USQRotorSetup>>(0x02C8, false);    // 0x02C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USQRotor>>                  _offRotors                                                     = new ExternalOffset<TArray<USQRotor>>(0x02D8, false);         // 0x02D8(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public TArray<USQRotorSetup>                              RotorsSetup                                                    => _offRotorsSetup.GetValue();
	public TArray<USQRotor>                                   Rotors                                                         => _offRotors.GetValue();
	#endregion


}

// Class Squad.SQRulesetState
// 0x0000 (0x0248 - 0x0248)
public class ASQRulesetState : AInfo
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQSaveGameWrapper
// 0x0028 (0x0050 - 0x0028)
public class USQSaveGameWrapper : UObject
{
	#region Offsets
	private ExternalOffset<UClass>                            _offSaveGameClass                                              = new ExternalOffset<UClass>(0x0028, true);                    // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FString>                           _offSlotName                                                   = new ExternalOffset<FString>(0x0030, false);                  // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbClientOnly                                                = new ExternalOffset<byte/*(bool)*/>(0x0040);                  // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USaveGame>                         _offSaveGame                                                   = new ExternalOffset<USaveGame>(0x0048, true);                 // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public UClass                                             SaveGameClass                                                  => _offSaveGameClass.GetValue();
	public FString                                            SlotName                                                       => _offSlotName.GetValue();
	public byte/*(bool)*/                                     bClientOnly                                                    => _offbClientOnly.GetValue();
	public USaveGame                                          SaveGame                                                       => _offSaveGame.GetValue();
	#endregion


}

// Class Squad.SQScoreboard
// 0x00B0 (0x02E0 - 0x0230)
public class USQScoreboard : USQUserWidget
{
	#region Offsets
	private ExternalOffset<USQScoreboardTeam>                 _offScoreboardFriendly                                         = new ExternalOffset<USQScoreboardTeam>(0x0230, true);         // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQScoreboardTeam>                 _offScoreboardEnemy                                            = new ExternalOffset<USQScoreboardTeam>(0x0238, true);         // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerController>               _offSQPC                                                       = new ExternalOffset<ASQPlayerController>(0x0240, true);       // 0x0240(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQGameState>                      _offSQGameState                                                = new ExternalOffset<ASQGameState>(0x0248, true);              // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FTimerHandle>                      _offUpdateStateTimerHandle                                     = new ExternalOffset<FTimerHandle>(0x0250, false);             // 0x0250(0x0008) (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offScoreboardTeamType                                         = new ExternalOffset<UClass>(0x0258, true);                    // 0x0258(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offWinningTeamText                                            = new ExternalOffset<FText>(0x0260, false);                    // 0x0260(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offTicketsRemainingText                                       = new ExternalOffset<FText>(0x0278, false);                    // 0x0278(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offDrawText                                                   = new ExternalOffset<FText>(0x0290, false);                    // 0x0290(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offGameTimeClockImage                                         = new ExternalOffset<UImage>(0x02A8, true);                    // 0x02A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offRemainingGameTimeText                                      = new ExternalOffset<UTextBlock>(0x02B0, true);                // 0x02B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offScoreboardFlairFlag1                                       = new ExternalOffset<UImage>(0x02B8, true);                    // 0x02B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offScoreboardFlairFlag2                                       = new ExternalOffset<UImage>(0x02C0, true);                    // 0x02C0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offGameResultText                                             = new ExternalOffset<UTextBlock>(0x02C8, true);                // 0x02C8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offGameResultTicketsRemaining                                 = new ExternalOffset<UTextBlock>(0x02D0, true);                // 0x02D0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCanvasPanel>                      _offGameResultCanvas                                           = new ExternalOffset<UCanvasPanel>(0x02D8, true);              // 0x02D8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USQScoreboardTeam                                  ScoreboardFriendly                                             => _offScoreboardFriendly.GetValue();
	public USQScoreboardTeam                                  ScoreboardEnemy                                                => _offScoreboardEnemy.GetValue();
	public ASQPlayerController                                SQPC                                                           => _offSQPC.GetValue();
	public ASQGameState                                       SQGameState                                                    => _offSQGameState.GetValue();
	public FTimerHandle                                       UpdateStateTimerHandle                                         => _offUpdateStateTimerHandle.GetValue();
	public UClass                                             ScoreboardTeamType                                             => _offScoreboardTeamType.GetValue();
	public FText                                              WinningTeamText                                                => _offWinningTeamText.GetValue();
	public FText                                              TicketsRemainingText                                           => _offTicketsRemainingText.GetValue();
	public FText                                              DrawText                                                       => _offDrawText.GetValue();
	public UImage                                             GameTimeClockImage                                             => _offGameTimeClockImage.GetValue();
	public UTextBlock                                         RemainingGameTimeText                                          => _offRemainingGameTimeText.GetValue();
	public UImage                                             ScoreboardFlairFlag1                                           => _offScoreboardFlairFlag1.GetValue();
	public UImage                                             ScoreboardFlairFlag2                                           => _offScoreboardFlairFlag2.GetValue();
	public UTextBlock                                         GameResultText                                                 => _offGameResultText.GetValue();
	public UTextBlock                                         GameResultTicketsRemaining                                     => _offGameResultTicketsRemaining.GetValue();
	public UCanvasPanel                                       GameResultCanvas                                               => _offGameResultCanvas.GetValue();
	#endregion


}

// Class Squad.SQScoreboardPlayer
// 0x0198 (0x03C8 - 0x0230)
public class USQScoreboardPlayer : USQUserWidget
{
	#region Offsets
	private ExternalOffset<USQStatefulButton>                 _offTalkingButton                                              = new ExternalOffset<USQStatefulButton>(0x0240, true);         // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQPlayerController>               _offSQPC                                                       = new ExternalOffset<ASQPlayerController>(0x0248, true);       // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offSQPlayerState                                              = new ExternalOffset<ASQPlayerState>(0x0250, true);            // 0x0250(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offOwnerSQPlayerState                                         = new ExternalOffset<ASQPlayerState>(0x0258, true);            // 0x0258(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offSelfColor                                                  = new ExternalOffset<FLinearColor>(0x0278, false);             // 0x0278(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offOtherColor                                                 = new ExternalOffset<FLinearColor>(0x0288, false);             // 0x0288(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offBleedingColor                                              = new ExternalOffset<FLinearColor>(0x0298, false);             // 0x0298(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offIncapColor                                                 = new ExternalOffset<FLinearColor>(0x02A8, false);             // 0x02A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offDeadColor                                                  = new ExternalOffset<FLinearColor>(0x02B8, false);             // 0x02B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offBleedingTexture                                            = new ExternalOffset<UTexture2D>(0x02C8, true);                // 0x02C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offIncapTexture                                               = new ExternalOffset<UTexture2D>(0x02D0, true);                // 0x02D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offDeadTexture                                                = new ExternalOffset<UTexture2D>(0x02D8, true);                // 0x02D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offHealthTooltipDead                                          = new ExternalOffset<FText>(0x02E0, false);                    // 0x02E0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offHealthTooltipIncap                                         = new ExternalOffset<FText>(0x02F8, false);                    // 0x02F8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offHealthTooltipBleeding                                      = new ExternalOffset<FText>(0x0310, false);                    // 0x0310(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowAllStats                                              = new ExternalOffset<byte/*(bool)*/>(0x0328);                  // 0x0328(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsFriendlyScoreboard                                      = new ExternalOffset<byte/*(bool)*/>(0x0329);                  // 0x0329(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCanvasPanel>                      _offLeaderPanel                                                = new ExternalOffset<UCanvasPanel>(0x0330, true);              // 0x0330(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UHorizontalBox>                    _offEndOfRoundPanel                                            = new ExternalOffset<UHorizontalBox>(0x0338, true);            // 0x0338(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USpacer>                           _offNotEndOfRoundSpacer                                        = new ExternalOffset<USpacer>(0x0340, true);                   // 0x0340(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offLeaderText                                                 = new ExternalOffset<UTextBlock>(0x0348, true);                // 0x0348(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offPlayerNameText                                             = new ExternalOffset<UTextBlock>(0x0350, true);                // 0x0350(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offKillsText                                                  = new ExternalOffset<UTextBlock>(0x0358, true);                // 0x0358(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offIncapsText                                                 = new ExternalOffset<UTextBlock>(0x0360, true);                // 0x0360(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offDeathsText                                                 = new ExternalOffset<UTextBlock>(0x0368, true);                // 0x0368(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offRevivesText                                                = new ExternalOffset<UTextBlock>(0x0370, true);                // 0x0370(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offHealsText                                                  = new ExternalOffset<UTextBlock>(0x0378, true);                // 0x0378(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offTeamworkText                                               = new ExternalOffset<UTextBlock>(0x0380, true);                // 0x0380(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offObjectivesText                                             = new ExternalOffset<UTextBlock>(0x0388, true);                // 0x0388(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offScoreText                                                  = new ExternalOffset<UTextBlock>(0x0390, true);                // 0x0390(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offPingText                                                   = new ExternalOffset<UTextBlock>(0x0398, true);                // 0x0398(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offLeaderTypeImage                                            = new ExternalOffset<UImage>(0x03A0, true);                    // 0x03A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offFireteamImage                                              = new ExternalOffset<UImage>(0x03A8, true);                    // 0x03A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offHealthStateImage                                           = new ExternalOffset<UImage>(0x03B0, true);                    // 0x03B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offVehicleImage                                               = new ExternalOffset<UImage>(0x03B8, true);                    // 0x03B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offRoleImage                                                  = new ExternalOffset<UImage>(0x03C0, true);                    // 0x03C0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USQStatefulButton                                  TalkingButton                                                  => _offTalkingButton.GetValue();
	public ASQPlayerController                                SQPC                                                           => _offSQPC.GetValue();
	public ASQPlayerState                                     SQPlayerState                                                  => _offSQPlayerState.GetValue();
	public ASQPlayerState                                     OwnerSQPlayerState                                             => _offOwnerSQPlayerState.GetValue();
	public FLinearColor                                       SelfColor                                                      => _offSelfColor.GetValue();
	public FLinearColor                                       OtherColor                                                     => _offOtherColor.GetValue();
	public FLinearColor                                       BleedingColor                                                  => _offBleedingColor.GetValue();
	public FLinearColor                                       IncapColor                                                     => _offIncapColor.GetValue();
	public FLinearColor                                       DeadColor                                                      => _offDeadColor.GetValue();
	public UTexture2D                                         BleedingTexture                                                => _offBleedingTexture.GetValue();
	public UTexture2D                                         IncapTexture                                                   => _offIncapTexture.GetValue();
	public UTexture2D                                         DeadTexture                                                    => _offDeadTexture.GetValue();
	public FText                                              HealthTooltipDead                                              => _offHealthTooltipDead.GetValue();
	public FText                                              HealthTooltipIncap                                             => _offHealthTooltipIncap.GetValue();
	public FText                                              HealthTooltipBleeding                                          => _offHealthTooltipBleeding.GetValue();
	public byte/*(bool)*/                                     bShowAllStats                                                  => _offbShowAllStats.GetValue();
	public byte/*(bool)*/                                     bIsFriendlyScoreboard                                          => _offbIsFriendlyScoreboard.GetValue();
	public UCanvasPanel                                       LeaderPanel                                                    => _offLeaderPanel.GetValue();
	public UHorizontalBox                                     EndOfRoundPanel                                                => _offEndOfRoundPanel.GetValue();
	public USpacer                                            NotEndOfRoundSpacer                                            => _offNotEndOfRoundSpacer.GetValue();
	public UTextBlock                                         LeaderText                                                     => _offLeaderText.GetValue();
	public UTextBlock                                         PlayerNameText                                                 => _offPlayerNameText.GetValue();
	public UTextBlock                                         KillsText                                                      => _offKillsText.GetValue();
	public UTextBlock                                         IncapsText                                                     => _offIncapsText.GetValue();
	public UTextBlock                                         DeathsText                                                     => _offDeathsText.GetValue();
	public UTextBlock                                         RevivesText                                                    => _offRevivesText.GetValue();
	public UTextBlock                                         HealsText                                                      => _offHealsText.GetValue();
	public UTextBlock                                         TeamworkText                                                   => _offTeamworkText.GetValue();
	public UTextBlock                                         ObjectivesText                                                 => _offObjectivesText.GetValue();
	public UTextBlock                                         ScoreText                                                      => _offScoreText.GetValue();
	public UTextBlock                                         PingText                                                       => _offPingText.GetValue();
	public UImage                                             LeaderTypeImage                                                => _offLeaderTypeImage.GetValue();
	public UImage                                             FireteamImage                                                  => _offFireteamImage.GetValue();
	public UImage                                             HealthStateImage                                               => _offHealthStateImage.GetValue();
	public UImage                                             VehicleImage                                                   => _offVehicleImage.GetValue();
	public UImage                                             RoleImage                                                      => _offRoleImage.GetValue();
	#endregion


}

// Class Squad.SQScoreboardSquad
// 0x00D8 (0x0308 - 0x0230)
public class USQScoreboardSquad : USQUserWidget
{
	#region Offsets
	private ExternalOffset<ASQPlayerController>               _offSQPC                                                       = new ExternalOffset<ASQPlayerController>(0x0230, true);       // 0x0230(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSquadState>                     _offSquadState                                                 = new ExternalOffset<ASQSquadState>(0x0238, true);             // 0x0238(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FPlayerWidgetPair>>         _offDisplayedPlayers                                           = new ExternalOffset<TArray<FPlayerWidgetPair>>(0x0240, false); // 0x0240(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowAllStats                                              = new ExternalOffset<byte/*(bool)*/>(0x0250);                  // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseAccumulativeLifetimeScores                             = new ExternalOffset<byte/*(bool)*/>(0x0251);                  // 0x0251(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offOwnSquadColor                                              = new ExternalOffset<FLinearColor>(0x0254, false);             // 0x0254(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offFriendlySquadColor                                         = new ExternalOffset<FLinearColor>(0x0264, false);             // 0x0264(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offEnemySquadColor                                            = new ExternalOffset<FLinearColor>(0x0274, false);             // 0x0274(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsFriendlyScoreboard                                      = new ExternalOffset<byte/*(bool)*/>(0x0284);                  // 0x0284(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offScoreboardPlayerType                                       = new ExternalOffset<UClass>(0x0288, true);                    // 0x0288(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UHorizontalBox>                    _offEndOfRoundHorizontalBox                                    = new ExternalOffset<UHorizontalBox>(0x0290, true);            // 0x0290(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UGridPanel>                        _offPlayersGrid                                                = new ExternalOffset<UGridPanel>(0x0298, true);                // 0x0298(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USpacer>                           _offNotEndOfRoundSpacer                                        = new ExternalOffset<USpacer>(0x02A0, true);                   // 0x02A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offSquadNumberText                                            = new ExternalOffset<UTextBlock>(0x02A8, true);                // 0x02A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offSquadNameText                                              = new ExternalOffset<UTextBlock>(0x02B0, true);                // 0x02B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offSquadKillsText                                             = new ExternalOffset<UTextBlock>(0x02B8, true);                // 0x02B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offSquadIncapsText                                            = new ExternalOffset<UTextBlock>(0x02C0, true);                // 0x02C0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offSquadDeathsText                                            = new ExternalOffset<UTextBlock>(0x02C8, true);                // 0x02C8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offSquadRevivesText                                           = new ExternalOffset<UTextBlock>(0x02D0, true);                // 0x02D0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offSquadHealsText                                             = new ExternalOffset<UTextBlock>(0x02D8, true);                // 0x02D8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offSquadTeamworkText                                          = new ExternalOffset<UTextBlock>(0x02E0, true);                // 0x02E0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offSquadObjectiveText                                         = new ExternalOffset<UTextBlock>(0x02E8, true);                // 0x02E8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offSquadScoreText                                             = new ExternalOffset<UTextBlock>(0x02F0, true);                // 0x02F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offSquadColorImage                                            = new ExternalOffset<UImage>(0x02F8, true);                    // 0x02F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offSquadTalkingImage                                          = new ExternalOffset<UImage>(0x0300, true);                    // 0x0300(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ASQPlayerController                                SQPC                                                           => _offSQPC.GetValue();
	public ASQSquadState                                      SquadState                                                     => _offSquadState.GetValue();
	public TArray<FPlayerWidgetPair>                          DisplayedPlayers                                               => _offDisplayedPlayers.GetValue();
	public byte/*(bool)*/                                     bShowAllStats                                                  => _offbShowAllStats.GetValue();
	public byte/*(bool)*/                                     bUseAccumulativeLifetimeScores                                 => _offbUseAccumulativeLifetimeScores.GetValue();
	public FLinearColor                                       OwnSquadColor                                                  => _offOwnSquadColor.GetValue();
	public FLinearColor                                       FriendlySquadColor                                             => _offFriendlySquadColor.GetValue();
	public FLinearColor                                       EnemySquadColor                                                => _offEnemySquadColor.GetValue();
	public byte/*(bool)*/                                     bIsFriendlyScoreboard                                          => _offbIsFriendlyScoreboard.GetValue();
	public UClass                                             ScoreboardPlayerType                                           => _offScoreboardPlayerType.GetValue();
	public UHorizontalBox                                     EndOfRoundHorizontalBox                                        => _offEndOfRoundHorizontalBox.GetValue();
	public UGridPanel                                         PlayersGrid                                                    => _offPlayersGrid.GetValue();
	public USpacer                                            NotEndOfRoundSpacer                                            => _offNotEndOfRoundSpacer.GetValue();
	public UTextBlock                                         SquadNumberText                                                => _offSquadNumberText.GetValue();
	public UTextBlock                                         SquadNameText                                                  => _offSquadNameText.GetValue();
	public UTextBlock                                         SquadKillsText                                                 => _offSquadKillsText.GetValue();
	public UTextBlock                                         SquadIncapsText                                                => _offSquadIncapsText.GetValue();
	public UTextBlock                                         SquadDeathsText                                                => _offSquadDeathsText.GetValue();
	public UTextBlock                                         SquadRevivesText                                               => _offSquadRevivesText.GetValue();
	public UTextBlock                                         SquadHealsText                                                 => _offSquadHealsText.GetValue();
	public UTextBlock                                         SquadTeamworkText                                              => _offSquadTeamworkText.GetValue();
	public UTextBlock                                         SquadObjectiveText                                             => _offSquadObjectiveText.GetValue();
	public UTextBlock                                         SquadScoreText                                                 => _offSquadScoreText.GetValue();
	public UImage                                             SquadColorImage                                                => _offSquadColorImage.GetValue();
	public UImage                                             SquadTalkingImage                                              => _offSquadTalkingImage.GetValue();
	#endregion


}

// Class Squad.SQScoreboardTeam
// 0x0178 (0x03A8 - 0x0230)
public class USQScoreboardTeam : USQUserWidget
{
	#region Offsets
	private ExternalOffset<USQScoreboardTeamScore>            _offScoreboardTeamScore                                        = new ExternalOffset<USQScoreboardTeamScore>(0x0230, true);    // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UHorizontalBox>                    _offEndOfRoundHorizontalBox                                    = new ExternalOffset<UHorizontalBox>(0x0238, true);            // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UVerticalBox>                      _offTopVerticalBox                                             = new ExternalOffset<UVerticalBox>(0x0240, true);              // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USpacer>                           _offNotEndOfRoundSpacer                                        = new ExternalOffset<USpacer>(0x0248, true);                   // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USpacer>                           _offEnemyTeamPingAligner                                       = new ExternalOffset<USpacer>(0x0250, true);                   // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UHorizontalBox>                    _offTeamHorizontalBox                                          = new ExternalOffset<UHorizontalBox>(0x0258, true);            // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UGridPanel>                        _offSquadsGrid                                                 = new ExternalOffset<UGridPanel>(0x0260, true);                // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCanvasPanel>                      _offNonSquadPlayersCanvasPanel                                 = new ExternalOffset<UCanvasPanel>(0x0268, true);              // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UGridPanel>                        _offPlayersGrid                                                = new ExternalOffset<UGridPanel>(0x0270, true);                // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offColoredHeaderTabImage                                      = new ExternalOffset<UImage>(0x0278, true);                    // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offRemainingTicketsImage                                      = new ExternalOffset<UImage>(0x0280, true);                    // 0x0280(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offColoredHeaderBarImage                                      = new ExternalOffset<UImage>(0x0288, true);                    // 0x0288(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offFlagImage                                                  = new ExternalOffset<UImage>(0x0290, true);                    // 0x0290(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offPlayerNumberText                                           = new ExternalOffset<UTextBlock>(0x0298, true);                // 0x0298(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offRemainingTicketsText                                       = new ExternalOffset<UTextBlock>(0x02A0, true);                // 0x02A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offTeamNameText                                               = new ExternalOffset<UTextBlock>(0x02A8, true);                // 0x02A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerController>               _offSQPC                                                       = new ExternalOffset<ASQPlayerController>(0x02B0, true);       // 0x02B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offSQPlayerState                                              = new ExternalOffset<ASQPlayerState>(0x02B8, true);            // 0x02B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQTeamState>                      _offSQTeamState                                                = new ExternalOffset<ASQTeamState>(0x02C0, true);              // 0x02C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQGameState>                      _offSQGameState                                                = new ExternalOffset<ASQGameState>(0x02C8, true);              // 0x02C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQScoreboardPlayer>               _offOwnerPlayerWidget                                          = new ExternalOffset<USQScoreboardPlayer>(0x02D0, true);       // 0x02D0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQScoreboardSquad>                _offOwnerPlayerSquadWidget                                     = new ExternalOffset<USQScoreboardSquad>(0x02D8, true);        // 0x02D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamKills                                                  = new ExternalOffset<int>(0x02E0);                             // 0x02E0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamDeaths                                                 = new ExternalOffset<int>(0x02E4);                             // 0x02E4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamIncaps                                                 = new ExternalOffset<int>(0x02E8);                             // 0x02E8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamWounds                                                 = new ExternalOffset<int>(0x02EC);                             // 0x02EC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamRevives                                                = new ExternalOffset<int>(0x02F0);                             // 0x02F0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamHeals                                                  = new ExternalOffset<int>(0x02F4);                             // 0x02F4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamTeamKills                                              = new ExternalOffset<int>(0x02F8);                             // 0x02F8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamTeamwork                                               = new ExternalOffset<int>(0x02FC);                             // 0x02FC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamObjective                                              = new ExternalOffset<int>(0x0300);                             // 0x0300(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamScore                                                  = new ExternalOffset<int>(0x0304);                             // 0x0304(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offFriendlyTeamColor                                          = new ExternalOffset<FLinearColor>(0x0308, false);             // 0x0308(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offEnemyTeamColor                                             = new ExternalOffset<FLinearColor>(0x0318, false);             // 0x0318(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsFriendlyScoreboard                                      = new ExternalOffset<byte/*(bool)*/>(0x0328);                  // 0x0328(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowAllStats                                              = new ExternalOffset<byte/*(bool)*/>(0x0329);                  // 0x0329(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offEndOfRoundEnemyWidth                                       = new ExternalOffset<float>(0x032C);                           // 0x032C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDuringRoundEnemyWidth                                      = new ExternalOffset<float>(0x0330);                           // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offRemainingTicketsTextString                                 = new ExternalOffset<FText>(0x0338, false);                    // 0x0338(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offPlayersText                                                = new ExternalOffset<FText>(0x0350, false);                    // 0x0350(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSquadWidgetPair>>          _offDisplayedSquads                                            = new ExternalOffset<TArray<FSquadWidgetPair>>(0x0368, false); // 0x0368(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FPlayerWidgetPair>>         _offDisplayedPlayers                                           = new ExternalOffset<TArray<FPlayerWidgetPair>>(0x0378, false); // 0x0378(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQRemoteTalkerDisplayInfo>> _offFormerTalkers                                              = new ExternalOffset<TArray<FSQRemoteTalkerDisplayInfo>>(0x0388, false); // 0x0388(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offScoreboardSquadType                                        = new ExternalOffset<UClass>(0x0398, true);                    // 0x0398(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offScoreboardPlayerType                                       = new ExternalOffset<UClass>(0x03A0, true);                    // 0x03A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USQScoreboardTeamScore                             ScoreboardTeamScore                                            => _offScoreboardTeamScore.GetValue();
	public UHorizontalBox                                     EndOfRoundHorizontalBox                                        => _offEndOfRoundHorizontalBox.GetValue();
	public UVerticalBox                                       TopVerticalBox                                                 => _offTopVerticalBox.GetValue();
	public USpacer                                            NotEndOfRoundSpacer                                            => _offNotEndOfRoundSpacer.GetValue();
	public USpacer                                            EnemyTeamPingAligner                                           => _offEnemyTeamPingAligner.GetValue();
	public UHorizontalBox                                     TeamHorizontalBox                                              => _offTeamHorizontalBox.GetValue();
	public UGridPanel                                         SquadsGrid                                                     => _offSquadsGrid.GetValue();
	public UCanvasPanel                                       NonSquadPlayersCanvasPanel                                     => _offNonSquadPlayersCanvasPanel.GetValue();
	public UGridPanel                                         PlayersGrid                                                    => _offPlayersGrid.GetValue();
	public UImage                                             ColoredHeaderTabImage                                          => _offColoredHeaderTabImage.GetValue();
	public UImage                                             RemainingTicketsImage                                          => _offRemainingTicketsImage.GetValue();
	public UImage                                             ColoredHeaderBarImage                                          => _offColoredHeaderBarImage.GetValue();
	public UImage                                             FlagImage                                                      => _offFlagImage.GetValue();
	public UTextBlock                                         PlayerNumberText                                               => _offPlayerNumberText.GetValue();
	public UTextBlock                                         RemainingTicketsText                                           => _offRemainingTicketsText.GetValue();
	public UTextBlock                                         TeamNameText                                                   => _offTeamNameText.GetValue();
	public ASQPlayerController                                SQPC                                                           => _offSQPC.GetValue();
	public ASQPlayerState                                     SQPlayerState                                                  => _offSQPlayerState.GetValue();
	public ASQTeamState                                       SQTeamState                                                    => _offSQTeamState.GetValue();
	public ASQGameState                                       SQGameState                                                    => _offSQGameState.GetValue();
	public USQScoreboardPlayer                                OwnerPlayerWidget                                              => _offOwnerPlayerWidget.GetValue();
	public USQScoreboardSquad                                 OwnerPlayerSquadWidget                                         => _offOwnerPlayerSquadWidget.GetValue();
	public int                                                TeamKills                                                      => _offTeamKills.GetValue();
	public int                                                TeamDeaths                                                     => _offTeamDeaths.GetValue();
	public int                                                TeamIncaps                                                     => _offTeamIncaps.GetValue();
	public int                                                TeamWounds                                                     => _offTeamWounds.GetValue();
	public int                                                TeamRevives                                                    => _offTeamRevives.GetValue();
	public int                                                TeamHeals                                                      => _offTeamHeals.GetValue();
	public int                                                TeamTeamKills                                                  => _offTeamTeamKills.GetValue();
	public int                                                TeamTeamwork                                                   => _offTeamTeamwork.GetValue();
	public int                                                TeamObjective                                                  => _offTeamObjective.GetValue();
	public int                                                TeamScore                                                      => _offTeamScore.GetValue();
	public FLinearColor                                       FriendlyTeamColor                                              => _offFriendlyTeamColor.GetValue();
	public FLinearColor                                       EnemyTeamColor                                                 => _offEnemyTeamColor.GetValue();
	public byte/*(bool)*/                                     bIsFriendlyScoreboard                                          => _offbIsFriendlyScoreboard.GetValue();
	public byte/*(bool)*/                                     bShowAllStats                                                  => _offbShowAllStats.GetValue();
	public float                                              EndOfRoundEnemyWidth                                           => _offEndOfRoundEnemyWidth.GetValue();
	public float                                              DuringRoundEnemyWidth                                          => _offDuringRoundEnemyWidth.GetValue();
	public FText                                              RemainingTicketsTextString                                     => _offRemainingTicketsTextString.GetValue();
	public FText                                              PlayersText                                                    => _offPlayersText.GetValue();
	public TArray<FSquadWidgetPair>                           DisplayedSquads                                                => _offDisplayedSquads.GetValue();
	public TArray<FPlayerWidgetPair>                          DisplayedPlayers                                               => _offDisplayedPlayers.GetValue();
	public TArray<FSQRemoteTalkerDisplayInfo>                 FormerTalkers                                                  => _offFormerTalkers.GetValue();
	public UClass                                             ScoreboardSquadType                                            => _offScoreboardSquadType.GetValue();
	public UClass                                             ScoreboardPlayerType                                           => _offScoreboardPlayerType.GetValue();
	#endregion


}

// Class Squad.SQScoreboardTeamScore
// 0x0050 (0x0280 - 0x0230)
public class USQScoreboardTeamScore : USQUserWidget
{
	#region Offsets
	private ExternalOffset<UHorizontalBox>                    _offEndOfRoundPanel                                            = new ExternalOffset<UHorizontalBox>(0x0230, true);            // 0x0230(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USpacer>                           _offNotEndOfRoundSpacer                                        = new ExternalOffset<USpacer>(0x0238, true);                   // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offKillsText                                                  = new ExternalOffset<UTextBlock>(0x0240, true);                // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offIncapsText                                                 = new ExternalOffset<UTextBlock>(0x0248, true);                // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offDeathsText                                                 = new ExternalOffset<UTextBlock>(0x0250, true);                // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offRevivesText                                                = new ExternalOffset<UTextBlock>(0x0258, true);                // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offHealsText                                                  = new ExternalOffset<UTextBlock>(0x0260, true);                // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offTeamworkText                                               = new ExternalOffset<UTextBlock>(0x0268, true);                // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offObjectivesText                                             = new ExternalOffset<UTextBlock>(0x0270, true);                // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offScoreText                                                  = new ExternalOffset<UTextBlock>(0x0278, true);                // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UHorizontalBox                                     EndOfRoundPanel                                                => _offEndOfRoundPanel.GetValue();
	public USpacer                                            NotEndOfRoundSpacer                                            => _offNotEndOfRoundSpacer.GetValue();
	public UTextBlock                                         KillsText                                                      => _offKillsText.GetValue();
	public UTextBlock                                         IncapsText                                                     => _offIncapsText.GetValue();
	public UTextBlock                                         DeathsText                                                     => _offDeathsText.GetValue();
	public UTextBlock                                         RevivesText                                                    => _offRevivesText.GetValue();
	public UTextBlock                                         HealsText                                                      => _offHealsText.GetValue();
	public UTextBlock                                         TeamworkText                                                   => _offTeamworkText.GetValue();
	public UTextBlock                                         ObjectivesText                                                 => _offObjectivesText.GetValue();
	public UTextBlock                                         ScoreText                                                      => _offScoreText.GetValue();
	#endregion


}

// Class Squad.SQScoreboardWidgetStyle
// 0x0110 (0x0138 - 0x0028)
public class USQScoreboardWidgetStyle : USlateWidgetStyleContainerBase
{
	#region Offsets
	private ExternalOffset<FSQScoreboardStyle>                _offScoreboardStyle                                            = new ExternalOffset<FSQScoreboardStyle>(0x0030, false);       // 0x0030(0x0108) (Edit, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FSQScoreboardStyle                                 ScoreboardStyle                                                => _offScoreboardStyle.GetValue();
	#endregion


}

// Class Squad.SQSeatProgressWidget
// 0x0011 (0x0261 - 0x0250)
public class USQSeatProgressWidget : USQProgressWidget
{
	#region Offsets
	private ExternalOffset<float>                             _offTotalTime                                                  = new ExternalOffset<float>(0x0250);                           // 0x0250(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQVehicle>                        _offWithVehicle                                                = new ExternalOffset<ASQVehicle>(0x0258, true);                // 0x0258(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESeatProgressMenuMode>             _offMenuMode                                                   = new ExternalOffset<ESeatProgressMenuMode>(0x0260, false);    // 0x0260(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              TotalTime                                                      => _offTotalTime.GetValue();
	public ASQVehicle                                         WithVehicle                                                    => _offWithVehicle.GetValue();
	public ESeatProgressMenuMode                              MenuMode                                                       => _offMenuMode.GetValue();
	#endregion


}

// Class Squad.SQServerBrowserWidget
// 0x0038 (0x0268 - 0x0230)
public class USQServerBrowserWidget : USQUserWidget
{
	#region Offsets
	private ExternalOffset<ESQSortStates>                     _offServerNameSortedState                                      = new ExternalOffset<ESQSortStates>(0x0230, false);            // 0x0230(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQSortStates>                     _offMapNameSortedState                                         = new ExternalOffset<ESQSortStates>(0x0231, false);            // 0x0231(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQSortStates>                     _offGameModeSortedState                                        = new ExternalOffset<ESQSortStates>(0x0232, false);            // 0x0232(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQSortStates>                     _offNumPlayersSortedState                                      = new ExternalOffset<ESQSortStates>(0x0233, false);            // 0x0233(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQSortStates>                     _offPingSortedState                                            = new ExternalOffset<ESQSortStates>(0x0234, false);            // 0x0234(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USQServerListItemWidget>>   _offSessionList                                                = new ExternalOffset<TArray<USQServerListItemWidget>>(0x0238, false); // 0x0238(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<UUserWidget>>               _offSessionSortList                                            = new ExternalOffset<TArray<UUserWidget>>(0x0248, false);      // 0x0248(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCanStartNewFindSessions                                   = new ExternalOffset<byte/*(bool)*/>(0x0258);                  // 0x0258(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQFindSessionsCallbackProxy>      _offCurrentCallback                                            = new ExternalOffset<USQFindSessionsCallbackProxy>(0x0260, true); // 0x0260(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public ESQSortStates                                      ServerNameSortedState                                          => _offServerNameSortedState.GetValue();
	public ESQSortStates                                      MapNameSortedState                                             => _offMapNameSortedState.GetValue();
	public ESQSortStates                                      GameModeSortedState                                            => _offGameModeSortedState.GetValue();
	public ESQSortStates                                      NumPlayersSortedState                                          => _offNumPlayersSortedState.GetValue();
	public ESQSortStates                                      PingSortedState                                                => _offPingSortedState.GetValue();
	public TArray<USQServerListItemWidget>                    SessionList                                                    => _offSessionList.GetValue();
	public TArray<UUserWidget>                                SessionSortList                                                => _offSessionSortList.GetValue();
	public byte/*(bool)*/                                     bCanStartNewFindSessions                                       => _offbCanStartNewFindSessions.GetValue();
	public USQFindSessionsCallbackProxy                       CurrentCallback                                                => _offCurrentCallback.GetValue();
	#endregion


}

// Class Squad.SQServerListItemWidget
// 0x01B8 (0x0398 - 0x01E0)
public class USQServerListItemWidget : UUserWidget
{
	#region Offsets
	private ExternalOffset<int>                               _offItemIndex                                                  = new ExternalOffset<int>(0x0230);                             // 0x0230(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FBlueprintSessionResult>           _offSessionResult                                              = new ExternalOffset<FBlueprintSessionResult>(0x0238, false);  // 0x0238(0x00B8) (BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offServerName                                                 = new ExternalOffset<FString>(0x02F0, false);                  // 0x02F0(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAnticheatProtected                                        = new ExternalOffset<byte/*(bool)*/>(0x0300);                  // 0x0300(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsModded                                                  = new ExternalOffset<byte/*(bool)*/>(0x0301);                  // 0x0301(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsWhitelisted                                             = new ExternalOffset<byte/*(bool)*/>(0x0302);                  // 0x0302(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offGameVersion                                                = new ExternalOffset<FString>(0x0308, false);                  // 0x0308(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQSessionFlagStruct>              _offSessionFlagStruct                                          = new ExternalOffset<FSQSessionFlagStruct>(0x0318, false);     // 0x0318(0x0008) (BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offServerHealth                                               = new ExternalOffset<int>(0x0320);                             // 0x0320(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbLicensedServer                                            = new ExternalOffset<byte/*(bool)*/>(0x0324);                  // 0x0324(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMatchTimeout                                               = new ExternalOffset<int>(0x0328);                             // 0x0328(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbPasswordProtected                                         = new ExternalOffset<byte/*(bool)*/>(0x032C);                  // 0x032C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offMapName                                                    = new ExternalOffset<FString>(0x0330, false);                  // 0x0330(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offGameMode                                                   = new ExternalOffset<FString>(0x0340, false);                  // 0x0340(0x0010) (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offPing                                                       = new ExternalOffset<int>(0x0350);                             // 0x0350(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumPlayers                                                 = new ExternalOffset<int>(0x0354);                             // 0x0354(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMaxNumPlayers                                              = new ExternalOffset<int>(0x0358);                             // 0x0358(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumReservedSlots                                           = new ExternalOffset<int>(0x035C);                             // 0x035C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumQueuedTotal                                             = new ExternalOffset<int>(0x0360);                             // 0x0360(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumQueuedPublic                                            = new ExternalOffset<int>(0x0364);                             // 0x0364(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumQueuedReservedMembers                                   = new ExternalOffset<int>(0x0368);                             // 0x0368(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQModInfoRequest>                 _offModDetailsRequest                                          = new ExternalOffset<FSQModInfoRequest>(0x0370, false);        // 0x0370(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQModLoadProgress>>        _offModLoadProgressArray                                       = new ExternalOffset<TArray<FSQModLoadProgress>>(0x0388, false); // 0x0388(0x0010) (BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public int                                                ItemIndex                                                      => _offItemIndex.GetValue();
	public FBlueprintSessionResult                            SessionResult                                                  => _offSessionResult.GetValue();
	public FString                                            ServerName                                                     => _offServerName.GetValue();
	public byte/*(bool)*/                                     bAnticheatProtected                                            => _offbAnticheatProtected.GetValue();
	public byte/*(bool)*/                                     bIsModded                                                      => _offbIsModded.GetValue();
	public byte/*(bool)*/                                     bIsWhitelisted                                                 => _offbIsWhitelisted.GetValue();
	public FString                                            GameVersion                                                    => _offGameVersion.GetValue();
	public FSQSessionFlagStruct                               SessionFlagStruct                                              => _offSessionFlagStruct.GetValue();
	public int                                                ServerHealth                                                   => _offServerHealth.GetValue();
	public byte/*(bool)*/                                     bLicensedServer                                                => _offbLicensedServer.GetValue();
	public int                                                MatchTimeout                                                   => _offMatchTimeout.GetValue();
	public byte/*(bool)*/                                     bPasswordProtected                                             => _offbPasswordProtected.GetValue();
	public FString                                            MapName                                                        => _offMapName.GetValue();
	public FString                                            GameMode                                                       => _offGameMode.GetValue();
	public int                                                Ping                                                           => _offPing.GetValue();
	public int                                                NumPlayers                                                     => _offNumPlayers.GetValue();
	public int                                                MaxNumPlayers                                                  => _offMaxNumPlayers.GetValue();
	public int                                                NumReservedSlots                                               => _offNumReservedSlots.GetValue();
	public int                                                NumQueuedTotal                                                 => _offNumQueuedTotal.GetValue();
	public int                                                NumQueuedPublic                                                => _offNumQueuedPublic.GetValue();
	public int                                                NumQueuedReservedMembers                                       => _offNumQueuedReservedMembers.GetValue();
	public FSQModInfoRequest                                  ModDetailsRequest                                              => _offModDetailsRequest.GetValue();
	public TArray<FSQModLoadProgress>                         ModLoadProgressArray                                           => _offModLoadProgressArray.GetValue();
	#endregion


}

// Class Squad.SQShockwave
// 0x00A8 (0x00D0 - 0x0028)
public class USQShockwave : UObject
{
	#region Offsets
	private ExternalOffset<ESQShockwaveEffectType>            _offShockwaveEffectType                                        = new ExternalOffset<ESQShockwaveEffectType>(0x0028, false);   // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStrength                                                   = new ExternalOffset<float>(0x002C);                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQShockwaveQualitySetting>> _offShockwaveQualitySettings                                   = new ExternalOffset<TArray<FSQShockwaveQualitySetting>>(0x0030, false); // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQCameraShake>                    _offCameraShake                                                = new ExternalOffset<FSQCameraShake>(0x0040, false);           // 0x0040(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQCameraShake>                    _offSecondaryCameraShake                                       = new ExternalOffset<FSQCameraShake>(0x0060, false);           // 0x0060(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offVerticalSteps                                              = new ExternalOffset<int>(0x0080);                             // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offHorizontalSteps                                            = new ExternalOffset<int>(0x0084);                             // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offDefaultRotation                                            = new ExternalOffset<FRotator>(0x0088, false);                 // 0x0088(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offDefaultLocationOffset                                      = new ExternalOffset<FVector>(0x0094, false);                  // 0x0094(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRange                                                      = new ExternalOffset<float>(0x00A0);                           // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPitchRange                                                 = new ExternalOffset<float>(0x00A4);                           // 0x00A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offYawRange                                                   = new ExternalOffset<float>(0x00A8);                           // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCullingDistance                                            = new ExternalOffset<float>(0x00AC);                           // 0x00AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offNearbyExplosionEventRadius                                 = new ExternalOffset<float>(0x00B0);                           // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMaxSoundsToSpawn                                           = new ExternalOffset<int>(0x00B4);                             // 0x00B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMaxDecalsToSpawn                                           = new ExternalOffset<int>(0x00B8);                             // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDebugLines                                                = new ExternalOffset<byte/*(bool)*/>(0x00BC);                  // 0x00BC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbDebugSpheres                                              = new ExternalOffset<byte/*(bool)*/>(0x00BD);                  // 0x00BD(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UParticleSystem>                   _offEmitter                                                    = new ExternalOffset<UParticleSystem>(0x00C0, true);           // 0x00C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offDefaultEffectsClass                                        = new ExternalOffset<UClass>(0x00C8, true);                    // 0x00C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ESQShockwaveEffectType                             ShockwaveEffectType                                            => _offShockwaveEffectType.GetValue();
	public float                                              Strength                                                       => _offStrength.GetValue();
	public TArray<FSQShockwaveQualitySetting>                 ShockwaveQualitySettings                                       => _offShockwaveQualitySettings.GetValue();
	public FSQCameraShake                                     CameraShake                                                    => _offCameraShake.GetValue();
	public FSQCameraShake                                     SecondaryCameraShake                                           => _offSecondaryCameraShake.GetValue();
	public int                                                VerticalSteps                                                  => _offVerticalSteps.GetValue();
	public int                                                HorizontalSteps                                                => _offHorizontalSteps.GetValue();
	public FRotator                                           DefaultRotation                                                => _offDefaultRotation.GetValue();
	public FVector                                            DefaultLocationOffset                                          => _offDefaultLocationOffset.GetValue();
	public float                                              Range                                                          => _offRange.GetValue();
	public float                                              PitchRange                                                     => _offPitchRange.GetValue();
	public float                                              YawRange                                                       => _offYawRange.GetValue();
	public float                                              CullingDistance                                                => _offCullingDistance.GetValue();
	public float                                              NearbyExplosionEventRadius                                     => _offNearbyExplosionEventRadius.GetValue();
	public int                                                MaxSoundsToSpawn                                               => _offMaxSoundsToSpawn.GetValue();
	public int                                                MaxDecalsToSpawn                                               => _offMaxDecalsToSpawn.GetValue();
	public byte/*(bool)*/                                     bDebugLines                                                    => _offbDebugLines.GetValue();
	public byte/*(bool)*/                                     bDebugSpheres                                                  => _offbDebugSpheres.GetValue();
	public UParticleSystem                                    Emitter                                                        => _offEmitter.GetValue();
	public UClass                                             DefaultEffectsClass                                            => _offDefaultEffectsClass.GetValue();
	#endregion


}

// Class Squad.SQShockwaveDirected
// 0x0001 (0x00D1 - 0x00D0)
public class USQShockwaveDirected : USQShockwave
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbFractionalOffsettingForHorizontalSteps                    = new ExternalOffset<byte/*(bool)*/>(0x00D0);                  // 0x00D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bFractionalOffsettingForHorizontalSteps                        => _offbFractionalOffsettingForHorizontalSteps.GetValue();
	#endregion


}

// Class Squad.SQShovelStaticInfo
// 0x0030 (0x0508 - 0x04D8)
public class USQShovelStaticInfo : USQItemStaticInfo
{
	#region Offsets
	private ExternalOffset<UAnimMontage>                      _offDigWeaponMontage                                           = new ExternalOffset<UAnimMontage>(0x04D8, true);              // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offDig1pMontage                                               = new ExternalOffset<UAnimMontage>(0x04E0, true);              // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offDig3pMontage                                               = new ExternalOffset<UAnimMontage>(0x04E8, true);              // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offDestroyWeaponMontage                                       = new ExternalOffset<UAnimMontage>(0x04F0, true);              // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offDestroy1pMontage                                           = new ExternalOffset<UAnimMontage>(0x04F8, true);              // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offDestroy3pMontage                                           = new ExternalOffset<UAnimMontage>(0x0500, true);              // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UAnimMontage                                       DigWeaponMontage                                               => _offDigWeaponMontage.GetValue();
	public UAnimMontage                                       Dig1pMontage                                                   => _offDig1pMontage.GetValue();
	public UAnimMontage                                       Dig3pMontage                                                   => _offDig3pMontage.GetValue();
	public UAnimMontage                                       DestroyWeaponMontage                                           => _offDestroyWeaponMontage.GetValue();
	public UAnimMontage                                       Destroy1pMontage                                               => _offDestroy1pMontage.GetValue();
	public UAnimMontage                                       Destroy3pMontage                                               => _offDestroy3pMontage.GetValue();
	#endregion


}

// Class Squad.SQSimpleMovementComponent
// 0x0040 (0x01FC - 0x01BC)
public class USQSimpleMovementComponent : USQMovementComponentBase
{
	#region Offsets
	private ExternalOffset<TScriptInterface<USQMeshOwnerInterface>> _offUpdatedMeshOwner                                           = new ExternalOffset<TScriptInterface<USQMeshOwnerInterface>>(0x01C0, false); // 0x01C0(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	private ExternalOffset<float>                             _offLocationInputAcceleration                                  = new ExternalOffset<float>(0x01F4);                           // 0x01F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRotationInputAcceleration                                  = new ExternalOffset<float>(0x01F8);                           // 0x01F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TScriptInterface<USQMeshOwnerInterface>            UpdatedMeshOwner                                               => _offUpdatedMeshOwner.GetValue();
	public float                                              LocationInputAcceleration                                      => _offLocationInputAcceleration.GetValue();
	public float                                              RotationInputAcceleration                                      => _offRotationInputAcceleration.GetValue();
	#endregion


}

// Class Squad.SQSoldierStaticInfo
// 0x002C (0x005C - 0x0030)
public class USQSoldierStaticInfo : UDataAsset
{
	#region Offsets
	private ExternalOffset<float>                             _offMaximumReviveTime                                          = new ExternalOffset<float>(0x0030);                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offReviveRecoveryPerSecond                                    = new ExternalOffset<float>(0x0034);                           // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHorizontalFallingDamageMultiplier                          = new ExternalOffset<float>(0x0038);                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaximumHorizontalSafeFallingSpeed                          = new ExternalOffset<float>(0x003C);                           // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offDamageRevivePenaltyCurve                                   = new ExternalOffset<UCurveFloat>(0x0040, true);               // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offGrabbingDistance                                           = new ExternalOffset<float>(0x0048);                           // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDraggingDropThresholdAngle                                 = new ExternalOffset<float>(0x004C);                           // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offGrabbingSphereRadius                                       = new ExternalOffset<float>(0x0050);                           // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinBipodPronePitch                                         = new ExternalOffset<float>(0x0054);                           // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxBipodPronePitch                                         = new ExternalOffset<float>(0x0058);                           // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              MaximumReviveTime                                              => _offMaximumReviveTime.GetValue();
	public float                                              ReviveRecoveryPerSecond                                        => _offReviveRecoveryPerSecond.GetValue();
	public float                                              HorizontalFallingDamageMultiplier                              => _offHorizontalFallingDamageMultiplier.GetValue();
	public float                                              MaximumHorizontalSafeFallingSpeed                              => _offMaximumHorizontalSafeFallingSpeed.GetValue();
	public UCurveFloat                                        DamageRevivePenaltyCurve                                       => _offDamageRevivePenaltyCurve.GetValue();
	public float                                              GrabbingDistance                                               => _offGrabbingDistance.GetValue();
	public float                                              DraggingDropThresholdAngle                                     => _offDraggingDropThresholdAngle.GetValue();
	public float                                              GrabbingSphereRadius                                           => _offGrabbingSphereRadius.GetValue();
	public float                                              MinBipodPronePitch                                             => _offMinBipodPronePitch.GetValue();
	public float                                              MaxBipodPronePitch                                             => _offMaxBipodPronePitch.GetValue();
	#endregion


}

// Class Squad.SQSoldierMedicalComponent
// 0x00A4 (0x0224 - 0x0180)
public class USQSoldierMedicalComponent : USceneComponent
{
	#region Offsets
	private ExternalOffset<float>                             _offConstructionPointsPerSecondHealth                          = new ExternalOffset<float>(0x021C);                           // 0x021C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAmmoPointsPerSecondHealth                                  = new ExternalOffset<float>(0x0220);                           // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              ConstructionPointsPerSecondHealth                              => _offConstructionPointsPerSecondHealth.GetValue();
	public float                                              AmmoPointsPerSecondHealth                                      => _offAmmoPointsPerSecondHealth.GetValue();
	#endregion


}

// Class Squad.SQSoldierMovement
// 0x018D (0x0899 - 0x070C)
public class USQSoldierMovement : UCharacterMovementComponent
{
	#region Offsets
	private ExternalOffset<UCurveFloat>                       _offSoldierDefaultInclineMovementSpeedCurve                    = new ExternalOffset<UCurveFloat>(0x0730, true);               // 0x0730(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWalkSpeedMultiplier                                        = new ExternalOffset<float>(0x0738);                           // 0x0738(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStrafeSpeedMultiplier                                      = new ExternalOffset<float>(0x073C);                           // 0x073C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLeaningStandSpeedMultiplier                                = new ExternalOffset<float>(0x0740);                           // 0x0740(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLeaningCrouchSpeedMultiplier                               = new ExternalOffset<float>(0x0744);                           // 0x0744(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBackwardsWalkSpeedMultiplier                               = new ExternalOffset<float>(0x0748);                           // 0x0748(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDraggingSpeedMultiplier                                    = new ExternalOffset<float>(0x074C);                           // 0x074C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offOutsidePhysicsSpeedMultiplier                              = new ExternalOffset<float>(0x0750);                           // 0x0750(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAnimationSpeedLimiter                                      = new ExternalOffset<float>(0x0754);                           // 0x0754(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSprintSpeedMultiplier                                      = new ExternalOffset<float>(0x0758);                           // 0x0758(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxSprintAcceleration                                      = new ExternalOffset<float>(0x075C);                           // 0x075C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offWasRunning                                                 = new ExternalOffset<byte/*(bool)*/>(0x0760);                  // 0x0760(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxWalkSpeedProne                                          = new ExternalOffset<float>(0x0764);                           // 0x0764(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offProneHalfHeight                                            = new ExternalOffset<float>(0x0768);                           // 0x0768(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbCanWalkOffLedgesWhenProne                                 = new ExternalOffset<char>(0x076C, false);                     // 0x076C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbCanSprintWhenCrouched                                     = new ExternalOffset<char>(0x076C, false);                     // 0x076C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbWantsToProne                                              = new ExternalOffset<char>(0x076C, false);                     // 0x076C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbProneMaintainsBaseLocation                                = new ExternalOffset<char>(0x076C, false);                     // 0x076C(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnTemplate, EditConst, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStickyGroundMultiplier                                     = new ExternalOffset<float>(0x0770);                           // 0x0770(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStamina                                                    = new ExternalOffset<float>(0x0774);                           // 0x0774(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStaminaMax                                                 = new ExternalOffset<float>(0x0778);                           // 0x0778(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTiredThreshold                                             = new ExternalOffset<float>(0x077C);                           // 0x077C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offExhaustedThreshold                                         = new ExternalOffset<float>(0x0780);                           // 0x0780(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offExhaustedPenalty                                           = new ExternalOffset<float>(0x0784);                           // 0x0784(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStaminaExhausted                                          = new ExternalOffset<byte/*(bool)*/>(0x0788);                  // 0x0788(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStaminaRegenRate                                           = new ExternalOffset<float>(0x078C);                           // 0x078C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHurtStaminaRegenRate                                       = new ExternalOffset<float>(0x0790);                           // 0x0790(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsHurt                                                    = new ExternalOffset<byte/*(bool)*/>(0x0794);                  // 0x0794(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offUpdateStaminaFrequency                                     = new ExternalOffset<float>(0x0798);                           // 0x0798(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FTimerHandle>                      _offStaminaUpdateTimerHandle                                   = new ExternalOffset<FTimerHandle>(0x07A0, false);             // 0x07A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWalkPenalty                                                = new ExternalOffset<float>(0x07A8);                           // 0x07A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offClimbingPenalty                                            = new ExternalOffset<float>(0x07AC);                           // 0x07AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMovePenalty                                                = new ExternalOffset<float>(0x07B0);                           // 0x07B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSprintPenalty                                              = new ExternalOffset<float>(0x07B4);                           // 0x07B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCrouchPenalty                                              = new ExternalOffset<float>(0x07B8);                           // 0x07B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCrouchSprintPenalty                                        = new ExternalOffset<float>(0x07BC);                           // 0x07BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offPronePenalty                                               = new ExternalOffset<float>(0x07C0);                           // 0x07C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offProneSprintPenalty                                         = new ExternalOffset<float>(0x07C4);                           // 0x07C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDraggingPenalty                                            = new ExternalOffset<float>(0x07C8);                           // 0x07C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStandLeanPenalty                                           = new ExternalOffset<float>(0x07CC);                           // 0x07CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCrouchLeanPenalty                                          = new ExternalOffset<float>(0x07D0);                           // 0x07D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBurstLeanPenalty                                           = new ExternalOffset<float>(0x07D4);                           // 0x07D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStandStaminaRegenMultiplier                                = new ExternalOffset<float>(0x07D8);                           // 0x07D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCrouchStaminaRegenMultiplier                               = new ExternalOffset<float>(0x07DC);                           // 0x07DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offProneStaminaRegenMultiplier                                = new ExternalOffset<float>(0x07E0);                           // 0x07E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbLimitConsecutiveJumping                                   = new ExternalOffset<char>(0x07E4, false);                     // 0x07E4(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offConsecutiveJumpingPenaltyReductionTime                     = new ExternalOffset<float>(0x07E8);                           // 0x07E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<float>>                     _offConsecutiveJumpingVelocityMultipliers                      = new ExternalOffset<TArray<float>>(0x07F0, false);            // 0x07F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offConsecutiveJumpingArrayIndex                               = new ExternalOffset<int>(0x0800);                             // 0x0800(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLastJumpPenaltyChangeTime                                  = new ExternalOffset<float>(0x0804);                           // 0x0804(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbStaminaLimitsRunning                                      = new ExternalOffset<char>(0x0808, false);                     // 0x0808(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbStaminaLimitsJumping                                      = new ExternalOffset<char>(0x0808, false);                     // 0x0808(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStaminaUseThreshold                                        = new ExternalOffset<float>(0x080C);                           // 0x080C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbJumpingUsesStamina                                        = new ExternalOffset<char>(0x0810, false);                     // 0x0810(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStaminaLossPerJump                                         = new ExternalOffset<float>(0x0814);                           // 0x0814(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FVector>>                   _offClimbMovePath                                              = new ExternalOffset<TArray<FVector>>(0x0820, false);          // 0x0820(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	private ExternalOffset<TArray<float>>                     _offClimbInterpolationTimes                                    = new ExternalOffset<TArray<float>>(0x0830, false);            // 0x0830(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	private ExternalOffset<float>                             _offBipodMaxAnglePerIteration                                  = new ExternalOffset<float>(0x0840);                           // 0x0840(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSoldier>                        _offSquadCharacterOwner                                        = new ExternalOffset<ASQSoldier>(0x0858, true);                // 0x0858(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offServerUpdateRate                                           = new ExternalOffset<int>(0x0860);                             // 0x0860(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offNonRenderedUpdateRate                                      = new ExternalOffset<int>(0x0864);                             // 0x0864(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offNearByNonRenderedUpdateRate                                = new ExternalOffset<int>(0x0868);                             // 0x0868(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offNearByNonRenderedUpdateRateDistance                        = new ExternalOffset<int>(0x086C);                             // 0x086C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<float>>                     _offDistanceFactorThesholds                                    = new ExternalOffset<TArray<float>>(0x0870, false);            // 0x0870(0x0010) (ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<USkinnedMeshComponent>>     _offSkinnedComponents                                          = new ExternalOffset<TArray<USkinnedMeshComponent>>(0x0880, false); // 0x0880(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbAimDownSights                                             = new ExternalOffset<char>(0x0898, false);                     // 0x0898(0x0001) BIT_FIELD (Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public UCurveFloat                                        SoldierDefaultInclineMovementSpeedCurve                        => _offSoldierDefaultInclineMovementSpeedCurve.GetValue();
	public float                                              WalkSpeedMultiplier                                            => _offWalkSpeedMultiplier.GetValue();
	public float                                              StrafeSpeedMultiplier                                          => _offStrafeSpeedMultiplier.GetValue();
	public float                                              LeaningStandSpeedMultiplier                                    => _offLeaningStandSpeedMultiplier.GetValue();
	public float                                              LeaningCrouchSpeedMultiplier                                   => _offLeaningCrouchSpeedMultiplier.GetValue();
	public float                                              BackwardsWalkSpeedMultiplier                                   => _offBackwardsWalkSpeedMultiplier.GetValue();
	public float                                              DraggingSpeedMultiplier                                        => _offDraggingSpeedMultiplier.GetValue();
	public float                                              OutsidePhysicsSpeedMultiplier                                  => _offOutsidePhysicsSpeedMultiplier.GetValue();
	public float                                              AnimationSpeedLimiter                                          => _offAnimationSpeedLimiter.GetValue();
	public float                                              SprintSpeedMultiplier                                          => _offSprintSpeedMultiplier.GetValue();
	public float                                              MaxSprintAcceleration                                          => _offMaxSprintAcceleration.GetValue();
	public byte/*(bool)*/                                     WasRunning                                                     => _offWasRunning.GetValue();
	public float                                              MaxWalkSpeedProne                                              => _offMaxWalkSpeedProne.GetValue();
	public float                                              ProneHalfHeight                                                => _offProneHalfHeight.GetValue();
	public float                                              StickyGroundMultiplier                                         => _offStickyGroundMultiplier.GetValue();
	public float                                              Stamina                                                        => _offStamina.GetValue();
	public float                                              StaminaMax                                                     => _offStaminaMax.GetValue();
	public float                                              TiredThreshold                                                 => _offTiredThreshold.GetValue();
	public float                                              ExhaustedThreshold                                             => _offExhaustedThreshold.GetValue();
	public float                                              ExhaustedPenalty                                               => _offExhaustedPenalty.GetValue();
	public byte/*(bool)*/                                     bStaminaExhausted                                              => _offbStaminaExhausted.GetValue();
	public float                                              StaminaRegenRate                                               => _offStaminaRegenRate.GetValue();
	public float                                              HurtStaminaRegenRate                                           => _offHurtStaminaRegenRate.GetValue();
	public byte/*(bool)*/                                     bIsHurt                                                        => _offbIsHurt.GetValue();
	public float                                              UpdateStaminaFrequency                                         => _offUpdateStaminaFrequency.GetValue();
	public FTimerHandle                                       StaminaUpdateTimerHandle                                       => _offStaminaUpdateTimerHandle.GetValue();
	public float                                              WalkPenalty                                                    => _offWalkPenalty.GetValue();
	public float                                              ClimbingPenalty                                                => _offClimbingPenalty.GetValue();
	public float                                              MovePenalty                                                    => _offMovePenalty.GetValue();
	public float                                              SprintPenalty                                                  => _offSprintPenalty.GetValue();
	public float                                              CrouchPenalty                                                  => _offCrouchPenalty.GetValue();
	public float                                              CrouchSprintPenalty                                            => _offCrouchSprintPenalty.GetValue();
	public float                                              PronePenalty                                                   => _offPronePenalty.GetValue();
	public float                                              ProneSprintPenalty                                             => _offProneSprintPenalty.GetValue();
	public float                                              DraggingPenalty                                                => _offDraggingPenalty.GetValue();
	public float                                              StandLeanPenalty                                               => _offStandLeanPenalty.GetValue();
	public float                                              CrouchLeanPenalty                                              => _offCrouchLeanPenalty.GetValue();
	public float                                              BurstLeanPenalty                                               => _offBurstLeanPenalty.GetValue();
	public float                                              StandStaminaRegenMultiplier                                    => _offStandStaminaRegenMultiplier.GetValue();
	public float                                              CrouchStaminaRegenMultiplier                                   => _offCrouchStaminaRegenMultiplier.GetValue();
	public float                                              ProneStaminaRegenMultiplier                                    => _offProneStaminaRegenMultiplier.GetValue();
	public float                                              ConsecutiveJumpingPenaltyReductionTime                         => _offConsecutiveJumpingPenaltyReductionTime.GetValue();
	public TArray<float>                                      ConsecutiveJumpingVelocityMultipliers                          => _offConsecutiveJumpingVelocityMultipliers.GetValue();
	public int                                                ConsecutiveJumpingArrayIndex                                   => _offConsecutiveJumpingArrayIndex.GetValue();
	public float                                              LastJumpPenaltyChangeTime                                      => _offLastJumpPenaltyChangeTime.GetValue();
	public float                                              StaminaUseThreshold                                            => _offStaminaUseThreshold.GetValue();
	public float                                              StaminaLossPerJump                                             => _offStaminaLossPerJump.GetValue();
	public TArray<FVector>                                    ClimbMovePath                                                  => _offClimbMovePath.GetValue();
	public TArray<float>                                      ClimbInterpolationTimes                                        => _offClimbInterpolationTimes.GetValue();
	public float                                              BipodMaxAnglePerIteration                                      => _offBipodMaxAnglePerIteration.GetValue();
	public ASQSoldier                                         SquadCharacterOwner                                            => _offSquadCharacterOwner.GetValue();
	public int                                                ServerUpdateRate                                               => _offServerUpdateRate.GetValue();
	public int                                                NonRenderedUpdateRate                                          => _offNonRenderedUpdateRate.GetValue();
	public int                                                NearByNonRenderedUpdateRate                                    => _offNearByNonRenderedUpdateRate.GetValue();
	public int                                                NearByNonRenderedUpdateRateDistance                            => _offNearByNonRenderedUpdateRateDistance.GetValue();
	public TArray<float>                                      DistanceFactorThesholds                                        => _offDistanceFactorThesholds.GetValue();
	public TArray<USkinnedMeshComponent>                      SkinnedComponents                                              => _offSkinnedComponents.GetValue();
	#endregion


}

// Class Squad.SQSoldierNew
// 0x0569 (0x1B61 - 0x15F8)
public class ASQSoldierNew : ASQSoldier
{
	#region Offsets
	private ExternalOffset<UAnimMontage>                      _offIdleMontage                                                = new ExternalOffset<UAnimMontage>(0x1628, true);              // 0x1628(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQClimbData>                      _offClimbData                                                  = new ExternalOffset<FSQClimbData>(0x1630, false);             // 0x1630(0x0178) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbClimbingEnabled                                           = new ExternalOffset<byte/*(bool)*/>(0x17A8);                  // 0x17A8(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FSQClimbInfo>                      _offClimbInfo                                                  = new ExternalOffset<FSQClimbInfo>(0x17B0, false);             // 0x17B0(0x0030) (Net, RepNotify, NativeAccessSpecifierPrivate)
	private ExternalOffset<USQBoundaryListener>               _offBoundaryListener                                           = new ExternalOffset<USQBoundaryListener>(0x1868, true);       // 0x1868(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USkeletalMeshComponent>            _offUpperMesh1P                                                = new ExternalOffset<USkeletalMeshComponent>(0x1878, true);    // 0x1878(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USpringArmComponent>               _offSpringArm1P                                                = new ExternalOffset<USpringArmComponent>(0x1880, true);       // 0x1880(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQItemStaticInfo>                 _offCurrentItemStaticInfo                                      = new ExternalOffset<USQItemStaticInfo>(0x1888, true);         // 0x1888(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQBotComponent>                   _offBotComponent                                               = new ExternalOffset<USQBotComponent>(0x1890, true);           // 0x1890(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offControlRotation                                            = new ExternalOffset<FRotator>(0x1898, false);                 // 0x1898(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offAimRotation1P                                              = new ExternalOffset<FRotator>(0x18A4, false);                 // 0x18A4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRequiredProneTransitionTime                                = new ExternalOffset<float>(0x18B0);                           // 0x18B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedIsUsingItem                                         = new ExternalOffset<byte/*(bool)*/>(0x18B4);                  // 0x18B4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedIsUsingGrenade                                      = new ExternalOffset<byte/*(bool)*/>(0x18B5);                  // 0x18B5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedLeanLeft                                            = new ExternalOffset<byte/*(bool)*/>(0x18B6);                  // 0x18B6(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedLeanRight                                           = new ExternalOffset<byte/*(bool)*/>(0x18B7);                  // 0x18B7(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCachedFwdPct                                               = new ExternalOffset<float>(0x18B8);                           // 0x18B8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCachedStrafePct                                            = new ExternalOffset<float>(0x18BC);                           // 0x18BC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShot                                                      = new ExternalOffset<byte/*(bool)*/>(0x18C0);                  // 0x18C0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbWasCrouchedBeforeProne                                    = new ExternalOffset<byte/*(bool)*/>(0x18C1);                  // 0x18C1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsCameraRecoilActive                                      = new ExternalOffset<byte/*(bool)*/>(0x18C2);                  // 0x18C2(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSpringArmTargetHeight1p                                    = new ExternalOffset<float>(0x18C4);                           // 0x18C4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSpringArmHeight1pInterpSpeed                               = new ExternalOffset<float>(0x18C8);                           // 0x18C8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTempSpringArmHeight1p                                      = new ExternalOffset<float>(0x18CC);                           // 0x18CC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCurrentSpringArmHeight1p                                   = new ExternalOffset<float>(0x18D0);                           // 0x18D0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSpringArmClimbingHeight                                    = new ExternalOffset<float>(0x18D4);                           // 0x18D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSpringArmCrouchingMovingHeight                             = new ExternalOffset<float>(0x18D8);                           // 0x18D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSpringArmCrouchingStaticHeight                             = new ExternalOffset<float>(0x18DC);                           // 0x18DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSpringArmProneHeight                                       = new ExternalOffset<float>(0x18E0);                           // 0x18E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offBase1pOffset                                               = new ExternalOffset<FVector>(0x18E4, false);                  // 0x18E4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offRawBase1pOffset                                            = new ExternalOffset<FVector>(0x18F0, false);                  // 0x18F0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbSwitchedSoldierStance                                     = new ExternalOffset<byte/*(bool)*/>(0x18FC);                  // 0x18FC(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAudioComponent>                   _offBreathingAC                                                = new ExternalOffset<UAudioComponent>(0x1900, true);           // 0x1900(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offCalmBreathing                                              = new ExternalOffset<USoundBase>(0x1908, true);                // 0x1908(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offMediumBreathing                                            = new ExternalOffset<USoundBase>(0x1910, true);                // 0x1910(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offHeavyBreathing                                             = new ExternalOffset<USoundBase>(0x1918, true);                // 0x1918(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundBase>                        _offExhaustedBreathing                                         = new ExternalOffset<USoundBase>(0x1920, true);                // 0x1920(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offViewMode3p                                                 = new ExternalOffset<int>(0x1928);                             // 0x1928(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offViewPos3p                                                  = new ExternalOffset<FVector>(0x192C, false);                  // 0x192C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offViewDistance3p                                             = new ExternalOffset<float>(0x1938);                           // 0x1938(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offViewOrientation3p                                          = new ExternalOffset<FRotator>(0x193C, false);                 // 0x193C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offViewScrollDistance3p                                       = new ExternalOffset<int>(0x1948);                             // 0x1948(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offViewAdjustingDelta3p                                       = new ExternalOffset<FRotator>(0x194C, false);                 // 0x194C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offViewTogglePressTime                                        = new ExternalOffset<float>(0x1958);                           // 0x1958(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAdjustingView3p                                           = new ExternalOffset<byte/*(bool)*/>(0x195C);                  // 0x195C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbLastInThirdPersonView                                     = new ExternalOffset<byte/*(bool)*/>(0x195D);                  // 0x195D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FTimerHandle>                      _offUpdateBreathingTimerHandle                                 = new ExternalOffset<FTimerHandle>(0x1960, false);             // 0x1960(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offUpdateBreathingTimerDuration                               = new ExternalOffset<float>(0x1968);                           // 0x1968(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offStartCrouch_1P_Montage                                     = new ExternalOffset<UAnimMontage>(0x1970, true);              // 0x1970(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offEndCrouch_1P_Montage                                       = new ExternalOffset<UAnimMontage>(0x1978, true);              // 0x1978(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offDraggingStart1pMontage                                     = new ExternalOffset<UAnimMontage>(0x1980, true);              // 0x1980(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offDraggingStart3pMontage                                     = new ExternalOffset<UAnimMontage>(0x1988, true);              // 0x1988(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offDraggingEnd1pMontage                                       = new ExternalOffset<UAnimMontage>(0x1990, true);              // 0x1990(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offDraggingEnd3pMontage                                       = new ExternalOffset<UAnimMontage>(0x1998, true);              // 0x1998(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQFreeLookComponent>              _offFreeLookComponent                                          = new ExternalOffset<USQFreeLookComponent>(0x19A0, true);      // 0x19A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FRotator>                          _offVaultClimbAo                                               = new ExternalOffset<FRotator>(0x19A8, false);                 // 0x19A8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offCachedVaultClimbAo2                                        = new ExternalOffset<FRotator>(0x19B4, false);                 // 0x19B4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCachedVaultClimbAoYawInterpSpeed                           = new ExternalOffset<float>(0x19C0);                           // 0x19C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCachedVaultClimbAoPitchInterpSpeed                         = new ExternalOffset<float>(0x19C4);                           // 0x19C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQEquipableItem>                  _offPreviousWeapon                                             = new ExternalOffset<ASQEquipableItem>(0x19C8, true);          // 0x19C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbPreviousWeaponMagHasAmmo                                  = new ExternalOffset<byte/*(bool)*/>(0x19D0);                  // 0x19D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCachedIsSprinting                                         = new ExternalOffset<byte/*(bool)*/>(0x19D1);                  // 0x19D1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USceneComponent>                   _offWeaponDeviationRot                                         = new ExternalOffset<USceneComponent>(0x19D8, true);           // 0x19D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbAccuracyDebugVisible                                      = new ExternalOffset<byte/*(bool)*/>(0x19E0);                  // 0x19E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQAnimInstanceSoldier3P>          _offCachedAnimInstance3p                                       = new ExternalOffset<USQAnimInstanceSoldier3P>(0x19E8, true);  // 0x19E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQAnimInstanceSoldier1P>          _offCachedAnimInstance1p                                       = new ExternalOffset<USQAnimInstanceSoldier1P>(0x19F0, true);  // 0x19F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSoldierPlayTime1p                                          = new ExternalOffset<float>(0x19F8);                           // 0x19F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSoldierPlayTime3p                                          = new ExternalOffset<float>(0x19FC);                           // 0x19FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBipod3pSkelMeshOffset                                      = new ExternalOffset<float>(0x1A00);                           // 0x1A00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBeginBipod3pSkelMeshOffset                                 = new ExternalOffset<float>(0x1A04);                           // 0x1A04(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCachedBipodTransitionAlpha                                 = new ExternalOffset<float>(0x1A08);                           // 0x1A08(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsBipodDeployed                                           = new ExternalOffset<byte/*(bool)*/>(0x1A0C);                  // 0x1A0C(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FVector>                           _offBipodHitLocZeroBased                                       = new ExternalOffset<FVector>(0x1A10, false);                  // 0x1A10(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<USceneComponent>                   _offBipodObject                                                = new ExternalOffset<USceneComponent>(0x1A20, true);           // 0x1A20(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FVector>                           _offCachedDeployed1pBipodLocation                              = new ExternalOffset<FVector>(0x1A34, false);                  // 0x1A34(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offBipodHitLocSpringArm1PHeight                               = new ExternalOffset<float>(0x1A40);                           // 0x1A40(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offBipodNonDeployedSpringArm1pRelativeHeight                  = new ExternalOffset<float>(0x1A44);                           // 0x1A44(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offBipodSpringArmFloorTraceLength                             = new ExternalOffset<float>(0x1ABC);                           // 0x1ABC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDeployedBipodCapsuleRadius                                 = new ExternalOffset<float>(0x1AC0);                           // 0x1AC0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBipodClientServerAcceptableRange                           = new ExternalOffset<float>(0x1AC4);                           // 0x1AC4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBipodObjectMaxDelta                                        = new ExternalOffset<float>(0x1AC8);                           // 0x1AC8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBipodDepth                                                 = new ExternalOffset<float>(0x1ACC);                           // 0x1ACC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBipodStandingMinDeployHeight                               = new ExternalOffset<float>(0x1AD0);                           // 0x1AD0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBipodStandingMaxDeployHeight                               = new ExternalOffset<float>(0x1AD4);                           // 0x1AD4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBipodCrouchingMinDeployHeight                              = new ExternalOffset<float>(0x1AD8);                           // 0x1AD8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBipodCrouchingMaxDeployHeight                              = new ExternalOffset<float>(0x1ADC);                           // 0x1ADC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBipodProneMinDeployHeight                                  = new ExternalOffset<float>(0x1AE0);                           // 0x1AE0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBipodProneMaxDeployHeight                                  = new ExternalOffset<float>(0x1AE4);                           // 0x1AE4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBipodCameraProbeSize                                       = new ExternalOffset<float>(0x1AE8);                           // 0x1AE8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbWeaponLowered                                             = new ExternalOffset<byte/*(bool)*/>(0x1AF0);                  // 0x1AF0(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPawnPossessedEvent                                       = new ExternalOffset<FScriptMulticastDelegate>(0x1AF8, false); // 0x1AF8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPawnUnPossessedEvent                                     = new ExternalOffset<FScriptMulticastDelegate>(0x1B08, false); // 0x1B08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<USQAnimDataEmotes>                 _offEmoteData                                                  = new ExternalOffset<USQAnimDataEmotes>(0x1B18, true);         // 0x1B18(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQVoipAnim>                       _offMouthAnim                                                  = new ExternalOffset<FSQVoipAnim>(0x1B20, false);              // 0x1B20(0x0020) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FSQVoipAnim>                       _offHandActionRadioAnim                                        = new ExternalOffset<FSQVoipAnim>(0x1B40, false);              // 0x1B40(0x0020) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsPlayingVoipHandAnim                                     = new ExternalOffset<byte/*(bool)*/>(0x1B60);                  // 0x1B60(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public UAnimMontage                                       IdleMontage                                                    => _offIdleMontage.GetValue();
	public FSQClimbData                                       ClimbData                                                      => _offClimbData.GetValue();
	public byte/*(bool)*/                                     bClimbingEnabled                                               => _offbClimbingEnabled.GetValue();
	public FSQClimbInfo                                       ClimbInfo                                                      => _offClimbInfo.GetValue();
	public USQBoundaryListener                                BoundaryListener                                               => _offBoundaryListener.GetValue();
	public USkeletalMeshComponent                             UpperMesh1P                                                    => _offUpperMesh1P.GetValue();
	public USpringArmComponent                                SpringArm1P                                                    => _offSpringArm1P.GetValue();
	public USQItemStaticInfo                                  CurrentItemStaticInfo                                          => _offCurrentItemStaticInfo.GetValue();
	public USQBotComponent                                    BotComponent                                                   => _offBotComponent.GetValue();
	public FRotator                                           ControlRotation                                                => _offControlRotation.GetValue();
	public FRotator                                           AimRotation1P                                                  => _offAimRotation1P.GetValue();
	public float                                              RequiredProneTransitionTime                                    => _offRequiredProneTransitionTime.GetValue();
	public byte/*(bool)*/                                     bCachedIsUsingItem                                             => _offbCachedIsUsingItem.GetValue();
	public byte/*(bool)*/                                     bCachedIsUsingGrenade                                          => _offbCachedIsUsingGrenade.GetValue();
	public byte/*(bool)*/                                     bCachedLeanLeft                                                => _offbCachedLeanLeft.GetValue();
	public byte/*(bool)*/                                     bCachedLeanRight                                               => _offbCachedLeanRight.GetValue();
	public float                                              CachedFwdPct                                                   => _offCachedFwdPct.GetValue();
	public float                                              CachedStrafePct                                                => _offCachedStrafePct.GetValue();
	public byte/*(bool)*/                                     bShot                                                          => _offbShot.GetValue();
	public byte/*(bool)*/                                     bWasCrouchedBeforeProne                                        => _offbWasCrouchedBeforeProne.GetValue();
	public byte/*(bool)*/                                     bIsCameraRecoilActive                                          => _offbIsCameraRecoilActive.GetValue();
	public float                                              SpringArmTargetHeight1p                                        => _offSpringArmTargetHeight1p.GetValue();
	public float                                              SpringArmHeight1pInterpSpeed                                   => _offSpringArmHeight1pInterpSpeed.GetValue();
	public float                                              TempSpringArmHeight1p                                          => _offTempSpringArmHeight1p.GetValue();
	public float                                              CurrentSpringArmHeight1p                                       => _offCurrentSpringArmHeight1p.GetValue();
	public float                                              SpringArmClimbingHeight                                        => _offSpringArmClimbingHeight.GetValue();
	public float                                              SpringArmCrouchingMovingHeight                                 => _offSpringArmCrouchingMovingHeight.GetValue();
	public float                                              SpringArmCrouchingStaticHeight                                 => _offSpringArmCrouchingStaticHeight.GetValue();
	public float                                              SpringArmProneHeight                                           => _offSpringArmProneHeight.GetValue();
	public FVector                                            Base1pOffset                                                   => _offBase1pOffset.GetValue();
	public FVector                                            RawBase1pOffset                                                => _offRawBase1pOffset.GetValue();
	public byte/*(bool)*/                                     bSwitchedSoldierStance                                         => _offbSwitchedSoldierStance.GetValue();
	public UAudioComponent                                    BreathingAC                                                    => _offBreathingAC.GetValue();
	public USoundBase                                         CalmBreathing                                                  => _offCalmBreathing.GetValue();
	public USoundBase                                         MediumBreathing                                                => _offMediumBreathing.GetValue();
	public USoundBase                                         HeavyBreathing                                                 => _offHeavyBreathing.GetValue();
	public USoundBase                                         ExhaustedBreathing                                             => _offExhaustedBreathing.GetValue();
	public int                                                ViewMode3p                                                     => _offViewMode3p.GetValue();
	public FVector                                            ViewPos3p                                                      => _offViewPos3p.GetValue();
	public float                                              ViewDistance3p                                                 => _offViewDistance3p.GetValue();
	public FRotator                                           ViewOrientation3p                                              => _offViewOrientation3p.GetValue();
	public int                                                ViewScrollDistance3p                                           => _offViewScrollDistance3p.GetValue();
	public FRotator                                           ViewAdjustingDelta3p                                           => _offViewAdjustingDelta3p.GetValue();
	public float                                              ViewTogglePressTime                                            => _offViewTogglePressTime.GetValue();
	public byte/*(bool)*/                                     bAdjustingView3p                                               => _offbAdjustingView3p.GetValue();
	public byte/*(bool)*/                                     bLastInThirdPersonView                                         => _offbLastInThirdPersonView.GetValue();
	public FTimerHandle                                       UpdateBreathingTimerHandle                                     => _offUpdateBreathingTimerHandle.GetValue();
	public float                                              UpdateBreathingTimerDuration                                   => _offUpdateBreathingTimerDuration.GetValue();
	public UAnimMontage                                       StartCrouch_1P_Montage                                         => _offStartCrouch_1P_Montage.GetValue();
	public UAnimMontage                                       EndCrouch_1P_Montage                                           => _offEndCrouch_1P_Montage.GetValue();
	public UAnimMontage                                       DraggingStart1pMontage                                         => _offDraggingStart1pMontage.GetValue();
	public UAnimMontage                                       DraggingStart3pMontage                                         => _offDraggingStart3pMontage.GetValue();
	public UAnimMontage                                       DraggingEnd1pMontage                                           => _offDraggingEnd1pMontage.GetValue();
	public UAnimMontage                                       DraggingEnd3pMontage                                           => _offDraggingEnd3pMontage.GetValue();
	public USQFreeLookComponent                               FreeLookComponent                                              => _offFreeLookComponent.GetValue();
	public FRotator                                           VaultClimbAo                                                   => _offVaultClimbAo.GetValue();
	public FRotator                                           CachedVaultClimbAo2                                            => _offCachedVaultClimbAo2.GetValue();
	public float                                              CachedVaultClimbAoYawInterpSpeed                               => _offCachedVaultClimbAoYawInterpSpeed.GetValue();
	public float                                              CachedVaultClimbAoPitchInterpSpeed                             => _offCachedVaultClimbAoPitchInterpSpeed.GetValue();
	public ASQEquipableItem                                   PreviousWeapon                                                 => _offPreviousWeapon.GetValue();
	public byte/*(bool)*/                                     bPreviousWeaponMagHasAmmo                                      => _offbPreviousWeaponMagHasAmmo.GetValue();
	public byte/*(bool)*/                                     bCachedIsSprinting                                             => _offbCachedIsSprinting.GetValue();
	public USceneComponent                                    WeaponDeviationRot                                             => _offWeaponDeviationRot.GetValue();
	public byte/*(bool)*/                                     bAccuracyDebugVisible                                          => _offbAccuracyDebugVisible.GetValue();
	public USQAnimInstanceSoldier3P                           CachedAnimInstance3p                                           => _offCachedAnimInstance3p.GetValue();
	public USQAnimInstanceSoldier1P                           CachedAnimInstance1p                                           => _offCachedAnimInstance1p.GetValue();
	public float                                              SoldierPlayTime1p                                              => _offSoldierPlayTime1p.GetValue();
	public float                                              SoldierPlayTime3p                                              => _offSoldierPlayTime3p.GetValue();
	public float                                              Bipod3pSkelMeshOffset                                          => _offBipod3pSkelMeshOffset.GetValue();
	public float                                              BeginBipod3pSkelMeshOffset                                     => _offBeginBipod3pSkelMeshOffset.GetValue();
	public float                                              CachedBipodTransitionAlpha                                     => _offCachedBipodTransitionAlpha.GetValue();
	public byte/*(bool)*/                                     bIsBipodDeployed                                               => _offbIsBipodDeployed.GetValue();
	public FVector                                            BipodHitLocZeroBased                                           => _offBipodHitLocZeroBased.GetValue();
	public USceneComponent                                    BipodObject                                                    => _offBipodObject.GetValue();
	public FVector                                            CachedDeployed1pBipodLocation                                  => _offCachedDeployed1pBipodLocation.GetValue();
	public float                                              BipodHitLocSpringArm1PHeight                                   => _offBipodHitLocSpringArm1PHeight.GetValue();
	public float                                              BipodNonDeployedSpringArm1pRelativeHeight                      => _offBipodNonDeployedSpringArm1pRelativeHeight.GetValue();
	public float                                              BipodSpringArmFloorTraceLength                                 => _offBipodSpringArmFloorTraceLength.GetValue();
	public float                                              DeployedBipodCapsuleRadius                                     => _offDeployedBipodCapsuleRadius.GetValue();
	public float                                              BipodClientServerAcceptableRange                               => _offBipodClientServerAcceptableRange.GetValue();
	public float                                              BipodObjectMaxDelta                                            => _offBipodObjectMaxDelta.GetValue();
	public float                                              BipodDepth                                                     => _offBipodDepth.GetValue();
	public float                                              BipodStandingMinDeployHeight                                   => _offBipodStandingMinDeployHeight.GetValue();
	public float                                              BipodStandingMaxDeployHeight                                   => _offBipodStandingMaxDeployHeight.GetValue();
	public float                                              BipodCrouchingMinDeployHeight                                  => _offBipodCrouchingMinDeployHeight.GetValue();
	public float                                              BipodCrouchingMaxDeployHeight                                  => _offBipodCrouchingMaxDeployHeight.GetValue();
	public float                                              BipodProneMinDeployHeight                                      => _offBipodProneMinDeployHeight.GetValue();
	public float                                              BipodProneMaxDeployHeight                                      => _offBipodProneMaxDeployHeight.GetValue();
	public float                                              BipodCameraProbeSize                                           => _offBipodCameraProbeSize.GetValue();
	public byte/*(bool)*/                                     bWeaponLowered                                                 => _offbWeaponLowered.GetValue();
	public FScriptMulticastDelegate                           OnPawnPossessedEvent                                           => _offOnPawnPossessedEvent.GetValue();
	public FScriptMulticastDelegate                           OnPawnUnPossessedEvent                                         => _offOnPawnUnPossessedEvent.GetValue();
	public USQAnimDataEmotes                                  EmoteData                                                      => _offEmoteData.GetValue();
	public FSQVoipAnim                                        MouthAnim                                                      => _offMouthAnim.GetValue();
	public FSQVoipAnim                                        HandActionRadioAnim                                            => _offHandActionRadioAnim.GetValue();
	public byte/*(bool)*/                                     bIsPlayingVoipHandAnim                                         => _offbIsPlayingVoipHandAnim.GetValue();
	#endregion


}

// Class Squad.SQSoldierRagdollComponent
// 0x00B0 (0x0178 - 0x00C8)
public class USQSoldierRagdollComponent : UActorComponent
{
	#region Offsets
	private ExternalOffset<float>                             _offTimeTillAutoGetUp                                          = new ExternalOffset<float>(0x00D8);                           // 0x00D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAutoGetUpRetryFrequency                                    = new ExternalOffset<float>(0x00DC);                           // 0x00DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoveryBlendSeconds                                       = new ExternalOffset<float>(0x00E0);                           // 0x00E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFreezeBodyCheckFrequency                                   = new ExternalOffset<float>(0x00E4);                           // 0x00E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offPelvisBoneName                                             = new ExternalOffset<FName>(0x00E8, false);                    // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UPhysicsAsset>                     _offRagdollPhysicsAsset                                        = new ExternalOffset<UPhysicsAsset>(0x00F0, true);             // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCorrectionBaseRatio                                        = new ExternalOffset<float>(0x00F8);                           // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCorrectionMaxAddedRatio                                    = new ExternalOffset<float>(0x00FC);                           // 0x00FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offErrorStateSecondsToMaxRatio                                = new ExternalOffset<float>(0x0100);                           // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLinearErrorThreshold                                       = new ExternalOffset<float>(0x0104);                           // 0x0104(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLinearVelocitySleepThreshold                               = new ExternalOffset<float>(0x0108);                           // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBulletImpactMultiplier                                     = new ExternalOffset<float>(0x010C);                           // 0x010C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offExplosionImpactMultiplier                                  = new ExternalOffset<float>(0x0110);                           // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSecondsWithVehicleCollision                                = new ExternalOffset<float>(0x0114);                           // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQSoldierRagdollReason>           _offRagdollState                                               = new ExternalOffset<ESQSoldierRagdollReason>(0x0119, false);  // 0x0119(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector_NetQuantize100>            _offServerPelvisLocationZeroBased                              = new ExternalOffset<FVector_NetQuantize100>(0x011C, false);   // 0x011C(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FVector>                           _offUnragdolLocationOffset                                     = new ExternalOffset<FVector>(0x0128, false);                  // 0x0128(0x000C) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
//	private ExternalOffset<char>                              _offbBodyHasSettled                                            = new ExternalOffset<char>(0x0148, false);                     // 0x0148(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQEquipableItem>                  _offDroppedWeapon                                              = new ExternalOffset<ASQEquipableItem>(0x0150, true);          // 0x0150(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQSoldierNew>                     _offOwnerSoldier                                               = new ExternalOffset<ASQSoldierNew>(0x0158, true);             // 0x0158(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UPhysicsHandleComponent>           _offFreezeBodyConstraintHandle                                 = new ExternalOffset<UPhysicsHandleComponent>(0x0170, true);   // 0x0170(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              TimeTillAutoGetUp                                              => _offTimeTillAutoGetUp.GetValue();
	public float                                              AutoGetUpRetryFrequency                                        => _offAutoGetUpRetryFrequency.GetValue();
	public float                                              RecoveryBlendSeconds                                           => _offRecoveryBlendSeconds.GetValue();
	public float                                              FreezeBodyCheckFrequency                                       => _offFreezeBodyCheckFrequency.GetValue();
	public FName                                              PelvisBoneName                                                 => _offPelvisBoneName.GetValue();
	public UPhysicsAsset                                      RagdollPhysicsAsset                                            => _offRagdollPhysicsAsset.GetValue();
	public float                                              CorrectionBaseRatio                                            => _offCorrectionBaseRatio.GetValue();
	public float                                              CorrectionMaxAddedRatio                                        => _offCorrectionMaxAddedRatio.GetValue();
	public float                                              ErrorStateSecondsToMaxRatio                                    => _offErrorStateSecondsToMaxRatio.GetValue();
	public float                                              LinearErrorThreshold                                           => _offLinearErrorThreshold.GetValue();
	public float                                              LinearVelocitySleepThreshold                                   => _offLinearVelocitySleepThreshold.GetValue();
	public float                                              BulletImpactMultiplier                                         => _offBulletImpactMultiplier.GetValue();
	public float                                              ExplosionImpactMultiplier                                      => _offExplosionImpactMultiplier.GetValue();
	public float                                              SecondsWithVehicleCollision                                    => _offSecondsWithVehicleCollision.GetValue();
	public ESQSoldierRagdollReason                            RagdollState                                                   => _offRagdollState.GetValue();
	public FVector_NetQuantize100                             ServerPelvisLocationZeroBased                                  => _offServerPelvisLocationZeroBased.GetValue();
	public FVector                                            UnragdolLocationOffset                                         => _offUnragdolLocationOffset.GetValue();
	public ASQEquipableItem                                   DroppedWeapon                                                  => _offDroppedWeapon.GetValue();
	public ASQSoldierNew                                      OwnerSoldier                                                   => _offOwnerSoldier.GetValue();
	public UPhysicsHandleComponent                            FreezeBodyConstraintHandle                                     => _offFreezeBodyConstraintHandle.GetValue();
	#endregion


}

// Class Squad.SQSoundNodeDistanceDelay
// 0x0014 (0x004C - 0x0038)
public class USQSoundNodeDistanceDelay : USoundNode
{
	#region Offsets
	private ExternalOffset<float>                             _offSpeedOfSound                                               = new ExternalOffset<float>(0x0040);                           // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDelayMax                                                   = new ExternalOffset<float>(0x0044);                           // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offTestDistance                                               = new ExternalOffset<float>(0x0048);                           // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              SpeedOfSound                                                   => _offSpeedOfSound.GetValue();
	public float                                              DelayMax                                                       => _offDelayMax.GetValue();
	public float                                              TestDistance                                                   => _offTestDistance.GetValue();
	#endregion


}

// Class Squad.SQSoundNodeEmitterListenerAudioVolumeSwitch
// 0x000A (0x0042 - 0x0038)
public class USQSoundNodeEmitterListenerAudioVolumeSwitch : USoundNode
{
	#region Offsets
	private ExternalOffset<ESQAudioVolumeType>                _offTestAudioVolumeType                                        = new ExternalOffset<ESQAudioVolumeType>(0x0040, false);       // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsListener                                                = new ExternalOffset<byte/*(bool)*/>(0x0041);                  // 0x0041(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ESQAudioVolumeType                                 TestAudioVolumeType                                            => _offTestAudioVolumeType.GetValue();
	public byte/*(bool)*/                                     bIsListener                                                    => _offbIsListener.GetValue();
	#endregion


}

// Class Squad.SQSoundNodeFixedDistanceCrossFade
// 0x001C (0x0054 - 0x0038)
public class USQSoundNodeFixedDistanceCrossFade : USoundNode
{
	#region Offsets
	private ExternalOffset<TArray<FSQDistanceDatum>>          _offCrossFadeInput                                             = new ExternalOffset<TArray<FSQDistanceDatum>>(0x0040, false); // 0x0040(0x0010) (Edit, ExportObject, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTestDistance                                               = new ExternalOffset<float>(0x0050);                           // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<FSQDistanceDatum>                           CrossFadeInput                                                 => _offCrossFadeInput.GetValue();
	public float                                              TestDistance                                                   => _offTestDistance.GetValue();
	#endregion


}

// Class Squad.SQSoundNodeFixedDistanceSwitch
// 0x002C (0x0064 - 0x0038)
public class USQSoundNodeFixedDistanceSwitch : USoundNode
{
	#region Offsets
	private ExternalOffset<TArray<float>>                     _offTransitionDistancesInMeters                                = new ExternalOffset<TArray<float>>(0x0040, false);            // 0x0040(0x0010) (Edit, ExportObject, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<float>>                     _offInputVolumes                                               = new ExternalOffset<TArray<float>>(0x0050, false);            // 0x0050(0x0010) (Edit, ExportObject, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTestDistance                                               = new ExternalOffset<float>(0x0060);                           // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<float>                                      TransitionDistancesInMeters                                    => _offTransitionDistancesInMeters.GetValue();
	public TArray<float>                                      InputVolumes                                                   => _offInputVolumes.GetValue();
	public float                                              TestDistance                                                   => _offTestDistance.GetValue();
	#endregion


}

// Class Squad.SQSoundNodeFlyBy
// 0x0020 (0x0058 - 0x0038)
public class USQSoundNodeFlyBy : USoundNode
{
	#region Offsets
	private ExternalOffset<float>                             _offSpeedOfSound                                               = new ExternalOffset<float>(0x0040);                           // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMidpointTime                                               = new ExternalOffset<float>(0x0044);                           // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDopplerIntensity                                           = new ExternalOffset<float>(0x0048);                           // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseListenerLocationForSoundSource                         = new ExternalOffset<byte/*(bool)*/>(0x004C);                  // 0x004C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbOverrideSpatialization                                    = new ExternalOffset<byte/*(bool)*/>(0x004D);                  // 0x004D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseSpatialization                                         = new ExternalOffset<byte/*(bool)*/>(0x004E);                  // 0x004E(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTestPitchRelativeVelocityInMeters                          = new ExternalOffset<float>(0x0050);                           // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTestStartTime                                              = new ExternalOffset<float>(0x0054);                           // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              SpeedOfSound                                                   => _offSpeedOfSound.GetValue();
	public float                                              MidpointTime                                                   => _offMidpointTime.GetValue();
	public float                                              DopplerIntensity                                               => _offDopplerIntensity.GetValue();
	public byte/*(bool)*/                                     bUseListenerLocationForSoundSource                             => _offbUseListenerLocationForSoundSource.GetValue();
	public byte/*(bool)*/                                     bOverrideSpatialization                                        => _offbOverrideSpatialization.GetValue();
	public byte/*(bool)*/                                     bUseSpatialization                                             => _offbUseSpatialization.GetValue();
	public float                                              TestPitchRelativeVelocityInMeters                              => _offTestPitchRelativeVelocityInMeters.GetValue();
	public float                                              TestStartTime                                                  => _offTestStartTime.GetValue();
	#endregion


}

// Class Squad.SQSoundNodeListenerType
// 0x0010 (0x0048 - 0x0038)
public class USQSoundNodeListenerType : USoundNode
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbLooping                                                   = new ExternalOffset<byte/*(bool)*/>(0x0040);                  // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbRestartSoundWaveWhenListenerTypeChanges                   = new ExternalOffset<byte/*(bool)*/>(0x0041);                  // 0x0041(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offListenerTypeCheckFrequency                                 = new ExternalOffset<float>(0x0044);                           // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bLooping                                                       => _offbLooping.GetValue();
	public byte/*(bool)*/                                     bRestartSoundWaveWhenListenerTypeChanges                       => _offbRestartSoundWaveWhenListenerTypeChanges.GetValue();
	public float                                              ListenerTypeCheckFrequency                                     => _offListenerTypeCheckFrequency.GetValue();
	#endregion


}

// Class Squad.SQSoundNodeLooping
// 0x0078 (0x00B0 - 0x0038)
public class USQSoundNodeLooping : USoundNode
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbIgnoreStartingBufferRequests                              = new ExternalOffset<byte/*(bool)*/>(0x0040);                  // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offStoppingBoolParameterName                                  = new ExternalOffset<FName>(0x0044, false);                    // 0x0044(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offContinueFiringBoolParameterName                            = new ExternalOffset<FName>(0x004C, false);                    // 0x004C(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offQueuedSoundMaxLimitParameterName                           = new ExternalOffset<FName>(0x0054, false);                    // 0x0054(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USoundWave>>                _offStartingSounds                                             = new ExternalOffset<TArray<USoundWave>>(0x0060, false);       // 0x0060(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USoundWave>>                _offLoopingSounds                                              = new ExternalOffset<TArray<USoundWave>>(0x0070, false);       // 0x0070(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USoundWave>>                _offFinishingSounds                                            = new ExternalOffset<TArray<USoundWave>>(0x0080, false);       // 0x0080(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMinSamplesToInject                                         = new ExternalOffset<int>(0x0090);                             // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMaxSamplesToInject                                         = new ExternalOffset<int>(0x0094);                             // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offSampleRate                                                 = new ExternalOffset<int>(0x0098);                             // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCreateStereoSoundWave                                     = new ExternalOffset<byte/*(bool)*/>(0x009C);                  // 0x009C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundConcurrency>                 _offSoundConcurrencySettings                                   = new ExternalOffset<USoundConcurrency>(0x00A0, true);         // 0x00A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxDuration                                                = new ExternalOffset<float>(0x00A8);                           // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTestShotCount                                              = new ExternalOffset<int>(0x00AC);                             // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bIgnoreStartingBufferRequests                                  => _offbIgnoreStartingBufferRequests.GetValue();
	public FName                                              StoppingBoolParameterName                                      => _offStoppingBoolParameterName.GetValue();
	public FName                                              ContinueFiringBoolParameterName                                => _offContinueFiringBoolParameterName.GetValue();
	public FName                                              QueuedSoundMaxLimitParameterName                               => _offQueuedSoundMaxLimitParameterName.GetValue();
	public TArray<USoundWave>                                 StartingSounds                                                 => _offStartingSounds.GetValue();
	public TArray<USoundWave>                                 LoopingSounds                                                  => _offLoopingSounds.GetValue();
	public TArray<USoundWave>                                 FinishingSounds                                                => _offFinishingSounds.GetValue();
	public int                                                MinSamplesToInject                                             => _offMinSamplesToInject.GetValue();
	public int                                                MaxSamplesToInject                                             => _offMaxSamplesToInject.GetValue();
	public int                                                SampleRate                                                     => _offSampleRate.GetValue();
	public byte/*(bool)*/                                     bCreateStereoSoundWave                                         => _offbCreateStereoSoundWave.GetValue();
	public USoundConcurrency                                  SoundConcurrencySettings                                       => _offSoundConcurrencySettings.GetValue();
	public float                                              MaxDuration                                                    => _offMaxDuration.GetValue();
	public int                                                TestShotCount                                                  => _offTestShotCount.GetValue();
	#endregion


}

// Class Squad.SQSoundNodePhysMatSwitch
// 0x0020 (0x0058 - 0x0038)
public class USQSoundNodePhysMatSwitch : USoundNode
{
	#region Offsets
	private ExternalOffset<int>                               _offTestPhysMatIndex                                           = new ExternalOffset<int>(0x0040);                             // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbPlayDefaultSoundIfPinIsEmpty                              = new ExternalOffset<byte/*(bool)*/>(0x0044);                  // 0x0044(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<UPhysicalMaterial>>         _offPhysMatInputs                                              = new ExternalOffset<TArray<UPhysicalMaterial>>(0x0048, false); // 0x0048(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public int                                                TestPhysMatIndex                                               => _offTestPhysMatIndex.GetValue();
	public byte/*(bool)*/                                     bPlayDefaultSoundIfPinIsEmpty                                  => _offbPlayDefaultSoundIfPinIsEmpty.GetValue();
	public TArray<UPhysicalMaterial>                          PhysMatInputs                                                  => _offPhysMatInputs.GetValue();
	#endregion


}

// Class Squad.SQSoundNodeRandom
// 0x0034 (0x006C - 0x0038)
public class USQSoundNodeRandom : USoundNode
{
	#region Offsets
	private ExternalOffset<TArray<float>>                     _offWeights                                                    = new ExternalOffset<TArray<float>>(0x0050, false);            // 0x0050(0x0010) (Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offPreselectAtLevelLoad                                       = new ExternalOffset<int>(0x0060);                             // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbRandomizeWithoutReplacement                               = new ExternalOffset<char>(0x0064, false);                     // 0x0064(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQSoundWeight>>            _offRuntimeSounds                                              = new ExternalOffset<TArray<FSQSoundWeight>>(0x0068, false);   // 0x0068(0x0010) (Edit, ZeroConstructor, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offRuntimeNumRandomSoundsUsed                                 = new ExternalOffset<int>(0x0078);                             // 0x0078(0x0004) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public TArray<float>                                      Weights                                                        => _offWeights.GetValue();
	public int                                                PreselectAtLevelLoad                                           => _offPreselectAtLevelLoad.GetValue();
	public TArray<FSQSoundWeight>                             RuntimeSounds                                                  => _offRuntimeSounds.GetValue();
	public int                                                RuntimeNumRandomSoundsUsed                                     => _offRuntimeNumRandomSoundsUsed.GetValue();
	#endregion


}

// Class Squad.SQSoundNodeRandomStart
// 0x0010 (0x0048 - 0x0038)
public class USQSoundNodeRandomStart : USoundNode
{
	#region Offsets
	private ExternalOffset<float>                             _offStartMin                                                   = new ExternalOffset<float>(0x0040);                           // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStartMax                                                   = new ExternalOffset<float>(0x0044);                           // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              StartMin                                                       => _offStartMin.GetValue();
	public float                                              StartMax                                                       => _offStartMax.GetValue();
	#endregion


}

// Class Squad.SQSoundNodeWavePlayer
// 0x001C (0x0054 - 0x0038)
public class USQSoundNodeWavePlayer : USoundNode
{
	#region Offsets
	private ExternalOffset<USoundWave>                        _offSoundWave                                                  = new ExternalOffset<USoundWave>(0x0040, true);                // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbLooping                                                   = new ExternalOffset<char>(0x0048, false);                     // 0x0048(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbRandomizeStartTime                                        = new ExternalOffset<char>(0x0048, false);                     // 0x0048(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStartMin                                                   = new ExternalOffset<float>(0x004C);                           // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStartMax                                                   = new ExternalOffset<float>(0x0050);                           // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USoundWave                                         SoundWave                                                      => _offSoundWave.GetValue();
	public float                                              StartMin                                                       => _offStartMin.GetValue();
	public float                                              StartMax                                                       => _offStartMax.GetValue();
	#endregion


}

// Class Squad.SQSoundSplineActor
// 0x0038 (0x0270 - 0x0238)
public class ASQSoundSplineActor : AActor
{
	#region Offsets
	private ExternalOffset<USplineComponent>                  _offSpline                                                     = new ExternalOffset<USplineComponent>(0x0248, true);          // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USphereComponent>                  _offSphere                                                     = new ExternalOffset<USphereComponent>(0x0250, true);          // 0x0250(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbDrawDebugSphere                                           = new ExternalOffset<byte/*(bool)*/>(0x0258);                  // 0x0258(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbDrawDebugPoints                                           = new ExternalOffset<byte/*(bool)*/>(0x0259);                  // 0x0259(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDistanceAccuracy                                           = new ExternalOffset<float>(0x025C);                           // 0x025C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UAudioComponent>                   _offSound                                                      = new ExternalOffset<UAudioComponent>(0x0260, true);           // 0x0260(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<APlayerCameraManager>              _offCachedPlayerCameraManager                                  = new ExternalOffset<APlayerCameraManager>(0x0268, true);      // 0x0268(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public USplineComponent                                   Spline                                                         => _offSpline.GetValue();
	public USphereComponent                                   Sphere                                                         => _offSphere.GetValue();
	public byte/*(bool)*/                                     bDrawDebugSphere                                               => _offbDrawDebugSphere.GetValue();
	public byte/*(bool)*/                                     bDrawDebugPoints                                               => _offbDrawDebugPoints.GetValue();
	public float                                              DistanceAccuracy                                               => _offDistanceAccuracy.GetValue();
	public UAudioComponent                                    Sound                                                          => _offSound.GetValue();
	public APlayerCameraManager                               CachedPlayerCameraManager                                      => _offCachedPlayerCameraManager.GetValue();
	#endregion


}

// Class Squad.SQSoundWaveLooping
// 0x0118 (0x02C0 - 0x01A8)
public class USQSoundWaveLooping : USoundWave
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQSpectatorMan
// 0x002A (0x02FA - 0x02D0)
public class ASQSpectatorMan : ASpectatorPawn
{
	#region Offsets
	private ExternalOffset<ESQListenerType>                   _offListenerType                                               = new ExternalOffset<ESQListenerType>(0x02D8, false);          // 0x02D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USpringArmComponent>               _offSpringArm                                                  = new ExternalOffset<USpringArmComponent>(0x02E0, true);       // 0x02E0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCameraComponent>                  _offFirstPersonCameraComponent                                 = new ExternalOffset<UCameraComponent>(0x02E8, true);          // 0x02E8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture>                          _offCameraManHUDIconTexture                                    = new ExternalOffset<UTexture>(0x02F0, true);                  // 0x02F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsTryingToGainAltitude                                    = new ExternalOffset<byte/*(bool)*/>(0x02F8);                  // 0x02F8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsTryingToLoseAltitude                                    = new ExternalOffset<byte/*(bool)*/>(0x02F9);                  // 0x02F9(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ESQListenerType                                    ListenerType                                                   => _offListenerType.GetValue();
	public USpringArmComponent                                SpringArm                                                      => _offSpringArm.GetValue();
	public UCameraComponent                                   FirstPersonCameraComponent                                     => _offFirstPersonCameraComponent.GetValue();
	public UTexture                                           CameraManHUDIconTexture                                        => _offCameraManHUDIconTexture.GetValue();
	public byte/*(bool)*/                                     bIsTryingToGainAltitude                                        => _offbIsTryingToGainAltitude.GetValue();
	public byte/*(bool)*/                                     bIsTryingToLoseAltitude                                        => _offbIsTryingToLoseAltitude.GetValue();
	#endregion


}

// Class Squad.SQSquad
// 0x0468 (0x06B0 - 0x0248)
public class ASQSquad : AInfo
{
	#region Offsets
	private ExternalOffset<TArray<ASQMapMarker>>              _offLatestSpotMarkers                                          = new ExternalOffset<TArray<ASQMapMarker>>(0x0248, false);     // 0x0248(0x0010) (BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQMapMarker>>              _offLatestActionMarkers                                        = new ExternalOffset<TArray<ASQMapMarker>>(0x0258, false);     // 0x0258(0x0010) (BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQMapMarker>>              _offLatestPOIMarkers                                           = new ExternalOffset<TArray<ASQMapMarker>>(0x0268, false);     // 0x0268(0x0010) (BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQMapMarker>>              _offLatestFireteamMarkers                                      = new ExternalOffset<TArray<ASQMapMarker>>(0x0278, false);     // 0x0278(0x0010) (BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQMapMarker>>              _offLatestRequestMarkers                                       = new ExternalOffset<TArray<ASQMapMarker>>(0x0288, false);     // 0x0288(0x0010) (BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQTeam>                           _offTeam                                                       = new ExternalOffset<ASQTeam>(0x0298, true);                   // 0x0298(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offSquadStateClass                                            = new ExternalOffset<UClass>(0x02A0, true);                    // 0x02A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offTeamPrivateSquadStateClass                                 = new ExternalOffset<UClass>(0x02A8, true);                    // 0x02A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offSquadRallyPointClass                                       = new ExternalOffset<UClass>(0x02B0, true);                    // 0x02B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSquadState>                     _offSquadState                                                 = new ExternalOffset<ASQSquadState>(0x02B8, true);             // 0x02B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSquadStatePrivateToTeam>        _offTeamPrivateSquadState                                      = new ExternalOffset<ASQSquadStatePrivateToTeam>(0x02C0, true); // 0x02C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerController>               _offLeader                                                     = new ExternalOffset<ASQPlayerController>(0x02C8, true);       // 0x02C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRejoinSquadDelayAfterKick                                  = new ExternalOffset<float>(0x02D0);                           // 0x02D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSquadRallyPoint>                _offrallypoint                                                 = new ExternalOffset<ASQSquadRallyPoint>(0x02D8, true);        // 0x02D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRpMembersToPlaceRadius                                     = new ExternalOffset<float>(0x02E0);                           // 0x02E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRpEnemiesNearCheckRadius                                   = new ExternalOffset<float>(0x02E4);                           // 0x02E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offRpNeededMembersToPlace                                     = new ExternalOffset<int>(0x02E8);                             // 0x02E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offRpNonSLMemberPunishment                                    = new ExternalOffset<int>(0x02EC);                             // 0x02EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offRpMembersErrorMessage                                      = new ExternalOffset<FText>(0x02F0, false);                    // 0x02F0(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offRpMembersNonSlErrorMessage                                 = new ExternalOffset<FText>(0x0308, false);                    // 0x0308(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offRpTimerErrorMessage                                        = new ExternalOffset<FText>(0x0320, false);                    // 0x0320(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offRpEnemiesNearErrorMessage                                  = new ExternalOffset<FText>(0x0338, false);                    // 0x0338(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offPlayerJoinedMessage                                        = new ExternalOffset<FText>(0x0350, false);                    // 0x0350(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offPlayerLeftMessage                                          = new ExternalOffset<FText>(0x0368, false);                    // 0x0368(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offLeaderChangedMessage                                       = new ExternalOffset<FText>(0x0380, false);                    // 0x0380(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offRpLeaderChangedTimeMessage                                 = new ExternalOffset<FText>(0x0398, false);                    // 0x0398(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRpLastPlacementTime                                        = new ExternalOffset<float>(0x03B0);                           // 0x03B0(0x0004) (Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRpTimeToReset                                              = new ExternalOffset<float>(0x03B4);                           // 0x03B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRpEnemiesNearbyTimeSubtract                                = new ExternalOffset<float>(0x03B8);                           // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRpLeaderChangedResetTime                                   = new ExternalOffset<float>(0x03BC);                           // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbRpUsesLeaderChangeResetTime                               = new ExternalOffset<byte/*(bool)*/>(0x03C0);                  // 0x03C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offRpUsesResetTimer                                           = new ExternalOffset<byte/*(bool)*/>(0x03C1);                  // 0x03C1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offClaimingTotalNumMembersNeededTogether                      = new ExternalOffset<int>(0x03C4);                             // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offClaimingMembersTogetherRadius                              = new ExternalOffset<float>(0x03C8);                           // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offClaimingNumMembersInSquadForOne                            = new ExternalOffset<int>(0x03CC);                             // 0x03CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offClaimingNumMembersInSquadForTwo                            = new ExternalOffset<int>(0x03D0);                             // 0x03D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offClaimingNumMembersInSquadForThree                          = new ExternalOffset<int>(0x03D4);                             // 0x03D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offClaimingNumMembersInSquadForFour                           = new ExternalOffset<int>(0x03D8);                             // 0x03D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offClaimingTimeToExpire                                       = new ExternalOffset<float>(0x03DC);                           // 0x03DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumberOfMembersWithVehicleClaimToMakeSquadPartyToClaim     = new ExternalOffset<int>(0x03E0);                             // 0x03E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USQVehicleClaim>>           _offVehicleClaims                                              = new ExternalOffset<TArray<USQVehicleClaim>>(0x03E8, false);  // 0x03E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offActiveVehicleClaimDroppedNearMainBaseMessage               = new ExternalOffset<FText>(0x03F8, false);                    // 0x03F8(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offActiveVehicleClaimDroppedNearFireBaseMessage               = new ExternalOffset<FText>(0x0410, false);                    // 0x0410(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offActiveVehicleClaimDroppedOnBattlefieldMessage              = new ExternalOffset<FText>(0x0428, false);                    // 0x0428(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offActiveVehicleClaimDestroyedMessage                         = new ExternalOffset<FText>(0x0440, false);                    // 0x0440(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offActiveVehicleClaimPickedUpMessage                          = new ExternalOffset<FText>(0x0458, false);                    // 0x0458(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offNeedLeaderRoleToClaimVehicleMessage                        = new ExternalOffset<FText>(0x0470, false);                    // 0x0470(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offOverVehicleClaimingLimitMessage                            = new ExternalOffset<FText>(0x0488, false);                    // 0x0488(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offOverVehicleClaimingLimitActiveUseDetailsMessage            = new ExternalOffset<FText>(0x04A0, false);                    // 0x04A0(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offOverVehicleClaimingLimitDestroyedDetailsMessage            = new ExternalOffset<FText>(0x04B8, false);                    // 0x04B8(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offOverVehicleClaimingLimitLeftDetailsMessage                 = new ExternalOffset<FText>(0x04D0, false);                    // 0x04D0(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offOverVehicleClaimingLimitDestroyedOrLeftDetailsMessage      = new ExternalOffset<FText>(0x04E8, false);                    // 0x04E8(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offOverVehicleClaimingLimitDestroyedOrLeftTimerMessage        = new ExternalOffset<FText>(0x0500, false);                    // 0x0500(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offNotEnoughMembersForClaimingSingleVehicleMessage            = new ExternalOffset<FText>(0x0518, false);                    // 0x0518(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offNotEnoughMembersNearToClaimVehicleMessage                  = new ExternalOffset<FText>(0x0530, false);                    // 0x0530(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offVehicleClaimSuccessMessage                                 = new ExternalOffset<FText>(0x0548, false);                    // 0x0548(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offUnableToReleaseOlderVehicleClaimMessage                    = new ExternalOffset<FText>(0x0560, false);                    // 0x0560(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offAnotherSquadClaimedOurVehicleMessage                       = new ExternalOffset<FText>(0x0578, false);                    // 0x0578(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offUnableToApproveVehicleClaimMessage                         = new ExternalOffset<FText>(0x0590, false);                    // 0x0590(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offKickedFromSquadMessage                                     = new ExternalOffset<FText>(0x05A8, false);                    // 0x05A8(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offLeftSquadMessage                                           = new ExternalOffset<FText>(0x05C0, false);                    // 0x05C0(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offForceRecruitKitMessage                                     = new ExternalOffset<FText>(0x05D8, false);                    // 0x05D8(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQFireTeam>>               _offFireTeams                                                  = new ExternalOffset<TArray<FSQFireTeam>>(0x05F0, false);      // 0x05F0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<USQConfig>                         _offSquadConfig                                                = new ExternalOffset<USQConfig>(0x0600, true);                 // 0x0600(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQVehicle>                        _offLastVehicleMemberFailedToEnter                             = new ExternalOffset<ASQVehicle>(0x0608, true);                // 0x0608(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPlayerJoinSquad                                          = new ExternalOffset<FScriptMulticastDelegate>(0x0660, false); // 0x0660(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPlayerPartSquad                                          = new ExternalOffset<FScriptMulticastDelegate>(0x0670, false); // 0x0670(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnPlayerBecomeSquadLeader                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0680, false); // 0x0680(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnFireteamDisbanded                                        = new ExternalOffset<FScriptMulticastDelegate>(0x0690, false); // 0x0690(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnFireteamUpdated                                          = new ExternalOffset<FScriptMulticastDelegate>(0x06A0, false); // 0x06A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<ASQMapMarker>                               LatestSpotMarkers                                              => _offLatestSpotMarkers.GetValue();
	public TArray<ASQMapMarker>                               LatestActionMarkers                                            => _offLatestActionMarkers.GetValue();
	public TArray<ASQMapMarker>                               LatestPOIMarkers                                               => _offLatestPOIMarkers.GetValue();
	public TArray<ASQMapMarker>                               LatestFireteamMarkers                                          => _offLatestFireteamMarkers.GetValue();
	public TArray<ASQMapMarker>                               LatestRequestMarkers                                           => _offLatestRequestMarkers.GetValue();
	public ASQTeam                                            Team                                                           => _offTeam.GetValue();
	public UClass                                             SquadStateClass                                                => _offSquadStateClass.GetValue();
	public UClass                                             TeamPrivateSquadStateClass                                     => _offTeamPrivateSquadStateClass.GetValue();
	public UClass                                             SquadRallyPointClass                                           => _offSquadRallyPointClass.GetValue();
	public ASQSquadState                                      SquadState                                                     => _offSquadState.GetValue();
	public ASQSquadStatePrivateToTeam                         TeamPrivateSquadState                                          => _offTeamPrivateSquadState.GetValue();
	public ASQPlayerController                                Leader                                                         => _offLeader.GetValue();
	public float                                              RejoinSquadDelayAfterKick                                      => _offRejoinSquadDelayAfterKick.GetValue();
	public ASQSquadRallyPoint                                 rallypoint                                                     => _offrallypoint.GetValue();
	public float                                              RpMembersToPlaceRadius                                         => _offRpMembersToPlaceRadius.GetValue();
	public float                                              RpEnemiesNearCheckRadius                                       => _offRpEnemiesNearCheckRadius.GetValue();
	public int                                                RpNeededMembersToPlace                                         => _offRpNeededMembersToPlace.GetValue();
	public int                                                RpNonSLMemberPunishment                                        => _offRpNonSLMemberPunishment.GetValue();
	public FText                                              RpMembersErrorMessage                                          => _offRpMembersErrorMessage.GetValue();
	public FText                                              RpMembersNonSlErrorMessage                                     => _offRpMembersNonSlErrorMessage.GetValue();
	public FText                                              RpTimerErrorMessage                                            => _offRpTimerErrorMessage.GetValue();
	public FText                                              RpEnemiesNearErrorMessage                                      => _offRpEnemiesNearErrorMessage.GetValue();
	public FText                                              PlayerJoinedMessage                                            => _offPlayerJoinedMessage.GetValue();
	public FText                                              PlayerLeftMessage                                              => _offPlayerLeftMessage.GetValue();
	public FText                                              LeaderChangedMessage                                           => _offLeaderChangedMessage.GetValue();
	public FText                                              RpLeaderChangedTimeMessage                                     => _offRpLeaderChangedTimeMessage.GetValue();
	public float                                              RpLastPlacementTime                                            => _offRpLastPlacementTime.GetValue();
	public float                                              RpTimeToReset                                                  => _offRpTimeToReset.GetValue();
	public float                                              RpEnemiesNearbyTimeSubtract                                    => _offRpEnemiesNearbyTimeSubtract.GetValue();
	public float                                              RpLeaderChangedResetTime                                       => _offRpLeaderChangedResetTime.GetValue();
	public byte/*(bool)*/                                     bRpUsesLeaderChangeResetTime                                   => _offbRpUsesLeaderChangeResetTime.GetValue();
	public byte/*(bool)*/                                     RpUsesResetTimer                                               => _offRpUsesResetTimer.GetValue();
	public int                                                ClaimingTotalNumMembersNeededTogether                          => _offClaimingTotalNumMembersNeededTogether.GetValue();
	public float                                              ClaimingMembersTogetherRadius                                  => _offClaimingMembersTogetherRadius.GetValue();
	public int                                                ClaimingNumMembersInSquadForOne                                => _offClaimingNumMembersInSquadForOne.GetValue();
	public int                                                ClaimingNumMembersInSquadForTwo                                => _offClaimingNumMembersInSquadForTwo.GetValue();
	public int                                                ClaimingNumMembersInSquadForThree                              => _offClaimingNumMembersInSquadForThree.GetValue();
	public int                                                ClaimingNumMembersInSquadForFour                               => _offClaimingNumMembersInSquadForFour.GetValue();
	public float                                              ClaimingTimeToExpire                                           => _offClaimingTimeToExpire.GetValue();
	public int                                                NumberOfMembersWithVehicleClaimToMakeSquadPartyToClaim         => _offNumberOfMembersWithVehicleClaimToMakeSquadPartyToClaim.GetValue();
	public TArray<USQVehicleClaim>                            VehicleClaims                                                  => _offVehicleClaims.GetValue();
	public FText                                              ActiveVehicleClaimDroppedNearMainBaseMessage                   => _offActiveVehicleClaimDroppedNearMainBaseMessage.GetValue();
	public FText                                              ActiveVehicleClaimDroppedNearFireBaseMessage                   => _offActiveVehicleClaimDroppedNearFireBaseMessage.GetValue();
	public FText                                              ActiveVehicleClaimDroppedOnBattlefieldMessage                  => _offActiveVehicleClaimDroppedOnBattlefieldMessage.GetValue();
	public FText                                              ActiveVehicleClaimDestroyedMessage                             => _offActiveVehicleClaimDestroyedMessage.GetValue();
	public FText                                              ActiveVehicleClaimPickedUpMessage                              => _offActiveVehicleClaimPickedUpMessage.GetValue();
	public FText                                              NeedLeaderRoleToClaimVehicleMessage                            => _offNeedLeaderRoleToClaimVehicleMessage.GetValue();
	public FText                                              OverVehicleClaimingLimitMessage                                => _offOverVehicleClaimingLimitMessage.GetValue();
	public FText                                              OverVehicleClaimingLimitActiveUseDetailsMessage                => _offOverVehicleClaimingLimitActiveUseDetailsMessage.GetValue();
	public FText                                              OverVehicleClaimingLimitDestroyedDetailsMessage                => _offOverVehicleClaimingLimitDestroyedDetailsMessage.GetValue();
	public FText                                              OverVehicleClaimingLimitLeftDetailsMessage                     => _offOverVehicleClaimingLimitLeftDetailsMessage.GetValue();
	public FText                                              OverVehicleClaimingLimitDestroyedOrLeftDetailsMessage          => _offOverVehicleClaimingLimitDestroyedOrLeftDetailsMessage.GetValue();
	public FText                                              OverVehicleClaimingLimitDestroyedOrLeftTimerMessage            => _offOverVehicleClaimingLimitDestroyedOrLeftTimerMessage.GetValue();
	public FText                                              NotEnoughMembersForClaimingSingleVehicleMessage                => _offNotEnoughMembersForClaimingSingleVehicleMessage.GetValue();
	public FText                                              NotEnoughMembersNearToClaimVehicleMessage                      => _offNotEnoughMembersNearToClaimVehicleMessage.GetValue();
	public FText                                              VehicleClaimSuccessMessage                                     => _offVehicleClaimSuccessMessage.GetValue();
	public FText                                              UnableToReleaseOlderVehicleClaimMessage                        => _offUnableToReleaseOlderVehicleClaimMessage.GetValue();
	public FText                                              AnotherSquadClaimedOurVehicleMessage                           => _offAnotherSquadClaimedOurVehicleMessage.GetValue();
	public FText                                              UnableToApproveVehicleClaimMessage                             => _offUnableToApproveVehicleClaimMessage.GetValue();
	public FText                                              KickedFromSquadMessage                                         => _offKickedFromSquadMessage.GetValue();
	public FText                                              LeftSquadMessage                                               => _offLeftSquadMessage.GetValue();
	public FText                                              ForceRecruitKitMessage                                         => _offForceRecruitKitMessage.GetValue();
	public TArray<FSQFireTeam>                                FireTeams                                                      => _offFireTeams.GetValue();
	public USQConfig                                          SquadConfig                                                    => _offSquadConfig.GetValue();
	public ASQVehicle                                         LastVehicleMemberFailedToEnter                                 => _offLastVehicleMemberFailedToEnter.GetValue();
	public FScriptMulticastDelegate                           OnPlayerJoinSquad                                              => _offOnPlayerJoinSquad.GetValue();
	public FScriptMulticastDelegate                           OnPlayerPartSquad                                              => _offOnPlayerPartSquad.GetValue();
	public FScriptMulticastDelegate                           OnPlayerBecomeSquadLeader                                      => _offOnPlayerBecomeSquadLeader.GetValue();
	public FScriptMulticastDelegate                           OnFireteamDisbanded                                            => _offOnFireteamDisbanded.GetValue();
	public FScriptMulticastDelegate                           OnFireteamUpdated                                              => _offOnFireteamUpdated.GetValue();
	#endregion


}

// Class Squad.SQSquadList
// 0x0018 (0x0248 - 0x0230)
public class USQSquadList : USQUserWidget
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbIsOpening                                                 = new ExternalOffset<byte/*(bool)*/>(0x0230);                  // 0x0230(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsClosing                                                 = new ExternalOffset<byte/*(bool)*/>(0x0231);                  // 0x0231(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offOwnerPlayerState                                           = new ExternalOffset<ASQPlayerState>(0x0238, true);            // 0x0238(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerController>               _offOwnerPlayerController                                      = new ExternalOffset<ASQPlayerController>(0x0240, true);       // 0x0240(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bIsOpening                                                     => _offbIsOpening.GetValue();
	public byte/*(bool)*/                                     bIsClosing                                                     => _offbIsClosing.GetValue();
	public ASQPlayerState                                     OwnerPlayerState                                               => _offOwnerPlayerState.GetValue();
	public ASQPlayerController                                OwnerPlayerController                                          => _offOwnerPlayerController.GetValue();
	#endregion


}

// Class Squad.SQSquadMemberList
// 0x0078 (0x02A8 - 0x0230)
public class USQSquadMemberList : USQUserWidget
{
	#region Offsets
	private ExternalOffset<UClass>                            _offSquadMemberListItemClass                                   = new ExternalOffset<UClass>(0x0230, true);                    // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UImage>                            _offBG_IMGCPP                                                  = new ExternalOffset<UImage>(0x0238, true);                    // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UImage>                            _offIconImageCPP                                               = new ExternalOffset<UImage>(0x0240, true);                    // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UButton>                           _offInviteButtonCPP                                            = new ExternalOffset<UButton>(0x0248, true);                   // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTextBlock>                        _offInviteButtonTextCPP                                        = new ExternalOffset<UTextBlock>(0x0250, true);                // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTextBlock>                        _offMemberCountCPP                                             = new ExternalOffset<UTextBlock>(0x0258, true);                // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UButton>                           _offLockButtonCPP                                              = new ExternalOffset<UButton>(0x0260, true);                   // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTextBlock>                        _offSquadNameCPP                                               = new ExternalOffset<UTextBlock>(0x0268, true);                // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTextBlock>                        _offSquadNumberCPP                                             = new ExternalOffset<UTextBlock>(0x0270, true);                // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UVerticalBox>                      _offMemberListBoxCPP                                           = new ExternalOffset<UVerticalBox>(0x0278, true);              // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQPlayerController>               _offParentPC                                                   = new ExternalOffset<ASQPlayerController>(0x0280, true);       // 0x0280(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQPlayerState>                    _offCurrentlyOpenedItemPS                                      = new ExternalOffset<ASQPlayerState>(0x02A0, true);            // 0x02A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public UClass                                             SquadMemberListItemClass                                       => _offSquadMemberListItemClass.GetValue();
	public UImage                                             BG_IMGCPP                                                      => _offBG_IMGCPP.GetValue();
	public UImage                                             IconImageCPP                                                   => _offIconImageCPP.GetValue();
	public UButton                                            InviteButtonCPP                                                => _offInviteButtonCPP.GetValue();
	public UTextBlock                                         InviteButtonTextCPP                                            => _offInviteButtonTextCPP.GetValue();
	public UTextBlock                                         MemberCountCPP                                                 => _offMemberCountCPP.GetValue();
	public UButton                                            LockButtonCPP                                                  => _offLockButtonCPP.GetValue();
	public UTextBlock                                         SquadNameCPP                                                   => _offSquadNameCPP.GetValue();
	public UTextBlock                                         SquadNumberCPP                                                 => _offSquadNumberCPP.GetValue();
	public UVerticalBox                                       MemberListBoxCPP                                               => _offMemberListBoxCPP.GetValue();
	public ASQPlayerController                                ParentPC                                                       => _offParentPC.GetValue();
	public ASQPlayerState                                     CurrentlyOpenedItemPS                                          => _offCurrentlyOpenedItemPS.GetValue();
	#endregion


}

// Class Squad.SQSquadMemberListItem
// 0x00B0 (0x02E0 - 0x0230)
public class USQSquadMemberListItem : USQUserWidget
{
	#region Offsets
	private ExternalOffset<TArray<UTexture2D>>                _offRankTextures                                               = new ExternalOffset<TArray<UTexture2D>>(0x0230, false);       // 0x0230(0x0010) (BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<UButton>                           _offActionMenuBtnCPP                                           = new ExternalOffset<UButton>(0x0240, true);                   // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UButton>                           _offPromoteToSLBtnCPP                                          = new ExternalOffset<UButton>(0x0248, true);                   // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UButton>                           _offKickBtnCPP                                                 = new ExternalOffset<UButton>(0x0250, true);                   // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UButton>                           _offSLInviteBtnCPP                                             = new ExternalOffset<UButton>(0x0258, true);                   // 0x0258(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<UVerticalBox>>              _offMenuPanelsCPP                                              = new ExternalOffset<TArray<UVerticalBox>>(0x0260, false);     // 0x0260(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<UImage>                            _offKitBGCPP                                                   = new ExternalOffset<UImage>(0x0270, true);                    // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UImage>                            _offKitIconCPP                                                 = new ExternalOffset<UImage>(0x0278, true);                    // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTextBlock>                        _offNamePCPP                                                   = new ExternalOffset<UTextBlock>(0x0280, true);                // 0x0280(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UImage>                            _offNameBGCPP                                                  = new ExternalOffset<UImage>(0x0288, true);                    // 0x0288(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UImage>                            _offRankBGCPP                                                  = new ExternalOffset<UImage>(0x0290, true);                    // 0x0290(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UImage>                            _offRankIconCPP                                                = new ExternalOffset<UImage>(0x0298, true);                    // 0x0298(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UImage>                            _offVehicleBGCPP                                               = new ExternalOffset<UImage>(0x02A0, true);                    // 0x02A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UImage>                            _offVehicleIconCPP                                             = new ExternalOffset<UImage>(0x02A8, true);                    // 0x02A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UImage>                            _offWeaponIconCPP                                              = new ExternalOffset<UImage>(0x02B0, true);                    // 0x02B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTextBlock>                        _offPlayerNameCPP                                              = new ExternalOffset<UTextBlock>(0x02B8, true);                // 0x02B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQPlayerState>                    _offPlayerStateIdentifier                                      = new ExternalOffset<ASQPlayerState>(0x02C0, true);            // 0x02C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsHovering                                                = new ExternalOffset<byte/*(bool)*/>(0x02CC);                  // 0x02CC(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQSquadMemberList>                _offManager                                                    = new ExternalOffset<USQSquadMemberList>(0x02D8, true);        // 0x02D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public TArray<UTexture2D>                                 RankTextures                                                   => _offRankTextures.GetValue();
	public UButton                                            ActionMenuBtnCPP                                               => _offActionMenuBtnCPP.GetValue();
	public UButton                                            PromoteToSLBtnCPP                                              => _offPromoteToSLBtnCPP.GetValue();
	public UButton                                            KickBtnCPP                                                     => _offKickBtnCPP.GetValue();
	public UButton                                            SLInviteBtnCPP                                                 => _offSLInviteBtnCPP.GetValue();
	public TArray<UVerticalBox>                               MenuPanelsCPP                                                  => _offMenuPanelsCPP.GetValue();
	public UImage                                             KitBGCPP                                                       => _offKitBGCPP.GetValue();
	public UImage                                             KitIconCPP                                                     => _offKitIconCPP.GetValue();
	public UTextBlock                                         NamePCPP                                                       => _offNamePCPP.GetValue();
	public UImage                                             NameBGCPP                                                      => _offNameBGCPP.GetValue();
	public UImage                                             RankBGCPP                                                      => _offRankBGCPP.GetValue();
	public UImage                                             RankIconCPP                                                    => _offRankIconCPP.GetValue();
	public UImage                                             VehicleBGCPP                                                   => _offVehicleBGCPP.GetValue();
	public UImage                                             VehicleIconCPP                                                 => _offVehicleIconCPP.GetValue();
	public UImage                                             WeaponIconCPP                                                  => _offWeaponIconCPP.GetValue();
	public UTextBlock                                         PlayerNameCPP                                                  => _offPlayerNameCPP.GetValue();
	public ASQPlayerState                                     PlayerStateIdentifier                                          => _offPlayerStateIdentifier.GetValue();
	public byte/*(bool)*/                                     bIsHovering                                                    => _offbIsHovering.GetValue();
	public USQSquadMemberList                                 Manager                                                        => _offManager.GetValue();
	#endregion


}

// Class Squad.SQSquadRallyPoint
// 0x0014 (0x0420 - 0x040C)
public class ASQSquadRallyPoint : ASQGameRallyPoint
{
	#region Offsets
	private ExternalOffset<ASQSquad>                          _offAuthoritySquad                                             = new ExternalOffset<ASQSquad>(0x0410, true);                  // 0x0410(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSquadState>                     _offSquadState                                                 = new ExternalOffset<ASQSquadState>(0x0418, true);             // 0x0418(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ASQSquad                                           AuthoritySquad                                                 => _offAuthoritySquad.GetValue();
	public ASQSquadState                                      SquadState                                                     => _offSquadState.GetValue();
	#endregion


}

// Class Squad.SQSquadSelection
// 0x0038 (0x0268 - 0x0230)
public class USQSquadSelection : USQUserWidget
{
	#region Offsets
	private ExternalOffset<ASQPlayerController>               _offOwnerPlayerController                                      = new ExternalOffset<ASQPlayerController>(0x0230, true);       // 0x0230(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCanvasPanel>                      _offCreateSquadCanvas                                          = new ExternalOffset<UCanvasPanel>(0x0238, true);              // 0x0238(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQCreateSquadButton>              _offCreateSquadButton                                          = new ExternalOffset<USQCreateSquadButton>(0x0240, true);      // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UEditableTextBox>                  _offSquadNameTextBox                                           = new ExternalOffset<UEditableTextBox>(0x0248, true);          // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UScrollBox>                        _offSquadsList                                                 = new ExternalOffset<UScrollBox>(0x0250, true);                // 0x0250(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnNewSquadCreated                                          = new ExternalOffset<FScriptMulticastDelegate>(0x0258, false); // 0x0258(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ASQPlayerController                                OwnerPlayerController                                          => _offOwnerPlayerController.GetValue();
	public UCanvasPanel                                       CreateSquadCanvas                                              => _offCreateSquadCanvas.GetValue();
	public USQCreateSquadButton                               CreateSquadButton                                              => _offCreateSquadButton.GetValue();
	public UEditableTextBox                                   SquadNameTextBox                                               => _offSquadNameTextBox.GetValue();
	public UScrollBox                                         SquadsList                                                     => _offSquadsList.GetValue();
	public FScriptMulticastDelegate                           OnNewSquadCreated                                              => _offOnNewSquadCreated.GetValue();
	#endregion


}

// Class Squad.SQSquadState
// 0x0090 (0x02D8 - 0x0248)
public class ASQSquadState : AInfo
{
	#region Offsets
	private ExternalOffset<ASQSquad>                          _offAuthoritySquad                                             = new ExternalOffset<ASQSquad>(0x0248, true);                  // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offMaxSize                                                    = new ExternalOffset<int>(0x0250);                             // 0x0250(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumKills                                                   = new ExternalOffset<int>(0x0254);                             // 0x0254(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumDeaths                                                  = new ExternalOffset<int>(0x0258);                             // 0x0258(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumWoundeds                                                = new ExternalOffset<int>(0x025C);                             // 0x025C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumWounds                                                  = new ExternalOffset<int>(0x0260);                             // 0x0260(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumTeamkills                                               = new ExternalOffset<int>(0x0264);                             // 0x0264(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offScore                                                      = new ExternalOffset<float>(0x0268);                           // 0x0268(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTeamWorkScore                                              = new ExternalOffset<float>(0x026C);                           // 0x026C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offObjectiveScore                                             = new ExternalOffset<float>(0x0270);                           // 0x0270(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHealPoints                                                 = new ExternalOffset<float>(0x0274);                           // 0x0274(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRevivedPoints                                              = new ExternalOffset<float>(0x0278);                           // 0x0278(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<int>>                       _offIndexedRoleUsage                                           = new ExternalOffset<TArray<int>>(0x0280, false);              // 0x0280(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<USQCoreStateComponent>             _offStateObject                                                = new ExternalOffset<USQCoreStateComponent>(0x0290, true);     // 0x0290(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsCommandSquad                                            = new ExternalOffset<byte/*(bool)*/>(0x0298);                  // 0x0298(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offID                                                         = new ExternalOffset<int>(0x029C);                             // 0x029C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<int>                               _offTeamId                                                     = new ExternalOffset<int>(0x02A0);                             // 0x02A0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<TArray<ASQPlayerState>>            _offPlayerStates                                               = new ExternalOffset<TArray<ASQPlayerState>>(0x02A8, false);   // 0x02A8(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	private ExternalOffset<ASQPlayerState>                    _offLeaderState                                                = new ExternalOffset<ASQPlayerState>(0x02B8, true);            // 0x02B8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FString>                           _offName                                                       = new ExternalOffset<FString>(0x02C0, false);                  // 0x02C0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsLocked                                                  = new ExternalOffset<byte/*(bool)*/>(0x02D0);                  // 0x02D0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<float>                             _offCreationTimeStamp                                          = new ExternalOffset<float>(0x02D4);                           // 0x02D4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public ASQSquad                                           AuthoritySquad                                                 => _offAuthoritySquad.GetValue();
	public int                                                MaxSize                                                        => _offMaxSize.GetValue();
	public int                                                NumKills                                                       => _offNumKills.GetValue();
	public int                                                NumDeaths                                                      => _offNumDeaths.GetValue();
	public int                                                NumWoundeds                                                    => _offNumWoundeds.GetValue();
	public int                                                NumWounds                                                      => _offNumWounds.GetValue();
	public int                                                NumTeamkills                                                   => _offNumTeamkills.GetValue();
	public float                                              Score                                                          => _offScore.GetValue();
	public float                                              TeamWorkScore                                                  => _offTeamWorkScore.GetValue();
	public float                                              ObjectiveScore                                                 => _offObjectiveScore.GetValue();
	public float                                              HealPoints                                                     => _offHealPoints.GetValue();
	public float                                              RevivedPoints                                                  => _offRevivedPoints.GetValue();
	public TArray<int>                                        IndexedRoleUsage                                               => _offIndexedRoleUsage.GetValue();
	public USQCoreStateComponent                              StateObject                                                    => _offStateObject.GetValue();
	public byte/*(bool)*/                                     bIsCommandSquad                                                => _offbIsCommandSquad.GetValue();
	public int                                                ID                                                             => _offID.GetValue();
	public int                                                TeamId                                                         => _offTeamId.GetValue();
	public TArray<ASQPlayerState>                             PlayerStates                                                   => _offPlayerStates.GetValue();
	public ASQPlayerState                                     LeaderState                                                    => _offLeaderState.GetValue();
	public FString                                            Name                                                           => _offName.GetValue();
	public byte/*(bool)*/                                     bIsLocked                                                      => _offbIsLocked.GetValue();
	public float                                              CreationTimeStamp                                              => _offCreationTimeStamp.GetValue();
	#endregion


}

// Class Squad.SQSquadStateData
// 0x005D (0x0110 - 0x00B3)
public class USQSquadStateData : USQCoreStateData
{
	#region Offsets
	private ExternalOffset<ESQMapMarkerVisibleTo>             _offVisibility                                                 = new ExternalOffset<ESQMapMarkerVisibleTo>(0x00D0, false);    // 0x00D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<UClass>>                    _offAdminTypes                                                 = new ExternalOffset<TArray<UClass>>(0x00D8, false);           // 0x00D8(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbVisibleWhenNeutral                                        = new ExternalOffset<byte/*(bool)*/>(0x00E8);                  // 0x00E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSquadState>                     _offSquadState                                                 = new ExternalOffset<ASQSquadState>(0x00F0, true);             // 0x00F0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offSquadId                                                    = new ExternalOffset<int>(0x00F8);                             // 0x00F8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamId                                                     = new ExternalOffset<int>(0x00FC);                             // 0x00FC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSquadState>                     _offCachedSquadState                                           = new ExternalOffset<ASQSquadState>(0x0108, true);             // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public ESQMapMarkerVisibleTo                              Visibility                                                     => _offVisibility.GetValue();
	public TArray<UClass>                                     AdminTypes                                                     => _offAdminTypes.GetValue();
	public byte/*(bool)*/                                     bVisibleWhenNeutral                                            => _offbVisibleWhenNeutral.GetValue();
	public ASQSquadState                                      SquadState                                                     => _offSquadState.GetValue();
	public int                                                SquadId                                                        => _offSquadId.GetValue();
	public int                                                TeamId                                                         => _offTeamId.GetValue();
	public ASQSquadState                                      CachedSquadState                                               => _offCachedSquadState.GetValue();
	#endregion


}

// Class Squad.SQSquadStateMapData
// 0x0050 (0x0160 - 0x0110)
public class USQSquadStateMapData : USQSquadStateData
{
	#region Offsets
	private ExternalOffset<UClass>                            _offMapWidgetClass                                             = new ExternalOffset<UClass>(0x0120, true);                    // 0x0120(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offWorldLocationTolerance                                     = new ExternalOffset<float>(0x0128);                           // 0x0128(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbInterpolateWorldLocation                                  = new ExternalOffset<byte/*(bool)*/>(0x012C);                  // 0x012C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseWorldRotation                                          = new ExternalOffset<byte/*(bool)*/>(0x012D);                  // 0x012D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offYawTolerance                                               = new ExternalOffset<float>(0x0130);                           // 0x0130(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbInterpolateYaw                                            = new ExternalOffset<byte/*(bool)*/>(0x0134);                  // 0x0134(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offWorldLocation                                              = new ExternalOffset<FVector>(0x0138, false);                  // 0x0138(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offYaw                                                        = new ExternalOffset<float>(0x0144);                           // 0x0144(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offPackedYaw                                                  = new ExternalOffset<char>(0x0148, false);                     // 0x0148(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<FVector_NetQuantize>               _offRepWorldLocation                                           = new ExternalOffset<FVector_NetQuantize>(0x0154, false);      // 0x0154(0x000C) (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public UClass                                             MapWidgetClass                                                 => _offMapWidgetClass.GetValue();
	public float                                              WorldLocationTolerance                                         => _offWorldLocationTolerance.GetValue();
	public byte/*(bool)*/                                     bInterpolateWorldLocation                                      => _offbInterpolateWorldLocation.GetValue();
	public byte/*(bool)*/                                     bUseWorldRotation                                              => _offbUseWorldRotation.GetValue();
	public float                                              YawTolerance                                                   => _offYawTolerance.GetValue();
	public byte/*(bool)*/                                     bInterpolateYaw                                                => _offbInterpolateYaw.GetValue();
	public FVector                                            WorldLocation                                                  => _offWorldLocation.GetValue();
	public float                                              Yaw                                                            => _offYaw.GetValue();
	public FVector_NetQuantize                                RepWorldLocation                                               => _offRepWorldLocation.GetValue();
	#endregion


}

// Class Squad.SQSquadStateDataDeployable
// 0x0021 (0x0181 - 0x0160)
public class USQSquadStateDataDeployable : USQSquadStateMapData
{
	#region Offsets
	private ExternalOffset<ESQBuildState>                     _offBuildState                                                 = new ExternalOffset<ESQBuildState>(0x0180, false);            // 0x0180(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ESQBuildState                                      BuildState                                                     => _offBuildState.GetValue();
	#endregion


}

// Class Squad.SQSquadStateDataAmmoCrate
// 0x0007 (0x0188 - 0x0181)
public class USQSquadStateDataAmmoCrate : USQSquadStateDataDeployable
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQSquadStateDataPawn
// 0x0048 (0x01A8 - 0x0160)
public class USQSquadStateDataPawn : USQSquadStateMapData
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbHiddenWhenUnpossessed                                     = new ExternalOffset<byte/*(bool)*/>(0x0180);                  // 0x0180(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbHiddenWhenNotLocallyControlled                            = new ExternalOffset<byte/*(bool)*/>(0x0181);                  // 0x0181(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbHideWidgetWhenUnpossessed                                 = new ExternalOffset<byte/*(bool)*/>(0x0182);                  // 0x0182(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCameraRotaionYawTolerance                                  = new ExternalOffset<float>(0x0184);                           // 0x0184(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offOwnerPlayerState                                           = new ExternalOffset<ASQPlayerState>(0x0188, true);            // 0x0188(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offCachedPlayerId                                             = new ExternalOffset<int>(0x0194);                             // 0x0194(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offFireTeamIndex                                              = new ExternalOffset<int>(0x0198);                             // 0x0198(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offCachedOwnerPlayerState                                     = new ExternalOffset<ASQPlayerState>(0x01A0, true);            // 0x01A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bHiddenWhenUnpossessed                                         => _offbHiddenWhenUnpossessed.GetValue();
	public byte/*(bool)*/                                     bHiddenWhenNotLocallyControlled                                => _offbHiddenWhenNotLocallyControlled.GetValue();
	public byte/*(bool)*/                                     bHideWidgetWhenUnpossessed                                     => _offbHideWidgetWhenUnpossessed.GetValue();
	public float                                              CameraRotaionYawTolerance                                      => _offCameraRotaionYawTolerance.GetValue();
	public ASQPlayerState                                     OwnerPlayerState                                               => _offOwnerPlayerState.GetValue();
	public int                                                CachedPlayerId                                                 => _offCachedPlayerId.GetValue();
	public int                                                FireTeamIndex                                                  => _offFireTeamIndex.GetValue();
	public ASQPlayerState                                     CachedOwnerPlayerState                                         => _offCachedOwnerPlayerState.GetValue();
	#endregion


}

// Class Squad.SQSquadStateDataCameraman
// 0x0000 (0x01A8 - 0x01A8)
public class USQSquadStateDataCameraman : USQSquadStateDataPawn
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQSquadStateDataCaptureZone
// 0x005C (0x01BC - 0x0160)
public class USQSquadStateDataCaptureZone : USQSquadStateMapData
{
	#region Offsets
	private ExternalOffset<FText>                             _offFlagName                                                   = new ExternalOffset<FText>(0x0180, false);                    // 0x0180(0x0018) (Net, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbUncappable                                                = new ExternalOffset<char>(0x0198, false);                     // 0x0198(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offFlagTexture                                                = new ExternalOffset<UTexture2D>(0x01A0, true);                // 0x01A0(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offNeutralFlag                                                = new ExternalOffset<UTexture2D>(0x01A8, true);                // 0x01A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offOwningTeam                                                 = new ExternalOffset<char>(0x01B0, false);                     // 0x01B0(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offCapturingTeam                                              = new ExternalOffset<char>(0x01B1, false);                     // 0x01B1(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<uint>                              _offTeamCapturabilities                                        = new ExternalOffset<uint>(0x01B4);                            // 0x01B4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCapturePercent                                             = new ExternalOffset<float>(0x01B8);                           // 0x01B8(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FText                                              FlagName                                                       => _offFlagName.GetValue();
	public UTexture2D                                         FlagTexture                                                    => _offFlagTexture.GetValue();
	public UTexture2D                                         NeutralFlag                                                    => _offNeutralFlag.GetValue();
	public uint                                               TeamCapturabilities                                            => _offTeamCapturabilities.GetValue();
	public float                                              CapturePercent                                                 => _offCapturePercent.GetValue();
	#endregion


}

// Class Squad.SQSquadStateDataDeployableExplosive
// 0x0008 (0x0189 - 0x0181)
public class USQSquadStateDataDeployableExplosive : USQSquadStateDataDeployable
{
	#region Offsets
	private ExternalOffset<ESQExplosiveType>                  _offExplosiveType                                              = new ExternalOffset<ESQExplosiveType>(0x0188, false);         // 0x0188(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ESQExplosiveType                                   ExplosiveType                                                  => _offExplosiveType.GetValue();
	#endregion


}

// Class Squad.SQSquadStateDataSQPawn
// 0x0000 (0x01A8 - 0x01A8)
public class USQSquadStateDataSQPawn : USQSquadStateDataPawn
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQSquadStateDataVehicleSeat
// 0x0000 (0x01A8 - 0x01A8)
public class USQSquadStateDataVehicleSeat : USQSquadStateDataSQPawn
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQSquadStateDataVehicle
// 0x0128 (0x02D0 - 0x01A8)
public class USQSquadStateDataVehicle : USQSquadStateDataVehicleSeat
{
	#region Offsets
	private ExternalOffset<USQVehicleUIStaticDataAsset>       _offStaticUIData                                               = new ExternalOffset<USQVehicleUIStaticDataAsset>(0x01A8, true); // 0x01A8(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbHoldsOccupant                                             = new ExternalOffset<char>(0x01B0, false);                     // 0x01B0(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbHoldsSquadLeader                                          = new ExternalOffset<char>(0x01B0, false);                     // 0x01B0(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offClaimingSquadID                                            = new ExternalOffset<int>(0x01B4);                             // 0x01B4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVehicleOccupantsArray>            _offVehicleOccupants                                           = new ExternalOffset<FVehicleOccupantsArray>(0x01B8, false);   // 0x01B8(0x0118) (Net, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public USQVehicleUIStaticDataAsset                        StaticUIData                                                   => _offStaticUIData.GetValue();
	public int                                                ClaimingSquadID                                                => _offClaimingSquadID.GetValue();
	public FVehicleOccupantsArray                             VehicleOccupants                                               => _offVehicleOccupants.GetValue();
	#endregion


}

// Class Squad.SQSquadStateDataEmplacement
// 0x0000 (0x02D0 - 0x02D0)
public class USQSquadStateDataEmplacement : USQSquadStateDataVehicle
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQSquadStateDataForwardBase
// 0x001B (0x019C - 0x0181)
public class USQSquadStateDataForwardBase : USQSquadStateDataDeployable
{
	#region Offsets
//	private ExternalOffset<char>                              _offbCanSpawn                                                  = new ExternalOffset<char>(0x0188, false);                     // 0x0188(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbSieged                                                    = new ExternalOffset<char>(0x0188, false);                     // 0x0188(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offExclusionRadius                                            = new ExternalOffset<float>(0x018C);                           // 0x018C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offConstructionRadius                                         = new ExternalOffset<float>(0x0190);                           // 0x0190(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAmmoPoints                                                 = new ExternalOffset<float>(0x0194);                           // 0x0194(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offConstructionPoints                                         = new ExternalOffset<float>(0x0198);                           // 0x0198(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              ExclusionRadius                                                => _offExclusionRadius.GetValue();
	public float                                              ConstructionRadius                                             => _offConstructionRadius.GetValue();
	public float                                              AmmoPoints                                                     => _offAmmoPoints.GetValue();
	public float                                              ConstructionPoints                                             => _offConstructionPoints.GetValue();
	#endregion


}

// Class Squad.SQSquadStateDataHAB
// 0x0007 (0x0188 - 0x0181)
public class USQSquadStateDataHAB : USQSquadStateDataDeployable
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQSquadStateDataMapMarker
// 0x003C (0x019C - 0x0160)
public class USQSquadStateDataMapMarker : USQSquadStateMapData
{
	#region Offsets
	private ExternalOffset<UTexture2D>                        _offTexture                                                    = new ExternalOffset<UTexture2D>(0x0180, true);                // 0x0180(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offTint                                                       = new ExternalOffset<FLinearColor>(0x0188, false);             // 0x0188(0x0010) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offFireTeamId                                                 = new ExternalOffset<int>(0x0198);                             // 0x0198(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UTexture2D                                         Texture                                                        => _offTexture.GetValue();
	public FLinearColor                                       Tint                                                           => _offTint.GetValue();
	public int                                                FireTeamId                                                     => _offFireTeamId.GetValue();
	#endregion


}

// Class Squad.SQSquadStateDataMapMarkerObjective
// 0x0004 (0x01A0 - 0x019C)
public class USQSquadStateDataMapMarkerObjective : USQSquadStateDataMapMarker
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQSquadStateDataMapMarkerSelectable
// 0x000C (0x01A8 - 0x019C)
public class USQSquadStateDataMapMarkerSelectable : USQSquadStateDataMapMarker
{
	#region Offsets
	private ExternalOffset<USQMapIconComponent>               _offMapIcon                                                    = new ExternalOffset<USQMapIconComponent>(0x01A0, true);       // 0x01A0(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USQMapIconComponent                                MapIcon                                                        => _offMapIcon.GetValue();
	#endregion


}

// Class Squad.SQSquadStateDataMapMarkerSpotted
// 0x0000 (0x01A8 - 0x01A8)
public class USQSquadStateDataMapMarkerSpotted : USQSquadStateDataMapMarkerSelectable
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQSquadStateDataMapMarkerWaypoint
// 0x0000 (0x01A8 - 0x01A8)
public class USQSquadStateDataMapMarkerWaypoint : USQSquadStateDataMapMarkerSelectable
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQSquadStateDataPlayerState
// 0x0048 (0x0158 - 0x0110)
public class USQSquadStateDataPlayerState : USQSquadStateData
{
	#region Offsets
//	private ExternalOffset<char>                              _offbIsSquadLeader                                             = new ExternalOffset<char>(0x0118, false);                     // 0x0118(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsFireTeamLeader                                          = new ExternalOffset<char>(0x0118, false);                     // 0x0118(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offFireTeamIndex                                              = new ExternalOffset<int>(0x011C);                             // 0x011C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offFireTeamPosition                                           = new ExternalOffset<int>(0x0120);                             // 0x0120(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQRoleSettings>                   _offDeployRole                                                 = new ExternalOffset<USQRoleSettings>(0x0128, true);           // 0x0128(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offPlayerName                                                 = new ExternalOffset<FString>(0x0130, false);                  // 0x0130(0x0010) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQVehicleUIStaticDataAsset>       _offCurrentVehicleData                                         = new ExternalOffset<USQVehicleUIStaticDataAsset>(0x0140, true); // 0x0140(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offPlayerState                                                = new ExternalOffset<ASQPlayerState>(0x0148, true);            // 0x0148(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offPlayerId                                                   = new ExternalOffset<int>(0x0150);                             // 0x0150(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQCoreStateId>                    _offSelectionComponentId                                       = new ExternalOffset<FSQCoreStateId>(0x0154, false);           // 0x0154(0x0002) (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQVoiceChannel>                   _offVoipChannel                                                = new ExternalOffset<ESQVoiceChannel>(0x0156, false);          // 0x0156(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsMuted                                                   = new ExternalOffset<byte/*(bool)*/>(0x0157);                  // 0x0157(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public int                                                FireTeamIndex                                                  => _offFireTeamIndex.GetValue();
	public int                                                FireTeamPosition                                               => _offFireTeamPosition.GetValue();
	public USQRoleSettings                                    DeployRole                                                     => _offDeployRole.GetValue();
	public FString                                            PlayerName                                                     => _offPlayerName.GetValue();
	public USQVehicleUIStaticDataAsset                        CurrentVehicleData                                             => _offCurrentVehicleData.GetValue();
	public ASQPlayerState                                     PlayerState                                                    => _offPlayerState.GetValue();
	public int                                                PlayerId                                                       => _offPlayerId.GetValue();
	public FSQCoreStateId                                     SelectionComponentId                                           => _offSelectionComponentId.GetValue();
	public ESQVoiceChannel                                    VoipChannel                                                    => _offVoipChannel.GetValue();
	public byte/*(bool)*/                                     bIsMuted                                                       => _offbIsMuted.GetValue();
	#endregion


}

// Class Squad.SQSquadStateDataSpawnPoint
// 0x002D (0x018D - 0x0160)
public class USQSquadStateDataSpawnPoint : USQSquadStateMapData
{
	#region Offsets
	private ExternalOffset<ASQGameSpawn>                      _offOwningGameSpawn                                            = new ExternalOffset<ASQGameSpawn>(0x0180, true);              // 0x0180(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQSpawnPointType>                 _offSpawnPointType                                             = new ExternalOffset<ESQSpawnPointType>(0x0188, false);        // 0x0188(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbSieged                                                    = new ExternalOffset<char>(0x018C, false);                     // 0x018C(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbSpawningEnabled                                           = new ExternalOffset<char>(0x018C, false);                     // 0x018C(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ASQGameSpawn                                       OwningGameSpawn                                                => _offOwningGameSpawn.GetValue();
	public ESQSpawnPointType                                  SpawnPointType                                                 => _offSpawnPointType.GetValue();
	#endregion


}

// Class Squad.SQSquadStateDataRallyPoint
// 0x0007 (0x0194 - 0x018D)
public class USQSquadStateDataRallyPoint : USQSquadStateDataSpawnPoint
{
	#region Offsets
	private ExternalOffset<int>                               _offNumberOfSpawns                                             = new ExternalOffset<int>(0x0190);                             // 0x0190(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public int                                                NumberOfSpawns                                                 => _offNumberOfSpawns.GetValue();
	#endregion


}

// Class Squad.SQSquadStateDataRepairStation
// 0x0007 (0x0188 - 0x0181)
public class USQSquadStateDataRepairStation : USQSquadStateDataDeployable
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQSquadStateDataSoldier
// 0x0030 (0x01D8 - 0x01A8)
public class USQSquadStateDataSoldier : USQSquadStateDataPawn
{
	#region Offsets
	private ExternalOffset<float>                             _offHealthStatusRange                                          = new ExternalOffset<float>(0x01A8);                           // 0x01A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsBleeding                                                = new ExternalOffset<char>(0x01AC, false);                     // 0x01AC(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsWounded                                                 = new ExternalOffset<char>(0x01AC, false);                     // 0x01AC(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsAlive                                                   = new ExternalOffset<char>(0x01AC, false);                     // 0x01AC(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsInVehicle                                               = new ExternalOffset<char>(0x01AC, false);                     // 0x01AC(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsUsingFreeLook                                           = new ExternalOffset<char>(0x01AC, false);                     // 0x01AC(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsMedic                                                   = new ExternalOffset<char>(0x01AC, false);                     // 0x01AC(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQSoldierInfo>                    _offSoldierInfo                                                = new ExternalOffset<FSQSoldierInfo>(0x01B0, false);           // 0x01B0(0x0028) (Net, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              HealthStatusRange                                              => _offHealthStatusRange.GetValue();
	public FSQSoldierInfo                                     SoldierInfo                                                    => _offSoldierInfo.GetValue();
	#endregion


}

// Class Squad.SQSquadStateDataSquadState
// 0x002D (0x013D - 0x0110)
public class USQSquadStateDataSquadState : USQSquadStateData
{
	#region Offsets
	private ExternalOffset<FString>                           _offSquadName                                                  = new ExternalOffset<FString>(0x0118, false);                  // 0x0118(0x0010) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offLeaderName                                                 = new ExternalOffset<FString>(0x0128, false);                  // 0x0128(0x0010) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offMemberNum                                                  = new ExternalOffset<char>(0x0138, false);                     // 0x0138(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsLocked                                                  = new ExternalOffset<char>(0x013C, false);                     // 0x013C(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private ExternalOffset<char>                              _offbIsCommandSquad                                            = new ExternalOffset<char>(0x013C, false);                     // 0x013C(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FString                                            SquadName                                                      => _offSquadName.GetValue();
	public FString                                            LeaderName                                                     => _offLeaderName.GetValue();
	#endregion


}

// Class Squad.SQSquadStatePrivateToTeam
// 0x0020 (0x0268 - 0x0248)
public class ASQSquadStatePrivateToTeam : AInfo
{
	#region Offsets
	private ExternalOffset<ASQSquad>                          _offAuthoritySquad                                             = new ExternalOffset<ASQSquad>(0x0250, true);                  // 0x0250(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQTeamStatePrivate>               _offPrivateTeamState                                           = new ExternalOffset<ASQTeamStatePrivate>(0x0258, true);       // 0x0258(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSquadState>                     _offSquadState                                                 = new ExternalOffset<ASQSquadState>(0x0260, true);             // 0x0260(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public ASQSquad                                           AuthoritySquad                                                 => _offAuthoritySquad.GetValue();
	public ASQTeamStatePrivate                                PrivateTeamState                                               => _offPrivateTeamState.GetValue();
	public ASQSquadState                                      SquadState                                                     => _offSquadState.GetValue();
	#endregion


}

// Class Squad.SQStagingTimerText
// 0x0080 (0x0260 - 0x01E0)
public class USQStagingTimerText : UUserWidget
{
	#region Offsets
	private ExternalOffset<int>                               _offNearZeroThreshold                                          = new ExternalOffset<int>(0x0230);                             // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQTeamPrep>                       _offTeamPrepRef                                                = new ExternalOffset<ASQTeamPrep>(0x0238, true);               // 0x0238(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UTextBlock>                        _offTextBlockCPP                                               = new ExternalOffset<UTextBlock>(0x0240, true);                // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FText>                             _offStagingPhaseText                                           = new ExternalOffset<FText>(0x0248, false);                    // 0x0248(0x0018) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public int                                                NearZeroThreshold                                              => _offNearZeroThreshold.GetValue();
	public ASQTeamPrep                                        TeamPrepRef                                                    => _offTeamPrepRef.GetValue();
	public UTextBlock                                         TextBlockCPP                                                   => _offTextBlockCPP.GetValue();
	public FText                                              StagingPhaseText                                               => _offStagingPhaseText.GetValue();
	#endregion


}

// Class Squad.SQStatefulButton
// 0x0044 (0x0274 - 0x0230)
public class USQStatefulButton : USQUserWidget
{
	#region Offsets
	private ExternalOffset<TArray<UTexture2D>>                _offStateImages                                                = new ExternalOffset<TArray<UTexture2D>>(0x0230, false);       // 0x0230(0x0010) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<FLinearColor>                      _offNormalTint                                                 = new ExternalOffset<FLinearColor>(0x0240, false);             // 0x0240(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FLinearColor>                      _offHoveredTint                                                = new ExternalOffset<FLinearColor>(0x0250, false);             // 0x0250(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UImage>                            _offCurrentImage                                               = new ExternalOffset<UImage>(0x0260, true);                    // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsHovering                                                = new ExternalOffset<byte/*(bool)*/>(0x0268);                  // 0x0268(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offHoveringColorBlend                                         = new ExternalOffset<float>(0x026C);                           // 0x026C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offHoverColorBlendSpeed                                       = new ExternalOffset<float>(0x0270);                           // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public TArray<UTexture2D>                                 StateImages                                                    => _offStateImages.GetValue();
	public FLinearColor                                       NormalTint                                                     => _offNormalTint.GetValue();
	public FLinearColor                                       HoveredTint                                                    => _offHoveredTint.GetValue();
	public UImage                                             CurrentImage                                                   => _offCurrentImage.GetValue();
	public byte/*(bool)*/                                     bIsHovering                                                    => _offbIsHovering.GetValue();
	public float                                              HoveringColorBlend                                             => _offHoveringColorBlend.GetValue();
	public float                                              HoverColorBlendSpeed                                           => _offHoverColorBlendSpeed.GetValue();
	#endregion


}

// Class Squad.SQStaticTurretMovementComponent
// 0x0040 (0x0268 - 0x0228)
public class USQStaticTurretMovementComponent : USQNetMoveComponent
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbApplyRotationToUpdatedComponent                           = new ExternalOffset<byte/*(bool)*/>(0x0250);                  // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USceneComponent>                   _offYawComponent                                               = new ExternalOffset<USceneComponent>(0x0258, true);           // 0x0258(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USceneComponent>                   _offPitchComponent                                             = new ExternalOffset<USceneComponent>(0x0260, true);           // 0x0260(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bApplyRotationToUpdatedComponent                               => _offbApplyRotationToUpdatedComponent.GetValue();
	public USceneComponent                                    YawComponent                                                   => _offYawComponent.GetValue();
	public USceneComponent                                    PitchComponent                                                 => _offPitchComponent.GetValue();
	#endregion


}

// Class Squad.SQSuppressionInfo
// 0x0020 (0x0048 - 0x0028)
public class USQSuppressionInfo : UObject
{
	#region Offsets
	private ExternalOffset<float>                             _offSuppressSwayFactorRelease                                  = new ExternalOffset<float>(0x0028);                           // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAddSuppressSway                                            = new ExternalOffset<float>(0x002C);                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinSuppressSwayFactor                                      = new ExternalOffset<float>(0x0030);                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxSuppressSwayFactor                                      = new ExternalOffset<float>(0x0034);                           // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLofSuppressRange                                           = new ExternalOffset<float>(0x0038);                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLofSuppressInterpSpeed                                     = new ExternalOffset<float>(0x003C);                           // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLofSuppressAlphaFactor                                     = new ExternalOffset<float>(0x0040);                           // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLofSuppressRotationAlphaRelease                            = new ExternalOffset<float>(0x0044);                           // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              SuppressSwayFactorRelease                                      => _offSuppressSwayFactorRelease.GetValue();
	public float                                              AddSuppressSway                                                => _offAddSuppressSway.GetValue();
	public float                                              MinSuppressSwayFactor                                          => _offMinSuppressSwayFactor.GetValue();
	public float                                              MaxSuppressSwayFactor                                          => _offMaxSuppressSwayFactor.GetValue();
	public float                                              LofSuppressRange                                               => _offLofSuppressRange.GetValue();
	public float                                              LofSuppressInterpSpeed                                         => _offLofSuppressInterpSpeed.GetValue();
	public float                                              LofSuppressAlphaFactor                                         => _offLofSuppressAlphaFactor.GetValue();
	public float                                              LofSuppressRotationAlphaRelease                                => _offLofSuppressRotationAlphaRelease.GetValue();
	#endregion


}

// Class Squad.SQSwitchTeamButton
// 0x000C (0x02F0 - 0x02E4)
public class USQSwitchTeamButton : USQBaseButton
{
	#region Offsets
	private ExternalOffset<ASQPlayerController>               _offOwnerPlayerController                                      = new ExternalOffset<ASQPlayerController>(0x02E8, true);       // 0x02E8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ASQPlayerController                                OwnerPlayerController                                          => _offOwnerPlayerController.GetValue();
	#endregion


}

// Class Squad.SQTabButton
// 0x002C (0x0310 - 0x02E4)
public class USQTabButton : USQBaseButton
{
	#region Offsets
	private ExternalOffset<UWidgetSwitcher>                   _offParentWidgetSwitcher                                       = new ExternalOffset<UWidgetSwitcher>(0x02F0, true);           // 0x02F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UImage>                            _offMainBgImage                                                = new ExternalOffset<UImage>(0x02F8, true);                    // 0x02F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTextBlock>                        _offTabTextBlock                                               = new ExternalOffset<UTextBlock>(0x0300, true);                // 0x0300(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offOwnerPlayerState                                           = new ExternalOffset<ASQPlayerState>(0x0308, true);            // 0x0308(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UWidgetSwitcher                                    ParentWidgetSwitcher                                           => _offParentWidgetSwitcher.GetValue();
	public UImage                                             MainBgImage                                                    => _offMainBgImage.GetValue();
	public UTextBlock                                         TabTextBlock                                                   => _offTabTextBlock.GetValue();
	public ASQPlayerState                                     OwnerPlayerState                                               => _offOwnerPlayerState.GetValue();
	#endregion


}

// Class Squad.SQTeamInfo
// 0x0358 (0x0380 - 0x0028)
public class USQTeamInfo : UObject
{
	#region Offsets
	private ExternalOffset<FString>                           _offShortName                                                  = new ExternalOffset<FString>(0x0028, false);                  // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FString>                           _offName                                                       = new ExternalOffset<FString>(0x0038, false);                  // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offDescription                                                = new ExternalOffset<FText>(0x0048, false);                    // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NoClear, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offCommanderRequirementsText                                  = new ExternalOffset<FText>(0x0060, false);                    // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NoClear, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbBuddyRallyPointEnabled                                    = new ExternalOffset<byte/*(bool)*/>(0x0078);                  // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offSoldierClass                                               = new ExternalOffset<UClass>(0x0080, true);                    // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UStaticMesh>                       _offRallyPointMesh                                             = new ExternalOffset<UStaticMesh>(0x0088, true);               // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<USQRoleSettings>>           _offRoles                                                      = new ExternalOffset<TArray<USQRoleSettings>>(0x0090, false);  // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQRoleGroupLimit>>         _offGroupLimits                                                = new ExternalOffset<TArray<FSQRoleGroupLimit>>(0x00A0, false); // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQDeployableLimit>>        _offDeployableFOBLimits                                        = new ExternalOffset<TArray<FSQDeployableLimit>>(0x00B0, false); // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<USQRoleSettings>                   _offDefaultRole                                                = new ExternalOffset<USQRoleSettings>(0x00C0, true);           // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQRoleSettings>                   _offLeaveSquadRole                                             = new ExternalOffset<USQRoleSettings>(0x00C8, true);           // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offMapFlag                                                    = new ExternalOffset<UTexture2D>(0x00D0, true);                // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offHudFlag                                                    = new ExternalOffset<UTexture2D>(0x00D8, true);                // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offHudBadge                                                   = new ExternalOffset<UTexture2D>(0x00E0, true);                // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture2D>                        _offTeamImage                                                  = new ExternalOffset<UTexture2D>(0x00E8, true);                // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQCommanderSounds>                _offCommanderSoundsList                                        = new ExternalOffset<FSQCommanderSounds>(0x00F0, false);       // 0x00F0(0x0140) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQTeamEventSounds>                _offTeamEventSoundsList                                        = new ExternalOffset<FSQTeamEventSounds>(0x0230, false);       // 0x0230(0x00C8) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQMedicCalls>                     _offMedicCall                                                  = new ExternalOffset<FSQMedicCalls>(0x02F8, false);            // 0x02F8(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQObjectiveSounds>>        _offObjectiveSoundsList                                        = new ExternalOffset<TArray<FSQObjectiveSounds>>(0x0370, false); // 0x0370(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FString                                            ShortName                                                      => _offShortName.GetValue();
	public FString                                            Name                                                           => _offName.GetValue();
	public FText                                              Description                                                    => _offDescription.GetValue();
	public FText                                              CommanderRequirementsText                                      => _offCommanderRequirementsText.GetValue();
	public byte/*(bool)*/                                     bBuddyRallyPointEnabled                                        => _offbBuddyRallyPointEnabled.GetValue();
	public UClass                                             SoldierClass                                                   => _offSoldierClass.GetValue();
	public UStaticMesh                                        RallyPointMesh                                                 => _offRallyPointMesh.GetValue();
	public TArray<USQRoleSettings>                            Roles                                                          => _offRoles.GetValue();
	public TArray<FSQRoleGroupLimit>                          GroupLimits                                                    => _offGroupLimits.GetValue();
	public TArray<FSQDeployableLimit>                         DeployableFOBLimits                                            => _offDeployableFOBLimits.GetValue();
	public USQRoleSettings                                    DefaultRole                                                    => _offDefaultRole.GetValue();
	public USQRoleSettings                                    LeaveSquadRole                                                 => _offLeaveSquadRole.GetValue();
	public UTexture2D                                         MapFlag                                                        => _offMapFlag.GetValue();
	public UTexture2D                                         HudFlag                                                        => _offHudFlag.GetValue();
	public UTexture2D                                         HudBadge                                                       => _offHudBadge.GetValue();
	public UTexture2D                                         TeamImage                                                      => _offTeamImage.GetValue();
	public FSQCommanderSounds                                 CommanderSoundsList                                            => _offCommanderSoundsList.GetValue();
	public FSQTeamEventSounds                                 TeamEventSoundsList                                            => _offTeamEventSoundsList.GetValue();
	public FSQMedicCalls                                      MedicCall                                                      => _offMedicCall.GetValue();
	public TArray<FSQObjectiveSounds>                         ObjectiveSoundsList                                            => _offObjectiveSoundsList.GetValue();
	#endregion


}

// Class Squad.SQTeamInterface
// 0x0000 (0x0028 - 0x0028)
public class USQTeamInterface : UInterface
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQTeamPrep
// 0x0050 (0x0288 - 0x0238)
public class ASQTeamPrep : AActor
{
	#region Offsets
	private ExternalOffset<int>                               _offTeamId                                                     = new ExternalOffset<int>(0x0248);                             // 0x0248(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UPrimitiveComponent>               _offVehicleStagingPrimitive                                    = new ExternalOffset<UPrimitiveComponent>(0x0250, true);       // 0x0250(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStagingTimeInSeconds                                       = new ExternalOffset<float>(0x0270);                           // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offReplicatedRemainingTime                                    = new ExternalOffset<int>(0x0274);                             // 0x0274(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQSoldier>                        _offLocalSoldier                                               = new ExternalOffset<ASQSoldier>(0x0280, true);                // 0x0280(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public int                                                TeamId                                                         => _offTeamId.GetValue();
	public UPrimitiveComponent                                VehicleStagingPrimitive                                        => _offVehicleStagingPrimitive.GetValue();
	public float                                              StagingTimeInSeconds                                           => _offStagingTimeInSeconds.GetValue();
	public int                                                ReplicatedRemainingTime                                        => _offReplicatedRemainingTime.GetValue();
	public ASQSoldier                                         LocalSoldier                                                   => _offLocalSoldier.GetValue();
	#endregion


}

// Class Squad.SQTeamSpawnGroup
// 0x0014 (0x03F0 - 0x03DC)
public class ASQTeamSpawnGroup : ASQGameSpawn
{
	#region Offsets
	private ExternalOffset<TArray<ASQTeamSpawnPoint>>         _offSpawnPoints                                                = new ExternalOffset<TArray<ASQTeamSpawnPoint>>(0x03E0, false); // 0x03E0(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<ASQTeamSpawnPoint>                          SpawnPoints                                                    => _offSpawnPoints.GetValue();
	#endregion


}

// Class Squad.SQTeamSpawnPoint
// 0x000C (0x03E8 - 0x03DC)
public class ASQTeamSpawnPoint : ASQGameSpawn
{
	#region Offsets
	private ExternalOffset<ASQTeamSpawnGroup>                 _offGroup                                                      = new ExternalOffset<ASQTeamSpawnGroup>(0x03E0, true);         // 0x03E0(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ASQTeamSpawnGroup                                  Group                                                          => _offGroup.GetValue();
	#endregion


}

// Class Squad.SQTeamState
// 0x0238 (0x0480 - 0x0248)
public class ASQTeamState : AInfo
{
	#region Offsets
	private ExternalOffset<int>                               _offTickets                                                    = new ExternalOffset<int>(0x0248);                             // 0x0248(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQTeam>                           _offAuthorityTeam                                              = new ExternalOffset<ASQTeam>(0x0250, true);                   // 0x0250(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offID                                                         = new ExternalOffset<int>(0x0258);                             // 0x0258(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offScore                                                      = new ExternalOffset<float>(0x025C);                           // 0x025C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTeamWorkScore                                              = new ExternalOffset<float>(0x0260);                           // 0x0260(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offObjectiveScore                                             = new ExternalOffset<float>(0x0264);                           // 0x0264(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumKills                                                   = new ExternalOffset<int>(0x0268);                             // 0x0268(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumDeaths                                                  = new ExternalOffset<int>(0x026C);                             // 0x026C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumWoundeds                                                = new ExternalOffset<int>(0x0270);                             // 0x0270(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumWounds                                                  = new ExternalOffset<int>(0x0274);                             // 0x0274(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offNumTeamkills                                               = new ExternalOffset<int>(0x0278);                             // 0x0278(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHealPoints                                                 = new ExternalOffset<float>(0x027C);                           // 0x027C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRevivedPoints                                              = new ExternalOffset<float>(0x0280);                           // 0x0280(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offInfoClass                                                  = new ExternalOffset<UClass>(0x02A8, true);                    // 0x02A8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQTeamInfo>                       _offInfo                                                       = new ExternalOffset<USQTeamInfo>(0x02B0, true);               // 0x02B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQSquadState>>             _offIndexedSquadStates                                         = new ExternalOffset<TArray<ASQSquadState>>(0x02B8, false);    // 0x02B8(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQSquadState>>             _offSquadStates                                                = new ExternalOffset<TArray<ASQSquadState>>(0x02C8, false);    // 0x02C8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQPlayerState>>            _offPlayerStates                                               = new ExternalOffset<TArray<ASQPlayerState>>(0x0318, false);   // 0x0318(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQRoleLimitArray>                 _offIndexedRoleLimits                                          = new ExternalOffset<FSQRoleLimitArray>(0x0328, false);        // 0x0328(0x0118) (BlueprintVisible, Net, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<int>>                       _offIndexedRoleUsage                                           = new ExternalOffset<TArray<int>>(0x0440, false);              // 0x0440(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQRoleGroupLimit>>         _offIndexedRoleGroupLimits                                     = new ExternalOffset<TArray<FSQRoleGroupLimit>>(0x0450, false); // 0x0450(0x0010) (BlueprintVisible, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<int>>                       _offIndexedRoleGroupUsage                                      = new ExternalOffset<TArray<int>>(0x0460, false);              // 0x0460(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbHasNoRoleLimits                                           = new ExternalOffset<byte/*(bool)*/>(0x0470);                  // 0x0470(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQCommanderState>                 _offCommanderState                                             = new ExternalOffset<ASQCommanderState>(0x0478, true);         // 0x0478(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public int                                                Tickets                                                        => _offTickets.GetValue();
	public ASQTeam                                            AuthorityTeam                                                  => _offAuthorityTeam.GetValue();
	public int                                                ID                                                             => _offID.GetValue();
	public float                                              Score                                                          => _offScore.GetValue();
	public float                                              TeamWorkScore                                                  => _offTeamWorkScore.GetValue();
	public float                                              ObjectiveScore                                                 => _offObjectiveScore.GetValue();
	public int                                                NumKills                                                       => _offNumKills.GetValue();
	public int                                                NumDeaths                                                      => _offNumDeaths.GetValue();
	public int                                                NumWoundeds                                                    => _offNumWoundeds.GetValue();
	public int                                                NumWounds                                                      => _offNumWounds.GetValue();
	public int                                                NumTeamkills                                                   => _offNumTeamkills.GetValue();
	public float                                              HealPoints                                                     => _offHealPoints.GetValue();
	public float                                              RevivedPoints                                                  => _offRevivedPoints.GetValue();
	public UClass                                             InfoClass                                                      => _offInfoClass.GetValue();
	public USQTeamInfo                                        Info                                                           => _offInfo.GetValue();
	public TArray<ASQSquadState>                              IndexedSquadStates                                             => _offIndexedSquadStates.GetValue();
	public TArray<ASQSquadState>                              SquadStates                                                    => _offSquadStates.GetValue();
	public TArray<ASQPlayerState>                             PlayerStates                                                   => _offPlayerStates.GetValue();
	public FSQRoleLimitArray                                  IndexedRoleLimits                                              => _offIndexedRoleLimits.GetValue();
	public TArray<int>                                        IndexedRoleUsage                                               => _offIndexedRoleUsage.GetValue();
	public TArray<FSQRoleGroupLimit>                          IndexedRoleGroupLimits                                         => _offIndexedRoleGroupLimits.GetValue();
	public TArray<int>                                        IndexedRoleGroupUsage                                          => _offIndexedRoleGroupUsage.GetValue();
	public byte/*(bool)*/                                     bHasNoRoleLimits                                               => _offbHasNoRoleLimits.GetValue();
	public ASQCommanderState                                  CommanderState                                                 => _offCommanderState.GetValue();
	#endregion


}

// Class Squad.SQTeamStatePrivate
// 0x002C (0x0274 - 0x0248)
public class ASQTeamStatePrivate : AInfo
{
	#region Offsets
	private ExternalOffset<TArray<ASQSquadStatePrivateToTeam>> _offIndexedTeamPrivateSquadStates                              = new ExternalOffset<TArray<ASQSquadStatePrivateToTeam>>(0x0250, false); // 0x0250(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<ASQSquadStatePrivateToTeam>> _offTeamPrivateSquadStates                                     = new ExternalOffset<TArray<ASQSquadStatePrivateToTeam>>(0x0260, false); // 0x0260(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offID                                                         = new ExternalOffset<int>(0x0270);                             // 0x0270(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public TArray<ASQSquadStatePrivateToTeam>                 IndexedTeamPrivateSquadStates                                  => _offIndexedTeamPrivateSquadStates.GetValue();
	public TArray<ASQSquadStatePrivateToTeam>                 TeamPrivateSquadStates                                         => _offTeamPrivateSquadStates.GetValue();
	public int                                                ID                                                             => _offID.GetValue();
	#endregion


}

// Class Squad.SQTemperatureComponent
// 0x00D4 (0x0254 - 0x0180)
public class USQTemperatureComponent : USceneComponent
{
	#region Offsets
	private ExternalOffset<ASQLastingEffect>                  _offTemperatureLastingEffect                                   = new ExternalOffset<ASQLastingEffect>(0x0218, true);          // 0x0218(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnTemperatureIncrementEvent                                = new ExternalOffset<FScriptMulticastDelegate>(0x0220, false); // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offIncrementalTriggerTemperature                              = new ExternalOffset<float>(0x0230);                           // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offTemperatureRange                                           = new ExternalOffset<FVector2D>(0x0234, false);                // 0x0234(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offTemperatureDrift                                           = new ExternalOffset<float>(0x023C);                           // 0x023C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<AController>                       _offLastTempChanger                                            = new ExternalOffset<AController>(0x0240, true);               // 0x0240(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCurrentTemperature                                         = new ExternalOffset<float>(0x0248);                           // 0x0248(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHigherTempTrigger                                          = new ExternalOffset<float>(0x024C);                           // 0x024C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLowerTempTrigger                                           = new ExternalOffset<float>(0x0250);                           // 0x0250(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ASQLastingEffect                                   TemperatureLastingEffect                                       => _offTemperatureLastingEffect.GetValue();
	public FScriptMulticastDelegate                           OnTemperatureIncrementEvent                                    => _offOnTemperatureIncrementEvent.GetValue();
	public float                                              IncrementalTriggerTemperature                                  => _offIncrementalTriggerTemperature.GetValue();
	public FVector2D                                          TemperatureRange                                               => _offTemperatureRange.GetValue();
	public float                                              TemperatureDrift                                               => _offTemperatureDrift.GetValue();
	public AController                                        LastTempChanger                                                => _offLastTempChanger.GetValue();
	public float                                              CurrentTemperature                                             => _offCurrentTemperature.GetValue();
	public float                                              HigherTempTrigger                                              => _offHigherTempTrigger.GetValue();
	public float                                              LowerTempTrigger                                               => _offLowerTempTrigger.GetValue();
	#endregion


}

// Class Squad.SQToastWidget
// 0x007C (0x025C - 0x01E0)
public class USQToastWidget : UUserWidget
{
	#region Offsets
	private ExternalOffset<FScriptMulticastDelegate>          _offToastTextUpdated                                           = new ExternalOffset<FScriptMulticastDelegate>(0x0230, false); // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offToastText                                                  = new ExternalOffset<FText>(0x0240, false);                    // 0x0240(0x0018) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offInitialLifetime                                            = new ExternalOffset<float>(0x0258);                           // 0x0258(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public FScriptMulticastDelegate                           ToastTextUpdated                                               => _offToastTextUpdated.GetValue();
	public FText                                              ToastText                                                      => _offToastText.GetValue();
	public float                                              InitialLifetime                                                => _offInitialLifetime.GetValue();
	#endregion


}

// Class Squad.SQToolTipBaseWidget
// 0x0060 (0x0240 - 0x01E0)
public class USQToolTipBaseWidget : UUserWidget
{
	#region Offsets
	private ExternalOffset<USQMap>                            _offOwnerMap                                                   = new ExternalOffset<USQMap>(0x0230, true);                    // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQMapIconWidget>                  _offParentWidget                                               = new ExternalOffset<USQMapIconWidget>(0x0238, true);          // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public USQMap                                             OwnerMap                                                       => _offOwnerMap.GetValue();
	public USQMapIconWidget                                   ParentWidget                                                   => _offParentWidget.GetValue();
	#endregion


}

// Class Squad.SQTournamentModeRuleset
// 0x0010 (0x0280 - 0x0270)
public class ASQTournamentModeRuleset : ASQGameRuleSet
{
	#region Offsets
	private ExternalOffset<TArray<FSQSettingsRestriction>>    _offRestrictions                                               = new ExternalOffset<TArray<FSQSettingsRestriction>>(0x0270, false); // 0x0270(0x0010) (ZeroConstructor, Config, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<FSQSettingsRestriction>                     Restrictions                                                   => _offRestrictions.GetValue();
	#endregion


}

// Class Squad.SQTournamentModeRulesetState
// 0x0010 (0x0258 - 0x0248)
public class ASQTournamentModeRulesetState : ASQRulesetState
{
	#region Offsets
	private ExternalOffset<TArray<FSQSettingsRestriction>>    _offRestrictions                                               = new ExternalOffset<TArray<FSQSettingsRestriction>>(0x0248, false); // 0x0248(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<FSQSettingsRestriction>                     Restrictions                                                   => _offRestrictions.GetValue();
	#endregion


}

// Class Squad.SQTrackedVehicle
// 0x0058 (0x0A10 - 0x09B8)
public class ASQTrackedVehicle : ASQGroundVehicle
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQTrackedVehicleMovementComponent
// 0x0008 (0x0400 - 0x03F8)
public class USQTrackedVehicleMovementComponent : UWheeledVehicleMovementComponentTank
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQUISettings
// 0x005C (0x0084 - 0x0028)
public class USQUISettings : UDeveloperSettings
{
	#region Offsets
	private ExternalOffset<FColor>                            _offYellow                                                     = new ExternalOffset<FColor>(0x0038, false);                   // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FColor>                            _offGrey                                                       = new ExternalOffset<FColor>(0x003C, false);                   // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FColor>                            _offOther                                                      = new ExternalOffset<FColor>(0x0040, false);                   // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offNeutralColor                                               = new ExternalOffset<FLinearColor>(0x0044, false);             // 0x0044(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offFriendlyColor                                              = new ExternalOffset<FLinearColor>(0x0054, false);             // 0x0054(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offEnemyColor                                                 = new ExternalOffset<FLinearColor>(0x0064, false);             // 0x0064(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FLinearColor>                      _offSquadColor                                                 = new ExternalOffset<FLinearColor>(0x0074, false);             // 0x0074(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FColor                                             Yellow                                                         => _offYellow.GetValue();
	public FColor                                             Grey                                                           => _offGrey.GetValue();
	public FColor                                             Other                                                          => _offOther.GetValue();
	public FLinearColor                                       NeutralColor                                                   => _offNeutralColor.GetValue();
	public FLinearColor                                       FriendlyColor                                                  => _offFriendlyColor.GetValue();
	public FLinearColor                                       EnemyColor                                                     => _offEnemyColor.GetValue();
	public FLinearColor                                       SquadColor                                                     => _offSquadColor.GetValue();
	#endregion


}

// Class Squad.SQUpdateSessionsCallbackProxy
// 0x00D0 (0x00F8 - 0x0028)
public class USQUpdateSessionsCallbackProxy : UOnlineBlueprintCallProxyBase
{
	#region Offsets
	private ExternalOffset<FScriptMulticastDelegate>          _offOnSuccess                                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0028, false); // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnFailure                                                  = new ExternalOffset<FScriptMulticastDelegate>(0x0038, false); // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<UObject>                           _offWorldContextObject                                         = new ExternalOffset<UObject>(0x00F0, true);                   // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public FScriptMulticastDelegate                           OnSuccess                                                      => _offOnSuccess.GetValue();
	public FScriptMulticastDelegate                           OnFailure                                                      => _offOnFailure.GetValue();
	public UObject                                            WorldContextObject                                             => _offWorldContextObject.GetValue();
	#endregion


}

// Class Squad.SQUsable
// 0x0000 (0x0028 - 0x0028)
public class USQUsable : UInterface
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQVehicleAmmoBox
// 0x0020 (0x0588 - 0x0568)
public class USQVehicleAmmoBox : USQVehicleComponent
{
	#region Offsets
	private ExternalOffset<int>                               _offDamageToParentPerIntervalWhenBurning                       = new ExternalOffset<int>(0x056C);                             // 0x056C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offHealthWhenFireStarts                                       = new ExternalOffset<float>(0x0570);                           // 0x0570(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offParentDamageWhenDestroyed                                  = new ExternalOffset<float>(0x0574);                           // 0x0574(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offSecondsBetweenDamageEvents                                 = new ExternalOffset<int>(0x0578);                             // 0x0578(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UClass>                            _offDamageTypeToInflict                                        = new ExternalOffset<UClass>(0x0580, true);                    // 0x0580(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public int                                                DamageToParentPerIntervalWhenBurning                           => _offDamageToParentPerIntervalWhenBurning.GetValue();
	public float                                              HealthWhenFireStarts                                           => _offHealthWhenFireStarts.GetValue();
	public float                                              ParentDamageWhenDestroyed                                      => _offParentDamageWhenDestroyed.GetValue();
	public int                                                SecondsBetweenDamageEvents                                     => _offSecondsBetweenDamageEvents.GetValue();
	public UClass                                             DamageTypeToInflict                                            => _offDamageTypeToInflict.GetValue();
	#endregion


}

// Class Squad.SQVehicleAnimInstance
// 0x0020 (0x0988 - 0x0968)
public class USQVehicleAnimInstance : UVehicleAnimInstance
{
	#region Offsets
	private ExternalOffset<ASQGroundVehicle>                  _offVehicle                                                    = new ExternalOffset<ASQGroundVehicle>(0x0970, true);          // 0x0970(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsEngineActive                                            = new ExternalOffset<byte/*(bool)*/>(0x0978);                  // 0x0978(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FRotator>                          _offSteeringWheelRotation                                      = new ExternalOffset<FRotator>(0x097C, false);                 // 0x097C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public ASQGroundVehicle                                   Vehicle                                                        => _offVehicle.GetValue();
	public byte/*(bool)*/                                     bIsEngineActive                                                => _offbIsEngineActive.GetValue();
	public FRotator                                           SteeringWheelRotation                                          => _offSteeringWheelRotation.GetValue();
	#endregion


}

// Class Squad.SQVehicleBurningComponent
// 0x00D0 (0x0250 - 0x0180)
public class USQVehicleBurningComponent : USceneComponent
{
	#region Offsets
	private ExternalOffset<FName>                             _offParticleAttachBone                                         = new ExternalOffset<FName>(0x0218, false);                    // 0x0218(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQLastingEffect>                  _offTemperatureLastingEffect                                   = new ExternalOffset<ASQLastingEffect>(0x0220, true);          // 0x0220(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIsDebugging                                               = new ExternalOffset<byte/*(bool)*/>(0x022A);                  // 0x022A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offVehicleBurnRatePct                                         = new ExternalOffset<float>(0x022C);                           // 0x022C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offVehicleFlippedBurnRatePct                                  = new ExternalOffset<float>(0x0230);                           // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offVehicleAbandonedBurnRatePct                                = new ExternalOffset<float>(0x0234);                           // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offSoldierBurnRatePct                                         = new ExternalOffset<float>(0x0238);                           // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offStartBurnHealthPercent                                     = new ExternalOffset<float>(0x023C);                           // 0x023C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FTimerHandle>                      _offEffectTimerHandle                                          = new ExternalOffset<FTimerHandle>(0x0240, false);             // 0x0240(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FTimerHandle>                      _offBurnTimerHandle                                            = new ExternalOffset<FTimerHandle>(0x0248, false);             // 0x0248(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public FName                                              ParticleAttachBone                                             => _offParticleAttachBone.GetValue();
	public ASQLastingEffect                                   TemperatureLastingEffect                                       => _offTemperatureLastingEffect.GetValue();
	public byte/*(bool)*/                                     bIsDebugging                                                   => _offbIsDebugging.GetValue();
	public float                                              VehicleBurnRatePct                                             => _offVehicleBurnRatePct.GetValue();
	public float                                              VehicleFlippedBurnRatePct                                      => _offVehicleFlippedBurnRatePct.GetValue();
	public float                                              VehicleAbandonedBurnRatePct                                    => _offVehicleAbandonedBurnRatePct.GetValue();
	public float                                              SoldierBurnRatePct                                             => _offSoldierBurnRatePct.GetValue();
	public float                                              StartBurnHealthPercent                                         => _offStartBurnHealthPercent.GetValue();
	public FTimerHandle                                       EffectTimerHandle                                              => _offEffectTimerHandle.GetValue();
	public FTimerHandle                                       BurnTimerHandle                                                => _offBurnTimerHandle.GetValue();
	#endregion


}

// Class Squad.SQVehicleClaim
// 0x0038 (0x0060 - 0x0028)
public class USQVehicleClaim : UObject
{
	#region Offsets
	private ExternalOffset<ASQVehicle>                        _offVehicleClaimed                                             = new ExternalOffset<ASQVehicle>(0x0028, true);                // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQSquad>                          _offClaimingSquad                                              = new ExternalOffset<ASQSquad>(0x0030, true);                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<ASQPlayerState>>            _offPlayersPartyToClaim                                        = new ExternalOffset<TArray<ASQPlayerState>>(0x0038, false);   // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQVehicleClaimStatus>             _offStatus                                                     = new ExternalOffset<ESQVehicleClaimStatus>(0x0048, false);    // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offTimeOfClaim                                                = new ExternalOffset<float>(0x004C);                           // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offTimeOfExpiration                                           = new ExternalOffset<float>(0x0050);                           // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbExpired                                                   = new ExternalOffset<byte/*(bool)*/>(0x0054);                  // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<FTimerHandle>                      _offExpirationTimerHandle                                      = new ExternalOffset<FTimerHandle>(0x0058, false);             // 0x0058(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public ASQVehicle                                         VehicleClaimed                                                 => _offVehicleClaimed.GetValue();
	public ASQSquad                                           ClaimingSquad                                                  => _offClaimingSquad.GetValue();
	public TArray<ASQPlayerState>                             PlayersPartyToClaim                                            => _offPlayersPartyToClaim.GetValue();
	public ESQVehicleClaimStatus                              Status                                                         => _offStatus.GetValue();
	public float                                              TimeOfClaim                                                    => _offTimeOfClaim.GetValue();
	public float                                              TimeOfExpiration                                               => _offTimeOfExpiration.GetValue();
	public byte/*(bool)*/                                     bExpired                                                       => _offbExpired.GetValue();
	public FTimerHandle                                       ExpirationTimerHandle                                          => _offExpirationTimerHandle.GetValue();
	#endregion


}

// Class Squad.SQVehicleCleanupDataAsset
// 0x002C (0x005C - 0x0030)
public class USQVehicleCleanupDataAsset : UDataAsset
{
	#region Offsets
	private ExternalOffset<TArray<TEnumAsByte<EObjectTypeQuery>>> _offObjectCollisionTypes                                       = new ExternalOffset<TArray<TEnumAsByte<EObjectTypeQuery>>>(0x0030, false); // 0x0030(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<UClass>>                    _offObjectClasses                                              = new ExternalOffset<TArray<UClass>>(0x0040, false);           // 0x0040(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offScanRadius                                                 = new ExternalOffset<float>(0x0050);                           // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offScanFrequency                                              = new ExternalOffset<float>(0x0054);                           // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSelfDestructionTime                                        = new ExternalOffset<float>(0x0058);                           // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public TArray<TEnumAsByte<EObjectTypeQuery>>              ObjectCollisionTypes                                           => _offObjectCollisionTypes.GetValue();
	public TArray<UClass>                                     ObjectClasses                                                  => _offObjectClasses.GetValue();
	public float                                              ScanRadius                                                     => _offScanRadius.GetValue();
	public float                                              ScanFrequency                                                  => _offScanFrequency.GetValue();
	public float                                              SelfDestructionTime                                            => _offSelfDestructionTime.GetValue();
	#endregion


}

// Class Squad.SQVehicleCleanupComponent
// 0x0028 (0x00F0 - 0x00C8)
public class USQVehicleCleanupComponent : UActorComponent
{
	#region Offsets
	private ExternalOffset<USQVehicleCleanupDataAsset>        _offCleanupStaticInfo                                          = new ExternalOffset<USQVehicleCleanupDataAsset>(0x00D8, true); // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQVehicle>                        _offOwnerVehicle                                               = new ExternalOffset<ASQVehicle>(0x00E8, true);                // 0x00E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public USQVehicleCleanupDataAsset                         CleanupStaticInfo                                              => _offCleanupStaticInfo.GetValue();
	public ASQVehicle                                         OwnerVehicle                                                   => _offOwnerVehicle.GetValue();
	#endregion


}

// Class Squad.SQVehicleComponentBluePrintable
// 0x0008 (0x0570 - 0x0568)
public class USQVehicleComponentBluePrintable : USQVehicleComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQVehicleDepotComponent
// 0x0110 (0x0290 - 0x0180)
public class USQVehicleDepotComponent : USceneComponent
{
	#region Offsets
	private ExternalOffset<float>                             _offSecondsPerMag                                              = new ExternalOffset<float>(0x0220);                           // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offVehicleHealthPerSecond                                     = new ExternalOffset<float>(0x0224);                           // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offConstructionPointsPerSecondRepair                          = new ExternalOffset<float>(0x0228);                           // 0x0228(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSoldierHealthPerSecond                                     = new ExternalOffset<float>(0x022C);                           // 0x022C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
//	private TMap<class ASQVehicle*, float>                    _offTimeInRearm                                                = new ExternalOffset<TMap<float>>(0x0230, false);              // 0x0230(0x0050) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<AActor>>                    _offCurrentOverlappedActors                                    = new ExternalOffset<TArray<AActor>>(0x0280, false);           // 0x0280(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public float                                              SecondsPerMag                                                  => _offSecondsPerMag.GetValue();
	public float                                              VehicleHealthPerSecond                                         => _offVehicleHealthPerSecond.GetValue();
	public float                                              ConstructionPointsPerSecondRepair                              => _offConstructionPointsPerSecondRepair.GetValue();
	public float                                              SoldierHealthPerSecond                                         => _offSoldierHealthPerSecond.GetValue();
	public TArray<AActor>                                     CurrentOverlappedActors                                        => _offCurrentOverlappedActors.GetValue();
	#endregion


}

// Class Squad.SQVehicleExitPointComponent
// 0x00A0 (0x0220 - 0x0180)
public class USQVehicleExitPointComponent : USceneComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQVehicleGasCan
// 0x0018 (0x0580 - 0x0568)
public class USQVehicleGasCan : USQVehicleComponent
{
	#region Offsets
	private ExternalOffset<float>                             _offMinimumDamage                                              = new ExternalOffset<float>(0x056C);                           // 0x056C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offKillZoneRadius                                             = new ExternalOffset<float>(0x0570);                           // 0x0570(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDamageInnerRadius                                          = new ExternalOffset<float>(0x0574);                           // 0x0574(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDamageOuterRadius                                          = new ExternalOffset<float>(0x0578);                           // 0x0578(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offDamageFalloff                                              = new ExternalOffset<float>(0x057C);                           // 0x057C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              MinimumDamage                                                  => _offMinimumDamage.GetValue();
	public float                                              KillZoneRadius                                                 => _offKillZoneRadius.GetValue();
	public float                                              DamageInnerRadius                                              => _offDamageInnerRadius.GetValue();
	public float                                              DamageOuterRadius                                              => _offDamageOuterRadius.GetValue();
	public float                                              DamageFalloff                                                  => _offDamageFalloff.GetValue();
	#endregion


}

// Class Squad.SQVehicleInventoryComponent
// 0x0010 (0x02F0 - 0x02E0)
public class USQVehicleInventoryComponent : USQPawnInventoryComponent
{
	#region Offsets
	private ExternalOffset<TArray<FSQVehicleWeaponConfig>>    _offWeapons                                                    = new ExternalOffset<TArray<FSQVehicleWeaponConfig>>(0x02E0, false); // 0x02E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public TArray<FSQVehicleWeaponConfig>                     Weapons                                                        => _offWeapons.GetValue();
	#endregion


}

// Class Squad.SQVehicleMovementComponentInterface
// 0x0000 (0x0028 - 0x0028)
public class USQVehicleMovementComponentInterface : UInterface
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQVehicleResourceWeaponInventoryComponent
// 0x0068 (0x0358 - 0x02F0)
public class USQVehicleResourceWeaponInventoryComponent : USQVehicleInventoryComponent
{
	#region Offsets
	private ExternalOffset<FScriptMulticastDelegate>          _offOnResourcesChangedEvent                                    = new ExternalOffset<FScriptMulticastDelegate>(0x02F0, false); // 0x02F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbSpawnWithMaxResources                                     = new ExternalOffset<byte/*(bool)*/>(0x0300);                  // 0x0300(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offCurrentConstructionAmount                                  = new ExternalOffset<int>(0x0328);                             // 0x0328(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offCurrentAmmoAmount                                          = new ExternalOffset<int>(0x032C);                             // 0x032C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offTotalSharedResourceAmount                                  = new ExternalOffset<int>(0x0330);                             // 0x0330(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<UClass>>                    _offResourceClasses                                            = new ExternalOffset<TArray<UClass>>(0x0338, false);           // 0x0338(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<ASQVehicleResource>>        _offResources                                                  = new ExternalOffset<TArray<ASQVehicleResource>>(0x0348, false); // 0x0348(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public FScriptMulticastDelegate                           OnResourcesChangedEvent                                        => _offOnResourcesChangedEvent.GetValue();
	public byte/*(bool)*/                                     bSpawnWithMaxResources                                         => _offbSpawnWithMaxResources.GetValue();
	public int                                                CurrentConstructionAmount                                      => _offCurrentConstructionAmount.GetValue();
	public int                                                CurrentAmmoAmount                                              => _offCurrentAmmoAmount.GetValue();
	public int                                                TotalSharedResourceAmount                                      => _offTotalSharedResourceAmount.GetValue();
	public TArray<UClass>                                     ResourceClasses                                                => _offResourceClasses.GetValue();
	public TArray<ASQVehicleResource>                         Resources                                                      => _offResources.GetValue();
	#endregion


}

// Class Squad.SQVehicleSeatComponent
// 0x0108 (0x0288 - 0x0180)
public class USQVehicleSeatComponent : USceneComponent
{
	#region Offsets
	private ExternalOffset<FSQVehicleSeatConfig>              _offSeatConfig                                                 = new ExternalOffset<FSQVehicleSeatConfig>(0x0218, false);     // 0x0218(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offAnimationSeatState                                         = new ExternalOffset<int>(0x0268);                             // 0x0268(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQVehicleSeat>                    _offSeatPawn                                                   = new ExternalOffset<ASQVehicleSeat>(0x0270, true);            // 0x0270(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQPlayerState>                    _offSeatedPlayer                                               = new ExternalOffset<ASQPlayerState>(0x0278, true);            // 0x0278(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQSoldier>                        _offSeatedSoldier                                              = new ExternalOffset<ASQSoldier>(0x0280, true);                // 0x0280(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FSQVehicleSeatConfig                               SeatConfig                                                     => _offSeatConfig.GetValue();
	public int                                                AnimationSeatState                                             => _offAnimationSeatState.GetValue();
	public ASQVehicleSeat                                     SeatPawn                                                       => _offSeatPawn.GetValue();
	public ASQPlayerState                                     SeatedPlayer                                                   => _offSeatedPlayer.GetValue();
	public ASQSoldier                                         SeatedSoldier                                                  => _offSeatedSoldier.GetValue();
	#endregion


}

// Class Squad.SQWeapon_Effects
// 0x019E (0x0880 - 0x06E2)
public class ASQWeapon_Effects : ASQWeapon
{
	#region Offsets
	private ExternalOffset<FSQWeaponSounds>                   _offWeaponSounds                                               = new ExternalOffset<FSQWeaponSounds>(0x06E8, false);          // 0x06E8(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQWeaponAnims>                    _offWeaponAnimations                                           = new ExternalOffset<FSQWeaponAnims>(0x0770, false);           // 0x0770(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQRecoilData>                     _offRecoilData                                                 = new ExternalOffset<FSQRecoilData>(0x07B8, false);            // 0x07B8(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQWeaponEffects>                  _offWeaponEffects                                              = new ExternalOffset<FSQWeaponEffects>(0x0800, false);         // 0x0800(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQWeaponSpring>                   _offWeaponSpringConfig                                         = new ExternalOffset<FSQWeaponSpring>(0x0838, false);          // 0x0838(0x0024) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offRecoilCurve                                                = new ExternalOffset<UCurveFloat>(0x0860, true);               // 0x0860(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offWeaponOffset                                               = new ExternalOffset<FVector>(0x0868, false);                  // 0x0868(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offSightsViewOffset                                           = new ExternalOffset<FVector>(0x0874, false);                  // 0x0874(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FSQWeaponSounds                                    WeaponSounds                                                   => _offWeaponSounds.GetValue();
	public FSQWeaponAnims                                     WeaponAnimations                                               => _offWeaponAnimations.GetValue();
	public FSQRecoilData                                      RecoilData                                                     => _offRecoilData.GetValue();
	public FSQWeaponEffects                                   WeaponEffects                                                  => _offWeaponEffects.GetValue();
	public FSQWeaponSpring                                    WeaponSpringConfig                                             => _offWeaponSpringConfig.GetValue();
	public UCurveFloat                                        RecoilCurve                                                    => _offRecoilCurve.GetValue();
	public FVector                                            WeaponOffset                                                   => _offWeaponOffset.GetValue();
	public FVector                                            SightsViewOffset                                               => _offSightsViewOffset.GetValue();
	#endregion


}

// Class Squad.SQVehicleWeapon
// 0x0135 (0x09B5 - 0x0880)
public class ASQVehicleWeapon : ASQWeapon_Effects
{
	#region Offsets
	private ExternalOffset<byte/*(bool)*/>                    _offbIsOverheated                                              = new ExternalOffset<byte/*(bool)*/>(0x0978);                  // 0x0978(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbInputEnabled                                              = new ExternalOffset<byte/*(bool)*/>(0x0979);                  // 0x0979(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQVehicleRecoil>>          _offRecoilFactor                                               = new ExternalOffset<TArray<FSQVehicleRecoil>>(0x0980, false); // 0x0980(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbReturnToPitchOriginOnReload                               = new ExternalOffset<byte/*(bool)*/>(0x0990);                  // 0x0990(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbReturnToYawOriginOnReload                                 = new ExternalOffset<byte/*(bool)*/>(0x0991);                  // 0x0991(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSecondsToReturnToOriginOnReload                            = new ExternalOffset<float>(0x0994);                           // 0x0994(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbReloadDirectlyFromFob                                     = new ExternalOffset<byte/*(bool)*/>(0x0998);                  // 0x0998(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbIgnoreCameraChange                                        = new ExternalOffset<byte/*(bool)*/>(0x099B);                  // 0x099B(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbEnableTrueFpCamera                                        = new ExternalOffset<byte/*(bool)*/>(0x099C);                  // 0x099C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbStartWithNoAmmo                                           = new ExternalOffset<byte/*(bool)*/>(0x09B4);                  // 0x09B4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public byte/*(bool)*/                                     bIsOverheated                                                  => _offbIsOverheated.GetValue();
	public byte/*(bool)*/                                     bInputEnabled                                                  => _offbInputEnabled.GetValue();
	public TArray<FSQVehicleRecoil>                           RecoilFactor                                                   => _offRecoilFactor.GetValue();
	public byte/*(bool)*/                                     bReturnToPitchOriginOnReload                                   => _offbReturnToPitchOriginOnReload.GetValue();
	public byte/*(bool)*/                                     bReturnToYawOriginOnReload                                     => _offbReturnToYawOriginOnReload.GetValue();
	public float                                              SecondsToReturnToOriginOnReload                                => _offSecondsToReturnToOriginOnReload.GetValue();
	public byte/*(bool)*/                                     bReloadDirectlyFromFob                                         => _offbReloadDirectlyFromFob.GetValue();
	public byte/*(bool)*/                                     bIgnoreCameraChange                                            => _offbIgnoreCameraChange.GetValue();
	public byte/*(bool)*/                                     bEnableTrueFpCamera                                            => _offbEnableTrueFpCamera.GetValue();
	public byte/*(bool)*/                                     bStartWithNoAmmo                                               => _offbStartWithNoAmmo.GetValue();
	#endregion


}

// Class Squad.SQVehicleSmokeGenerator
// 0x003B (0x09F0 - 0x09B5)
public class ASQVehicleSmokeGenerator : ASQVehicleWeapon
{
	#region Offsets
	private ExternalOffset<UAudioComponent>                   _offSmokeGeneratorSound                                        = new ExternalOffset<UAudioComponent>(0x09B8, true);           // 0x09B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQGroundVehicle>                  _offVehicleRef                                                 = new ExternalOffset<ASQGroundVehicle>(0x09C0, true);          // 0x09C0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<UParticleSystemComponent>>  _offSmokeGenerators                                            = new ExternalOffset<TArray<UParticleSystemComponent>>(0x09C8, false); // 0x09C8(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundBase>                        _offLoopingSmokeGenSound                                       = new ExternalOffset<USoundBase>(0x09D8, true);                // 0x09D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFadeInDuration                                             = new ExternalOffset<float>(0x09E0);                           // 0x09E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFadeoutDuration                                            = new ExternalOffset<float>(0x09E4);                           // 0x09E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundBase>                        _offEndUseSound                                                = new ExternalOffset<USoundBase>(0x09E8, true);                // 0x09E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public UAudioComponent                                    SmokeGeneratorSound                                            => _offSmokeGeneratorSound.GetValue();
	public ASQGroundVehicle                                   VehicleRef                                                     => _offVehicleRef.GetValue();
	public TArray<UParticleSystemComponent>                   SmokeGenerators                                                => _offSmokeGenerators.GetValue();
	public USoundBase                                         LoopingSmokeGenSound                                           => _offLoopingSmokeGenSound.GetValue();
	public float                                              FadeInDuration                                                 => _offFadeInDuration.GetValue();
	public float                                              FadeoutDuration                                                => _offFadeoutDuration.GetValue();
	public USoundBase                                         EndUseSound                                                    => _offEndUseSound.GetValue();
	#endregion


}

// Class Squad.SQVehicleSpawner
// 0x0038 (0x0270 - 0x0238)
public class ASQVehicleSpawner : AActor
{
	#region Offsets
	private ExternalOffset<ASQVehicle>                        _offTrackedVehicle                                             = new ExternalOffset<ASQVehicle>(0x0250, true);                // 0x0250(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offVehicleClass                                               = new ExternalOffset<UClass>(0x0258, true);                    // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offRespawnTimer                                               = new ExternalOffset<float>(0x0260);                           // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ESQTeam>                           _offTeam                                                       = new ExternalOffset<ESQTeam>(0x0264, false);                  // 0x0264(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offSpawnDelay                                                 = new ExternalOffset<float>(0x0268);                           // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offNextRespawnTime                                            = new ExternalOffset<int>(0x026C);                             // 0x026C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public ASQVehicle                                         TrackedVehicle                                                 => _offTrackedVehicle.GetValue();
	public UClass                                             VehicleClass                                                   => _offVehicleClass.GetValue();
	public float                                              RespawnTimer                                                   => _offRespawnTimer.GetValue();
	public ESQTeam                                            Team                                                           => _offTeam.GetValue();
	public float                                              SpawnDelay                                                     => _offSpawnDelay.GetValue();
	public int                                                NextRespawnTime                                                => _offNextRespawnTime.GetValue();
	#endregion


}

// Class Squad.SQVehicleTrack
// 0x0010 (0x0580 - 0x0570)
public class USQVehicleTrack : USQDriveTrainComponent
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQVehicleTurret
// 0x0008 (0x03D0 - 0x03C8)
public class ASQVehicleTurret : ASQVehicleSeat
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQVehicleTurretClosedTop
// 0x003C (0x040C - 0x03D0)
public class ASQVehicleTurretClosedTop : ASQVehicleTurret
{
	#region Offsets
	private ExternalOffset<USoundBase>                        _offStabilizationToggleSound                                   = new ExternalOffset<USoundBase>(0x03D0, true);                // 0x03D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offGunLineOfSightSeatIndex                                    = new ExternalOffset<int>(0x03D8);                             // 0x03D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UClass>                            _offTurretOverlay                                              = new ExternalOffset<UClass>(0x03E0, true);                    // 0x03E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<int>                               _offCurrentZoom                                                = new ExternalOffset<int>(0x03E8);                             // 0x03E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<TArray<float>>                     _offZoomLevels                                                 = new ExternalOffset<TArray<float>>(0x03F0, false);            // 0x03F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	private ExternalOffset<USoundBase>                        _offZoomToggleSound                                            = new ExternalOffset<USoundBase>(0x0400, true);                // 0x0400(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offZoomToggleSoundPitch                                       = new ExternalOffset<float>(0x0408);                           // 0x0408(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public USoundBase                                         StabilizationToggleSound                                       => _offStabilizationToggleSound.GetValue();
	public int                                                GunLineOfSightSeatIndex                                        => _offGunLineOfSightSeatIndex.GetValue();
	public UClass                                             TurretOverlay                                                  => _offTurretOverlay.GetValue();
	public int                                                CurrentZoom                                                    => _offCurrentZoom.GetValue();
	public TArray<float>                                      ZoomLevels                                                     => _offZoomLevels.GetValue();
	public USoundBase                                         ZoomToggleSound                                                => _offZoomToggleSound.GetValue();
	public float                                              ZoomToggleSoundPitch                                           => _offZoomToggleSoundPitch.GetValue();
	#endregion


}

// Class Squad.SQVehicleTurretOpenTop
// 0x0008 (0x03D8 - 0x03D0)
public class ASQVehicleTurretOpenTop : ASQVehicleTurret
{
	#region Offsets
	private ExternalOffset<USQRotatingMovementComponent>      _offYawMovementComponent                                       = new ExternalOffset<USQRotatingMovementComponent>(0x03C8, true); // 0x03C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<USQRotatingMovementComponent>      _offPitchMovementComponent                                     = new ExternalOffset<USQRotatingMovementComponent>(0x03D0, true); // 0x03D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public USQRotatingMovementComponent                       YawMovementComponent                                           => _offYawMovementComponent.GetValue();
	public USQRotatingMovementComponent                       PitchMovementComponent                                         => _offPitchMovementComponent.GetValue();
	#endregion


}

// Class Squad.SQVehicleWeaponAnimInstance
// 0x00F8 (0x0278 - 0x0180)
public class USQVehicleWeaponAnimInstance : UAnimInstance
{
	#region Offsets
	private ExternalOffset<float>                             _offYaw                                                        = new ExternalOffset<float>(0x026C);                           // 0x026C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCurrentMagRemainingRoundsTime                              = new ExternalOffset<float>(0x0270);                           // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCurrentMagRemainingRoundsMultiplier                        = new ExternalOffset<float>(0x0274);                           // 0x0274(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              Yaw                                                            => _offYaw.GetValue();
	public float                                              CurrentMagRemainingRoundsTime                                  => _offCurrentMagRemainingRoundsTime.GetValue();
	public float                                              CurrentMagRemainingRoundsMultiplier                            => _offCurrentMagRemainingRoundsMultiplier.GetValue();
	#endregion


}

// Class Squad.SQVehicleWeaponTOW
// 0x0053 (0x0A08 - 0x09B5)
public class ASQVehicleWeaponTOW : ASQVehicleWeapon
{
	#region Offsets
	private ExternalOffset<UClass>                            _offViewWidgetClass                                            = new ExternalOffset<UClass>(0x09C8, true);                    // 0x09C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UMaterial>                         _offReticlePPMatCPP                                            = new ExternalOffset<UMaterial>(0x09D0, true);                 // 0x09D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offMissileRotationSpeed                                       = new ExternalOffset<float>(0x09D8);                           // 0x09D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offAimStartOffset                                             = new ExternalOffset<float>(0x09DC);                           // 0x09DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offAimMaxDistance                                             = new ExternalOffset<float>(0x09E0);                           // 0x09E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offProjectileCorrectionDistance                               = new ExternalOffset<float>(0x09E4);                           // 0x09E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFOVMultiplier                                              = new ExternalOffset<float>(0x09E8);                           // 0x09E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offSceneFringeIntensityInZoom                                 = new ExternalOffset<float>(0x09EC);                           // 0x09EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offPPBlendWeight                                              = new ExternalOffset<float>(0x09F0);                           // 0x09F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<float>                             _offFireDelay                                                  = new ExternalOffset<float>(0x09F4);                           // 0x09F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<UCameraComponent>                  _offCameraComponent                                            = new ExternalOffset<UCameraComponent>(0x09F8, true);          // 0x09F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<ASQHUD>                            _offLastPlayerHud                                              = new ExternalOffset<ASQHUD>(0x0A00, true);                    // 0x0A00(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public UClass                                             ViewWidgetClass                                                => _offViewWidgetClass.GetValue();
	public UMaterial                                          ReticlePPMatCPP                                                => _offReticlePPMatCPP.GetValue();
	public float                                              MissileRotationSpeed                                           => _offMissileRotationSpeed.GetValue();
	public float                                              AimStartOffset                                                 => _offAimStartOffset.GetValue();
	public float                                              AimMaxDistance                                                 => _offAimMaxDistance.GetValue();
	public float                                              ProjectileCorrectionDistance                                   => _offProjectileCorrectionDistance.GetValue();
	public float                                              FOVMultiplier                                                  => _offFOVMultiplier.GetValue();
	public float                                              SceneFringeIntensityInZoom                                     => _offSceneFringeIntensityInZoom.GetValue();
	public float                                              PPBlendWeight                                                  => _offPPBlendWeight.GetValue();
	public float                                              FireDelay                                                      => _offFireDelay.GetValue();
	public UCameraComponent                                   CameraComponent                                                => _offCameraComponent.GetValue();
	public ASQHUD                                             LastPlayerHud                                                  => _offLastPlayerHud.GetValue();
	#endregion


}

// Class Squad.SQVehicleWheel
// 0x0010 (0x0580 - 0x0570)
public class USQVehicleWheel : USQDriveTrainComponent
{
	#region Offsets
	private ExternalOffset<FName>                             _offBoneName                                                   = new ExternalOffset<FName>(0x0578, false);                    // 0x0578(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public FName                                              BoneName                                                       => _offBoneName.GetValue();
	#endregion


}

// Class Squad.SQVehicleWheel_Front
// 0x000C (0x00F8 - 0x00EC)
public class USQVehicleWheel_Front : UVehicleWheel
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQVehicleWheel_Rear
// 0x0000 (0x00F8 - 0x00F8)
public class USQVehicleWheel_Rear : USQVehicleWheel_Front
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQVehicleWheel_Tracked
// 0x0018 (0x0104 - 0x00EC)
public class USQVehicleWheel_Tracked : UVehicleWheel
{
	#region Offsets
	private ExternalOffset<FVector>                           _offSuspensionDirection                                        = new ExternalOffset<FVector>(0x00F8, false);                  // 0x00F8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FVector                                            SuspensionDirection                                            => _offSuspensionDirection.GetValue();
	#endregion


}

// Class Squad.SQVelocityRotatingMovementComponent
// 0x0110 (0x02D0 - 0x01C0)
public class USQVelocityRotatingMovementComponent : USQMovementComponentPacked
{
	#region Offsets
	private ExternalOffset<float>                             _offAngularDeltaCombineThreshold                               = new ExternalOffset<float>(0x01E0);                           // 0x01E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USceneComponent>                   _offUpdatedComponent                                           = new ExternalOffset<USceneComponent>(0x01E8, true);           // 0x01E8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAccelerationMultiplier                                     = new ExternalOffset<float>(0x01F0);                           // 0x01F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offNoInputDecelerationMultiplier                              = new ExternalOffset<float>(0x01F4);                           // 0x01F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDecelerationMultiplier                                     = new ExternalOffset<float>(0x01F8);                           // 0x01F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbEnableStabilization                                       = new ExternalOffset<byte/*(bool)*/>(0x01FC);                  // 0x01FC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStabilizationSpeed                                         = new ExternalOffset<float>(0x0200);                           // 0x0200(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQRotationConstraints>            _offRotationConstraints                                        = new ExternalOffset<FSQRotationConstraints>(0x0204, false);   // 0x0204(0x001C) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offParentYawToMinPitch                                        = new ExternalOffset<UCurveFloat>(0x0220, true);               // 0x0220(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UCurveFloat>                       _offParentYawToMaxPitch                                        = new ExternalOffset<UCurveFloat>(0x0228, true);               // 0x0228(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USQVelocityRotatingMovementComponent> _offHeadingParentComponent                                     = new ExternalOffset<USQVelocityRotatingMovementComponent>(0x0230, true); // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQRotationVelocityRepMovement>    _offRotationReplicatedMovement                                 = new ExternalOffset<FSQRotationVelocityRepMovement>(0x0280, false); // 0x0280(0x0050) (Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              AngularDeltaCombineThreshold                                   => _offAngularDeltaCombineThreshold.GetValue();
	public USceneComponent                                    UpdatedComponent                                               => _offUpdatedComponent.GetValue();
	public float                                              AccelerationMultiplier                                         => _offAccelerationMultiplier.GetValue();
	public float                                              NoInputDecelerationMultiplier                                  => _offNoInputDecelerationMultiplier.GetValue();
	public float                                              DecelerationMultiplier                                         => _offDecelerationMultiplier.GetValue();
	public byte/*(bool)*/                                     bEnableStabilization                                           => _offbEnableStabilization.GetValue();
	public float                                              StabilizationSpeed                                             => _offStabilizationSpeed.GetValue();
	public FSQRotationConstraints                             RotationConstraints                                            => _offRotationConstraints.GetValue();
	public UCurveFloat                                        ParentYawToMinPitch                                            => _offParentYawToMinPitch.GetValue();
	public UCurveFloat                                        ParentYawToMaxPitch                                            => _offParentYawToMaxPitch.GetValue();
	public USQVelocityRotatingMovementComponent               HeadingParentComponent                                         => _offHeadingParentComponent.GetValue();
	public FSQRotationVelocityRepMovement                     RotationReplicatedMovement                                     => _offRotationReplicatedMovement.GetValue();
	#endregion


}

// Class Squad.SQWaterVolume
// 0x001B (0x02A8 - 0x028D)
public class ASQWaterVolume : APhysicsVolume
{
	#region Offsets
	private ExternalOffset<float>                             _offWaterForce                                                 = new ExternalOffset<float>(0x0290);                           // 0x0290(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<TWeakObjectPtr<ASQSoldier>>> _offSoldiersInVolume                                           = new ExternalOffset<TArray<TWeakObjectPtr<ASQSoldier>>>(0x0298, false); // 0x0298(0x0010) (ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	#endregion

	#region Props
	public float                                              WaterForce                                                     => _offWaterForce.GetValue();
	public TArray<TWeakObjectPtr<ASQSoldier>>                 SoldiersInVolume                                               => _offSoldiersInVolume.GetValue();
	#endregion


}

// Class Squad.ADSPostProcessSettings
// 0x0540 (0x0570 - 0x0030)
public class UADSPostProcessSettings : UDataAsset
{
	#region Offsets
	private ExternalOffset<UCurveFloat>                       _offBlendCurve                                                 = new ExternalOffset<UCurveFloat>(0x0030, true);               // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FPostProcessSettings>              _offPPSettings                                                 = new ExternalOffset<FPostProcessSettings>(0x0040, false);     // 0x0040(0x0530) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UCurveFloat                                        BlendCurve                                                     => _offBlendCurve.GetValue();
	public FPostProcessSettings                               PPSettings                                                     => _offPPSettings.GetValue();
	#endregion


}

// Class Squad.SQWeaponAnimInstance
// 0x001E (0x02B0 - 0x0292)
public class USQWeaponAnimInstance : USQItemAnimInstance
{
	#region Offsets
	private ExternalOffset<float>                             _offMagHasAmmoAlpha                                            = new ExternalOffset<float>(0x029C);                           // 0x029C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offNotMagHasAmmoAlpha                                         = new ExternalOffset<float>(0x02A0);                           // 0x02A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCurrentMagRemainingRoundsTime                              = new ExternalOffset<float>(0x02A4);                           // 0x02A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCurrentMagRemainingRoundsMultiplier                        = new ExternalOffset<float>(0x02A8);                           // 0x02A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAdjustAdsSightItemAnimPos                                  = new ExternalOffset<float>(0x02AC);                           // 0x02AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              MagHasAmmoAlpha                                                => _offMagHasAmmoAlpha.GetValue();
	public float                                              NotMagHasAmmoAlpha                                             => _offNotMagHasAmmoAlpha.GetValue();
	public float                                              CurrentMagRemainingRoundsTime                                  => _offCurrentMagRemainingRoundsTime.GetValue();
	public float                                              CurrentMagRemainingRoundsMultiplier                            => _offCurrentMagRemainingRoundsMultiplier.GetValue();
	public float                                              AdjustAdsSightItemAnimPos                                      => _offAdjustAdsSightItemAnimPos.GetValue();
	#endregion


}

// Class Squad.SQWeaponAttachment
// 0x0012 (0x04AA - 0x0498)
public class USQWeaponAttachment : UStaticMeshComponent
{
	#region Offsets
	private ExternalOffset<FName>                             _offSocketName                                                 = new ExternalOffset<FName>(0x0498, false);                    // 0x0498(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ASQWeapon>                         _offAttachedWeapon                                             = new ExternalOffset<ASQWeapon>(0x04A0, true);                 // 0x04A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowIn1P                                                  = new ExternalOffset<byte/*(bool)*/>(0x04A8);                  // 0x04A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowIn3P                                                  = new ExternalOffset<byte/*(bool)*/>(0x04A9);                  // 0x04A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public FName                                              SocketName                                                     => _offSocketName.GetValue();
	public ASQWeapon                                          AttachedWeapon                                                 => _offAttachedWeapon.GetValue();
	public byte/*(bool)*/                                     bShowIn1P                                                      => _offbShowIn1P.GetValue();
	public byte/*(bool)*/                                     bShowIn3P                                                      => _offbShowIn3P.GetValue();
	#endregion


}

// Class Squad.SQWeaponAttachment_Scope
// 0x00A6 (0x0550 - 0x04AA)
public class USQWeaponAttachment_Scope : USQWeaponAttachment
{
	#region Offsets
	private ExternalOffset<float>                             _offMeshTransitionPercentage                                   = new ExternalOffset<float>(0x04B0);                           // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UStaticMesh>                       _offADSMesh                                                    = new ExternalOffset<UStaticMesh>(0x04B8, true);               // 0x04B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FTransform>                        _offADSMeshTransform                                           = new ExternalOffset<FTransform>(0x04C0, false);               // 0x04C0(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<UStaticMesh>                       _offNonADSMesh                                                 = new ExternalOffset<UStaticMesh>(0x04F0, true);               // 0x04F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FTransform>                        _offNonADSMeshTransform                                        = new ExternalOffset<FTransform>(0x0500, false);               // 0x0500(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQMeshTransitionSettings>> _offInToADSMeshTransitionSettings                              = new ExternalOffset<TArray<FSQMeshTransitionSettings>>(0x0530, false); // 0x0530(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQMeshTransitionSettings>> _offOutFromADSMeshTransitionSettings                           = new ExternalOffset<TArray<FSQMeshTransitionSettings>>(0x0540, false); // 0x0540(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public float                                              MeshTransitionPercentage                                       => _offMeshTransitionPercentage.GetValue();
	public UStaticMesh                                        ADSMesh                                                        => _offADSMesh.GetValue();
	public FTransform                                         ADSMeshTransform                                               => _offADSMeshTransform.GetValue();
	public UStaticMesh                                        NonADSMesh                                                     => _offNonADSMesh.GetValue();
	public FTransform                                         NonADSMeshTransform                                            => _offNonADSMeshTransform.GetValue();
	public TArray<FSQMeshTransitionSettings>                  InToADSMeshTransitionSettings                                  => _offInToADSMeshTransitionSettings.GetValue();
	public TArray<FSQMeshTransitionSettings>                  OutFromADSMeshTransitionSettings                               => _offOutFromADSMeshTransitionSettings.GetValue();
	#endregion


}

// Class Squad.SQWeaponStaticInfo
// 0x0451 (0x0929 - 0x04D8)
public class USQWeaponStaticInfo : USQItemStaticInfo
{
	#region Offsets
	private ExternalOffset<UAnimMontage>                      _offReloadBipodWeaponMontage                                   = new ExternalOffset<UAnimMontage>(0x04D8, true);              // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offReloadBipod1pMontage                                       = new ExternalOffset<UAnimMontage>(0x04E0, true);              // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offReloadBipod3pMontage                                       = new ExternalOffset<UAnimMontage>(0x04E8, true);              // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offReloadDryWeaponMontage                                     = new ExternalOffset<UAnimMontage>(0x04F0, true);              // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offReloadDry1pMontage                                         = new ExternalOffset<UAnimMontage>(0x04F8, true);              // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offReloadDry3pMontage                                         = new ExternalOffset<UAnimMontage>(0x0500, true);              // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offReloadDryBipodWeaponMontage                                = new ExternalOffset<UAnimMontage>(0x0508, true);              // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offReloadDryBipod1pMontage                                    = new ExternalOffset<UAnimMontage>(0x0510, true);              // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offReloadDryBipod3pMontage                                    = new ExternalOffset<UAnimMontage>(0x0518, true);              // 0x0518(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<UAnimMontage>>              _offRandomFire1pMontage                                        = new ExternalOffset<TArray<UAnimMontage>>(0x0520, false);     // 0x0520(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFireAdd3pMontage                                           = new ExternalOffset<UAnimMontage>(0x0530, true);              // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFireTriggerWeaponMontage                                   = new ExternalOffset<UAnimMontage>(0x0538, true);              // 0x0538(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFireTrigger1pMontage                                       = new ExternalOffset<UAnimMontage>(0x0540, true);              // 0x0540(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFireTrigger3pMontage                                       = new ExternalOffset<UAnimMontage>(0x0548, true);              // 0x0548(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFireSway1pMontage                                          = new ExternalOffset<UAnimMontage>(0x0550, true);              // 0x0550(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFireSway1pBlendInMontage                                   = new ExternalOffset<UAnimMontage>(0x0558, true);              // 0x0558(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFireAds1pMontage                                           = new ExternalOffset<UAnimMontage>(0x0560, true);              // 0x0560(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFireAds3pMontage                                           = new ExternalOffset<UAnimMontage>(0x0568, true);              // 0x0568(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFireBipodWeaponMontage                                     = new ExternalOffset<UAnimMontage>(0x0570, true);              // 0x0570(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFireBipod1pMontage                                         = new ExternalOffset<UAnimMontage>(0x0578, true);              // 0x0578(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFireBipod3pMontage                                         = new ExternalOffset<UAnimMontage>(0x0580, true);              // 0x0580(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFireAddBipod1pMontage                                      = new ExternalOffset<UAnimMontage>(0x0588, true);              // 0x0588(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFireAddBipod3pMontage                                      = new ExternalOffset<UAnimMontage>(0x0590, true);              // 0x0590(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQMontageSectionNames>            _offBipodEndLoopSectionNames                                   = new ExternalOffset<FSQMontageSectionNames>(0x0598, false);   // 0x0598(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offBipodWeaponMontage                                         = new ExternalOffset<UAnimMontage>(0x05C0, true);              // 0x05C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offBipod1pMontage                                             = new ExternalOffset<UAnimMontage>(0x05C8, true);              // 0x05C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offBipod3pMontage                                             = new ExternalOffset<UAnimMontage>(0x05D0, true);              // 0x05D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFiremodeBipodMontage                                       = new ExternalOffset<UAnimMontage>(0x05D8, true);              // 0x05D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFiremodeBipodWeaponMontage                                 = new ExternalOffset<UAnimMontage>(0x05E0, true);              // 0x05E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFiremodeMontage                                            = new ExternalOffset<UAnimMontage>(0x05E8, true);              // 0x05E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFiremodeWeaponMontage                                      = new ExternalOffset<UAnimMontage>(0x05F0, true);              // 0x05F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offBobbingAimProneSway1pMontage                               = new ExternalOffset<UAnimMontage>(0x05F8, true);              // 0x05F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offBobbingAim1pMontage                                        = new ExternalOffset<UAnimMontage>(0x0600, true);              // 0x0600(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMuzzleFlashCullDistanceInMeters                            = new ExternalOffset<float>(0x0608);                           // 0x0608(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offMuzzleFlashEffectSocket                                    = new ExternalOffset<FName>(0x060C, false);                    // 0x060C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UParticleSystem>                   _offMuzzleFlashEffect1P                                        = new ExternalOffset<UParticleSystem>(0x0618, true);           // 0x0618(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UParticleSystem>                   _offMuzzleFlashEffect3P                                        = new ExternalOffset<UParticleSystem>(0x0620, true);           // 0x0620(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offShellEjectionCullDistanceInMeters                          = new ExternalOffset<float>(0x0628);                           // 0x0628(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offShellEjectionEffectSocket                                  = new ExternalOffset<FName>(0x062C, false);                    // 0x062C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UParticleSystem>                   _offShellEjectionEffect1p                                      = new ExternalOffset<UParticleSystem>(0x0638, true);           // 0x0638(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UParticleSystem>                   _offShellEjectionEffect3p                                      = new ExternalOffset<UParticleSystem>(0x0640, true);           // 0x0640(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilCameraOffsetFactor                                   = new ExternalOffset<float>(0x0648);                           // 0x0648(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilCameraOffsetInterpSpeed                              = new ExternalOffset<float>(0x064C);                           // 0x064C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilLofCameraOffsetLimit                                 = new ExternalOffset<float>(0x0650);                           // 0x0650(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilLofAttackInterpSpeed                                 = new ExternalOffset<float>(0x0654);                           // 0x0654(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilCanReleaseInterpSpeed                                = new ExternalOffset<float>(0x0658);                           // 0x0658(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilLofReleaseInterpSpeed                                = new ExternalOffset<float>(0x065C);                           // 0x065C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilWeaponRelLocFactor                                   = new ExternalOffset<float>(0x0660);                           // 0x0660(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilCameraShotInterpSpeed                                = new ExternalOffset<float>(0x0664);                           // 0x0664(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offRecoilAdsCameraShotInterpSpeed                             = new ExternalOffset<float>(0x0668);                           // 0x0668(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMoveRecoilFactorRelease                                    = new ExternalOffset<float>(0x066C);                           // 0x066C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAddMoveRecoil                                              = new ExternalOffset<float>(0x0670);                           // 0x0670(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxMoveRecoilFactor                                        = new ExternalOffset<float>(0x0674);                           // 0x0674(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinMoveRecoilFactor                                        = new ExternalOffset<float>(0x0678);                           // 0x0678(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLowStaminaRecoilFactor                                     = new ExternalOffset<float>(0x067C);                           // 0x067C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFullStaminaRecoilFactor                                    = new ExternalOffset<float>(0x0680);                           // 0x0680(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneAdsRecoilMean                                         = new ExternalOffset<FVector>(0x0684, false);                  // 0x0684(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneAdsRecoilSigma                                        = new ExternalOffset<FVector>(0x0690, false);                  // 0x0690(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneRecoilMean                                            = new ExternalOffset<FVector>(0x069C, false);                  // 0x069C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneRecoilSigma                                           = new ExternalOffset<FVector>(0x06A8, false);                  // 0x06A8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCrouchAdsRecoilMean                                        = new ExternalOffset<FVector>(0x06B4, false);                  // 0x06B4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCrouchAdsRecoilSigma                                       = new ExternalOffset<FVector>(0x06C0, false);                  // 0x06C0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCrouchRecoilMean                                           = new ExternalOffset<FVector>(0x06CC, false);                  // 0x06CC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offCrouchRecoilSigma                                          = new ExternalOffset<FVector>(0x06D8, false);                  // 0x06D8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offStandAdsRecoilMean                                         = new ExternalOffset<FVector>(0x06E4, false);                  // 0x06E4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offStandAdsRecoilSigma                                        = new ExternalOffset<FVector>(0x06F0, false);                  // 0x06F0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offStandRecoilMean                                            = new ExternalOffset<FVector>(0x06FC, false);                  // 0x06FC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offStandRecoilSigma                                           = new ExternalOffset<FVector>(0x0708, false);                  // 0x0708(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneTransitionRecoilMean                                  = new ExternalOffset<FVector>(0x0714, false);                  // 0x0714(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offProneTransitionRecoilSigma                                 = new ExternalOffset<FVector>(0x0720, false);                  // 0x0720(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offBipodAdsRecoilMean                                         = new ExternalOffset<FVector>(0x072C, false);                  // 0x072C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offBipodAdsRecoilSigma                                        = new ExternalOffset<FVector>(0x0738, false);                  // 0x0738(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offBipodRecoilMean                                            = new ExternalOffset<FVector>(0x0744, false);                  // 0x0744(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offBipodRecoilSigma                                           = new ExternalOffset<FVector>(0x0750, false);                  // 0x0750(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDeviationVisuFbInterpSpeed_YZ                              = new ExternalOffset<float>(0x075C);                           // 0x075C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDeviationVisuFbInterpSpeed_Final                           = new ExternalOffset<float>(0x0760);                           // 0x0760(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offDeviationVisuFbMax                                         = new ExternalOffset<float>(0x0764);                           // 0x0764(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinShotDeviationFactor                                     = new ExternalOffset<float>(0x0768);                           // 0x0768(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxShotDeviationFactor                                     = new ExternalOffset<float>(0x076C);                           // 0x076C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAddShotDeviationFactor                                     = new ExternalOffset<float>(0x0770);                           // 0x0770(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAddShotDeviationFactorAds                                  = new ExternalOffset<float>(0x0774);                           // 0x0774(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offShotDeviationFactorRelease                                 = new ExternalOffset<float>(0x0778);                           // 0x0778(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLowStaminaDeviationFactor                                  = new ExternalOffset<float>(0x077C);                           // 0x077C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFullStaminaDeviationFactor                                 = new ExternalOffset<float>(0x0780);                           // 0x0780(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMoveDeviationFactorRelease                                 = new ExternalOffset<float>(0x0784);                           // 0x0784(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAddMoveDeviation                                           = new ExternalOffset<float>(0x0788);                           // 0x0788(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxMoveDeviationFactor                                     = new ExternalOffset<float>(0x078C);                           // 0x078C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinMoveDeviationFactor                                     = new ExternalOffset<float>(0x0790);                           // 0x0790(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinBipodAdsDeviation                                       = new ExternalOffset<float>(0x0794);                           // 0x0794(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinBipodDeviation                                          = new ExternalOffset<float>(0x0798);                           // 0x0798(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinProneAdsDeviation                                       = new ExternalOffset<float>(0x079C);                           // 0x079C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinProneDeviation                                          = new ExternalOffset<float>(0x07A0);                           // 0x07A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinCrouchAdsDeviation                                      = new ExternalOffset<float>(0x07A4);                           // 0x07A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinCrouchDeviation                                         = new ExternalOffset<float>(0x07A8);                           // 0x07A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinStandAdsDeviation                                       = new ExternalOffset<float>(0x07AC);                           // 0x07AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinStandDeviation                                          = new ExternalOffset<float>(0x07B0);                           // 0x07B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinProneTransitionDeviation                                = new ExternalOffset<float>(0x07B4);                           // 0x07B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSwayInterpSpeed_YZ                                         = new ExternalOffset<float>(0x07B8);                           // 0x07B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSwayInterpSpeed_Final                                      = new ExternalOffset<float>(0x07BC);                           // 0x07BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHasSway                                                    = new ExternalOffset<float>(0x07C0);                           // 0x07C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMoveSwayFactorRelease                                      = new ExternalOffset<float>(0x07C4);                           // 0x07C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAddMoveSway                                                = new ExternalOffset<float>(0x07C8);                           // 0x07C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMinMoveSwayFactor                                          = new ExternalOffset<float>(0x07CC);                           // 0x07CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offMaxMoveSwayFactor                                          = new ExternalOffset<float>(0x07D0);                           // 0x07D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offLowStaminaSwayFactor                                       = new ExternalOffset<float>(0x07D4);                           // 0x07D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offFullStaminaSwayFactor                                      = new ExternalOffset<float>(0x07D8);                           // 0x07D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offHoldingBreathSwayFactor                                    = new ExternalOffset<float>(0x07DC);                           // 0x07DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offProneAdsSwayMin                                            = new ExternalOffset<float>(0x07E0);                           // 0x07E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offProneSwayMin                                               = new ExternalOffset<float>(0x07E4);                           // 0x07E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCrouchAdsSwayMin                                           = new ExternalOffset<float>(0x07E8);                           // 0x07E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offCrouchSwayMin                                              = new ExternalOffset<float>(0x07EC);                           // 0x07EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStandAdsSwayMin                                            = new ExternalOffset<float>(0x07F0);                           // 0x07F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offStandSwayMin                                               = new ExternalOffset<float>(0x07F4);                           // 0x07F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offProneTransitionSwayMin                                     = new ExternalOffset<float>(0x07F8);                           // 0x07F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbHasBipod                                                  = new ExternalOffset<byte/*(bool)*/>(0x07FC);                  // 0x07FC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBipodLength                                                = new ExternalOffset<float>(0x0800);                           // 0x0800(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offBipodHeightRaw                                             = new ExternalOffset<float>(0x0804);                           // 0x0804(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbHasAdjustableSight                                        = new ExternalOffset<byte/*(bool)*/>(0x0808);                  // 0x0808(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbLeanHeadWhenAds                                           = new ExternalOffset<byte/*(bool)*/>(0x0809);                  // 0x0809(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQAdjustableSightMontageSet>> _offAdsSightsAnim                                              = new ExternalOffset<TArray<FSQAdjustableSightMontageSet>>(0x0810, false); // 0x0810(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offBaseAds1pMontage                                           = new ExternalOffset<UAnimMontage>(0x0820, true);              // 0x0820(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offAdsTransition1pMontage                                     = new ExternalOffset<UAnimMontage>(0x0828, true);              // 0x0828(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimMontage>                      _offFromAdsTransition1pMontage                                 = new ExternalOffset<UAnimMontage>(0x0830, true);              // 0x0830(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UAnimSequence>                     _offAdjustableAdsSightItemAnim                                 = new ExternalOffset<UAnimSequence>(0x0838, true);             // 0x0838(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offAdjustableAdsSightItemFrameRate                            = new ExternalOffset<float>(0x0840);                           // 0x0840(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbHasAdsTransition                                          = new ExternalOffset<byte/*(bool)*/>(0x0844);                  // 0x0844(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offAim1pWeaponMeshPosition                                    = new ExternalOffset<FVector>(0x0848, false);                  // 0x0848(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector>                           _offAim1pWeaponMeshRescale                                     = new ExternalOffset<FVector>(0x0854, false);                  // 0x0854(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<float>                             _offSteady1pHipFireDuration                                    = new ExternalOffset<float>(0x0860);                           // 0x0860(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbPlaySoundOnMagEmpty                                       = new ExternalOffset<byte/*(bool)*/>(0x0864);                  // 0x0864(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offPlaySoundOnEmptyUse                                        = new ExternalOffset<int>(0x0868);                             // 0x0868(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offPlaySoundOnEmptyAltUse                                     = new ExternalOffset<int>(0x086C);                             // 0x086C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offToggleFiremodeSound1P                                      = new ExternalOffset<USoundCue>(0x0870, true);                 // 0x0870(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offToggleFiremodeSound3P                                      = new ExternalOffset<USoundCue>(0x0878, true);                 // 0x0878(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offFromAdsSound1p                                             = new ExternalOffset<USoundCue>(0x0880, true);                 // 0x0880(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offFromAdsSound3p                                             = new ExternalOffset<USoundCue>(0x0888, true);                 // 0x0888(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offToAdsSound1p                                               = new ExternalOffset<USoundCue>(0x0890, true);                 // 0x0890(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offToAdsSound3p                                               = new ExternalOffset<USoundCue>(0x0898, true);                 // 0x0898(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offSightSwitchingSound1p                                      = new ExternalOffset<USoundCue>(0x08A0, true);                 // 0x08A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offSightSwitchingSound3p                                      = new ExternalOffset<USoundCue>(0x08A8, true);                 // 0x08A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offMagEmptySound1p                                            = new ExternalOffset<USoundCue>(0x08B0, true);                 // 0x08B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offMagEmptySound3p                                            = new ExternalOffset<USoundCue>(0x08B8, true);                 // 0x08B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offEmptyUseSound1p                                            = new ExternalOffset<USoundCue>(0x08C0, true);                 // 0x08C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offEmptyUseSound3p                                            = new ExternalOffset<USoundCue>(0x08C8, true);                 // 0x08C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offEmptyAltUseSound1p                                         = new ExternalOffset<USoundCue>(0x08D0, true);                 // 0x08D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<USoundCue>                         _offEmptyAltUseSound3p                                         = new ExternalOffset<USoundCue>(0x08D8, true);                 // 0x08D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQMontageSectionNames>            _offBobbingAimEndLoopSectionNames                              = new ExternalOffset<FSQMontageSectionNames>(0x08E0, false);   // 0x08E0(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offDefaultZeroingText                                         = new ExternalOffset<FText>(0x0908, false);                    // 0x0908(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<FName>                             _offAimDirectionSocketName                                     = new ExternalOffset<FName>(0x0920, false);                    // 0x0920(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbShowZeroingInHud                                          = new ExternalOffset<byte/*(bool)*/>(0x0928);                  // 0x0928(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	#endregion

	#region Props
	public UAnimMontage                                       ReloadBipodWeaponMontage                                       => _offReloadBipodWeaponMontage.GetValue();
	public UAnimMontage                                       ReloadBipod1pMontage                                           => _offReloadBipod1pMontage.GetValue();
	public UAnimMontage                                       ReloadBipod3pMontage                                           => _offReloadBipod3pMontage.GetValue();
	public UAnimMontage                                       ReloadDryWeaponMontage                                         => _offReloadDryWeaponMontage.GetValue();
	public UAnimMontage                                       ReloadDry1pMontage                                             => _offReloadDry1pMontage.GetValue();
	public UAnimMontage                                       ReloadDry3pMontage                                             => _offReloadDry3pMontage.GetValue();
	public UAnimMontage                                       ReloadDryBipodWeaponMontage                                    => _offReloadDryBipodWeaponMontage.GetValue();
	public UAnimMontage                                       ReloadDryBipod1pMontage                                        => _offReloadDryBipod1pMontage.GetValue();
	public UAnimMontage                                       ReloadDryBipod3pMontage                                        => _offReloadDryBipod3pMontage.GetValue();
	public TArray<UAnimMontage>                               RandomFire1pMontage                                            => _offRandomFire1pMontage.GetValue();
	public UAnimMontage                                       FireAdd3pMontage                                               => _offFireAdd3pMontage.GetValue();
	public UAnimMontage                                       FireTriggerWeaponMontage                                       => _offFireTriggerWeaponMontage.GetValue();
	public UAnimMontage                                       FireTrigger1pMontage                                           => _offFireTrigger1pMontage.GetValue();
	public UAnimMontage                                       FireTrigger3pMontage                                           => _offFireTrigger3pMontage.GetValue();
	public UAnimMontage                                       FireSway1pMontage                                              => _offFireSway1pMontage.GetValue();
	public UAnimMontage                                       FireSway1pBlendInMontage                                       => _offFireSway1pBlendInMontage.GetValue();
	public UAnimMontage                                       FireAds1pMontage                                               => _offFireAds1pMontage.GetValue();
	public UAnimMontage                                       FireAds3pMontage                                               => _offFireAds3pMontage.GetValue();
	public UAnimMontage                                       FireBipodWeaponMontage                                         => _offFireBipodWeaponMontage.GetValue();
	public UAnimMontage                                       FireBipod1pMontage                                             => _offFireBipod1pMontage.GetValue();
	public UAnimMontage                                       FireBipod3pMontage                                             => _offFireBipod3pMontage.GetValue();
	public UAnimMontage                                       FireAddBipod1pMontage                                          => _offFireAddBipod1pMontage.GetValue();
	public UAnimMontage                                       FireAddBipod3pMontage                                          => _offFireAddBipod3pMontage.GetValue();
	public FSQMontageSectionNames                             BipodEndLoopSectionNames                                       => _offBipodEndLoopSectionNames.GetValue();
	public UAnimMontage                                       BipodWeaponMontage                                             => _offBipodWeaponMontage.GetValue();
	public UAnimMontage                                       Bipod1pMontage                                                 => _offBipod1pMontage.GetValue();
	public UAnimMontage                                       Bipod3pMontage                                                 => _offBipod3pMontage.GetValue();
	public UAnimMontage                                       FiremodeBipodMontage                                           => _offFiremodeBipodMontage.GetValue();
	public UAnimMontage                                       FiremodeBipodWeaponMontage                                     => _offFiremodeBipodWeaponMontage.GetValue();
	public UAnimMontage                                       FiremodeMontage                                                => _offFiremodeMontage.GetValue();
	public UAnimMontage                                       FiremodeWeaponMontage                                          => _offFiremodeWeaponMontage.GetValue();
	public UAnimMontage                                       BobbingAimProneSway1pMontage                                   => _offBobbingAimProneSway1pMontage.GetValue();
	public UAnimMontage                                       BobbingAim1pMontage                                            => _offBobbingAim1pMontage.GetValue();
	public float                                              MuzzleFlashCullDistanceInMeters                                => _offMuzzleFlashCullDistanceInMeters.GetValue();
	public FName                                              MuzzleFlashEffectSocket                                        => _offMuzzleFlashEffectSocket.GetValue();
	public UParticleSystem                                    MuzzleFlashEffect1P                                            => _offMuzzleFlashEffect1P.GetValue();
	public UParticleSystem                                    MuzzleFlashEffect3P                                            => _offMuzzleFlashEffect3P.GetValue();
	public float                                              ShellEjectionCullDistanceInMeters                              => _offShellEjectionCullDistanceInMeters.GetValue();
	public FName                                              ShellEjectionEffectSocket                                      => _offShellEjectionEffectSocket.GetValue();
	public UParticleSystem                                    ShellEjectionEffect1p                                          => _offShellEjectionEffect1p.GetValue();
	public UParticleSystem                                    ShellEjectionEffect3p                                          => _offShellEjectionEffect3p.GetValue();
	public float                                              RecoilCameraOffsetFactor                                       => _offRecoilCameraOffsetFactor.GetValue();
	public float                                              RecoilCameraOffsetInterpSpeed                                  => _offRecoilCameraOffsetInterpSpeed.GetValue();
	public float                                              RecoilLofCameraOffsetLimit                                     => _offRecoilLofCameraOffsetLimit.GetValue();
	public float                                              RecoilLofAttackInterpSpeed                                     => _offRecoilLofAttackInterpSpeed.GetValue();
	public float                                              RecoilCanReleaseInterpSpeed                                    => _offRecoilCanReleaseInterpSpeed.GetValue();
	public float                                              RecoilLofReleaseInterpSpeed                                    => _offRecoilLofReleaseInterpSpeed.GetValue();
	public float                                              RecoilWeaponRelLocFactor                                       => _offRecoilWeaponRelLocFactor.GetValue();
	public float                                              RecoilCameraShotInterpSpeed                                    => _offRecoilCameraShotInterpSpeed.GetValue();
	public float                                              RecoilAdsCameraShotInterpSpeed                                 => _offRecoilAdsCameraShotInterpSpeed.GetValue();
	public float                                              MoveRecoilFactorRelease                                        => _offMoveRecoilFactorRelease.GetValue();
	public float                                              AddMoveRecoil                                                  => _offAddMoveRecoil.GetValue();
	public float                                              MaxMoveRecoilFactor                                            => _offMaxMoveRecoilFactor.GetValue();
	public float                                              MinMoveRecoilFactor                                            => _offMinMoveRecoilFactor.GetValue();
	public float                                              LowStaminaRecoilFactor                                         => _offLowStaminaRecoilFactor.GetValue();
	public float                                              FullStaminaRecoilFactor                                        => _offFullStaminaRecoilFactor.GetValue();
	public FVector                                            ProneAdsRecoilMean                                             => _offProneAdsRecoilMean.GetValue();
	public FVector                                            ProneAdsRecoilSigma                                            => _offProneAdsRecoilSigma.GetValue();
	public FVector                                            ProneRecoilMean                                                => _offProneRecoilMean.GetValue();
	public FVector                                            ProneRecoilSigma                                               => _offProneRecoilSigma.GetValue();
	public FVector                                            CrouchAdsRecoilMean                                            => _offCrouchAdsRecoilMean.GetValue();
	public FVector                                            CrouchAdsRecoilSigma                                           => _offCrouchAdsRecoilSigma.GetValue();
	public FVector                                            CrouchRecoilMean                                               => _offCrouchRecoilMean.GetValue();
	public FVector                                            CrouchRecoilSigma                                              => _offCrouchRecoilSigma.GetValue();
	public FVector                                            StandAdsRecoilMean                                             => _offStandAdsRecoilMean.GetValue();
	public FVector                                            StandAdsRecoilSigma                                            => _offStandAdsRecoilSigma.GetValue();
	public FVector                                            StandRecoilMean                                                => _offStandRecoilMean.GetValue();
	public FVector                                            StandRecoilSigma                                               => _offStandRecoilSigma.GetValue();
	public FVector                                            ProneTransitionRecoilMean                                      => _offProneTransitionRecoilMean.GetValue();
	public FVector                                            ProneTransitionRecoilSigma                                     => _offProneTransitionRecoilSigma.GetValue();
	public FVector                                            BipodAdsRecoilMean                                             => _offBipodAdsRecoilMean.GetValue();
	public FVector                                            BipodAdsRecoilSigma                                            => _offBipodAdsRecoilSigma.GetValue();
	public FVector                                            BipodRecoilMean                                                => _offBipodRecoilMean.GetValue();
	public FVector                                            BipodRecoilSigma                                               => _offBipodRecoilSigma.GetValue();
	public float                                              DeviationVisuFbInterpSpeed_YZ                                  => _offDeviationVisuFbInterpSpeed_YZ.GetValue();
	public float                                              DeviationVisuFbInterpSpeed_Final                               => _offDeviationVisuFbInterpSpeed_Final.GetValue();
	public float                                              DeviationVisuFbMax                                             => _offDeviationVisuFbMax.GetValue();
	public float                                              MinShotDeviationFactor                                         => _offMinShotDeviationFactor.GetValue();
	public float                                              MaxShotDeviationFactor                                         => _offMaxShotDeviationFactor.GetValue();
	public float                                              AddShotDeviationFactor                                         => _offAddShotDeviationFactor.GetValue();
	public float                                              AddShotDeviationFactorAds                                      => _offAddShotDeviationFactorAds.GetValue();
	public float                                              ShotDeviationFactorRelease                                     => _offShotDeviationFactorRelease.GetValue();
	public float                                              LowStaminaDeviationFactor                                      => _offLowStaminaDeviationFactor.GetValue();
	public float                                              FullStaminaDeviationFactor                                     => _offFullStaminaDeviationFactor.GetValue();
	public float                                              MoveDeviationFactorRelease                                     => _offMoveDeviationFactorRelease.GetValue();
	public float                                              AddMoveDeviation                                               => _offAddMoveDeviation.GetValue();
	public float                                              MaxMoveDeviationFactor                                         => _offMaxMoveDeviationFactor.GetValue();
	public float                                              MinMoveDeviationFactor                                         => _offMinMoveDeviationFactor.GetValue();
	public float                                              MinBipodAdsDeviation                                           => _offMinBipodAdsDeviation.GetValue();
	public float                                              MinBipodDeviation                                              => _offMinBipodDeviation.GetValue();
	public float                                              MinProneAdsDeviation                                           => _offMinProneAdsDeviation.GetValue();
	public float                                              MinProneDeviation                                              => _offMinProneDeviation.GetValue();
	public float                                              MinCrouchAdsDeviation                                          => _offMinCrouchAdsDeviation.GetValue();
	public float                                              MinCrouchDeviation                                             => _offMinCrouchDeviation.GetValue();
	public float                                              MinStandAdsDeviation                                           => _offMinStandAdsDeviation.GetValue();
	public float                                              MinStandDeviation                                              => _offMinStandDeviation.GetValue();
	public float                                              MinProneTransitionDeviation                                    => _offMinProneTransitionDeviation.GetValue();
	public float                                              SwayInterpSpeed_YZ                                             => _offSwayInterpSpeed_YZ.GetValue();
	public float                                              SwayInterpSpeed_Final                                          => _offSwayInterpSpeed_Final.GetValue();
	public float                                              HasSway                                                        => _offHasSway.GetValue();
	public float                                              MoveSwayFactorRelease                                          => _offMoveSwayFactorRelease.GetValue();
	public float                                              AddMoveSway                                                    => _offAddMoveSway.GetValue();
	public float                                              MinMoveSwayFactor                                              => _offMinMoveSwayFactor.GetValue();
	public float                                              MaxMoveSwayFactor                                              => _offMaxMoveSwayFactor.GetValue();
	public float                                              LowStaminaSwayFactor                                           => _offLowStaminaSwayFactor.GetValue();
	public float                                              FullStaminaSwayFactor                                          => _offFullStaminaSwayFactor.GetValue();
	public float                                              HoldingBreathSwayFactor                                        => _offHoldingBreathSwayFactor.GetValue();
	public float                                              ProneAdsSwayMin                                                => _offProneAdsSwayMin.GetValue();
	public float                                              ProneSwayMin                                                   => _offProneSwayMin.GetValue();
	public float                                              CrouchAdsSwayMin                                               => _offCrouchAdsSwayMin.GetValue();
	public float                                              CrouchSwayMin                                                  => _offCrouchSwayMin.GetValue();
	public float                                              StandAdsSwayMin                                                => _offStandAdsSwayMin.GetValue();
	public float                                              StandSwayMin                                                   => _offStandSwayMin.GetValue();
	public float                                              ProneTransitionSwayMin                                         => _offProneTransitionSwayMin.GetValue();
	public byte/*(bool)*/                                     bHasBipod                                                      => _offbHasBipod.GetValue();
	public float                                              BipodLength                                                    => _offBipodLength.GetValue();
	public float                                              BipodHeightRaw                                                 => _offBipodHeightRaw.GetValue();
	public byte/*(bool)*/                                     bHasAdjustableSight                                            => _offbHasAdjustableSight.GetValue();
	public byte/*(bool)*/                                     bLeanHeadWhenAds                                               => _offbLeanHeadWhenAds.GetValue();
	public TArray<FSQAdjustableSightMontageSet>               AdsSightsAnim                                                  => _offAdsSightsAnim.GetValue();
	public UAnimMontage                                       BaseAds1pMontage                                               => _offBaseAds1pMontage.GetValue();
	public UAnimMontage                                       AdsTransition1pMontage                                         => _offAdsTransition1pMontage.GetValue();
	public UAnimMontage                                       FromAdsTransition1pMontage                                     => _offFromAdsTransition1pMontage.GetValue();
	public UAnimSequence                                      AdjustableAdsSightItemAnim                                     => _offAdjustableAdsSightItemAnim.GetValue();
	public float                                              AdjustableAdsSightItemFrameRate                                => _offAdjustableAdsSightItemFrameRate.GetValue();
	public byte/*(bool)*/                                     bHasAdsTransition                                              => _offbHasAdsTransition.GetValue();
	public FVector                                            Aim1pWeaponMeshPosition                                        => _offAim1pWeaponMeshPosition.GetValue();
	public FVector                                            Aim1pWeaponMeshRescale                                         => _offAim1pWeaponMeshRescale.GetValue();
	public float                                              Steady1pHipFireDuration                                        => _offSteady1pHipFireDuration.GetValue();
	public byte/*(bool)*/                                     bPlaySoundOnMagEmpty                                           => _offbPlaySoundOnMagEmpty.GetValue();
	public int                                                PlaySoundOnEmptyUse                                            => _offPlaySoundOnEmptyUse.GetValue();
	public int                                                PlaySoundOnEmptyAltUse                                         => _offPlaySoundOnEmptyAltUse.GetValue();
	public USoundCue                                          ToggleFiremodeSound1P                                          => _offToggleFiremodeSound1P.GetValue();
	public USoundCue                                          ToggleFiremodeSound3P                                          => _offToggleFiremodeSound3P.GetValue();
	public USoundCue                                          FromAdsSound1p                                                 => _offFromAdsSound1p.GetValue();
	public USoundCue                                          FromAdsSound3p                                                 => _offFromAdsSound3p.GetValue();
	public USoundCue                                          ToAdsSound1p                                                   => _offToAdsSound1p.GetValue();
	public USoundCue                                          ToAdsSound3p                                                   => _offToAdsSound3p.GetValue();
	public USoundCue                                          SightSwitchingSound1p                                          => _offSightSwitchingSound1p.GetValue();
	public USoundCue                                          SightSwitchingSound3p                                          => _offSightSwitchingSound3p.GetValue();
	public USoundCue                                          MagEmptySound1p                                                => _offMagEmptySound1p.GetValue();
	public USoundCue                                          MagEmptySound3p                                                => _offMagEmptySound3p.GetValue();
	public USoundCue                                          EmptyUseSound1p                                                => _offEmptyUseSound1p.GetValue();
	public USoundCue                                          EmptyUseSound3p                                                => _offEmptyUseSound3p.GetValue();
	public USoundCue                                          EmptyAltUseSound1p                                             => _offEmptyAltUseSound1p.GetValue();
	public USoundCue                                          EmptyAltUseSound3p                                             => _offEmptyAltUseSound3p.GetValue();
	public FSQMontageSectionNames                             BobbingAimEndLoopSectionNames                                  => _offBobbingAimEndLoopSectionNames.GetValue();
	public FText                                              DefaultZeroingText                                             => _offDefaultZeroingText.GetValue();
	public FName                                              AimDirectionSocketName                                         => _offAimDirectionSocketName.GetValue();
	public byte/*(bool)*/                                     bShowZeroingInHud                                              => _offbShowZeroingInHud.GetValue();
	#endregion


}

// Class Squad.SQWheeledVehicle
// 0x0008 (0x0A20 - 0x0A18)
public class ASQWheeledVehicle : ASQWheeledVehicleBase
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQWheeledVehicleMovementComponent
// 0x0000 (0x0460 - 0x0460)
public class USQWheeledVehicleMovementComponent : UWheeledVehicleMovementComponent4W
{
	#region Offsets
	#endregion

	#region Props
	#endregion


}

// Class Squad.SQWorldSettings
// 0x062B (0x09F3 - 0x03C8)
public class ASQWorldSettings : AWorldSettings
{
	#region Offsets
	private ExternalOffset<UClass>                            _offTeamOneInfoClass                                           = new ExternalOffset<UClass>(0x03C8, true);                    // 0x03C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQTeamType>                       _offTeamOneType                                                = new ExternalOffset<ESQTeamType>(0x03D0, false);              // 0x03D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UClass>                            _offTeamTwoInfoClass                                           = new ExternalOffset<UClass>(0x03D8, true);                    // 0x03D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<ESQTeamType>                       _offTeamTwoType                                                = new ExternalOffset<ESQTeamType>(0x03E0, false);              // 0x03E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamOneTickets                                             = new ExternalOffset<int>(0x03E4);                             // 0x03E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offTeamTwoTickets                                             = new ExternalOffset<int>(0x03E8);                             // 0x03E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offEditorStartTeamOverride                                    = new ExternalOffset<int>(0x03EC);                             // 0x03EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FVector2D>                         _offMapGridSpacing                                             = new ExternalOffset<FVector2D>(0x03F0, false);                // 0x03F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<AActor>                            _offMapTextureCornerZero                                       = new ExternalOffset<AActor>(0x03F8, true);                    // 0x03F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<AActor>                            _offMapTextureCornerOne                                        = new ExternalOffset<AActor>(0x0400, true);                    // 0x0400(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FSQMinimapMakerSettings>           _offMinimapMakerSettings                                       = new ExternalOffset<FSQMinimapMakerSettings>(0x0410, false);  // 0x0410(0x0550) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	private ExternalOffset<AActor>                            _offMapCameraLocation                                          = new ExternalOffset<AActor>(0x09B0, true);                    // 0x09B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offEditorRaasSeedOverride                                     = new ExternalOffset<int>(0x09B8);                             // 0x09B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<UClass>>                    _offMapRulesets                                                = new ExternalOffset<TArray<UClass>>(0x09C0, false);           // 0x09C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbForceDisableEditorDirectSpawning                          = new ExternalOffset<byte/*(bool)*/>(0x09D0);                  // 0x09D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbCanDriverSwitchTo3rdPerson                                = new ExternalOffset<byte/*(bool)*/>(0x09D1);                  // 0x09D1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbUseFogOfWar                                               = new ExternalOffset<byte/*(bool)*/>(0x09D2);                  // 0x09D2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQRoleLimitOverride>>      _offTeamOneRoleLimitOverrides                                  = new ExternalOffset<TArray<FSQRoleLimitOverride>>(0x09D8, false); // 0x09D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<TArray<FSQRoleLimitOverride>>      _offTeamTwoRoleLimitOverrides                                  = new ExternalOffset<TArray<FSQRoleLimitOverride>>(0x09E8, false); // 0x09E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	private ExternalOffset<FText>                             _offDisplayTitle                                               = new ExternalOffset<FText>(0x09F8, false);                    // 0x09F8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbForcePlayerNotAdminInEditor                               = new ExternalOffset<byte/*(bool)*/>(0x0A10);                  // 0x0A10(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbForcePlayerNotDevInEditor                                 = new ExternalOffset<byte/*(bool)*/>(0x0A11);                  // 0x0A11(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbForcePlayerNotQAInEditor                                  = new ExternalOffset<byte/*(bool)*/>(0x0A12);                  // 0x0A12(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<byte/*(bool)*/>                    _offbForcePlayerNotMemberInEditor                              = new ExternalOffset<byte/*(bool)*/>(0x0A13);                  // 0x0A13(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<FScriptMulticastDelegate>          _offOnMapTextureChange                                         = new ExternalOffset<FScriptMulticastDelegate>(0x0A18, false); // 0x0A18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offSeaLevel                                                   = new ExternalOffset<int>(0x0A28);                             // 0x0A28(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<int>                               _offHelicoptersAltitudeThreshold                               = new ExternalOffset<int>(0x0A2C);                             // 0x0A2C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	private ExternalOffset<UTexture>                          _offMapTexture                                                 = new ExternalOffset<UTexture>(0x0A30, true);                  // 0x0A30(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	private ExternalOffset<byte/*(bool)*/>                    _offbDeployablePlacementAlwaysValid                            = new ExternalOffset<byte/*(bool)*/>(0x0A38);                  // 0x0A38(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbForceNoKitLimits                                          = new ExternalOffset<byte/*(bool)*/>(0x0A39);                  // 0x0A39(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbForceNoTeamChangeTimer                                    = new ExternalOffset<byte/*(bool)*/>(0x0A3A);                  // 0x0A3A(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbForceNoRespawnTime                                        = new ExternalOffset<byte/*(bool)*/>(0x0A3B);                  // 0x0A3B(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbForceNoCommanderCooldowns                                 = new ExternalOffset<byte/*(bool)*/>(0x0A3C);                  // 0x0A3C(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbForceOutOfBoundsKillDisabled                              = new ExternalOffset<byte/*(bool)*/>(0x0A3D);                  // 0x0A3D(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbForceVehicleClaimingDisabled                              = new ExternalOffset<byte/*(bool)*/>(0x0A3E);                  // 0x0A3E(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbVehicleTeamRequirementDisabled                            = new ExternalOffset<byte/*(bool)*/>(0x0A3F);                  // 0x0A3F(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbVehicleKitRequirementDisabled                             = new ExternalOffset<byte/*(bool)*/>(0x0A40);                  // 0x0A40(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbCommanderDisabled                                         = new ExternalOffset<byte/*(bool)*/>(0x0A41);                  // 0x0A41(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	private ExternalOffset<byte/*(bool)*/>                    _offbForceAllowCommanderActions                                = new ExternalOffset<byte/*(bool)*/>(0x0A42);                  // 0x0A42(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	#endregion

	#region Props
	public UClass                                             TeamOneInfoClass                                               => _offTeamOneInfoClass.GetValue();
	public ESQTeamType                                        TeamOneType                                                    => _offTeamOneType.GetValue();
	public UClass                                             TeamTwoInfoClass                                               => _offTeamTwoInfoClass.GetValue();
	public ESQTeamType                                        TeamTwoType                                                    => _offTeamTwoType.GetValue();
	public int                                                TeamOneTickets                                                 => _offTeamOneTickets.GetValue();
	public int                                                TeamTwoTickets                                                 => _offTeamTwoTickets.GetValue();
	public int                                                EditorStartTeamOverride                                        => _offEditorStartTeamOverride.GetValue();
	public FVector2D                                          MapGridSpacing                                                 => _offMapGridSpacing.GetValue();
	public AActor                                             MapTextureCornerZero                                           => _offMapTextureCornerZero.GetValue();
	public AActor                                             MapTextureCornerOne                                            => _offMapTextureCornerOne.GetValue();
	public FSQMinimapMakerSettings                            MinimapMakerSettings                                           => _offMinimapMakerSettings.GetValue();
	public AActor                                             MapCameraLocation                                              => _offMapCameraLocation.GetValue();
	public int                                                EditorRaasSeedOverride                                         => _offEditorRaasSeedOverride.GetValue();
	public TArray<UClass>                                     MapRulesets                                                    => _offMapRulesets.GetValue();
	public byte/*(bool)*/                                     bForceDisableEditorDirectSpawning                              => _offbForceDisableEditorDirectSpawning.GetValue();
	public byte/*(bool)*/                                     bCanDriverSwitchTo3rdPerson                                    => _offbCanDriverSwitchTo3rdPerson.GetValue();
	public byte/*(bool)*/                                     bUseFogOfWar                                                   => _offbUseFogOfWar.GetValue();
	public TArray<FSQRoleLimitOverride>                       TeamOneRoleLimitOverrides                                      => _offTeamOneRoleLimitOverrides.GetValue();
	public TArray<FSQRoleLimitOverride>                       TeamTwoRoleLimitOverrides                                      => _offTeamTwoRoleLimitOverrides.GetValue();
	public FText                                              DisplayTitle                                                   => _offDisplayTitle.GetValue();
	public byte/*(bool)*/                                     bForcePlayerNotAdminInEditor                                   => _offbForcePlayerNotAdminInEditor.GetValue();
	public byte/*(bool)*/                                     bForcePlayerNotDevInEditor                                     => _offbForcePlayerNotDevInEditor.GetValue();
	public byte/*(bool)*/                                     bForcePlayerNotQAInEditor                                      => _offbForcePlayerNotQAInEditor.GetValue();
	public byte/*(bool)*/                                     bForcePlayerNotMemberInEditor                                  => _offbForcePlayerNotMemberInEditor.GetValue();
	public FScriptMulticastDelegate                           OnMapTextureChange                                             => _offOnMapTextureChange.GetValue();
	public int                                                SeaLevel                                                       => _offSeaLevel.GetValue();
	public int                                                HelicoptersAltitudeThreshold                                   => _offHelicoptersAltitudeThreshold.GetValue();
	public UTexture                                           MapTexture                                                     => _offMapTexture.GetValue();
	public byte/*(bool)*/                                     bDeployablePlacementAlwaysValid                                => _offbDeployablePlacementAlwaysValid.GetValue();
	public byte/*(bool)*/                                     bForceNoKitLimits                                              => _offbForceNoKitLimits.GetValue();
	public byte/*(bool)*/                                     bForceNoTeamChangeTimer                                        => _offbForceNoTeamChangeTimer.GetValue();
	public byte/*(bool)*/                                     bForceNoRespawnTime                                            => _offbForceNoRespawnTime.GetValue();
	public byte/*(bool)*/                                     bForceNoCommanderCooldowns                                     => _offbForceNoCommanderCooldowns.GetValue();
	public byte/*(bool)*/                                     bForceOutOfBoundsKillDisabled                                  => _offbForceOutOfBoundsKillDisabled.GetValue();
	public byte/*(bool)*/                                     bForceVehicleClaimingDisabled                                  => _offbForceVehicleClaimingDisabled.GetValue();
	public byte/*(bool)*/                                     bVehicleTeamRequirementDisabled                                => _offbVehicleTeamRequirementDisabled.GetValue();
	public byte/*(bool)*/                                     bVehicleKitRequirementDisabled                                 => _offbVehicleKitRequirementDisabled.GetValue();
	public byte/*(bool)*/                                     bCommanderDisabled                                             => _offbCommanderDisabled.GetValue();
	public byte/*(bool)*/                                     bForceAllowCommanderActions                                    => _offbForceAllowCommanderActions.GetValue();
	#endregion


}


}