// Name: Sq, Version: b21

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace UFT
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// BlueprintGeneratedClass BP_Generic_Helicopter.BP_Generic_Helicopter_C
// 0x0440 (0x0CB8 - 0x0878)
public class ABP_Generic_Helicopter_C : ASQHelicopter2
{
	#region Offsets
	private ExternalOffset<FPointerToUberGraphFrame>          _offUberGraphFrame                                             = new ExternalOffset<FPointerToUberGraphFrame>(0x0880, false); // 0x0880(0x0008) (ZeroConstructor, Transient, DuplicateTransient)
	private ExternalOffset<UDecalComponent>                   _offWarning_Decal_04                                           = new ExternalOffset<UDecalComponent>(0x0888, true);           // 0x0888(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UDecalComponent>                   _offWarning_Decal_03                                           = new ExternalOffset<UDecalComponent>(0x0890, true);           // 0x0890(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UDecalComponent>                   _offWarning_Decal_02                                           = new ExternalOffset<UDecalComponent>(0x0898, true);           // 0x0898(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UDecalComponent>                   _offWarning_Decal_01                                           = new ExternalOffset<UDecalComponent>(0x08A0, true);           // 0x08A0(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UAudioComponent>                   _offWarningAudio                                               = new ExternalOffset<UAudioComponent>(0x08A8, true);           // 0x08A8(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UPointLightComponent>              _offPointLight3                                                = new ExternalOffset<UPointLightComponent>(0x08B0, true);      // 0x08B0(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UPointLightComponent>              _offPointLight2                                                = new ExternalOffset<UPointLightComponent>(0x08B8, true);      // 0x08B8(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UPointLightComponent>              _offPointLight1                                                = new ExternalOffset<UPointLightComponent>(0x08C0, true);      // 0x08C0(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UPointLightComponent>              _offPointLight                                                 = new ExternalOffset<UPointLightComponent>(0x08C8, true);      // 0x08C8(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<USceneComponent>                   _offWarning_Parent                                             = new ExternalOffset<USceneComponent>(0x08D0, true);           // 0x08D0(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UStaticMeshComponent>              _offLandingMarker                                              = new ExternalOffset<UStaticMeshComponent>(0x08D8, true);      // 0x08D8(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UCameraComponent>                  _offLandingCamera                                              = new ExternalOffset<UCameraComponent>(0x08E0, true);          // 0x08E0(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<USQVehicleBurningComponent>        _offVehicleBurning                                             = new ExternalOffset<USQVehicleBurningComponent>(0x08E8, true); // 0x08E8(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UBPComponent_RadialModel_C>        _offBPComponent_RadialModel                                    = new ExternalOffset<UBPComponent_RadialModel_C>(0x08F0, true); // 0x08F0(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UParticleSystemComponent>          _offGroundEffect                                               = new ExternalOffset<UParticleSystemComponent>(0x08F8, true);  // 0x08F8(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UStaticMeshComponent>              _offCollisionMesh                                              = new ExternalOffset<UStaticMeshComponent>(0x0900, true);      // 0x0900(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<USQVehicleExitPointComponent>      _offSQVehicleExitPoint1                                        = new ExternalOffset<USQVehicleExitPointComponent>(0x0908, true); // 0x0908(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<USQVehicleExitPointComponent>      _offSQVehicleExitPoint                                         = new ExternalOffset<USQVehicleExitPointComponent>(0x0910, true); // 0x0910(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UCameraComponent>                  _offPilotCamera                                                = new ExternalOffset<UCameraComponent>(0x0918, true);          // 0x0918(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<USpringArmComponent>               _offPilotSpringArm                                             = new ExternalOffset<USpringArmComponent>(0x0920, true);       // 0x0920(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UArrowComponent>                   _offLandingArrowStabilizer                                     = new ExternalOffset<UArrowComponent>(0x0928, true);           // 0x0928(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UArrowComponent>                   _offLandingArrowBottomRight                                    = new ExternalOffset<UArrowComponent>(0x0930, true);           // 0x0930(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UArrowComponent>                   _offLandingArrowTopRight                                       = new ExternalOffset<UArrowComponent>(0x0938, true);           // 0x0938(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UArrowComponent>                   _offLandingArrowBottomLeft                                     = new ExternalOffset<UArrowComponent>(0x0940, true);           // 0x0940(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UArrowComponent>                   _offLandingArrowTopLeft                                        = new ExternalOffset<UArrowComponent>(0x0948, true);           // 0x0948(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<TEnumAsByte<ETimelineDirection>>   _offWarning_Light_Animation__Direction_BED4FDDF4B03AF41E9D22382105F3A83 = new ExternalOffset<TEnumAsByte<ETimelineDirection>>(0x0950, false); // 0x0950(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UTimelineComponent>                _offWarning_Light_Animation                                    = new ExternalOffset<UTimelineComponent>(0x0958, true);        // 0x0958(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offTimeline_2_Default_Power_079618E342F7064103BFCC9F05CBEF12  = new ExternalOffset<float>(0x0960);                           // 0x0960(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<TEnumAsByte<ETimelineDirection>>   _offTimeline_2__Direction_079618E342F7064103BFCC9F05CBEF12     = new ExternalOffset<TEnumAsByte<ETimelineDirection>>(0x0964, false); // 0x0964(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UTimelineComponent>                _offTimeline_3                                                 = new ExternalOffset<UTimelineComponent>(0x0968, true);        // 0x0968(0x0008) (BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<byte/*(bool)*/>                    _offPhysics_IsLanded_                                          = new ExternalOffset<byte/*(bool)*/>(0x0970);                  // 0x0970(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	private ExternalOffset<float>                             _offPhysics_DefaultThrust                                      = new ExternalOffset<float>(0x0974);                           // 0x0974(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<byte/*(bool)*/>                    _offPhysics_IsReadyToLand_                                     = new ExternalOffset<byte/*(bool)*/>(0x0978);                  // 0x0978(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<float>                             _offPhysics_StrafePassiveInterp                                = new ExternalOffset<float>(0x097C);                           // 0x097C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPhysics_BaseDeltaSpeed                                     = new ExternalOffset<float>(0x0980);                           // 0x0980(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPhysics_AntiThrustPower                                    = new ExternalOffset<float>(0x0984);                           // 0x0984(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPhysics_AddVelocityFromRotation                            = new ExternalOffset<float>(0x0988);                           // 0x0988(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPhysics_StrafeOnRollInterp                                 = new ExternalOffset<float>(0x098C);                           // 0x098C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPhysics_ThrustPower                                        = new ExternalOffset<float>(0x0990);                           // 0x0990(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPhysics_PitchSpeedMultiplier                               = new ExternalOffset<float>(0x0994);                           // 0x0994(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPhysics_BaseMaxFlySpeed                                    = new ExternalOffset<float>(0x0998);                           // 0x0998(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPhysics_ReservedAcceleration                               = new ExternalOffset<float>(0x099C);                           // 0x099C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPhysics_AccelerationByPitchCutoff                          = new ExternalOffset<float>(0x09A0);                           // 0x09A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPhysics_MaxFlySpeed                                        = new ExternalOffset<float>(0x09A4);                           // 0x09A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPhysics_CollisionMinSpeed                                  = new ExternalOffset<float>(0x09A8);                           // 0x09A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPhysics_MaxDeltaSpeed                                      = new ExternalOffset<float>(0x09AC);                           // 0x09AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offRotorAccelerationScale                                     = new ExternalOffset<float>(0x09B0);                           // 0x09B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offGame_DeltaSeconds                                          = new ExternalOffset<float>(0x09B4);                           // 0x09B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<AController>                       _offController_ServerController                                = new ExternalOffset<AController>(0x09B8, true);               // 0x09B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<byte/*(bool)*/>                    _offController_IsPossessed_                                    = new ExternalOffset<byte/*(bool)*/>(0x09C0);                  // 0x09C0(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<APlayerController>                 _offController_PlayerController                                = new ExternalOffset<APlayerController>(0x09C8, true);         // 0x09C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<FRotator>                          _offController_CurrentRotation                                 = new ExternalOffset<FRotator>(0x09D0, false);                 // 0x09D0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<FRotator>                          _offController_PreviousRotation                                = new ExternalOffset<FRotator>(0x09DC, false);                 // 0x09DC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<byte/*(bool)*/>                    _offGame_BegunPlay_                                            = new ExternalOffset<byte/*(bool)*/>(0x09E8);                  // 0x09E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<float>                             _offLandingDistance                                            = new ExternalOffset<float>(0x09EC);                           // 0x09EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offMaxVelocityToLand                                          = new ExternalOffset<float>(0x09F0);                           // 0x09F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<byte/*(bool)*/>                    _offCollision_GotCollisionHit_                                 = new ExternalOffset<byte/*(bool)*/>(0x09F4);                  // 0x09F4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<float>                             _offStrafePassive                                              = new ExternalOffset<float>(0x09F8);                           // 0x09F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offTwitchiness                                                = new ExternalOffset<float>(0x09FC);                           // 0x09FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offStrafeOnRoll                                               = new ExternalOffset<float>(0x0A00);                           // 0x0A00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offStrafeOnRollSpeed                                          = new ExternalOffset<float>(0x0A04);                           // 0x0A04(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offRotorLiftMin                                               = new ExternalOffset<float>(0x0A08);                           // 0x0A08(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offRotorLiftMax                                               = new ExternalOffset<float>(0x0A0C);                           // 0x0A0C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offGravity                                                    = new ExternalOffset<float>(0x0A10);                           // 0x0A10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offAirFriction                                                = new ExternalOffset<float>(0x0A14);                           // 0x0A14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offFriction                                                   = new ExternalOffset<float>(0x0A18);                           // 0x0A18(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UCurveFloat>                       _offFrictionByPitch                                            = new ExternalOffset<UCurveFloat>(0x0A20, true);               // 0x0A20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UCurveFloat>                       _offBrakeByPitch                                               = new ExternalOffset<UCurveFloat>(0x0A28, true);               // 0x0A28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UCurveVector>                      _offAccelerationInterpolationSpeed                             = new ExternalOffset<UCurveVector>(0x0A30, true);              // 0x0A30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UCurveVector>                      _offUpDirectionByPitch                                         = new ExternalOffset<UCurveVector>(0x0A38, true);              // 0x0A38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UCurveFloat>                       _offForwardDirectionByPitch                                    = new ExternalOffset<UCurveFloat>(0x0A40, true);               // 0x0A40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UCurveFloat>                       _offRightDirectionByRoll                                       = new ExternalOffset<UCurveFloat>(0x0A48, true);               // 0x0A48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UCurveVector>                      _offTurnByRollOnSpeed                                          = new ExternalOffset<UCurveVector>(0x0A50, true);              // 0x0A50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offMaximumSpeed                                               = new ExternalOffset<float>(0x0A58);                           // 0x0A58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offAverageSpeedPercent                                        = new ExternalOffset<float>(0x0A5C);                           // 0x0A5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offRotorStrength                                              = new ExternalOffset<float>(0x0A60);                           // 0x0A60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offRotorStrengthMultiplier                                    = new ExternalOffset<float>(0x0A64);                           // 0x0A64(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offCollisionMinSpeed                                          = new ExternalOffset<float>(0x0A68);                           // 0x0A68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offFrictionMultiplier                                         = new ExternalOffset<float>(0x0A6C);                           // 0x0A6C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<byte/*(bool)*/>                    _offDebug_IsDebugging_                                         = new ExternalOffset<byte/*(bool)*/>(0x0A70);                  // 0x0A70(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<float>                             _offYawInputInterpt                                            = new ExternalOffset<float>(0x0A74);                           // 0x0A74(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offYawResistenceFromPitchStart                                = new ExternalOffset<float>(0x0A78);                           // 0x0A78(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offYawResistenceFromPitchMax                                  = new ExternalOffset<float>(0x0A7C);                           // 0x0A7C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offYawResistenceFromVelocityMinSpeed                          = new ExternalOffset<float>(0x0A80);                           // 0x0A80(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offYawResistenceFromVelocityInputMul                          = new ExternalOffset<float>(0x0A84);                           // 0x0A84(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offBrakeByYawMinSpeed                                         = new ExternalOffset<float>(0x0A88);                           // 0x0A88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offBrakeByYawSpeedCutOff                                      = new ExternalOffset<float>(0x0A8C);                           // 0x0A8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<byte/*(bool)*/>                    _offIsBrakeByYawInputSmooth_                                   = new ExternalOffset<byte/*(bool)*/>(0x0A90);                  // 0x0A90(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	private ExternalOffset<float>                             _offRollDumpSpeed                                              = new ExternalOffset<float>(0x0A94);                           // 0x0A94(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offRollDumpFactor                                             = new ExternalOffset<float>(0x0A98);                           // 0x0A98(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offRollPushTime                                               = new ExternalOffset<float>(0x0A9C);                           // 0x0A9C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<byte/*(bool)*/>                    _offIsRollStabilizationEnabled_                                = new ExternalOffset<byte/*(bool)*/>(0x0AA0);                  // 0x0AA0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	private ExternalOffset<UCurveFloat>                       _offRollStabilization                                          = new ExternalOffset<UCurveFloat>(0x0AA8, true);               // 0x0AA8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<byte/*(bool)*/>                    _offIsPitchStabilizationEnabled_                               = new ExternalOffset<byte/*(bool)*/>(0x0AB0);                  // 0x0AB0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	private ExternalOffset<float>                             _offInput_Pitch                                                = new ExternalOffset<float>(0x0AB4);                           // 0x0AB4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_PitchSensitivityScale                                = new ExternalOffset<float>(0x0AB8);                           // 0x0AB8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_PitchBounce                                          = new ExternalOffset<float>(0x0ABC);                           // 0x0ABC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_PitchAxisValue                                       = new ExternalOffset<float>(0x0AC0);                           // 0x0AC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_PitchBounceSecond                                    = new ExternalOffset<float>(0x0AC4);                           // 0x0AC4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_PitchRemaining                                       = new ExternalOffset<float>(0x0AC8);                           // 0x0AC8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_Yaw                                                  = new ExternalOffset<float>(0x0ACC);                           // 0x0ACC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_YawAxisValue                                         = new ExternalOffset<float>(0x0AD0);                           // 0x0AD0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_YawResistenceFromVelocity                            = new ExternalOffset<float>(0x0AD4);                           // 0x0AD4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_YawRemaining                                         = new ExternalOffset<float>(0x0AD8);                           // 0x0AD8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_Roll                                                 = new ExternalOffset<float>(0x0ADC);                           // 0x0ADC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_RollPushValue                                        = new ExternalOffset<float>(0x0AE0);                           // 0x0AE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_RollSensitivityScale                                 = new ExternalOffset<float>(0x0AE4);                           // 0x0AE4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_RolltoYawInterp                                      = new ExternalOffset<float>(0x0AE8);                           // 0x0AE8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_RollAxisValue                                        = new ExternalOffset<float>(0x0AEC);                           // 0x0AEC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_RollRemaining                                        = new ExternalOffset<float>(0x0AF0);                           // 0x0AF0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_BrakeByYawVelocityCut                                = new ExternalOffset<float>(0x0AF4);                           // 0x0AF4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_BrakeByYawInputMultiplier                            = new ExternalOffset<float>(0x0AF8);                           // 0x0AF8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_AccelerationInputTime                                = new ExternalOffset<float>(0x0AFC);                           // 0x0AFC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<byte/*(bool)*/>                    _offInput_IsAccelerating_                                      = new ExternalOffset<byte/*(bool)*/>(0x0B00);                  // 0x0B00(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<byte/*(bool)*/>                    _offInput_IsDownPressed_                                       = new ExternalOffset<byte/*(bool)*/>(0x0B01);                  // 0x0B01(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<byte/*(bool)*/>                    _offInput_IsYawBraking_                                        = new ExternalOffset<byte/*(bool)*/>(0x0B02);                  // 0x0B02(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<FVector>                           _offVelocity_CurrentWorldOffset                                = new ExternalOffset<FVector>(0x0B04, false);                  // 0x0B04(0x000C) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<FVector>                           _offVelocity_CurrentLocalOffset                                = new ExternalOffset<FVector>(0x0B10, false);                  // 0x0B10(0x000C) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<FVector>                           _offVelocity_PreviousWorldOffset                               = new ExternalOffset<FVector>(0x0B1C, false);                  // 0x0B1C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<FVector>                           _offVelocity_PreviousLocalOffset                               = new ExternalOffset<FVector>(0x0B28, false);                  // 0x0B28(0x000C) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<FTimerHandle>                      _offTimer_CheckIfLiftOff                                       = new ExternalOffset<FTimerHandle>(0x0B38, false);             // 0x0B38(0x0008) (Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offInput_RawInputRudder                                       = new ExternalOffset<float>(0x0B40);                           // 0x0B40(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offRollInputInterpt                                           = new ExternalOffset<float>(0x0B44);                           // 0x0B44(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPitchInputInterpt                                          = new ExternalOffset<float>(0x0B48);                           // 0x0B48(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UCurveFloat>                       _offPitchStabilization                                         = new ExternalOffset<UCurveFloat>(0x0B50, true);               // 0x0B50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offRollPushStrength                                           = new ExternalOffset<float>(0x0B58);                           // 0x0B58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offRollSensitivityScaleLow                                    = new ExternalOffset<float>(0x0B5C);                           // 0x0B5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offRollSensitivityScaleMiddle                                 = new ExternalOffset<float>(0x0B60);                           // 0x0B60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offRollSensitivityScaleMax                                    = new ExternalOffset<float>(0x0B64);                           // 0x0B64(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UCurveFloat>                       _offRollInputScale                                             = new ExternalOffset<UCurveFloat>(0x0B68, true);               // 0x0B68(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPitchSensitivityScaleLow                                   = new ExternalOffset<float>(0x0B70);                           // 0x0B70(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPitchSensitivityScaleMiddle                                = new ExternalOffset<float>(0x0B74);                           // 0x0B74(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPitchSensitivityScaleMax                                   = new ExternalOffset<float>(0x0B78);                           // 0x0B78(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UCurveFloat>                       _offPitchInputScale                                            = new ExternalOffset<UCurveFloat>(0x0B80, true);               // 0x0B80(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offYawSensitivity__user_                                      = new ExternalOffset<float>(0x0B88);                           // 0x0B88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offYawSensitivity                                             = new ExternalOffset<float>(0x0B8C);                           // 0x0B8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offYawSpeed                                                   = new ExternalOffset<float>(0x0B90);                           // 0x0B90(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offRollSensitivity__user_                                     = new ExternalOffset<float>(0x0B94);                           // 0x0B94(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offRollSensitivity                                            = new ExternalOffset<float>(0x0B98);                           // 0x0B98(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offRollAxisInputClamp                                         = new ExternalOffset<float>(0x0B9C);                           // 0x0B9C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPitchSensitivity__user_                                    = new ExternalOffset<float>(0x0BA0);                           // 0x0BA0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPitchSensitivity                                           = new ExternalOffset<float>(0x0BA4);                           // 0x0BA4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPitchAxisInputClamp                                        = new ExternalOffset<float>(0x0BA8);                           // 0x0BA8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<byte/*(bool)*/>                    _offIsAddingYawWhenRolling_                                    = new ExternalOffset<byte/*(bool)*/>(0x0BAC);                  // 0x0BAC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	private ExternalOffset<float>                             _offPitchToYawAngleThreshold                                   = new ExternalOffset<float>(0x0BB0);                           // 0x0BB0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPitchToYawScale                                            = new ExternalOffset<float>(0x0BB4);                           // 0x0BB4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<int>                               _offMainRotorMaxRPM                                            = new ExternalOffset<int>(0x0BB8);                             // 0x0BB8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<int>                               _offTailRotorMaxRPM                                            = new ExternalOffset<int>(0x0BBC);                             // 0x0BBC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<byte/*(bool)*/>                    _offMainRotorCCW                                               = new ExternalOffset<byte/*(bool)*/>(0x0BC0);                  // 0x0BC0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	private ExternalOffset<byte/*(bool)*/>                    _offTailRotorCCW                                               = new ExternalOffset<byte/*(bool)*/>(0x0BC1);                  // 0x0BC1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	private ExternalOffset<float>                             _offBladesBlurMaxRPM                                           = new ExternalOffset<float>(0x0BC4);                           // 0x0BC4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offBladesBlurMinRPM                                           = new ExternalOffset<float>(0x0BC8);                           // 0x0BC8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offGroundEffectMaxDistanceMeters                              = new ExternalOffset<float>(0x0BCC);                           // 0x0BCC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UCurveFloat>                       _offVerticalStabilizerAngleMultiplier                          = new ExternalOffset<UCurveFloat>(0x0BD0, true);               // 0x0BD0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UCurveVector>                      _offStabilizerCorrectionBySpeed                                = new ExternalOffset<UCurveVector>(0x0BD8, true);              // 0x0BD8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<FRotator>                          _offPilot_InitialCameraRotation                                = new ExternalOffset<FRotator>(0x0BE0, false);                 // 0x0BE0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<USQPhysicalMaterial>               _offEffects_PrevPhysMat                                        = new ExternalOffset<USQPhysicalMaterial>(0x0BF0, true);       // 0x0BF0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<UCurveFloat>                       _offHorizontalStabilizerAngleMultiplier                        = new ExternalOffset<UCurveFloat>(0x0BF8, true);               // 0x0BF8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<FRotator>                          _offPilot_ZoomCameraRotation                                   = new ExternalOffset<FRotator>(0x0C00, false);                 // 0x0C00(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<float>                             _offInstruments_AltitudeMeters                                 = new ExternalOffset<float>(0x0C0C);                           // 0x0C0C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	private ExternalOffset<FTransform>                        _offDebug_ServerTransformLocation                              = new ExternalOffset<FTransform>(0x0C10, false);               // 0x0C10(0x0030) (Edit, BlueprintVisible, Net, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<float>                             _offPhysics_MaxAltitude                                        = new ExternalOffset<float>(0x0C40);                           // 0x0C40(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<FRotator>                          _offTarget_Landing_Camera_Rotation                             = new ExternalOffset<FRotator>(0x0C44, false);                 // 0x0C44(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<byte/*(bool)*/>                    _offWarning_On                                                 = new ExternalOffset<byte/*(bool)*/>(0x0C50);                  // 0x0C50(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	private ExternalOffset<float>                             _offPhysics_MainRotorRotationalForce                           = new ExternalOffset<float>(0x0C54);                           // 0x0C54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPhysics_PreventTailRotorLossEffectTime                     = new ExternalOffset<float>(0x0C58);                           // 0x0C58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<byte/*(bool)*/>                    _offEngine_IsActive                                            = new ExternalOffset<byte/*(bool)*/>(0x0C5C);                  // 0x0C5C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<float>                             _offMaxTailRotorLossSpinForce                                  = new ExternalOffset<float>(0x0C60);                           // 0x0C60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offPhysics_FlipOverSpeedTailLoss                              = new ExternalOffset<float>(0x0C64);                           // 0x0C64(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offHullWarningThreshold                                       = new ExternalOffset<float>(0x0C68);                           // 0x0C68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offEngineWarningThreshold                                     = new ExternalOffset<float>(0x0C6C);                           // 0x0C6C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offMainRotorWarningThreshold                                  = new ExternalOffset<float>(0x0C70);                           // 0x0C70(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<float>                             _offTailRotorWarningThreshold                                  = new ExternalOffset<float>(0x0C74);                           // 0x0C74(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<byte/*(bool)*/>                    _offDebugMovement                                              = new ExternalOffset<byte/*(bool)*/>(0x0C78);                  // 0x0C78(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	private ExternalOffset<FVector>                           _offDebug_True_Velocity                                        = new ExternalOffset<FVector>(0x0C7C, false);                  // 0x0C7C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<FVector>                           _offDebug_Previous_Frame_True_Velocity                         = new ExternalOffset<FVector>(0x0C88, false);                  // 0x0C88(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<FVector>                           _offDebug_Previous_Frame_location                              = new ExternalOffset<FVector>(0x0C94, false);                  // 0x0C94(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<FVector>                           _offDebug_True_Acceleration                                    = new ExternalOffset<FVector>(0x0CA0, false);                  // 0x0CA0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	private ExternalOffset<FVector>                           _offDebug_Previous_Frame_Acceleration                          = new ExternalOffset<FVector>(0x0CAC, false);                  // 0x0CAC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	#endregion

	#region Props
	public FPointerToUberGraphFrame                           UberGraphFrame                                                 => _offUberGraphFrame.GetValue();
	public UDecalComponent                                    Warning_Decal_04                                               => _offWarning_Decal_04.GetValue();
	public UDecalComponent                                    Warning_Decal_03                                               => _offWarning_Decal_03.GetValue();
	public UDecalComponent                                    Warning_Decal_02                                               => _offWarning_Decal_02.GetValue();
	public UDecalComponent                                    Warning_Decal_01                                               => _offWarning_Decal_01.GetValue();
	public UAudioComponent                                    WarningAudio                                                   => _offWarningAudio.GetValue();
	public UPointLightComponent                               PointLight3                                                    => _offPointLight3.GetValue();
	public UPointLightComponent                               PointLight2                                                    => _offPointLight2.GetValue();
	public UPointLightComponent                               PointLight1                                                    => _offPointLight1.GetValue();
	public UPointLightComponent                               PointLight                                                     => _offPointLight.GetValue();
	public USceneComponent                                    Warning_Parent                                                 => _offWarning_Parent.GetValue();
	public UStaticMeshComponent                               LandingMarker                                                  => _offLandingMarker.GetValue();
	public UCameraComponent                                   LandingCamera                                                  => _offLandingCamera.GetValue();
	public USQVehicleBurningComponent                         VehicleBurning                                                 => _offVehicleBurning.GetValue();
	public UBPComponent_RadialModel_C                         BPComponent_RadialModel                                        => _offBPComponent_RadialModel.GetValue();
	public UParticleSystemComponent                           GroundEffect                                                   => _offGroundEffect.GetValue();
	public UStaticMeshComponent                               CollisionMesh                                                  => _offCollisionMesh.GetValue();
	public USQVehicleExitPointComponent                       SQVehicleExitPoint1                                            => _offSQVehicleExitPoint1.GetValue();
	public USQVehicleExitPointComponent                       SQVehicleExitPoint                                             => _offSQVehicleExitPoint.GetValue();
	public UCameraComponent                                   PilotCamera                                                    => _offPilotCamera.GetValue();
	public USpringArmComponent                                PilotSpringArm                                                 => _offPilotSpringArm.GetValue();
	public UArrowComponent                                    LandingArrowStabilizer                                         => _offLandingArrowStabilizer.GetValue();
	public UArrowComponent                                    LandingArrowBottomRight                                        => _offLandingArrowBottomRight.GetValue();
	public UArrowComponent                                    LandingArrowTopRight                                           => _offLandingArrowTopRight.GetValue();
	public UArrowComponent                                    LandingArrowBottomLeft                                         => _offLandingArrowBottomLeft.GetValue();
	public UArrowComponent                                    LandingArrowTopLeft                                            => _offLandingArrowTopLeft.GetValue();
	public TEnumAsByte<ETimelineDirection>                    Warning_Light_Animation__Direction_BED4FDDF4B03AF41E9D22382105F3A83 => _offWarning_Light_Animation__Direction_BED4FDDF4B03AF41E9D22382105F3A83.GetValue();
	public UTimelineComponent                                 Warning_Light_Animation                                        => _offWarning_Light_Animation.GetValue();
	public float                                              Timeline_2_Default_Power_079618E342F7064103BFCC9F05CBEF12      => _offTimeline_2_Default_Power_079618E342F7064103BFCC9F05CBEF12.GetValue();
	public TEnumAsByte<ETimelineDirection>                    Timeline_2__Direction_079618E342F7064103BFCC9F05CBEF12         => _offTimeline_2__Direction_079618E342F7064103BFCC9F05CBEF12.GetValue();
	public UTimelineComponent                                 Timeline_3                                                     => _offTimeline_3.GetValue();
	public byte/*(bool)*/                                     Physics_IsLanded_                                              => _offPhysics_IsLanded_.GetValue();
	public float                                              Physics_DefaultThrust                                          => _offPhysics_DefaultThrust.GetValue();
	public byte/*(bool)*/                                     Physics_IsReadyToLand_                                         => _offPhysics_IsReadyToLand_.GetValue();
	public float                                              Physics_StrafePassiveInterp                                    => _offPhysics_StrafePassiveInterp.GetValue();
	public float                                              Physics_BaseDeltaSpeed                                         => _offPhysics_BaseDeltaSpeed.GetValue();
	public float                                              Physics_AntiThrustPower                                        => _offPhysics_AntiThrustPower.GetValue();
	public float                                              Physics_AddVelocityFromRotation                                => _offPhysics_AddVelocityFromRotation.GetValue();
	public float                                              Physics_StrafeOnRollInterp                                     => _offPhysics_StrafeOnRollInterp.GetValue();
	public float                                              Physics_ThrustPower                                            => _offPhysics_ThrustPower.GetValue();
	public float                                              Physics_PitchSpeedMultiplier                                   => _offPhysics_PitchSpeedMultiplier.GetValue();
	public float                                              Physics_BaseMaxFlySpeed                                        => _offPhysics_BaseMaxFlySpeed.GetValue();
	public float                                              Physics_ReservedAcceleration                                   => _offPhysics_ReservedAcceleration.GetValue();
	public float                                              Physics_AccelerationByPitchCutoff                              => _offPhysics_AccelerationByPitchCutoff.GetValue();
	public float                                              Physics_MaxFlySpeed                                            => _offPhysics_MaxFlySpeed.GetValue();
	public float                                              Physics_CollisionMinSpeed                                      => _offPhysics_CollisionMinSpeed.GetValue();
	public float                                              Physics_MaxDeltaSpeed                                          => _offPhysics_MaxDeltaSpeed.GetValue();
	public float                                              RotorAccelerationScale                                         => _offRotorAccelerationScale.GetValue();
	public float                                              Game_DeltaSeconds                                              => _offGame_DeltaSeconds.GetValue();
	public AController                                        Controller_ServerController                                    => _offController_ServerController.GetValue();
	public byte/*(bool)*/                                     Controller_IsPossessed_                                        => _offController_IsPossessed_.GetValue();
	public APlayerController                                  Controller_PlayerController                                    => _offController_PlayerController.GetValue();
	public FRotator                                           Controller_CurrentRotation                                     => _offController_CurrentRotation.GetValue();
	public FRotator                                           Controller_PreviousRotation                                    => _offController_PreviousRotation.GetValue();
	public byte/*(bool)*/                                     Game_BegunPlay_                                                => _offGame_BegunPlay_.GetValue();
	public float                                              LandingDistance                                                => _offLandingDistance.GetValue();
	public float                                              MaxVelocityToLand                                              => _offMaxVelocityToLand.GetValue();
	public byte/*(bool)*/                                     Collision_GotCollisionHit_                                     => _offCollision_GotCollisionHit_.GetValue();
	public float                                              StrafePassive                                                  => _offStrafePassive.GetValue();
	public float                                              Twitchiness                                                    => _offTwitchiness.GetValue();
	public float                                              StrafeOnRoll                                                   => _offStrafeOnRoll.GetValue();
	public float                                              StrafeOnRollSpeed                                              => _offStrafeOnRollSpeed.GetValue();
	public float                                              RotorLiftMin                                                   => _offRotorLiftMin.GetValue();
	public float                                              RotorLiftMax                                                   => _offRotorLiftMax.GetValue();
	public float                                              Gravity                                                        => _offGravity.GetValue();
	public float                                              AirFriction                                                    => _offAirFriction.GetValue();
	public float                                              Friction                                                       => _offFriction.GetValue();
	public UCurveFloat                                        FrictionByPitch                                                => _offFrictionByPitch.GetValue();
	public UCurveFloat                                        BrakeByPitch                                                   => _offBrakeByPitch.GetValue();
	public UCurveVector                                       AccelerationInterpolationSpeed                                 => _offAccelerationInterpolationSpeed.GetValue();
	public UCurveVector                                       UpDirectionByPitch                                             => _offUpDirectionByPitch.GetValue();
	public UCurveFloat                                        ForwardDirectionByPitch                                        => _offForwardDirectionByPitch.GetValue();
	public UCurveFloat                                        RightDirectionByRoll                                           => _offRightDirectionByRoll.GetValue();
	public UCurveVector                                       TurnByRollOnSpeed                                              => _offTurnByRollOnSpeed.GetValue();
	public float                                              MaximumSpeed                                                   => _offMaximumSpeed.GetValue();
	public float                                              AverageSpeedPercent                                            => _offAverageSpeedPercent.GetValue();
	public float                                              RotorStrength                                                  => _offRotorStrength.GetValue();
	public float                                              RotorStrengthMultiplier                                        => _offRotorStrengthMultiplier.GetValue();
	public float                                              CollisionMinSpeed                                              => _offCollisionMinSpeed.GetValue();
	public float                                              FrictionMultiplier                                             => _offFrictionMultiplier.GetValue();
	public byte/*(bool)*/                                     Debug_IsDebugging_                                             => _offDebug_IsDebugging_.GetValue();
	public float                                              YawInputInterpt                                                => _offYawInputInterpt.GetValue();
	public float                                              YawResistenceFromPitchStart                                    => _offYawResistenceFromPitchStart.GetValue();
	public float                                              YawResistenceFromPitchMax                                      => _offYawResistenceFromPitchMax.GetValue();
	public float                                              YawResistenceFromVelocityMinSpeed                              => _offYawResistenceFromVelocityMinSpeed.GetValue();
	public float                                              YawResistenceFromVelocityInputMul                              => _offYawResistenceFromVelocityInputMul.GetValue();
	public float                                              BrakeByYawMinSpeed                                             => _offBrakeByYawMinSpeed.GetValue();
	public float                                              BrakeByYawSpeedCutOff                                          => _offBrakeByYawSpeedCutOff.GetValue();
	public byte/*(bool)*/                                     IsBrakeByYawInputSmooth_                                       => _offIsBrakeByYawInputSmooth_.GetValue();
	public float                                              RollDumpSpeed                                                  => _offRollDumpSpeed.GetValue();
	public float                                              RollDumpFactor                                                 => _offRollDumpFactor.GetValue();
	public float                                              RollPushTime                                                   => _offRollPushTime.GetValue();
	public byte/*(bool)*/                                     IsRollStabilizationEnabled_                                    => _offIsRollStabilizationEnabled_.GetValue();
	public UCurveFloat                                        RollStabilization                                              => _offRollStabilization.GetValue();
	public byte/*(bool)*/                                     IsPitchStabilizationEnabled_                                   => _offIsPitchStabilizationEnabled_.GetValue();
	public float                                              Input_Pitch                                                    => _offInput_Pitch.GetValue();
	public float                                              Input_PitchSensitivityScale                                    => _offInput_PitchSensitivityScale.GetValue();
	public float                                              Input_PitchBounce                                              => _offInput_PitchBounce.GetValue();
	public float                                              Input_PitchAxisValue                                           => _offInput_PitchAxisValue.GetValue();
	public float                                              Input_PitchBounceSecond                                        => _offInput_PitchBounceSecond.GetValue();
	public float                                              Input_PitchRemaining                                           => _offInput_PitchRemaining.GetValue();
	public float                                              Input_Yaw                                                      => _offInput_Yaw.GetValue();
	public float                                              Input_YawAxisValue                                             => _offInput_YawAxisValue.GetValue();
	public float                                              Input_YawResistenceFromVelocity                                => _offInput_YawResistenceFromVelocity.GetValue();
	public float                                              Input_YawRemaining                                             => _offInput_YawRemaining.GetValue();
	public float                                              Input_Roll                                                     => _offInput_Roll.GetValue();
	public float                                              Input_RollPushValue                                            => _offInput_RollPushValue.GetValue();
	public float                                              Input_RollSensitivityScale                                     => _offInput_RollSensitivityScale.GetValue();
	public float                                              Input_RolltoYawInterp                                          => _offInput_RolltoYawInterp.GetValue();
	public float                                              Input_RollAxisValue                                            => _offInput_RollAxisValue.GetValue();
	public float                                              Input_RollRemaining                                            => _offInput_RollRemaining.GetValue();
	public float                                              Input_BrakeByYawVelocityCut                                    => _offInput_BrakeByYawVelocityCut.GetValue();
	public float                                              Input_BrakeByYawInputMultiplier                                => _offInput_BrakeByYawInputMultiplier.GetValue();
	public float                                              Input_AccelerationInputTime                                    => _offInput_AccelerationInputTime.GetValue();
	public byte/*(bool)*/                                     Input_IsAccelerating_                                          => _offInput_IsAccelerating_.GetValue();
	public byte/*(bool)*/                                     Input_IsDownPressed_                                           => _offInput_IsDownPressed_.GetValue();
	public byte/*(bool)*/                                     Input_IsYawBraking_                                            => _offInput_IsYawBraking_.GetValue();
	public FVector                                            Velocity_CurrentWorldOffset                                    => _offVelocity_CurrentWorldOffset.GetValue();
	public FVector                                            Velocity_CurrentLocalOffset                                    => _offVelocity_CurrentLocalOffset.GetValue();
	public FVector                                            Velocity_PreviousWorldOffset                                   => _offVelocity_PreviousWorldOffset.GetValue();
	public FVector                                            Velocity_PreviousLocalOffset                                   => _offVelocity_PreviousLocalOffset.GetValue();
	public FTimerHandle                                       Timer_CheckIfLiftOff                                           => _offTimer_CheckIfLiftOff.GetValue();
	public float                                              Input_RawInputRudder                                           => _offInput_RawInputRudder.GetValue();
	public float                                              RollInputInterpt                                               => _offRollInputInterpt.GetValue();
	public float                                              PitchInputInterpt                                              => _offPitchInputInterpt.GetValue();
	public UCurveFloat                                        PitchStabilization                                             => _offPitchStabilization.GetValue();
	public float                                              RollPushStrength                                               => _offRollPushStrength.GetValue();
	public float                                              RollSensitivityScaleLow                                        => _offRollSensitivityScaleLow.GetValue();
	public float                                              RollSensitivityScaleMiddle                                     => _offRollSensitivityScaleMiddle.GetValue();
	public float                                              RollSensitivityScaleMax                                        => _offRollSensitivityScaleMax.GetValue();
	public UCurveFloat                                        RollInputScale                                                 => _offRollInputScale.GetValue();
	public float                                              PitchSensitivityScaleLow                                       => _offPitchSensitivityScaleLow.GetValue();
	public float                                              PitchSensitivityScaleMiddle                                    => _offPitchSensitivityScaleMiddle.GetValue();
	public float                                              PitchSensitivityScaleMax                                       => _offPitchSensitivityScaleMax.GetValue();
	public UCurveFloat                                        PitchInputScale                                                => _offPitchInputScale.GetValue();
	public float                                              YawSensitivity__user_                                          => _offYawSensitivity__user_.GetValue();
	public float                                              YawSensitivity                                                 => _offYawSensitivity.GetValue();
	public float                                              YawSpeed                                                       => _offYawSpeed.GetValue();
	public float                                              RollSensitivity__user_                                         => _offRollSensitivity__user_.GetValue();
	public float                                              RollSensitivity                                                => _offRollSensitivity.GetValue();
	public float                                              RollAxisInputClamp                                             => _offRollAxisInputClamp.GetValue();
	public float                                              PitchSensitivity__user_                                        => _offPitchSensitivity__user_.GetValue();
	public float                                              PitchSensitivity                                               => _offPitchSensitivity.GetValue();
	public float                                              PitchAxisInputClamp                                            => _offPitchAxisInputClamp.GetValue();
	public byte/*(bool)*/                                     IsAddingYawWhenRolling_                                        => _offIsAddingYawWhenRolling_.GetValue();
	public float                                              PitchToYawAngleThreshold                                       => _offPitchToYawAngleThreshold.GetValue();
	public float                                              PitchToYawScale                                                => _offPitchToYawScale.GetValue();
	public int                                                MainRotorMaxRPM                                                => _offMainRotorMaxRPM.GetValue();
	public int                                                TailRotorMaxRPM                                                => _offTailRotorMaxRPM.GetValue();
	public byte/*(bool)*/                                     MainRotorCCW                                                   => _offMainRotorCCW.GetValue();
	public byte/*(bool)*/                                     TailRotorCCW                                                   => _offTailRotorCCW.GetValue();
	public float                                              BladesBlurMaxRPM                                               => _offBladesBlurMaxRPM.GetValue();
	public float                                              BladesBlurMinRPM                                               => _offBladesBlurMinRPM.GetValue();
	public float                                              GroundEffectMaxDistanceMeters                                  => _offGroundEffectMaxDistanceMeters.GetValue();
	public UCurveFloat                                        VerticalStabilizerAngleMultiplier                              => _offVerticalStabilizerAngleMultiplier.GetValue();
	public UCurveVector                                       StabilizerCorrectionBySpeed                                    => _offStabilizerCorrectionBySpeed.GetValue();
	public FRotator                                           Pilot_InitialCameraRotation                                    => _offPilot_InitialCameraRotation.GetValue();
	public USQPhysicalMaterial                                Effects_PrevPhysMat                                            => _offEffects_PrevPhysMat.GetValue();
	public UCurveFloat                                        HorizontalStabilizerAngleMultiplier                            => _offHorizontalStabilizerAngleMultiplier.GetValue();
	public FRotator                                           Pilot_ZoomCameraRotation                                       => _offPilot_ZoomCameraRotation.GetValue();
	public float                                              Instruments_AltitudeMeters                                     => _offInstruments_AltitudeMeters.GetValue();
	public FTransform                                         Debug_ServerTransformLocation                                  => _offDebug_ServerTransformLocation.GetValue();
	public float                                              Physics_MaxAltitude                                            => _offPhysics_MaxAltitude.GetValue();
	public FRotator                                           Target_Landing_Camera_Rotation                                 => _offTarget_Landing_Camera_Rotation.GetValue();
	public byte/*(bool)*/                                     Warning_On                                                     => _offWarning_On.GetValue();
	public float                                              Physics_MainRotorRotationalForce                               => _offPhysics_MainRotorRotationalForce.GetValue();
	public float                                              Physics_PreventTailRotorLossEffectTime                         => _offPhysics_PreventTailRotorLossEffectTime.GetValue();
	public byte/*(bool)*/                                     Engine_IsActive                                                => _offEngine_IsActive.GetValue();
	public float                                              MaxTailRotorLossSpinForce                                      => _offMaxTailRotorLossSpinForce.GetValue();
	public float                                              Physics_FlipOverSpeedTailLoss                                  => _offPhysics_FlipOverSpeedTailLoss.GetValue();
	public float                                              HullWarningThreshold                                           => _offHullWarningThreshold.GetValue();
	public float                                              EngineWarningThreshold                                         => _offEngineWarningThreshold.GetValue();
	public float                                              MainRotorWarningThreshold                                      => _offMainRotorWarningThreshold.GetValue();
	public float                                              TailRotorWarningThreshold                                      => _offTailRotorWarningThreshold.GetValue();
	public byte/*(bool)*/                                     DebugMovement                                                  => _offDebugMovement.GetValue();
	public FVector                                            Debug_True_Velocity                                            => _offDebug_True_Velocity.GetValue();
	public FVector                                            Debug_Previous_Frame_True_Velocity                             => _offDebug_Previous_Frame_True_Velocity.GetValue();
	public FVector                                            Debug_Previous_Frame_location                                  => _offDebug_Previous_Frame_location.GetValue();
	public FVector                                            Debug_True_Acceleration                                        => _offDebug_True_Acceleration.GetValue();
	public FVector                                            Debug_Previous_Frame_Acceleration                              => _offDebug_Previous_Frame_Acceleration.GetValue();
	#endregion


}


}