#pragma once

// Name: Sq, Version: b21


#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

/*!!HELPER_DEF!!*/

/*!!DEFINE!!*/

namespace UFT
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class Engine.OnlineBlueprintCallProxyBase
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UOnlineBlueprintCallProxyBase : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.OnlineBlueprintCallProxyBase");
		return ptr;
	}


	void Activate();
};

// Class Engine.BlueprintFunctionLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UBlueprintFunctionLibrary : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BlueprintFunctionLibrary");
		return ptr;
	}


};

// Class Engine.Actor
// 0x0210 (FullSize[0x0238] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0502 - 0x0000 // Minimum to subtract -> (0000)
class AActor : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0502, struct FActorTickFunction,                                             PrimaryActorTick);                                         // 0x0028(0x0058)  (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0502, unsigned char,                                                         bHidden);                                                  // 0x0080(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0502, unsigned char,                                                         bNetTemporary);                                            // 0x0080(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0502, unsigned char,                                                         bNetStartup);                                              // 0x0080(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0502, unsigned char,                                                         bOnlyRelevantToOwner);                                     // 0x0080(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0502, unsigned char,                                                         bAlwaysRelevant);                                          // 0x0080(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0502, unsigned char,                                                         bReplicateMovement);                                       // 0x0080(0x0001) BIT_FIELD (Edit, Net, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0502, unsigned char,                                                         bTearOff);                                                 // 0x0080(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0502, unsigned char,                                                         bExchangedRoles);                                          // 0x0080(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0059 PADDING_0502, unsigned char,                                                         bNetLoadOnClient);                                         // 0x0081(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0059 PADDING_0502, unsigned char,                                                         bNetUseOwnerRelevancy);                                    // 0x0081(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0059 PADDING_0502, unsigned char,                                                         bRelevantForNetworkReplays);                               // 0x0081(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0059 PADDING_0502, unsigned char,                                                         bRelevantForLevelBounds);                                  // 0x0081(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0059 PADDING_0502, unsigned char,                                                         bReplayRewindable);                                        // 0x0081(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0059 PADDING_0502, unsigned char,                                                         bAllowTickBeforeBeginPlay);                                // 0x0081(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0059 PADDING_0502, unsigned char,                                                         bAutoDestroyWhenFinished);                                 // 0x0081(0x0001) BIT_FIELD (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0059 PADDING_0502, unsigned char,                                                         bBlockInput);                                              // 0x0081(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005A PADDING_0502, unsigned char,                                                         bCanBeDamaged);                                            // 0x0082(0x0001) BIT_FIELD (Edit, BlueprintVisible, Net, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005A PADDING_0502, unsigned char,                                                         bCollideWhenPlacing);                                      // 0x0082(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005A PADDING_0502, unsigned char,                                                         bFindCameraComponentWhenViewTarget);                       // 0x0082(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005A PADDING_0502, unsigned char,                                                         bGenerateOverlapEventsDuringLevelStreaming);               // 0x0082(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005A PADDING_0502, unsigned char,                                                         bIgnoresOriginShifting);                                   // 0x0082(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005A PADDING_0502, unsigned char,                                                         bEnableAutoLODGeneration);                                 // 0x0082(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005A PADDING_0502, unsigned char,                                                         bIsEditorOnlyActor);                                       // 0x0082(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005A PADDING_0502, unsigned char,                                                         bActorSeamlessTraveled);                                   // 0x0082(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005B PADDING_0502, unsigned char,                                                         bReplicates);                                              // 0x0083(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x005B PADDING_0502, unsigned char,                                                         bCanBeInCluster);                                          // 0x0083(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x005B PADDING_0502, unsigned char,                                                         bAllowReceiveTickEventOnDedicatedServer);                  // 0x0083(0x0001) BIT_FIELD (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x005C PADDING_0502, unsigned char,                                                         bActorEnableCollision);                                    // 0x0084(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x005C PADDING_0502, unsigned char,                                                         bActorIsBeingDestroyed);                                   // 0x0084(0x0001) BIT_FIELD (Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x005D PADDING_0502, TEnumAsByte<ENetRole>,                                                 RemoteRole);                                               // 0x0085(0x0001)  (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0502, struct FRepMovement,                                                   ReplicatedMovement);                                       // 0x0088(0x0034)  (Edit, Net, DisableEditOnInstance, RepNotify, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_0502, float,                                                                 InitialLifeSpan);                                          // 0x00BC(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_0502, float,                                                                 CustomTimeDilation);                                       // 0x00C0(0x0004)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0502, struct FRepAttachment,                                                 AttachmentReplication);                                    // 0x00C8(0x0040)  (Net, Transient, RepNotify, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00E0 PADDING_0502, class AActor*,                                                         Owner);                                                    // 0x0108(0x0008)  (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00E8 PADDING_0502, struct FName,                                                          NetDriverName);                                            // 0x0110(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00F0 PADDING_0502, TEnumAsByte<ENetRole>,                                                 Role);                                                     // 0x0118(0x0001)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F1 PADDING_0502, TEnumAsByte<ENetDormancy>,                                             NetDormancy);                                              // 0x0119(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F2 PADDING_0502, ESpawnActorCollisionHandlingMethod,                                    SpawnCollisionHandlingMethod);                             // 0x011A(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F3 PADDING_0502, TEnumAsByte<EAutoReceiveInput>,                                        AutoReceiveInput);                                         // 0x011B(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F4 PADDING_0502, int,                                                                   InputPriority);                                            // 0x011C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F8 PADDING_0502, class UInputComponent*,                                                InputComponent);                                           // 0x0120(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_0502, float,                                                                 NetCullDistanceSquared);                                   // 0x0128(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0104 PADDING_0502, int,                                                                   NetTag);                                                   // 0x012C(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0108 PADDING_0502, float,                                                                 NetUpdateFrequency);                                       // 0x0130(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010C PADDING_0502, float,                                                                 MinNetUpdateFrequency);                                    // 0x0134(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0110 PADDING_0502, unsigned char,                                                         bUseRelativeNetUpdateFrequency);                           // 0x0138(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0110 PADDING_0502, unsigned char,                                                         bUseOwnerRelativeNetUpdateFrequency);                      // 0x0138(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0114 PADDING_0502, float,                                                                 NetPriority);                                              // 0x013C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0120 PADDING_0502, class APawn*,                                                          Instigator);                                               // 0x0148(0x0008)  (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0128 PADDING_0502, TArray<class AActor*>,                                                 Children);                                                 // 0x0150(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0138 PADDING_0502, class USceneComponent*,                                                RootComponent);                                            // 0x0160(0x0008)  (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0140 PADDING_0502, TArray<class AMatineeActor*>,                                          ControllingMatineeActors);                                 // 0x0168(0x0010)  (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0158 PADDING_0502, TArray<struct FName>,                                                  Layers);                                                   // 0x0180(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0168 PADDING_0502, TWeakObjectPtr<class UChildActorComponent>,                            ParentComponent);                                          // 0x0190(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0170 PADDING_0502, TArray<struct FName>,                                                  Tags);                                                     // 0x0198(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0180 PADDING_0502, struct FScriptMulticastDelegate,                                       OnTakeAnyDamage);                                          // 0x01A8(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0181 PADDING_0502, struct FScriptMulticastDelegate,                                       OnTakePointDamage);                                        // 0x01A9(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0182 PADDING_0502, struct FScriptMulticastDelegate,                                       OnTakeRadialDamage);                                       // 0x01AA(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0183 PADDING_0502, struct FScriptMulticastDelegate,                                       OnActorBeginOverlap);                                      // 0x01AB(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0184 PADDING_0502, struct FScriptMulticastDelegate,                                       OnActorEndOverlap);                                        // 0x01AC(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0185 PADDING_0502, struct FScriptMulticastDelegate,                                       OnBeginCursorOver);                                        // 0x01AD(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0186 PADDING_0502, struct FScriptMulticastDelegate,                                       OnEndCursorOver);                                          // 0x01AE(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0187 PADDING_0502, struct FScriptMulticastDelegate,                                       OnClicked);                                                // 0x01AF(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0188 PADDING_0502, struct FScriptMulticastDelegate,                                       OnReleased);                                               // 0x01B0(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0189 PADDING_0502, struct FScriptMulticastDelegate,                                       OnInputTouchBegin);                                        // 0x01B1(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x018A PADDING_0502, struct FScriptMulticastDelegate,                                       OnInputTouchEnd);                                          // 0x01B2(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x018B PADDING_0502, struct FScriptMulticastDelegate,                                       OnInputTouchEnter);                                        // 0x01B3(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x018C PADDING_0502, struct FScriptMulticastDelegate,                                       OnInputTouchLeave);                                        // 0x01B4(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x018D PADDING_0502, struct FScriptMulticastDelegate,                                       OnActorHit);                                               // 0x01B5(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x018E PADDING_0502, struct FScriptMulticastDelegate,                                       OnDestroyed);                                              // 0x01B6(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x018F PADDING_0502, struct FScriptMulticastDelegate,                                       OnEndPlay);                                                // 0x01B7(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01F0 PADDING_0502, TArray<class UActorComponent*>,                                        InstanceComponents);                                       // 0x0218(0x0010)  (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0200 PADDING_0502, TArray<class UActorComponent*>,                                        BlueprintCreatedComponents);                               // 0x0228(0x0010)  (ExportObject, ZeroConstructor, NonTransactional, ContainsInstancedReference, TextExportTransient, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Actor");
		return ptr;
	}


	bool WasRecentlyRendered(float Tolerance);
	void UserConstructionScript();
	void TearOff();
	void SnapRootComponentTo(class AActor* InParentActor, const struct FName& InSocketName);
	void SetTickGroup(TEnumAsByte<ETickingGroup> NewTickGroup);
	void SetTickableWhenPaused(bool bTickableWhenPaused);
	void SetReplicates(bool bInReplicates);
	void SetReplicateMovement(bool bInReplicateMovement);
	void SetOwner(class AActor* NewOwner);
	void SetNetDormancy(TEnumAsByte<ENetDormancy> NewDormancy);
	void SetLifeSpan(float InLifespan);
	void SetActorTickInterval(float TickInterval);
	void SetActorTickEnabled(bool bEnabled);
	void SetActorScale3D(const struct FVector& NewScale3D);
	void SetActorRelativeScale3D(const struct FVector& NewRelativeScale);
	void SetActorHiddenInGame(bool bNewHidden);
	void SetActorEnableCollision(bool bNewActorEnableCollision);
	void RemoveTickPrerequisiteComponent(class UActorComponent* PrerequisiteComponent);
	void RemoveTickPrerequisiteActor(class AActor* PrerequisiteActor);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveRadialDamage(float DamageReceived, class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser);
	void ReceivePointDamage(float damage, class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, const struct FName& BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);
	void ReceiveDestroyed();
	void ReceiveBeginPlay();
	void ReceiveAnyDamage(float damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void ReceiveActorOnReleased(const struct FKey& ButtonReleased);
	void ReceiveActorOnInputTouchLeave(TEnumAsByte<ETouchIndex> FingerIndex);
	void ReceiveActorOnInputTouchEnter(TEnumAsByte<ETouchIndex> FingerIndex);
	void ReceiveActorOnInputTouchEnd(TEnumAsByte<ETouchIndex> FingerIndex);
	void ReceiveActorOnInputTouchBegin(TEnumAsByte<ETouchIndex> FingerIndex);
	void ReceiveActorOnClicked(const struct FKey& ButtonPressed);
	void ReceiveActorEndOverlap(class AActor* OtherActor);
	void ReceiveActorEndCursorOver();
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ReceiveActorBeginCursorOver();
	void PrestreamTextures(float Seconds, bool bEnableStreaming, int CinematicTextureGroups);
	void OnRep_ReplicateMovement();
	void OnRep_ReplicatedMovement();
	void OnRep_Owner();
	void OnRep_Instigator();
	void OnRep_bHidden();
	void OnRep_AttachmentReplication();
	void MakeNoise(float Loudness, class APawn* NoiseInstigator, const struct FVector& NoiseLocation, float MaxRange, const struct FName& Tag);
	class UMaterialInstanceDynamic* MakeMIDForMaterial(class UMaterialInterface* Parent);
	bool K2_TeleportTo(const struct FVector& DestLocation, const struct FRotator& DestRotation);
	bool K2_SetActorTransform(const struct FTransform& NewTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	bool K2_SetActorRotation(const struct FRotator& NewRotation, bool bTeleportPhysics);
	void K2_SetActorRelativeTransform(const struct FTransform& NewRelativeTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_SetActorRelativeRotation(const struct FRotator& NewRelativeRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_SetActorRelativeLocation(const struct FVector& NewRelativeLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	bool K2_SetActorLocationAndRotation(const struct FVector& NewLocation, const struct FRotator& NewRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	bool K2_SetActorLocation(const struct FVector& NewLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_OnReset();
	void K2_OnEndViewTarget(class APlayerController* PC);
	void K2_OnBecomeViewTarget(class APlayerController* PC);
	class USceneComponent* K2_GetRootComponent();
	struct FRotator K2_GetActorRotation();
	struct FVector K2_GetActorLocation();
	void K2_DetachFromActor(EDetachmentRule LocationRule, EDetachmentRule RotationRule, EDetachmentRule ScaleRule);
	void K2_DestroyComponent(class UActorComponent* Component);
	void K2_DestroyActor();
	void K2_AttachToComponent(class USceneComponent* Parent, const struct FName& SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies);
	void K2_AttachToActor(class AActor* ParentActor, const struct FName& SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies);
	void K2_AttachRootComponentToActor(class AActor* InParentActor, const struct FName& InSocketName, TEnumAsByte<EAttachLocation> AttachLocationType, bool bWeldSimulatedBodies);
	void K2_AttachRootComponentTo(class USceneComponent* InParent, const struct FName& InSocketName, TEnumAsByte<EAttachLocation> AttachLocationType, bool bWeldSimulatedBodies);
	void K2_AddActorWorldTransform(const struct FTransform& DeltaTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_AddActorWorldRotation(const struct FRotator& DeltaRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_AddActorWorldOffset(const struct FVector& DeltaLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_AddActorLocalTransform(const struct FTransform& NewTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_AddActorLocalRotation(const struct FRotator& DeltaRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_AddActorLocalOffset(const struct FVector& DeltaLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	bool IsOverlappingActor(class AActor* Other);
	bool IsChildActor();
	bool IsActorTickEnabled();
	bool IsActorBeingDestroyed();
	bool HasAuthority();
	float GetVerticalDistanceTo(class AActor* OtherActor);
	struct FVector GetVelocity();
	struct FTransform GetTransform();
	bool GetTickableWhenPaused();
	float GetSquaredDistanceTo(class AActor* OtherActor);
	TEnumAsByte<ENetRole> GetRemoteRole();
	class UChildActorComponent* GetParentComponent();
	class AActor* GetParentActor();
	class AActor* GetOwner();
	void GetOverlappingComponents(TArray<class UPrimitiveComponent*>* OverlappingComponents);
	void GetOverlappingActors(TArray<class AActor*>* OverlappingActors, class UClass* ClassFilter);
	TEnumAsByte<ENetRole> GetLocalRole();
	float GetLifeSpan();
	class AController* GetInstigatorController();
	class APawn* GetInstigator();
	struct FVector GetInputVectorAxisValue(const struct FKey& InputAxisKey);
	float GetInputAxisValue(const struct FName& InputAxisName);
	float GetInputAxisKeyValue(const struct FKey& InputAxisKey);
	float GetHorizontalDotProductTo(class AActor* OtherActor);
	float GetHorizontalDistanceTo(class AActor* OtherActor);
	float GetGameTimeSinceCreation();
	float GetDotProductTo(class AActor* OtherActor);
	float GetDistanceTo(class AActor* OtherActor);
	TArray<class UActorComponent*> GetComponentsByTag(class UClass* ComponentClass, const struct FName& Tag);
	TArray<class UActorComponent*> GetComponentsByClass(class UClass* ComponentClass);
	class UActorComponent* GetComponentByClass(class UClass* ComponentClass);
	struct FName GetAttachParentSocketName();
	class AActor* GetAttachParentActor();
	void GetAttachedActors(TArray<class AActor*>* OutActors);
	void GetAllChildActors(TArray<class AActor*>* ChildActors, bool bIncludeDescendants);
	struct FVector GetActorUpVector();
	float GetActorTimeDilation();
	float GetActorTickInterval();
	struct FVector GetActorScale3D();
	struct FVector GetActorRightVector();
	struct FVector GetActorRelativeScale3D();
	struct FVector GetActorForwardVector();
	void GetActorEyesViewPoint(struct FVector* OutLocation, struct FRotator* OutRotation);
	bool GetActorEnableCollision();
	void GetActorBounds(bool bOnlyCollidingComponents, struct FVector* Origin, struct FVector* BoxExtent);
	void ForceNetUpdate();
	void FlushNetDormancy();
	void EnableInput(class APlayerController* PlayerController);
	void DisableInput(class APlayerController* PlayerController);
	void DetachRootComponentFromParent(bool bMaintainWorldPosition);
	void AddTickPrerequisiteComponent(class UActorComponent* PrerequisiteComponent);
	void AddTickPrerequisiteActor(class AActor* PrerequisiteActor);
	class UActorComponent* AddComponent(const struct FName& TemplateName, bool bManualAttachment, const struct FTransform& RelativeTransform, class UObject* ComponentTemplateContext);
	bool ActorHasTag(const struct FName& Tag);
};

// Class Engine.Controller
// 0x0085 (FullSize[0x02BD] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0503 - 0x0000 // Minimum to subtract -> (0018)
class AController : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0018 PADDING_0503, class APlayerState*,                                                   PlayerState);                                              // 0x0250(0x0008)  (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0503, struct FScriptMulticastDelegate,                                       OnInstigatedAnyDamage);                                    // 0x0260(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0503, struct FName,                                                          StateName);                                                // 0x0270(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0503, class APawn*,                                                          Pawn);                                                     // 0x0278(0x0008)  (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0503, class ACharacter*,                                                     Character);                                                // 0x0288(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0503, class USceneComponent*,                                                TransformComponent);                                       // 0x0290(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0503, struct FRotator,                                                       ControlRotation);                                          // 0x02B0(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0084 PADDING_0503, unsigned char,                                                         bAttachToPawn);                                            // 0x02BC(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Controller");
		return ptr;
	}


	void UnPossess();
	void StopMovement();
	void SetInitialLocationAndRotation(const struct FVector& NewLocation, const struct FRotator& NewRotation);
	void SetIgnoreMoveInput(bool bNewMoveInput);
	void SetIgnoreLookInput(bool bNewLookInput);
	void SetControlRotation(const struct FRotator& NewRotation);
	void ResetIgnoreMoveInput();
	void ResetIgnoreLookInput();
	void ResetIgnoreInputFlags();
	void ReceiveUnPossess(class APawn* UnpossessedPawn);
	void ReceivePossess(class APawn* PossessedPawn);
	void ReceiveInstigatedAnyDamage(float damage, class UDamageType* DamageType, class AActor* DamagedActor, class AActor* DamageCauser);
	void Possess(class APawn* InPawn);
	void OnRep_PlayerState();
	void OnRep_Pawn();
	bool LineOfSightTo(class AActor* Other, const struct FVector& ViewPoint, bool bAlternateChecks);
	class APawn* K2_GetPawn();
	bool IsPlayerController();
	bool IsMoveInputIgnored();
	bool IsLookInputIgnored();
	bool IsLocalPlayerController();
	bool IsLocalController();
	class AActor* GetViewTarget();
	struct FRotator GetDesiredRotation();
	struct FRotator GetControlRotation();
	void ClientSetRotation(const struct FRotator& NewRotation, bool bResetCamera);
	void ClientSetLocation(const struct FVector& NewLocation, const struct FRotator& NewRotation);
	class APlayerController* CastToPlayerController();
};

// Class Engine.PlayerController
// 0x02CF (FullSize[0x058C] - InheritedSize[0x02BD])
// LastOffsetWithSize(0x02BD)
#define PADDING_0504 - 0x0000 // Minimum to subtract -> (0003)
class APlayerController : public AController
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_0504, class UPlayer*,                                                        Player);                                                   // 0x02C0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_0504, class APawn*,                                                          AcknowledgedPawn);                                         // 0x02C8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_0504, class UInterpTrackInstDirector*,                                       ControllingDirTrackInst);                                  // 0x02D0(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0504, class AHUD*,                                                           MyHUD);                                                    // 0x02D8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_0504, class APlayerCameraManager*,                                           PlayerCameraManager);                                      // 0x02E0(0x0008)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002B PADDING_0504, class UClass*,                                                         PlayerCameraManagerClass);                                 // 0x02E8(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_0504, bool,                                                                  bAutoManageActiveCameraTarget);                            // 0x02F0(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_0504, struct FRotator,                                                       TargetViewRotation);                                       // 0x02F4(0x000C)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004F PADDING_0504, float,                                                                 SmoothTargetViewRotationSpeed);                            // 0x030C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005B PADDING_0504, TArray<class AActor*>,                                                 HiddenActors);                                             // 0x0318(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006B PADDING_0504, TArray<TWeakObjectPtr<class UPrimitiveComponent>>,                     HiddenPrimitiveComponents);                                // 0x0328(0x0010)  (ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007F PADDING_0504, float,                                                                 LastSpectatorStateSynchTime);                              // 0x033C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0083 PADDING_0504, struct FVector,                                                        LastSpectatorSyncLocation);                                // 0x0340(0x000C)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008F PADDING_0504, struct FRotator,                                                       LastSpectatorSyncRotation);                                // 0x034C(0x000C)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009B PADDING_0504, int,                                                                   ClientCap);                                                // 0x0358(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_0504, class UCheatManager*,                                                  CheatManager);                                             // 0x0360(0x0008)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AB PADDING_0504, class UClass*,                                                         CheatClass);                                               // 0x0368(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B3 PADDING_0504, class UPlayerInput*,                                                   PlayerInput);                                              // 0x0370(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BB PADDING_0504, TArray<struct FActiveForceFeedbackEffect>,                             ActiveForceFeedbackEffects);                               // 0x0378(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x013B PADDING_0504, unsigned char,                                                         bPlayerIsWaiting);                                         // 0x03F8(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x013F PADDING_0504, unsigned char,                                                         NetPlayerIndex);                                           // 0x03FC(0x0001)  (ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x017B PADDING_0504, class UNetConnection*,                                                 PendingSwapConnection);                                    // 0x0438(0x0008)  (ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0183 PADDING_0504, class UNetConnection*,                                                 NetConnection);                                            // 0x0440(0x0008)  (ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0197 PADDING_0504, float,                                                                 InputYawScale);                                            // 0x0454(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x019B PADDING_0504, float,                                                                 InputPitchScale);                                          // 0x0458(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x019F PADDING_0504, float,                                                                 InputRollScale);                                           // 0x045C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01A3 PADDING_0504, unsigned char,                                                         bShowMouseCursor);                                         // 0x0460(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01A3 PADDING_0504, unsigned char,                                                         bEnableClickEvents);                                       // 0x0460(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01A3 PADDING_0504, unsigned char,                                                         bEnableTouchEvents);                                       // 0x0460(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01A3 PADDING_0504, unsigned char,                                                         bEnableMouseOverEvents);                                   // 0x0460(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01A3 PADDING_0504, unsigned char,                                                         bEnableTouchOverEvents);                                   // 0x0460(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01A3 PADDING_0504, unsigned char,                                                         bForceFeedbackEnabled);                                    // 0x0460(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01A7 PADDING_0504, float,                                                                 ForceFeedbackScale);                                       // 0x0464(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01AB PADDING_0504, TArray<struct FKey>,                                                   ClickEventKeys);                                           // 0x0468(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01BB PADDING_0504, TEnumAsByte<EMouseCursor>,                                             DefaultMouseCursor);                                       // 0x0478(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01BC PADDING_0504, TEnumAsByte<EMouseCursor>,                                             CurrentMouseCursor);                                       // 0x0479(0x0001)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01BD PADDING_0504, TEnumAsByte<ECollisionChannel>,                                        DefaultClickTraceChannel);                                 // 0x047A(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01BE PADDING_0504, TEnumAsByte<ECollisionChannel>,                                        CurrentClickTraceChannel);                                 // 0x047B(0x0001)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01BF PADDING_0504, float,                                                                 HitResultTraceDistance);                                   // 0x047C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01C3 PADDING_0504, uint16_t,                                                              SeamlessTravelCount);                                      // 0x0480(0x0002)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01C5 PADDING_0504, uint16_t,                                                              LastCompletedSeamlessTravelCount);                         // 0x0482(0x0002)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x023B PADDING_0504, class UInputComponent*,                                                InactiveStateInputComponent);                              // 0x04F8(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0243 PADDING_0504, unsigned char,                                                         bShouldPerformFullTickWhenPaused);                         // 0x0500(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x025B PADDING_0504, class UTouchInterface*,                                                CurrentTouchInterface);                                    // 0x0518(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x02B3 PADDING_0504, class ASpectatorPawn*,                                                 SpectatorPawn);                                            // 0x0570(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x02BF PADDING_0504, bool,                                                                  bIsLocalPlayerController);                                 // 0x057C(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x02C3 PADDING_0504, struct FVector,                                                        SpawnLocation);                                            // 0x0580(0x000C)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PlayerController");
		return ptr;
	}


	bool WasInputKeyJustReleased(const struct FKey& Key);
	bool WasInputKeyJustPressed(const struct FKey& Key);
	void ToggleSpeaking(bool bInSpeaking);
	void SwitchLevel(const struct FString& URL);
	void StopHapticEffect(EControllerHand Hand);
	void StartFire(unsigned char FireModeNum);
	void SetVirtualJoystickVisibility(bool bVisible);
	void SetViewTargetWithBlend(class AActor* NewViewTarget, float BlendTime, TEnumAsByte<EViewTargetBlendFunction> BlendFunc, float BlendExp, bool bLockOutgoing);
	void SetName(const struct FString& S);
	void SetMouseLocation(int X, int Y);
	void SetMouseCursorWidget(TEnumAsByte<EMouseCursor> cursor, class UUserWidget* CursorWidget);
	void SetHapticsByValue(float Frequency, float Amplitude, EControllerHand Hand);
	void SetDisableHaptics(bool bNewDisabled);
	void SetControllerLightColor(const struct FColor& Color);
	void SetCinematicMode(bool bInCinematicMode, bool bHidePlayer, bool bAffectsHUD, bool bAffectsMovement, bool bAffectsTurning);
	void SetAudioListenerOverride(class USceneComponent* AttachToComponent, const struct FVector& Location, const struct FRotator& Rotation);
	void SetAudioListenerAttenuationOverride(class USceneComponent* AttachToComponent, const struct FVector& AttenuationLocationOVerride);
	void ServerViewSelf(const struct FViewTargetTransitionParams& TransitionParams);
	void ServerViewPrevPlayer();
	void ServerViewNextPlayer();
	void ServerVerifyViewTarget();
	void ServerUpdateMultipleLevelsVisibility(TArray<struct FUpdateLevelVisibilityLevelInfo> LevelVisibilities);
	void ServerUpdateLevelVisibility(const struct FName& PackageName, bool bIsVisible);
	void ServerUpdateCamera(const struct FVector_NetQuantize& CamLoc, int CamPitchAndYaw);
	void ServerUnmutePlayer(const struct FUniqueNetIdRepl& PlayerId);
	void ServerToggleAILogging();
	void ServerShortTimeout();
	void ServerSetSpectatorWaiting(bool bWaiting);
	void ServerSetSpectatorLocation(const struct FVector& NewLoc, const struct FRotator& NewRot);
	void ServerRestartPlayer();
	void ServerPause();
	void ServerNotifyLoadedWorld(const struct FName& WorldPackageName);
	void ServerMutePlayer(const struct FUniqueNetIdRepl& PlayerId);
	void ServerCheckClientPossessionReliable();
	void ServerCheckClientPossession();
	void ServerChangeName(const struct FString& S);
	void ServerCamera(const struct FName& NewMode);
	void ServerAcknowledgePossession(class APawn* P);
	void SendToConsole(const struct FString& Command);
	void RestartLevel();
	void ResetControllerLightColor();
	bool ProjectWorldLocationToScreen(const struct FVector& WorldLocation, struct FVector2D* ScreenLocation, bool bPlayerViewportRelative);
	void PlayHapticEffect(class UHapticFeedbackEffect_Base* HapticEffect, EControllerHand Hand, float Scale, bool bLoop);
	void PlayDynamicForceFeedback(float Intensity, float Duration, bool bAffectsLeftLarge, bool bAffectsLeftSmall, bool bAffectsRightLarge, bool bAffectsRightSmall, TEnumAsByte<EDynamicForceFeedbackAction> Action, const struct FLatentActionInfo& LatentInfo);
	void Pause();
	void OnServerStartedVisualLogger(bool bIsLogging);
	void LocalTravel(const struct FString& URL);
	void K2_ClientPlayForceFeedback(class UForceFeedbackEffect* ForceFeedbackEffect, const struct FName& Tag, bool bLooping, bool bIgnoreTimeDilation, bool bPlayWhilePaused);
	bool IsInputKeyDown(const struct FKey& Key);
	void GetViewportSize(int* SizeX, int* SizeY);
	class ASpectatorPawn* GetSpectatorPawn();
	bool GetMousePosition(float* LocationX, float* LocationY);
	struct FVector GetInputVectorKeyState(const struct FKey& Key);
	void GetInputTouchState(TEnumAsByte<ETouchIndex> FingerIndex, float* LocationX, float* LocationY, bool* bIsCurrentlyPressed);
	void GetInputMouseDelta(float* DeltaX, float* DeltaY);
	void GetInputMotionState(struct FVector* Tilt, struct FVector* RotationRate, struct FVector* Gravity, struct FVector* Acceleration);
	float GetInputKeyTimeDown(const struct FKey& Key);
	void GetInputAnalogStickState(TEnumAsByte<EControllerAnalogStick> WhichStick, float* StickX, float* StickY);
	float GetInputAnalogKeyState(const struct FKey& Key);
	class AHUD* GetHUD();
	bool GetHitResultUnderFingerForObjects(TEnumAsByte<ETouchIndex> FingerIndex, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, struct FHitResult* HitResult);
	bool GetHitResultUnderFingerByChannel(TEnumAsByte<ETouchIndex> FingerIndex, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, struct FHitResult* HitResult);
	bool GetHitResultUnderFinger(TEnumAsByte<ETouchIndex> FingerIndex, TEnumAsByte<ECollisionChannel> TraceChannel, bool bTraceComplex, struct FHitResult* HitResult);
	bool GetHitResultUnderCursorForObjects(TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, struct FHitResult* HitResult);
	bool GetHitResultUnderCursorByChannel(TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, struct FHitResult* HitResult);
	bool GetHitResultUnderCursor(TEnumAsByte<ECollisionChannel> TraceChannel, bool bTraceComplex, struct FHitResult* HitResult);
	struct FVector GetFocalLocation();
	void FOV(float NewFOV);
	void EnableCheats();
	bool DeprojectScreenPositionToWorld(float ScreenX, float ScreenY, struct FVector* WorldLocation, struct FVector* WorldDirection);
	bool DeprojectMousePositionToWorld(struct FVector* WorldLocation, struct FVector* WorldDirection);
	void ConsoleKey(const struct FKey& Key);
	void ClientWasKicked(const struct FText& KickReason);
	void ClientVoiceHandshakeComplete();
	void ClientUpdateMultipleLevelsStreamingStatus(TArray<struct FUpdateLevelStreamingLevelStatus> LevelStatuses);
	void ClientUpdateLevelStreamingStatus(const struct FName& PackageName, bool bNewShouldBeLoaded, bool bNewShouldBeVisible, bool bNewShouldBlockOnLoad, int LODIndex);
	void ClientUnmutePlayer(const struct FUniqueNetIdRepl& PlayerId);
	void ClientTravelInternal(const struct FString& URL, TEnumAsByte<ETravelType> TravelType, bool bSeamless, const struct FGuid& MapPackageGuid);
	void ClientTravel(const struct FString& URL, TEnumAsByte<ETravelType> TravelType, bool bSeamless, const struct FGuid& MapPackageGuid);
	void ClientTeamMessage(class APlayerState* SenderPlayerState, const struct FString& S, const struct FName& Type, float MsgLifeTime);
	void ClientStopForceFeedback(class UForceFeedbackEffect* ForceFeedbackEffect, const struct FName& Tag);
	void ClientStopCameraShake(class UClass* Shake, bool bImmediately);
	void ClientStopCameraAnim(class UCameraAnim* AnimToStop);
	void ClientStartOnlineSession();
	void ClientSpawnCameraLensEffect(class UClass* LensEffectEmitterClass);
	void ClientSetViewTarget(class AActor* A, const struct FViewTargetTransitionParams& TransitionParams);
	void ClientSetSpectatorWaiting(bool bWaiting);
	void ClientSetHUD(class UClass* NewHUDClass);
	void ClientSetForceMipLevelsToBeResident(class UMaterialInterface* Material, float ForceDuration, int CinematicTextureGroups);
	void ClientSetCinematicMode(bool bInCinematicMode, bool bAffectsMovement, bool bAffectsTurning, bool bAffectsHUD);
	void ClientSetCameraMode(const struct FName& NewCamMode);
	void ClientSetCameraFade(bool bEnableFading, const struct FColor& FadeColor, const struct FVector2D& FadeAlpha, float FadeTime, bool bFadeAudio);
	void ClientSetBlockOnAsyncLoading();
	void ClientReturnToMainMenuWithTextReason(const struct FText& ReturnReason);
	void ClientReturnToMainMenu(const struct FString& ReturnReason);
	void ClientRetryClientRestart(class APawn* NewPawn);
	void ClientRestart(class APawn* NewPawn);
	void ClientReset();
	void ClientRepObjRef(class UObject* Object);
	void ClientReceiveLocalizedMessage(class UClass* Message, int Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject);
	void ClientPrestreamTextures(class AActor* ForcedActor, float ForceDuration, bool bEnableStreaming, int CinematicTextureGroups);
	void ClientPrepareMapChange(const struct FName& LevelName, bool bFirst, bool bLast);
	void ClientPlaySoundAtLocation(class USoundBase* Sound, const struct FVector& Location, float VolumeMultiplier, float PitchMultiplier);
	void ClientPlaySound(class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier);
	void ClientPlayForceFeedback_Internal(class UForceFeedbackEffect* ForceFeedbackEffect, const struct FForceFeedbackParameters& Params);
	void ClientPlayCameraShake(class UClass* Shake, float Scale, TEnumAsByte<ECameraAnimPlaySpace> PlaySpace, const struct FRotator& UserPlaySpaceRot);
	void ClientPlayCameraAnim(class UCameraAnim* AnimToPlay, float Scale, float Rate, float BlendInTime, float blendOutTime, bool bLoop, bool bRandomStartTime, TEnumAsByte<ECameraAnimPlaySpace> Space, const struct FRotator& CustomPlaySpace);
	void ClientMutePlayer(const struct FUniqueNetIdRepl& PlayerId);
	void ClientMessage(const struct FString& S, const struct FName& Type, float MsgLifeTime);
	void ClientIgnoreMoveInput(bool bIgnore);
	void ClientIgnoreLookInput(bool bIgnore);
	void ClientGotoState(const struct FName& NewState);
	void ClientGameEnded(class AActor* EndGameFocus, bool bIsWinner);
	void ClientForceGarbageCollection();
	void ClientFlushLevelStreaming();
	void ClientEndOnlineSession();
	void ClientEnableNetworkVoice(bool bEnable);
	void ClientCommitMapChange();
	void ClientClearCameraLensEffects();
	void ClientCapBandwidth(int Cap);
	void ClientCancelPendingMapChange();
	void ClientAddTextureStreamingLoc(const struct FVector& InLoc, float Duration, bool bOverrideLocation);
	void ClearAudioListenerOverride();
	void ClearAudioListenerAttenuationOverride();
	bool CanRestartPlayer();
	void Camera(const struct FName& NewMode);
	void AddYawInput(float Val);
	void AddRollInput(float Val);
	void AddPitchInput(float Val);
	void ActivateTouchInterface(class UTouchInterface* NewTouchInterface);
};

// Class Engine.ActorComponent
// 0x00A0 (FullSize[0x00C8] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0506 - 0x0000 // Minimum to subtract -> (0008)
class UActorComponent : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0506, struct FActorComponentTickFunction,                                    PrimaryComponentTick);                                     // 0x0030(0x0058)  (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0506, TArray<struct FName>,                                                  ComponentTags);                                            // 0x0088(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0506, TArray<class UAssetUserData*>,                                         AssetUserData);                                            // 0x0098(0x0010)  (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0084 PADDING_0506, unsigned char,                                                         bReplicates);                                              // 0x00AC(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0084 PADDING_0506, unsigned char,                                                         bNetAddressable);                                          // 0x00AC(0x0001) BIT_FIELD (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0085 PADDING_0506, unsigned char,                                                         bAutoActivate);                                            // 0x00AD(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0086 PADDING_0506, unsigned char,                                                         bIsActive);                                                // 0x00AE(0x0001) BIT_FIELD (Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0086 PADDING_0506, unsigned char,                                                         bEditableWhenInherited);                                   // 0x00AE(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0086 PADDING_0506, unsigned char,                                                         bCanEverAffectNavigation);                                 // 0x00AE(0x0001) BIT_FIELD (Edit, Config, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0086 PADDING_0506, unsigned char,                                                         bIsEditorOnly);                                            // 0x00AE(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_0506, EComponentCreationMethod,                                              CreationMethod);                                           // 0x00B0(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0089 PADDING_0506, struct FScriptMulticastDelegate,                                       OnComponentActivated);                                     // 0x00B1(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008A PADDING_0506, struct FScriptMulticastDelegate,                                       OnComponentDeactivated);                                   // 0x00B2(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_0506, TArray<struct FSimpleMemberReference>,                                 UCSModifiedProperties);                                    // 0x00B8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ActorComponent");
		return ptr;
	}


	void ToggleActive();
	void SetTickGroup(TEnumAsByte<ETickingGroup> NewTickGroup);
	void SetTickableWhenPaused(bool bTickableWhenPaused);
	void SetIsReplicated(bool ShouldReplicate);
	void SetComponentTickInterval(float TickInterval);
	void SetComponentTickEnabled(bool bEnabled);
	void SetAutoActivate(bool bNewAutoActivate);
	void SetActive(bool bNewActive, bool bReset);
	void RemoveTickPrerequisiteComponent(class UActorComponent* PrerequisiteComponent);
	void RemoveTickPrerequisiteActor(class AActor* PrerequisiteActor);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);
	void ReceiveBeginPlay();
	void OnRep_IsActive();
	void K2_DestroyComponent(class UObject* Object);
	bool IsComponentTickEnabled();
	bool IsBeingDestroyed();
	bool IsActive();
	class AActor* GetOwner();
	float GetComponentTickInterval();
	void Deactivate();
	bool ComponentHasTag(const struct FName& Tag);
	void AddTickPrerequisiteComponent(class UActorComponent* PrerequisiteComponent);
	void AddTickPrerequisiteActor(class AActor* PrerequisiteActor);
	void Activate(bool bReset);
};

// Class Engine.SceneComponent
// 0x00B8 (FullSize[0x0180] - InheritedSize[0x00C8])
// LastOffsetWithSize(0x00C8)
#define PADDING_0507 - 0x0000 // Minimum to subtract -> (0018)
class USceneComponent : public UActorComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0018 PADDING_0507, TWeakObjectPtr<class APhysicsVolume>,                                  PhysicsVolume);                                            // 0x00E0(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0507, class USceneComponent*,                                                AttachParent);                                             // 0x00E8(0x0008)  (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0507, struct FName,                                                          AttachSocketName);                                         // 0x00F0(0x0008)  (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0507, TArray<class USceneComponent*>,                                        AttachChildren);                                           // 0x00F8(0x0010)  (ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0507, TArray<class USceneComponent*>,                                        ClientAttachedChildren);                                   // 0x0108(0x0010)  (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x007C PADDING_0507, struct FVector,                                                        RelativeLocation);                                         // 0x0144(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_0507, struct FRotator,                                                       RelativeRotation);                                         // 0x0150(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_0507, struct FVector,                                                        RelativeScale3D);                                          // 0x015C(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0507, struct FVector,                                                        ComponentVelocity);                                        // 0x0168(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0507, unsigned char,                                                         bComponentToWorldUpdated);                                 // 0x0174(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0507, unsigned char,                                                         bAbsoluteLocation);                                        // 0x0174(0x0001) BIT_FIELD (Edit, BlueprintVisible, Net, RepNotify, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0507, unsigned char,                                                         bAbsoluteRotation);                                        // 0x0174(0x0001) BIT_FIELD (Edit, BlueprintVisible, Net, RepNotify, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0507, unsigned char,                                                         bAbsoluteScale);                                           // 0x0174(0x0001) BIT_FIELD (Edit, BlueprintVisible, Net, RepNotify, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0507, unsigned char,                                                         bVisible);                                                 // 0x0174(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0507, unsigned char,                                                         bHiddenInGame);                                            // 0x0174(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0507, unsigned char,                                                         bShouldBeAttached);                                        // 0x0174(0x0001) BIT_FIELD (Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00AD PADDING_0507, unsigned char,                                                         bShouldSnapLocationWhenAttached);                          // 0x0175(0x0001) BIT_FIELD (Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00AD PADDING_0507, unsigned char,                                                         bShouldSnapRotationWhenAttached);                          // 0x0175(0x0001) BIT_FIELD (Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00AD PADDING_0507, unsigned char,                                                         bShouldUpdatePhysicsVolume);                               // 0x0175(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00AD PADDING_0507, unsigned char,                                                         bBoundsChangeTriggersStreamingDataRebuild);                // 0x0175(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_0507, unsigned char,                                                         bUseAttachParentBound);                                    // 0x0175(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B5 PADDING_0507, TEnumAsByte<EComponentMobility>,                                       Mobility);                                                 // 0x017D(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B6 PADDING_0507, TEnumAsByte<EDetailMode>,                                              DetailMode);                                               // 0x017E(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B7 PADDING_0507, struct FScriptMulticastDelegate,                                       PhysicsVolumeChangedDelegate);                             // 0x017F(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SceneComponent");
		return ptr;
	}


	void ToggleVisibility(bool bPropagateToChildren);
	bool SnapTo(class USceneComponent* InParent, const struct FName& InSocketName);
	void SetWorldScale3D(const struct FVector& NewScale);
	void SetVisibility(bool bNewVisibility, bool bPropagateToChildren);
	void SetShouldUpdatePhysicsVolume(bool bInShouldUpdatePhysicsVolume);
	void SetRelativeScale3D(const struct FVector& NewScale3D);
	void SetMobility(TEnumAsByte<EComponentMobility> NewMobility);
	void SetHiddenInGame(bool NewHidden, bool bPropagateToChildren);
	void SetAbsolute(bool bNewAbsoluteLocation, bool bNewAbsoluteRotation, bool bNewAbsoluteScale);
	void ResetRelativeTransform();
	void OnRep_Visibility(bool OldValue);
	void OnRep_Transform();
	void OnRep_AttachSocketName();
	void OnRep_AttachParent();
	void OnRep_AttachChildren();
	void K2_SetWorldTransform(const struct FTransform& NewTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_SetWorldRotation(const struct FRotator& NewRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_SetWorldLocationAndRotation(const struct FVector& NewLocation, const struct FRotator& NewRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_SetWorldLocation(const struct FVector& NewLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_SetRelativeTransform(const struct FTransform& NewTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_SetRelativeRotation(const struct FRotator& NewRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_SetRelativeLocationAndRotation(const struct FVector& NewLocation, const struct FRotator& NewRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_SetRelativeLocation(const struct FVector& NewLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	struct FTransform K2_GetComponentToWorld();
	struct FVector K2_GetComponentScale();
	struct FRotator K2_GetComponentRotation();
	struct FVector K2_GetComponentLocation();
	void K2_DetachFromComponent(EDetachmentRule LocationRule, EDetachmentRule RotationRule, EDetachmentRule ScaleRule, bool bCallModify);
	bool K2_AttachToComponent(class USceneComponent* Parent, const struct FName& SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies);
	bool K2_AttachTo(class USceneComponent* InParent, const struct FName& InSocketName, TEnumAsByte<EAttachLocation> AttachType, bool bWeldSimulatedBodies);
	void K2_AddWorldTransform(const struct FTransform& DeltaTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_AddWorldRotation(const struct FRotator& DeltaRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_AddWorldOffset(const struct FVector& DeltaLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_AddRelativeRotation(const struct FRotator& DeltaRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_AddRelativeLocation(const struct FVector& DeltaLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_AddLocalTransform(const struct FTransform& DeltaTransform, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_AddLocalRotation(const struct FRotator& DeltaRotation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	void K2_AddLocalOffset(const struct FVector& DeltaLocation, bool bSweep, struct FHitResult* SweepHitResult, bool bTeleport);
	bool IsVisible();
	bool IsSimulatingPhysics(const struct FName& BoneName);
	bool IsAnySimulatingPhysics();
	struct FVector GetUpVector();
	struct FTransform GetSocketTransform(const struct FName& InSocketName, TEnumAsByte<ERelativeTransformSpace> TransformSpace);
	struct FRotator GetSocketRotation(const struct FName& InSocketName);
	struct FQuat GetSocketQuaternion(const struct FName& InSocketName);
	struct FVector GetSocketLocation(const struct FName& InSocketName);
	bool GetShouldUpdatePhysicsVolume();
	struct FVector GetRightVector();
	struct FTransform GetRelativeTransform();
	class APhysicsVolume* GetPhysicsVolume();
	void GetParentComponents(TArray<class USceneComponent*>* Parents);
	int GetNumChildrenComponents();
	struct FVector GetForwardVector();
	struct FVector GetComponentVelocity();
	void GetChildrenComponents(bool bIncludeAllDescendants, TArray<class USceneComponent*>* Children);
	class USceneComponent* GetChildComponent(int ChildIndex);
	struct FName GetAttachSocketName();
	class USceneComponent* GetAttachParent();
	TArray<struct FName> GetAllSocketNames();
	bool DoesSocketExist(const struct FName& InSocketName);
	void DetachFromParent(bool bMaintainWorldPosition, bool bCallModify);
};

// Class Engine.DataAsset
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0508 - 0x0000 // Minimum to subtract -> (0000)
class UDataAsset : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0508, class UClass*,                                                         NativeClass);                                              // 0x0028(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DataAsset");
		return ptr;
	}


};

// Class Engine.PrimitiveComponent
// 0x0285 (FullSize[0x0405] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_0509 - 0x0000 // Minimum to subtract -> (0091)
class UPrimitiveComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0091 PADDING_0509, float,                                                                 MinDrawDistance);                                          // 0x0220(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0095 PADDING_0509, float,                                                                 LDMaxDrawDistance);                                        // 0x0224(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0099 PADDING_0509, float,                                                                 CachedMaxDrawDistance);                                    // 0x0228(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009D PADDING_0509, TEnumAsByte<ESceneDepthPriorityGroup>,                                 DepthPriorityGroup);                                       // 0x022C(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009E PADDING_0509, TEnumAsByte<ESceneDepthPriorityGroup>,                                 ViewOwnerDepthPriorityGroup);                              // 0x022D(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009F PADDING_0509, TEnumAsByte<EIndirectLightingCacheQuality>,                            IndirectLightingCacheQuality);                             // 0x022E(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0509, ELightmapType,                                                         LightmapType);                                             // 0x022F(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A1 PADDING_0509, unsigned char,                                                         bUseMaxLODAsImposter);                                     // 0x0230(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A1 PADDING_0509, unsigned char,                                                         bNeverDistanceCull);                                       // 0x0230(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A1 PADDING_0509, unsigned char,                                                         bAlwaysCreatePhysicsState);                                // 0x0230(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A1 PADDING_0509, unsigned char,                                                         bGenerateOverlapEvents);                                   // 0x0230(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00A2 PADDING_0509, unsigned char,                                                         bGenerateLocalOverlapEvents);                              // 0x0231(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00A2 PADDING_0509, unsigned char,                                                         bMultiBodyOverlap);                                        // 0x0231(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A2 PADDING_0509, unsigned char,                                                         bTraceComplexOnMove);                                      // 0x0231(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A2 PADDING_0509, unsigned char,                                                         bReturnMaterialOnMove);                                    // 0x0231(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A2 PADDING_0509, unsigned char,                                                         bUseViewOwnerDepthPriorityGroup);                          // 0x0231(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A2 PADDING_0509, unsigned char,                                                         bAllowCullDistanceVolume);                                 // 0x0231(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A2 PADDING_0509, unsigned char,                                                         bHasMotionBlurVelocityMeshes);                             // 0x0231(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_0509, unsigned char,                                                         bVisibleInReflectionCaptures);                             // 0x0232(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_0509, unsigned char,                                                         bVisibleInRayTracing);                                     // 0x0232(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_0509, unsigned char,                                                         bRenderInMainPass);                                        // 0x0232(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_0509, unsigned char,                                                         bReceivesDecals);                                          // 0x0232(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_0509, unsigned char,                                                         bOwnerNoSee);                                              // 0x0232(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_0509, unsigned char,                                                         bOnlyOwnerSee);                                            // 0x0232(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_0509, unsigned char,                                                         bTreatAsBackgroundForOcclusion);                           // 0x0232(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_0509, unsigned char,                                                         bUseAsOccluder);                                           // 0x0232(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_0509, unsigned char,                                                         bSelectable);                                              // 0x0233(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_0509, unsigned char,                                                         bForceMipStreaming);                                       // 0x0233(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_0509, unsigned char,                                                         bHasPerInstanceHitProxies);                                // 0x0233(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_0509, unsigned char,                                                         CastShadow);                                               // 0x0233(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_0509, unsigned char,                                                         bAffectDynamicIndirectLighting);                           // 0x0233(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_0509, unsigned char,                                                         bAffectDistanceFieldLighting);                             // 0x0233(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_0509, unsigned char,                                                         bCastDynamicShadow);                                       // 0x0233(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_0509, unsigned char,                                                         bCastStaticShadow);                                        // 0x0233(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_0509, unsigned char,                                                         bCastVolumetricTranslucentShadow);                         // 0x0234(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_0509, unsigned char,                                                         bSelfShadowOnly);                                          // 0x0234(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_0509, unsigned char,                                                         bCastFarShadow);                                           // 0x0234(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_0509, unsigned char,                                                         bCastInsetShadow);                                         // 0x0234(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_0509, unsigned char,                                                         bCastCinematicShadow);                                     // 0x0234(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_0509, unsigned char,                                                         bCastHiddenShadow);                                        // 0x0234(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_0509, unsigned char,                                                         bCastShadowAsTwoSided);                                    // 0x0234(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_0509, unsigned char,                                                         bLightAsIfStatic);                                         // 0x0234(0x0001) BIT_FIELD (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A6 PADDING_0509, unsigned char,                                                         bLightAttachmentsAsGroup);                                 // 0x0235(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A6 PADDING_0509, unsigned char,                                                         bReceiveMobileCSMShadows);                                 // 0x0235(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A6 PADDING_0509, unsigned char,                                                         bSingleSampleShadowFromStationaryLights);                  // 0x0235(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A6 PADDING_0509, unsigned char,                                                         bIgnoreRadialImpulse);                                     // 0x0235(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A6 PADDING_0509, unsigned char,                                                         bIgnoreRadialForce);                                       // 0x0235(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A6 PADDING_0509, unsigned char,                                                         bApplyImpulseOnDamage);                                    // 0x0235(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A6 PADDING_0509, unsigned char,                                                         bReplicatePhysicsToAutonomousProxy);                       // 0x0235(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A6 PADDING_0509, unsigned char,                                                         AlwaysLoadOnClient);                                       // 0x0235(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A7 PADDING_0509, unsigned char,                                                         AlwaysLoadOnServer);                                       // 0x0236(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A7 PADDING_0509, unsigned char,                                                         bUseEditorCompositing);                                    // 0x0236(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A7 PADDING_0509, unsigned char,                                                         bRenderCustomDepth);                                       // 0x0236(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0509, TEnumAsByte<EHasCustomNavigableGeometry>,                              bHasCustomNavigableGeometry);                              // 0x0237(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AA PADDING_0509, TEnumAsByte<ECanBeCharacterBase>,                                      CanCharacterStepUpOn);                                     // 0x0239(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AB PADDING_0509, struct FLightingChannels,                                              LightingChannels);                                         // 0x023A(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0509, ERendererStencilMask,                                                  CustomDepthStencilWriteMask);                              // 0x023B(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_0509, int,                                                                   CustomDepthStencilValue);                                  // 0x023C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B1 PADDING_0509, struct FCustomPrimitiveData,                                           CustomPrimitiveData);                                      // 0x0240(0x0010)  (NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00C1 PADDING_0509, int,                                                                   TranslucencySortPriority);                                 // 0x0250(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C5 PADDING_0509, int,                                                                   VisibilityId);                                             // 0x0254(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C9 PADDING_0509, TArray<class URuntimeVirtualTexture*>,                                 RuntimeVirtualTextures);                                   // 0x0258(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D9 PADDING_0509, int,                                                                   VirtualTextureLodBias);                                    // 0x0268(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00DD PADDING_0509, int,                                                                   VirtualTextureCullMips);                                   // 0x026C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E1 PADDING_0509, int,                                                                   VirtualTextureMinCoverage);                                // 0x0270(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E5 PADDING_0509, ERuntimeVirtualTextureMainPassType,                                    VirtualTextureRenderPassType);                             // 0x0274(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00ED PADDING_0509, float,                                                                 LpvBiasMultiplier);                                        // 0x027C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F9 PADDING_0509, float,                                                                 BoundsScale);                                              // 0x0288(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0109 PADDING_0509, TArray<class AActor*>,                                                 MoveIgnoreActors);                                         // 0x0298(0x0010)  (ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0119 PADDING_0509, TArray<class UPrimitiveComponent*>,                                    MoveIgnoreComponents);                                     // 0x02A8(0x0010)  (ExportObject, ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0139 PADDING_0509, struct FBodyInstance,                                                  BodyInstance);                                             // 0x02C8(0x0110)  (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0249 PADDING_0509, struct FScriptMulticastDelegate,                                       OnComponentHit);                                           // 0x03D8(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x024A PADDING_0509, struct FScriptMulticastDelegate,                                       OnComponentBeginOverlap);                                  // 0x03D9(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x024B PADDING_0509, struct FScriptMulticastDelegate,                                       OnComponentEndOverlap);                                    // 0x03DA(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x024C PADDING_0509, struct FScriptMulticastDelegate,                                       OnComponentWake);                                          // 0x03DB(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x024D PADDING_0509, struct FScriptMulticastDelegate,                                       OnComponentSleep);                                         // 0x03DC(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x024F PADDING_0509, struct FScriptMulticastDelegate,                                       OnBeginCursorOver);                                        // 0x03DE(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0250 PADDING_0509, struct FScriptMulticastDelegate,                                       OnEndCursorOver);                                          // 0x03DF(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0251 PADDING_0509, struct FScriptMulticastDelegate,                                       OnClicked);                                                // 0x03E0(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0252 PADDING_0509, struct FScriptMulticastDelegate,                                       OnReleased);                                               // 0x03E1(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0253 PADDING_0509, struct FScriptMulticastDelegate,                                       OnInputTouchBegin);                                        // 0x03E2(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0254 PADDING_0509, struct FScriptMulticastDelegate,                                       OnInputTouchEnd);                                          // 0x03E3(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0255 PADDING_0509, struct FScriptMulticastDelegate,                                       OnInputTouchEnter);                                        // 0x03E4(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0256 PADDING_0509, struct FScriptMulticastDelegate,                                       OnInputTouchLeave);                                        // 0x03E5(0x0010)  (InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0271 PADDING_0509, class UPrimitiveComponent*,                                            LODParentPrimitive);                                       // 0x0400(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PrimitiveComponent");
		return ptr;
	}


	void WakeRigidBody(const struct FName& BoneName);
	void WakeAllRigidBodies();
	void SetWalkableSlopeOverride(const struct FWalkableSlopeOverride& NewOverride);
	void SetUseCCD(bool InUseCCD, const struct FName& BoneName);
	void SetTranslucentSortPriority(int NewTranslucentSortPriority);
	void SetSingleSampleShadowFromStationaryLights(bool bNewSingleSampleShadowFromStationaryLights);
	void SetSimulatePhysics(bool bSimulate);
	void SetRenderInMainPass(bool bValue);
	void SetRenderCustomDepth(bool bValue);
	void SetReceivesDecals(bool bNewReceivesDecals);
	void SetPhysMaterialOverride(class UPhysicalMaterial* NewPhysMaterial);
	void SetPhysicsMaxAngularVelocityInRadians(float NewMaxAngVel, bool bAddToCurrent, const struct FName& BoneName);
	void SetPhysicsMaxAngularVelocityInDegrees(float NewMaxAngVel, bool bAddToCurrent, const struct FName& BoneName);
	void SetPhysicsMaxAngularVelocity(float NewMaxAngVel, bool bAddToCurrent, const struct FName& BoneName);
	void SetPhysicsLinearVelocity(const struct FVector& NewVel, bool bAddToCurrent, const struct FName& BoneName);
	void SetPhysicsAngularVelocityInRadians(const struct FVector& NewAngVel, bool bAddToCurrent, const struct FName& BoneName);
	void SetPhysicsAngularVelocityInDegrees(const struct FVector& NewAngVel, bool bAddToCurrent, const struct FName& BoneName);
	void SetPhysicsAngularVelocity(const struct FVector& NewAngVel, bool bAddToCurrent, const struct FName& BoneName);
	void SetOwnerNoSee(bool bNewOwnerNoSee);
	void SetOnlyOwnerSee(bool bNewOnlyOwnerSee);
	void SetNotifyRigidBodyCollision(bool bNewNotifyRigidBodyCollision);
	void SetMaterialByName(const struct FName& MaterialSlotName, class UMaterialInterface* Material);
	void SetMaterial(int ElementIndex, class UMaterialInterface* Material);
	void SetMassScale(const struct FName& BoneName, float InMassScale);
	void SetMassOverrideInKg(const struct FName& BoneName, float MassInKg, bool bOverrideMass);
	void SetLinearDamping(float InDamping);
	void SetGenerateOverlapEvents(bool bInGenerateOverlapEvents);
	void SetGenerateLocalOverlapEvents(bool bInGenerateLocalOverlapEvents);
	void SetEnableGravity(bool bGravityEnabled);
	void SetCustomPrimitiveDataVector4(int DataIndex, const struct FVector4& Value);
	void SetCustomPrimitiveDataVector3(int DataIndex, const struct FVector& Value);
	void SetCustomPrimitiveDataVector2(int DataIndex, const struct FVector2D& Value);
	void SetCustomPrimitiveDataFloat(int DataIndex, float Value);
	void SetCustomDepthStencilWriteMask(ERendererStencilMask WriteMaskBit);
	void SetCustomDepthStencilValue(int Value);
	void SetCullDistance(float NewCullDistance);
	void SetConstraintMode(TEnumAsByte<EDOFMode> ConstraintMode);
	void SetCollisionResponseToChannel(TEnumAsByte<ECollisionChannel> Channel, TEnumAsByte<ECollisionResponse> NewResponse);
	void SetCollisionResponseToAllChannels(TEnumAsByte<ECollisionResponse> NewResponse);
	void SetCollisionProfileName(const struct FName& InCollisionProfileName);
	void SetCollisionObjectType(TEnumAsByte<ECollisionChannel> Channel);
	void SetCollisionEnabled(TEnumAsByte<ECollisionEnabled> NewType);
	void SetCenterOfMass(const struct FVector& CenterOfMassOffset, const struct FName& BoneName);
	void SetCastShadow(bool NewCastShadow);
	void SetBoundsScale(float NewBoundsScale);
	void SetAngularDamping(float InDamping);
	void SetAllUseCCD(bool InUseCCD);
	void SetAllPhysicsLinearVelocity(const struct FVector& NewVel, bool bAddToCurrent);
	void SetAllPhysicsAngularVelocityInRadians(const struct FVector& NewAngVel, bool bAddToCurrent);
	void SetAllPhysicsAngularVelocityInDegrees(const struct FVector& NewAngVel, bool bAddToCurrent);
	void SetAllMassScale(float InMassScale);
	struct FVector ScaleByMomentOfInertia(const struct FVector& InputVector, const struct FName& BoneName);
	void PutRigidBodyToSleep(const struct FName& BoneName);
	bool K2_SphereTraceComponent(const struct FVector& TraceStart, const struct FVector& TraceEnd, float SphereRadius, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, struct FVector* HitLocation, struct FVector* HitNormal, struct FName* BoneName, struct FHitResult* OutHit);
	bool K2_SphereOverlapComponent(const struct FVector& InSphereCentre, float InSphereRadius, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, struct FVector* HitLocation, struct FVector* HitNormal, struct FName* BoneName, struct FHitResult* OutHit);
	bool K2_LineTraceComponent(const struct FVector& TraceStart, const struct FVector& TraceEnd, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, struct FVector* HitLocation, struct FVector* HitNormal, struct FName* BoneName, struct FHitResult* OutHit);
	bool K2_IsQueryCollisionEnabled();
	bool K2_IsPhysicsCollisionEnabled();
	bool K2_IsCollisionEnabled();
	bool K2_BoxOverlapComponent(const struct FVector& InBoxCentre, const struct FBox& InBox, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, struct FVector* HitLocation, struct FVector* HitNormal, struct FName* BoneName, struct FHitResult* OutHit);
	bool IsOverlappingComponent(class UPrimitiveComponent* OtherComp);
	bool IsOverlappingActor(class AActor* Other);
	bool IsGravityEnabled();
	bool IsAnyRigidBodyAwake();
	void IgnoreComponentWhenMoving(class UPrimitiveComponent* Component, bool bShouldIgnore);
	void IgnoreActorWhenMoving(class AActor* Actor, bool bShouldIgnore);
	struct FWalkableSlopeOverride GetWalkableSlopeOverride();
	struct FVector GetPhysicsLinearVelocityAtPoint(const struct FVector& Point, const struct FName& BoneName);
	struct FVector GetPhysicsLinearVelocity(const struct FName& BoneName);
	struct FVector GetPhysicsAngularVelocityInRadians(const struct FName& BoneName);
	struct FVector GetPhysicsAngularVelocityInDegrees(const struct FName& BoneName);
	struct FVector GetPhysicsAngularVelocity(const struct FName& BoneName);
	void GetOverlappingComponents(TArray<class UPrimitiveComponent*>* OutOverlappingComponents);
	void GetOverlappingActors(TArray<class AActor*>* OverlappingActors, class UClass* ClassFilter);
	int GetNumMaterials();
	class UMaterialInterface* GetMaterialFromCollisionFaceIndex(int FaceIndex, int* SectionIndex);
	class UMaterialInterface* GetMaterial(int ElementIndex);
	float GetMassScale(const struct FName& BoneName);
	float GetMass();
	float GetLinearDamping();
	struct FVector GetInertiaTensor(const struct FName& BoneName);
	bool GetGenerateOverlapEvents();
	bool GetGenerateLocalOverlapEvents();
	TEnumAsByte<ECollisionResponse> GetCollisionResponseToChannel(TEnumAsByte<ECollisionChannel> Channel);
	struct FName GetCollisionProfileName();
	TEnumAsByte<ECollisionChannel> GetCollisionObjectType();
	TEnumAsByte<ECollisionEnabled> GetCollisionEnabled();
	float GetClosestPointOnCollision(const struct FVector& Point, struct FVector* OutPointOnBody, const struct FName& BoneName);
	struct FVector GetCenterOfMass(const struct FName& BoneName);
	float GetAngularDamping();
	class UMaterialInstanceDynamic* CreateDynamicMaterialInstance(int ElementIndex, class UMaterialInterface* SourceMaterial, const struct FName& OptionalName);
	class UMaterialInstanceDynamic* CreateAndSetMaterialInstanceDynamicFromMaterial(int ElementIndex, class UMaterialInterface* Parent);
	class UMaterialInstanceDynamic* CreateAndSetMaterialInstanceDynamic(int ElementIndex);
	TArray<class UPrimitiveComponent*> CopyArrayOfMoveIgnoreComponents();
	TArray<class AActor*> CopyArrayOfMoveIgnoreActors();
	void ClearMoveIgnoreComponents();
	void ClearMoveIgnoreActors();
	bool CanCharacterStepUp(class APawn* Pawn);
	void AddTorqueInRadians(const struct FVector& Torque, const struct FName& BoneName, bool bAccelChange);
	void AddTorqueInDegrees(const struct FVector& Torque, const struct FName& BoneName, bool bAccelChange);
	void AddTorque(const struct FVector& Torque, const struct FName& BoneName, bool bAccelChange);
	void AddRadialImpulse(const struct FVector& Origin, float Radius, float Strength, TEnumAsByte<ERadialImpulseFalloff> Falloff, bool bVelChange);
	void AddRadialForce(const struct FVector& Origin, float Radius, float Strength, TEnumAsByte<ERadialImpulseFalloff> Falloff, bool bAccelChange);
	void AddImpulseAtLocation(const struct FVector& Impulse, const struct FVector& Location, const struct FName& BoneName);
	void AddImpulse(const struct FVector& Impulse, const struct FName& BoneName, bool bVelChange);
	void AddForceAtLocationLocal(const struct FVector& Force, const struct FVector& Location, const struct FName& BoneName);
	void AddForceAtLocation(const struct FVector& Force, const struct FVector& Location, const struct FName& BoneName);
	void AddForce(const struct FVector& Force, const struct FName& BoneName, bool bAccelChange);
	void AddAngularImpulseInRadians(const struct FVector& Impulse, const struct FName& BoneName, bool bVelChange);
	void AddAngularImpulseInDegrees(const struct FVector& Impulse, const struct FName& BoneName, bool bVelChange);
	void AddAngularImpulse(const struct FVector& Impulse, const struct FName& BoneName, bool bVelChange);
};

// Class Engine.MeshComponent
// 0x0024 (FullSize[0x0429] - InheritedSize[0x0405])
// LastOffsetWithSize(0x0408)
#define PADDING_050A - 0x0000 // Minimum to subtract -> (0000)
class UMeshComponent : public UPrimitiveComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_050A, TArray<class UMaterialInterface*>,                                     OverrideMaterials);                                        // 0x0408(0x0010)  (Edit, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_050A, bool,                                                                  bEnableMaterialParameterCaching);                          // 0x0428(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MeshComponent");
		return ptr;
	}


	void SetVectorParameterValueOnMaterials(const struct FName& ParameterName, const struct FVector& ParameterValue);
	void SetScalarParameterValueOnMaterials(const struct FName& ParameterName, float ParameterValue);
	void PrestreamTextures(float Seconds, bool bPrioritizeCharacterTextures, int CinematicTextureGroups);
	bool IsMaterialSlotNameValid(const struct FName& MaterialSlotName);
	TArray<struct FName> GetMaterialSlotNames();
	TArray<class UMaterialInterface*> GetMaterials();
	int GetMaterialIndex(const struct FName& MaterialSlotName);
};

// Class Engine.SkinnedMeshComponent
// 0x01A3 (FullSize[0x05CC] - InheritedSize[0x0429])
// LastOffsetWithSize(0x0429)
#define PADDING_050B - 0x0000 // Minimum to subtract -> (0007)
class USkinnedMeshComponent : public UMeshComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_050B, class USkeletalMesh*,                                                  SkeletalMesh);                                             // 0x0430(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_050B, TWeakObjectPtr<class USkinnedMeshComponent>,                           MasterPoseComponent);                                      // 0x0438(0x0008)  (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010F PADDING_050B, class UPhysicsAsset*,                                                  PhysicsAssetOverride);                                     // 0x0538(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0117 PADDING_050B, int,                                                                   ForcedLodModel);                                           // 0x0540(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x011B PADDING_050B, int,                                                                   MinLodModel);                                              // 0x0544(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0127 PADDING_050B, float,                                                                 StreamingDistanceMultiplier);                              // 0x0550(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0137 PADDING_050B, TArray<struct FSkelMeshComponentLODInfo>,                              LODInfo);                                                  // 0x0560(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016B PADDING_050B, EVisibilityBasedAnimTickOption,                                        VisibilityBasedAnimTickOption);                            // 0x0594(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016D PADDING_050B, unsigned char,                                                         bOverrideMinLOD);                                          // 0x0596(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016D PADDING_050B, unsigned char,                                                         bUseBoundsFromMasterPoseComponent);                        // 0x0596(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016D PADDING_050B, unsigned char,                                                         bForceWireframe);                                          // 0x0596(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016D PADDING_050B, unsigned char,                                                         bDisplayBones);                                            // 0x0596(0x0001) BIT_FIELD (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016D PADDING_050B, unsigned char,                                                         bDisableMorphTarget);                                      // 0x0596(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016D PADDING_050B, unsigned char,                                                         bHideSkin);                                                // 0x0596(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016E PADDING_050B, unsigned char,                                                         bPerBoneMotionBlur);                                       // 0x0597(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016E PADDING_050B, unsigned char,                                                         bComponentUseFixedSkelBounds);                             // 0x0597(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016E PADDING_050B, unsigned char,                                                         bConsiderAllBodiesForBounds);                              // 0x0597(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016E PADDING_050B, unsigned char,                                                         bSyncAttachParentLOD);                                     // 0x0597(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016E PADDING_050B, unsigned char,                                                         bCanHighlightSelectedSections);                            // 0x0597(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016E PADDING_050B, unsigned char,                                                         bRecentlyRendered);                                        // 0x0597(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016E PADDING_050B, unsigned char,                                                         bCastCapsuleDirectShadow);                                 // 0x0597(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016E PADDING_050B, unsigned char,                                                         bCastCapsuleIndirectShadow);                               // 0x0597(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016F PADDING_050B, unsigned char,                                                         bCPUSkinning);                                             // 0x0598(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016F PADDING_050B, unsigned char,                                                         bEnableUpdateRateOptimizations);                           // 0x0598(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016F PADDING_050B, unsigned char,                                                         bDisplayDebugUpdateRateOptimizations);                     // 0x0598(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016F PADDING_050B, unsigned char,                                                         bRenderStatic);                                            // 0x0598(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016F PADDING_050B, unsigned char,                                                         bIgnoreMasterPoseComponentLOD);                            // 0x0598(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016F PADDING_050B, unsigned char,                                                         bCachedLocalBoundsUpToDate);                               // 0x0598(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0170 PADDING_050B, unsigned char,                                                         bForceMeshObjectUpdate);                                   // 0x0599(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0173 PADDING_050B, float,                                                                 CapsuleIndirectShadowMinVisibility);                       // 0x059C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0187 PADDING_050B, struct FBoxSphereBounds,                                               CachedLocalBounds);                                        // 0x05B0(0x001C)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SkinnedMeshComponent");
		return ptr;
	}


	void UnloadSkinWeightProfile(const struct FName& InProfileName);
	void UnHideBoneByName(const struct FName& BoneName);
	void TransformToBoneSpace(const struct FName& BoneName, const struct FVector& InPosition, const struct FRotator& InRotation, struct FVector* OutPosition, struct FRotator* OutRotation);
	void TransformFromBoneSpace(const struct FName& BoneName, const struct FVector& InPosition, const struct FRotator& InRotation, struct FVector* OutPosition, struct FRotator* OutRotation);
	void ShowMaterialSection(int MaterialID, bool bShow, int LODIndex);
	void ShowAllMaterialSections(int LODIndex);
	void SetVertexColorOverride_LinearColor(int LODIndex, TArray<struct FLinearColor> VertexColors);
	bool SetSkinWeightProfile(const struct FName& InProfileName);
	void SetSkinWeightOverride(int LODIndex, TArray<struct FSkelMeshSkinWeightInfo> SkinWeights);
	void SetSkeletalMesh(class USkeletalMesh* NewMesh, bool bReinitPose);
	void SetRenderStatic(bool bNewValue);
	void SetPhysicsAsset(class UPhysicsAsset* NewPhysicsAsset, bool bForceReInit);
	void SetMinLOD(int InNewMinLOD);
	void SetMasterPoseComponent(class USkinnedMeshComponent* NewMasterBoneComponent, bool bForceUpdate);
	void SetForcedLOD(int InNewForcedLOD);
	void SetCastCapsuleIndirectShadow(bool bNewValue);
	void SetCastCapsuleDirectShadow(bool bNewValue);
	void SetCapsuleIndirectShadowMinVisibility(float NewValue);
	bool IsUsingSkinWeightProfile();
	bool IsMaterialSectionShown(int MaterialID, int LODIndex);
	bool IsBoneHiddenByName(const struct FName& BoneName);
	void HideBoneByName(const struct FName& BoneName, TEnumAsByte<EPhysBodyOp> PhysBodyOption);
	bool GetTwistAndSwingAngleOfDeltaRotationFromRefPose(const struct FName& BoneName, float* OutTwistAngle, float* OutSwingAngle);
	struct FName GetSocketBoneName(const struct FName& InSocketName);
	struct FVector GetRefPosePosition(int BoneIndex);
	struct FName GetParentBone(const struct FName& BoneName);
	int GetNumLODs();
	int GetNumBones();
	struct FTransform GetDeltaTransformFromRefPose(const struct FName& BoneName, const struct FName& BaseName);
	struct FName GetCurrentSkinWeightProfileName();
	struct FName GetBoneName(int BoneIndex);
	int GetBoneIndex(const struct FName& BoneName);
	struct FName FindClosestBone_K2(const struct FVector& TestLocation, struct FVector* BoneLocation, float IgnoreScale, bool bRequirePhysicsAsset);
	void ClearVertexColorOverride(int LODIndex);
	void ClearSkinWeightProfile();
	void ClearSkinWeightOverride(int LODIndex);
	bool BoneIsChildOf(const struct FName& BoneName, const struct FName& ParentBoneName);
};

// Class Engine.SkeletalMeshComponent
// 0x03A4 (FullSize[0x0970] - InheritedSize[0x05CC])
// LastOffsetWithSize(0x05CC)
#define PADDING_050C - 0x0000 // Minimum to subtract -> (0024)
class USkeletalMeshComponent : public USkinnedMeshComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0024 PADDING_050C, class UAnimBlueprintGeneratedClass*,                                   AnimBlueprintGeneratedClass);                              // 0x05F0(0x0008)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_050C, class UClass*,                                                         AnimClass);                                                // 0x05F8(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_050C, class UAnimInstance*,                                                  AnimScriptInstance);                                       // 0x0600(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_050C, TArray<class UAnimInstance*>,                                          SubInstances);                                             // 0x0608(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004C PADDING_050C, class UAnimInstance*,                                                  PostProcessAnimInstance);                                  // 0x0618(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0054 PADDING_050C, struct FSingleAnimationPlayData,                                       AnimationData);                                            // 0x0620(0x0018)  (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007C PADDING_050C, struct FVector,                                                        RootBoneTranslation);                                      // 0x0648(0x000C)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_050C, struct FVector,                                                        LineCheckBoundsScale);                                     // 0x0654(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B4 PADDING_050C, TArray<struct FTransform>,                                             CachedBoneSpaceTransforms);                                // 0x0680(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00C4 PADDING_050C, TArray<struct FTransform>,                                             CachedComponentSpaceTransforms);                           // 0x0690(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00F4 PADDING_050C, float,                                                                 GlobalAnimRateScale);                                      // 0x06C0(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F8 PADDING_050C, TEnumAsByte<EKinematicBonesUpdateToPhysics>,                           KinematicBonesUpdateType);                                 // 0x06C4(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F9 PADDING_050C, TEnumAsByte<EPhysicsTransformUpdateMode>,                              PhysicsTransformUpdateMode);                               // 0x06C5(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FB PADDING_050C, TEnumAsByte<EAnimationMode>,                                           AnimationMode);                                            // 0x06C7(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00FD PADDING_050C, unsigned char,                                                         bDisablePostProcessBlueprint);                             // 0x06C9(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00FD PADDING_050C, unsigned char,                                                         bUpdateOverlapsOnAnimationFinalize);                       // 0x06C9(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FD PADDING_050C, unsigned char,                                                         bHasValidBodies);                                          // 0x06C9(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FD PADDING_050C, unsigned char,                                                         bBlendPhysics);                                            // 0x06C9(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FD PADDING_050C, unsigned char,                                                         bEnablePhysicsOnDedicatedServer);                          // 0x06C9(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FE PADDING_050C, unsigned char,                                                         bUpdateJointsFromAnimation);                               // 0x06CA(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FE PADDING_050C, unsigned char,                                                         bDisableClothSimulation);                                  // 0x06CA(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FE PADDING_050C, unsigned char,                                                         bAllowAnimCurveEvaluation);                                // 0x06CA(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00FE PADDING_050C, unsigned char,                                                         bDisableAnimCurves);                                       // 0x06CA(0x0001) BIT_FIELD (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00FE PADDING_050C, unsigned char,                                                         bCollideWithEnvironment);                                  // 0x06CA(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FF PADDING_050C, unsigned char,                                                         bCollideWithAttachedChildren);                             // 0x06CB(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FF PADDING_050C, unsigned char,                                                         bLocalSpaceSimulation);                                    // 0x06CB(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FF PADDING_050C, unsigned char,                                                         bResetAfterTeleport);                                      // 0x06CB(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FF PADDING_050C, unsigned char,                                                         bDeferKinematicBoneUpdate);                                // 0x06CB(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FF PADDING_050C, unsigned char,                                                         bNoSkeletonUpdate);                                        // 0x06CB(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FF PADDING_050C, unsigned char,                                                         bPauseAnims);                                              // 0x06CB(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FF PADDING_050C, unsigned char,                                                         bUseRefPoseOnInitAnim);                                    // 0x06CB(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_050C, unsigned char,                                                         bEnablePerPolyCollision);                                  // 0x06CC(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_050C, unsigned char,                                                         bForceRefpose);                                            // 0x06CC(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_050C, unsigned char,                                                         bOnlyAllowAutonomousTickPose);                             // 0x06CC(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_050C, unsigned char,                                                         bIsAutonomousTickPose);                                    // 0x06CC(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_050C, unsigned char,                                                         bOldForceRefPose);                                         // 0x06CC(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_050C, unsigned char,                                                         bShowPrePhysBones);                                        // 0x06CC(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_050C, unsigned char,                                                         bRequiredBonesUpToDate);                                   // 0x06CC(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_050C, unsigned char,                                                         bAnimTreeInitialised);                                     // 0x06CC(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0101 PADDING_050C, unsigned char,                                                         bIncludeComponentLocationIntoBounds);                      // 0x06CD(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0101 PADDING_050C, unsigned char,                                                         bEnableLineCheckWithBounds);                               // 0x06CD(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0101 PADDING_050C, unsigned char,                                                         bUseBendingElements);                                      // 0x06CD(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0101 PADDING_050C, unsigned char,                                                         bUseTetrahedralConstraints);                               // 0x06CD(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0101 PADDING_050C, unsigned char,                                                         bUseThinShellVolumeConstraints);                           // 0x06CD(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0101 PADDING_050C, unsigned char,                                                         bUseSelfCollisions);                                       // 0x06CD(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0101 PADDING_050C, unsigned char,                                                         bUseContinuousCollisionDetection);                         // 0x06CD(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0101 PADDING_050C, unsigned char,                                                         bPropagateCurvesToSlaves);                                 // 0x06CD(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0102 PADDING_050C, unsigned char,                                                         bSkipKinematicUpdateWhenInterpolating);                    // 0x06CE(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0102 PADDING_050C, unsigned char,                                                         bSkipBoundsUpdateWhenInterpolating);                       // 0x06CE(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0102 PADDING_050C, unsigned char,                                                         bNeedsQueuedAnimEventsDispatched);                         // 0x06CE(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0104 PADDING_050C, uint16_t,                                                              CachedAnimCurveUidVersion);                                // 0x06D0(0x0002)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0108 PADDING_050C, float,                                                                 ClothBlendWeight);                                         // 0x06D4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010C PADDING_050C, float,                                                                 EdgeStiffness);                                            // 0x06D8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0110 PADDING_050C, float,                                                                 BendingStiffness);                                         // 0x06DC(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0114 PADDING_050C, float,                                                                 AreaStiffness);                                            // 0x06E0(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0118 PADDING_050C, float,                                                                 VolumeStiffness);                                          // 0x06E4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x011C PADDING_050C, float,                                                                 StrainLimitingStiffness);                                  // 0x06E8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0120 PADDING_050C, float,                                                                 ShapeTargetStiffness);                                     // 0x06EC(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0124 PADDING_050C, TArray<struct FName>,                                                  DisallowedAnimCurves);                                     // 0x06F0(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0134 PADDING_050C, class UBodySetup*,                                                     BodySetup);                                                // 0x0700(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0144 PADDING_050C, struct FScriptMulticastDelegate,                                       OnConstraintBroken);                                       // 0x0710(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0154 PADDING_050C, class UClass*,                                                         ClothingSimulationFactory);                                // 0x0720(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0254 PADDING_050C, float,                                                                 TeleportDistanceThreshold);                                // 0x0820(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0258 PADDING_050C, float,                                                                 TeleportRotationThreshold);                                // 0x0824(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0264 PADDING_050C, uint32_t,                                                              LastPoseTickFrame);                                        // 0x0830(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x02C4 PADDING_050C, class UClothingSimulationInteractor*,                                  ClothingInteractor);                                       // 0x0890(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0394 PADDING_050C, struct FScriptMulticastDelegate,                                       OnAnimInitialized);                                        // 0x0960(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SkeletalMeshComponent");
		return ptr;
	}


	void UnbindClothFromMasterPoseComponent(bool bRestoreSimulationSpace);
	void ToggleDisablePostProcessBlueprint();
	void TermBodiesBelow(const struct FName& ParentBoneName);
	void SuspendClothingSimulation();
	void Stop();
	void SnapshotPose(struct FPoseSnapshot* Snapshot);
	void SetUpdateAnimationInEditor(bool NewUpdateState);
	void SetTeleportRotationThreshold(float Threshold);
	void SetTeleportDistanceThreshold(float Threshold);
	void SetPosition(float InPos, bool bFireNotifies);
	void SetPlayRate(float Rate);
	void SetPhysicsBlendWeight(float PhysicsBlendWeight);
	void SetNotifyRigidBodyCollisionBelow(bool bNewNotifyRigidBodyCollision, const struct FName& BoneName, bool bIncludeSelf);
	void SetMorphTarget(const struct FName& MorphTargetName, float Value, bool bRemoveZeroWeight);
	void SetLayerOverlay(class UClass* InClass);
	void SetEnablePhysicsBlending(bool bNewBlendPhysics);
	void SetEnableGravityOnAllBodiesBelow(bool bEnableGravity, const struct FName& BoneName, bool bIncludeSelf);
	void SetEnableBodyGravity(bool bEnableGravity, const struct FName& BoneName);
	void SetDisablePostProcessBlueprint(bool bInDisablePostProcess);
	void SetDisableAnimCurves(bool bInDisableAnimCurves);
	void SetConstraintProfileForAll(const struct FName& ProfileName, bool bDefaultIfNotFound);
	void SetConstraintProfile(const struct FName& JointName, const struct FName& ProfileName, bool bDefaultIfNotFound);
	void SetClothMaxDistanceScale(float Scale);
	void SetBodyNotifyRigidBodyCollision(bool bNewNotifyRigidBodyCollision, const struct FName& BoneName);
	void SetAnimClass(class UClass* NewClass);
	void SetAnimationMode(TEnumAsByte<EAnimationMode> InAnimationMode);
	void SetAnimation(class UAnimationAsset* NewAnimToPlay);
	void SetAngularLimits(const struct FName& InBoneName, float Swing1LimitAngle, float TwistLimitAngle, float Swing2LimitAngle);
	void SetAllowedAnimCurvesEvaluation(TArray<struct FName> List, bool bAllow);
	void SetAllowAnimCurveEvaluation(bool bInAllow);
	void SetAllMotorsAngularVelocityDrive(bool bEnableSwingDrive, bool bEnableTwistDrive, bool bSkipCustomPhysicsType);
	void SetAllMotorsAngularPositionDrive(bool bEnableSwingDrive, bool bEnableTwistDrive, bool bSkipCustomPhysicsType);
	void SetAllMotorsAngularDriveParams(float InSpring, float InDamping, float InForceLimit, bool bSkipCustomPhysicsType);
	void SetAllBodiesSimulatePhysics(bool bNewSimulate);
	void SetAllBodiesPhysicsBlendWeight(float PhysicsBlendWeight, bool bSkipCustomPhysicsType);
	void SetAllBodiesBelowSimulatePhysics(const struct FName& InBoneName, bool bNewSimulate, bool bIncludeSelf);
	void SetAllBodiesBelowPhysicsBlendWeight(const struct FName& InBoneName, float PhysicsBlendWeight, bool bSkipCustomPhysicsType, bool bIncludeSelf);
	void ResumeClothingSimulation();
	void ResetClothTeleportMode();
	void ResetAnimInstanceDynamics(ETeleportType InTeleportType);
	void ResetAllowedAnimCurveEvaluation();
	void ResetAllBodiesSimulatePhysics();
	void PlayAnimation(class UAnimationAsset* NewAnimToPlay, bool bLooping);
	void Play(bool bLooping);
	void OverrideAnimationData(class UAnimationAsset* InAnimToPlay, bool bIsLooping, bool bIsPlaying, float Position, float PlayRate);
	bool K2_GetClosestPointOnPhysicsAsset(const struct FVector& WorldPosition, struct FVector* ClosestWorldPosition, struct FVector* Normal, struct FName* BoneName, float* distance);
	bool IsPlaying();
	bool IsClothingSimulationSuspended();
	bool IsBodyGravityEnabled(const struct FName& BoneName);
	bool HasValidAnimationInstance();
	float GetTeleportRotationThreshold();
	float GetTeleportDistanceThreshold();
	void GetSubInstancesByTag(const struct FName& InTag, TArray<class UAnimInstance*>* OutSubInstances);
	class UAnimInstance* GetSubInstanceByTag(const struct FName& InTag);
	struct FVector GetSkeletalCenterOfMass();
	class UAnimInstance* GetPostProcessInstance();
	float GetPosition();
	float GetPlayRate();
	float GetMorphTarget(const struct FName& MorphTargetName);
	class UAnimInstance* GetLayerSubInstanceByGroup(const struct FName& InGroup);
	bool GetDisablePostProcessBlueprint();
	bool GetDisableAnimCurves();
	void GetCurrentJointAngles(const struct FName& InBoneName, float* Swing1Angle, float* TwistAngle, float* Swing2Angle);
	float GetClothMaxDistanceScale();
	class UClothingSimulationInteractor* GetClothingSimulationInteractor();
	float GetBoneMass(const struct FName& BoneName, bool bScaleMass);
	class UAnimInstance* GetAnimInstance();
	class UClass* GetAnimClass();
	TEnumAsByte<EAnimationMode> GetAnimationMode();
	bool GetAllowedAnimCurveEvaluate();
	void ForceClothNextUpdateTeleportAndReset();
	void ForceClothNextUpdateTeleport();
	struct FName FindConstraintBoneName(int ConstraintIndex);
	void ClearMorphTargets();
	void BreakConstraint(const struct FVector& Impulse, const struct FVector& HitLocation, const struct FName& InBoneName);
	void BindClothToMasterPoseComponent();
	void AllowAnimCurveEvaluation(const struct FName& NameOfCurve, bool bAllow);
	void AddImpulseToAllBodiesBelow(const struct FVector& Impulse, const struct FName& BoneName, bool bVelChange, bool bIncludeSelf);
	void AddForceToAllBodiesBelow(const struct FVector& Force, const struct FName& BoneName, bool bAccelChange, bool bIncludeSelf);
	void AccumulateAllBodiesBelowPhysicsBlendWeight(const struct FName& InBoneName, float AddPhysicsBlendWeight, bool bSkipCustomPhysicsType);
};

// Class Engine.AnimInstance
// 0x0158 (FullSize[0x0180] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_050D - 0x0000 // Minimum to subtract -> (0000)
class UAnimInstance : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_050D, class USkeleton*,                                                      CurrentSkeleton);                                          // 0x0028(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_050D, TEnumAsByte<ERootMotionMode>,                                          RootMotionMode);                                           // 0x0030(0x0001)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0009 PADDING_050D, unsigned char,                                                         bUseMultiThreadedAnimationUpdate);                         // 0x0031(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0009 PADDING_050D, unsigned char,                                                         bUsingCopyPoseFromMesh);                                   // 0x0031(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0009 PADDING_050D, unsigned char,                                                         bQueueMontageEvents);                                      // 0x0031(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0010 PADDING_050D, struct FScriptMulticastDelegate,                                       OnMontageBlendingOut);                                     // 0x0038(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_050D, struct FScriptMulticastDelegate,                                       OnMontageStarted);                                         // 0x0048(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_050D, struct FScriptMulticastDelegate,                                       OnMontageEnded);                                           // 0x0058(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_050D, struct FScriptMulticastDelegate,                                       OnAllMontageInstancesEnded);                               // 0x0068(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D8 PADDING_050D, struct FAnimNotifyQueue,                                               NotifyQueue);                                              // 0x0100(0x0070)  (Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0148 PADDING_050D, TArray<struct FAnimNotifyEvent>,                                       ActiveAnimNotifyState);                                    // 0x0170(0x0010)  (ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimInstance");
		return ptr;
	}


	void UnlockAIResources(bool bUnlockMovement, bool UnlockAILogic);
	class APawn* TryGetPawnOwner();
	void StopSlotAnimation(float InBlendOutTime, const struct FName& SlotNodeName);
	void SnapshotPose(struct FPoseSnapshot* Snapshot);
	void SetSubInstanceClassByTag(const struct FName& InTag, class UClass* InClass);
	void SetRootMotionMode(TEnumAsByte<ERootMotionMode> Value);
	void SetMorphTarget(const struct FName& MorphTargetName, float Value);
	void SetLayerOverlay(class UClass* InClass);
	void SavePoseSnapshot(const struct FName& SnapshotName);
	void ResetDynamics(ETeleportType InTeleportType);
	class UAnimMontage* PlaySlotAnimationAsDynamicMontage(class UAnimSequenceBase* Asset, const struct FName& SlotNodeName, float BlendInTime, float blendOutTime, float InPlayRate, int LoopCount, float BlendOutTriggerTime, float InTimeToStartMontageAt);
	float PlaySlotAnimation(class UAnimSequenceBase* Asset, const struct FName& SlotNodeName, float BlendInTime, float blendOutTime, float InPlayRate, int LoopCount);
	void Montage_Stop(float InBlendOutTime, class UAnimMontage* Montage);
	void Montage_SetPosition(class UAnimMontage* Montage, float NewPosition);
	void Montage_SetPlayRate(class UAnimMontage* Montage, float NewPlayRate);
	void Montage_SetNextSection(const struct FName& SectionNameToChange, const struct FName& NextSection, class UAnimMontage* Montage);
	void Montage_Resume(class UAnimMontage* Montage);
	float Montage_Play(class UAnimMontage* MontageToPlay, float InPlayRate, EMontagePlayReturnType ReturnValueType, float InTimeToStartMontageAt, bool bStopAllMontages);
	void Montage_Pause(class UAnimMontage* Montage);
	void Montage_JumpToSectionsEnd(const struct FName& SectionName, class UAnimMontage* Montage);
	void Montage_JumpToSection(const struct FName& SectionName, class UAnimMontage* Montage);
	bool Montage_IsPlaying(class UAnimMontage* Montage);
	bool Montage_IsActive(class UAnimMontage* Montage);
	float Montage_GetPosition(class UAnimMontage* Montage);
	float Montage_GetPlayRate(class UAnimMontage* Montage);
	bool Montage_GetIsStopped(class UAnimMontage* Montage);
	struct FName Montage_GetCurrentSection(class UAnimMontage* Montage);
	float Montage_GetBlendTime(class UAnimMontage* Montage);
	void LockAIResources(bool bLockMovement, bool LockAILogic);
	bool IsSyncGroupBetweenMarkers(const struct FName& InSyncGroupName, const struct FName& PreviousMarker, const struct FName& NextMarker, bool bRespectMarkerOrder);
	bool IsPlayingSlotAnimation(class UAnimSequenceBase* Asset, const struct FName& SlotNodeName);
	bool IsAnyMontagePlaying();
	bool HasMarkerBeenHitThisFrame(const struct FName& SyncGroup, const struct FName& MarkerName);
	bool GetTimeToClosestMarker(const struct FName& SyncGroup, const struct FName& MarkerName, float* OutMarkerTime);
	struct FMarkerSyncAnimPosition GetSyncGroupPosition(const struct FName& InSyncGroupName);
	void GetSubInstancesByTag(const struct FName& InTag, TArray<class UAnimInstance*>* OutSubInstances);
	class UAnimInstance* GetSubInstanceByTag(const struct FName& InTag);
	float GetRelevantAnimTimeRemainingFraction(int MachineIndex, int StateIndex);
	float GetRelevantAnimTimeRemaining(int MachineIndex, int StateIndex);
	float GetRelevantAnimTimeFraction(int MachineIndex, int StateIndex);
	float GetRelevantAnimTime(int MachineIndex, int StateIndex);
	float GetRelevantAnimLength(int MachineIndex, int StateIndex);
	class USkeletalMeshComponent* GetOwningComponent();
	class AActor* GetOwningActor();
	class UAnimInstance* GetLayerSubInstanceByGroup(const struct FName& InGroup);
	float GetInstanceTransitionTimeElapsedFraction(int MachineIndex, int TransitionIndex);
	float GetInstanceTransitionTimeElapsed(int MachineIndex, int TransitionIndex);
	float GetInstanceTransitionCrossfadeDuration(int MachineIndex, int TransitionIndex);
	float GetInstanceStateWeight(int MachineIndex, int StateIndex);
	float GetInstanceMachineWeight(int MachineIndex);
	float GetInstanceCurrentStateElapsedTime(int MachineIndex);
	float GetInstanceAssetPlayerTimeFromEndFraction(int AssetPlayerIndex);
	float GetInstanceAssetPlayerTimeFromEnd(int AssetPlayerIndex);
	float GetInstanceAssetPlayerTimeFraction(int AssetPlayerIndex);
	float GetInstanceAssetPlayerTime(int AssetPlayerIndex);
	float GetInstanceAssetPlayerLength(int AssetPlayerIndex);
	float GetCurveValue(const struct FName& CurveName);
	struct FName GetCurrentStateName(int MachineIndex);
	class UAnimMontage* GetCurrentActiveMontage();
	void GetAllCurveNames(TArray<struct FName>* OutNames);
	void GetActiveCurveNames(EAnimCurveType CurveType, TArray<struct FName>* OutNames);
	void ClearMorphTargets();
	float CalculateDirection(const struct FVector& Velocity, const struct FRotator& BaseRotation);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintPostEvaluateAnimation();
	void BlueprintInitializeAnimation();
	void BlueprintBeginPlay();
};

// Class Engine.AnimNotify
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAnimNotify : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimNotify");
		return ptr;
	}


	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
	struct FString GetNotifyName();
};

// Class Engine.AssetManager
// 0x02B8 (FullSize[0x02E0] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_050F - 0x0000 // Minimum to subtract -> (0298)
class UAssetManager : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0298 PADDING_050F, TArray<class UObject*>,                                                ObjectReferenceList);                                      // 0x02C0(0x0010)  (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x02A8 PADDING_050F, bool,                                                                  bIsGlobalAsyncScanEnvironment);                            // 0x02D0(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x02A9 PADDING_050F, bool,                                                                  bShouldGuessTypeAndName);                                  // 0x02D1(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x02AA PADDING_050F, bool,                                                                  bShouldUseSynchronousLoad);                                // 0x02D2(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x02AB PADDING_050F, bool,                                                                  bIsLoadingFromPakFiles);                                   // 0x02D3(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x02AC PADDING_050F, bool,                                                                  bShouldAcquireMissingChunksOnLoad);                        // 0x02D4(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x02AD PADDING_050F, bool,                                                                  bOnlyCookProductionAssets);                                // 0x02D5(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x02AE PADDING_050F, bool,                                                                  bIsBulkScanning);                                          // 0x02D6(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x02AF PADDING_050F, bool,                                                                  bIsPrimaryAssetDirectoryCurrent);                          // 0x02D7(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x02B0 PADDING_050F, bool,                                                                  bIsManagementDatabaseCurrent);                             // 0x02D8(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x02B1 PADDING_050F, bool,                                                                  bUpdateManagementDatabaseAfterScan);                       // 0x02D9(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x02B2 PADDING_050F, bool,                                                                  bIncludeOnlyOnDiskAssets);                                 // 0x02DA(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x02B4 PADDING_050F, int,                                                                   NumberOfSpawnedNotifications);                             // 0x02DC(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AssetManager");
		return ptr;
	}


};

// Class Engine.Brush
// 0x0048 (FullSize[0x0280] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0510 - 0x0000 // Minimum to subtract -> (0010)
class ABrush : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0510, TEnumAsByte<EBrushType>,                                               BrushType);                                                // 0x0248(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0510, struct FColor,                                                         BrushColor);                                               // 0x024C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0510, int,                                                                   PolyFlags);                                                // 0x0250(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0510, unsigned char,                                                         bColored);                                                 // 0x0254(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0510, unsigned char,                                                         bSolidWhenSelected);                                       // 0x0254(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0510, unsigned char,                                                         bPlaceableFromClassBrowser);                               // 0x0254(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0510, unsigned char,                                                         bNotForClientOrServer);                                    // 0x0254(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0510, class UModel*,                                                         Brush);                                                    // 0x0258(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0510, class UBrushComponent*,                                                BrushComponent);                                           // 0x0260(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0510, unsigned char,                                                         bInManipulation);                                          // 0x0268(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0510, TArray<struct FGeomSelection>,                                         SavedSelections);                                          // 0x0270(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Brush");
		return ptr;
	}


};

// Class Engine.Volume
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
class AVolume : public ABrush
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Volume");
		return ptr;
	}


};

// Class Engine.AudioVolume
// 0x0054 (FullSize[0x02D4] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
#define PADDING_0512 - 0x0000 // Minimum to subtract -> (0000)
class AAudioVolume : public AVolume
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0512, float,                                                                 Priority);                                                 // 0x0280(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0512, int,                                                                   AudioVolumeType);                                          // 0x0284(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0512, unsigned char,                                                         bEnabled);                                                 // 0x0288(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0512, struct FReverbSettings,                                                Settings);                                                 // 0x0290(0x0020)  (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0512, struct FInteriorSettings,                                              AmbientZoneSettings);                                      // 0x02B0(0x0024)  (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AudioVolume");
		return ptr;
	}


	void SetReverbSettings(const struct FReverbSettings& NewReverbSettings);
	void SetPriority(float NewPriority);
	void SetInteriorSettings(const struct FInteriorSettings& NewInteriorSettings);
	void SetEnabled(bool bNewEnabled);
	void SetAudioVolumeType(int NewAudioVolumeType);
	void OnRep_bEnabled();
};

// Class Engine.MovementComponent
// 0x004C (FullSize[0x0114] - InheritedSize[0x00C8])
// LastOffsetWithSize(0x00C8)
#define PADDING_0513 - 0x0000 // Minimum to subtract -> (0010)
class UMovementComponent : public UActorComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0513, class USceneComponent*,                                                UpdatedComponent);                                         // 0x00D8(0x0008)  (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0513, class UPrimitiveComponent*,                                            UpdatedPrimitive);                                         // 0x00E0(0x0008)  (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0513, struct FVector,                                                        Velocity);                                                 // 0x00EC(0x000C)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0513, struct FVector,                                                        PlaneConstraintNormal);                                    // 0x00F8(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x003C PADDING_0513, struct FVector,                                                        PlaneConstraintOrigin);                                    // 0x0104(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0513, unsigned char,                                                         bUpdateOnlyIfRendered);                                    // 0x0110(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0513, unsigned char,                                                         bAutoUpdateTickRegistration);                              // 0x0110(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0513, unsigned char,                                                         bTickBeforeOwner);                                         // 0x0110(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0513, unsigned char,                                                         bAutoRegisterUpdatedComponent);                            // 0x0110(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0513, unsigned char,                                                         bConstrainToPlane);                                        // 0x0110(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0513, unsigned char,                                                         bSnapToPlaneAtStart);                                      // 0x0110(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0513, unsigned char,                                                         bAutoRegisterPhysicsVolumeUpdates);                        // 0x0110(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0513, unsigned char,                                                         bComponentShouldUpdatePhysicsVolume);                      // 0x0110(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004B PADDING_0513, EPlaneConstraintAxisSetting,                                           PlaneConstraintAxisSetting);                               // 0x0113(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MovementComponent");
		return ptr;
	}


	void StopMovementImmediately();
	void SnapUpdatedComponentToPlane();
	void SetUpdatedComponent(class USceneComponent* NewUpdatedComponent);
	void SetPlaneConstraintOrigin(const struct FVector& PlaneOrigin);
	void SetPlaneConstraintNormal(const struct FVector& PlaneNormal);
	void SetPlaneConstraintFromVectors(const struct FVector& Forward, const struct FVector& Up);
	void SetPlaneConstraintEnabled(bool bEnabled);
	void SetPlaneConstraintAxisSetting(EPlaneConstraintAxisSetting NewAxisSetting);
	void PhysicsVolumeChanged(class APhysicsVolume* NewVolume);
	bool K2_MoveUpdatedComponent(const struct FVector& Delta, const struct FRotator& NewRotation, struct FHitResult* OutHit, bool bSweep, bool bTeleport);
	float K2_GetModifiedMaxSpeed();
	float K2_GetMaxSpeedModifier();
	bool IsExceedingMaxSpeed(float MaxSpeed);
	struct FVector GetPlaneConstraintOrigin();
	struct FVector GetPlaneConstraintNormal();
	EPlaneConstraintAxisSetting GetPlaneConstraintAxisSetting();
	class APhysicsVolume* GetPhysicsVolume();
	float GetMaxSpeed();
	float GetGravityZ();
	struct FVector ConstrainNormalToPlane(const struct FVector& Normal);
	struct FVector ConstrainLocationToPlane(const struct FVector& Location);
	struct FVector ConstrainDirectionToPlane(const struct FVector& Direction);
};

// Class Engine.NavMovementComponent
// 0x0044 (FullSize[0x0158] - InheritedSize[0x0114])
// LastOffsetWithSize(0x0114)
#define PADDING_0514 - 0x0000 // Minimum to subtract -> (0004)
class UNavMovementComponent : public UMovementComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_0514, struct FNavAgentProperties,                                            NavAgentProps);                                            // 0x0118(0x0030)  (Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0514, float,                                                                 FixedPathBrakingDistance);                                 // 0x0148(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0514, unsigned char,                                                         bUpdateNavAgentWithOwnersCollision);                       // 0x014C(0x0001) BIT_FIELD (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0514, unsigned char,                                                         bUseAccelerationForPaths);                                 // 0x014C(0x0001) BIT_FIELD (Edit, Config, GlobalConfig, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0514, unsigned char,                                                         bUseFixedBrakingDistanceForPaths);                         // 0x014C(0x0001) BIT_FIELD (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0039 PADDING_0514, struct FMovementProperties,                                            MovementState);                                            // 0x014D(0x0001)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_0514, class UObject*,                                                        PathFollowingComp);                                        // 0x0150(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NavMovementComponent");
		return ptr;
	}


	void StopMovementKeepPathing();
	void StopActiveMovement();
	bool IsSwimming();
	bool IsMovingOnGround();
	bool IsFlying();
	bool IsFalling();
	bool IsCrouching();
};

// Class Engine.PawnMovementComponent
// 0x0008 (FullSize[0x0160] - InheritedSize[0x0158])
// LastOffsetWithSize(0x0158)
#define PADDING_0515 - 0x0000 // Minimum to subtract -> (0000)
class UPawnMovementComponent : public UNavMovementComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0515, class APawn*,                                                          PawnOwner);                                                // 0x0158(0x0008)  (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PawnMovementComponent");
		return ptr;
	}


	struct FVector K2_GetInputVector();
	bool IsMoveInputIgnored();
	struct FVector GetPendingInputVector();
	class APawn* GetPawnOwner();
	struct FVector GetLastInputVector();
	struct FVector ConsumeInputVector();
	void AddInputVector(const struct FVector& WorldVector, bool bForce);
};

// Class Engine.Pawn
// 0x006C (FullSize[0x02A4] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0516 - 0x0000 // Minimum to subtract -> (0018)
class APawn : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0018 PADDING_0516, unsigned char,                                                         bUseControllerRotationPitch);                              // 0x0250(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0516, unsigned char,                                                         bUseControllerRotationYaw);                                // 0x0250(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0516, unsigned char,                                                         bUseControllerRotationRoll);                               // 0x0250(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0516, unsigned char,                                                         bCanAffectNavigationGeneration);                           // 0x0250(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0516, float,                                                                 BaseEyeHeight);                                            // 0x0254(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0516, TEnumAsByte<EAutoReceiveInput>,                                        AutoPossessPlayer);                                        // 0x0258(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0021 PADDING_0516, EAutoPossessAI,                                                        AutoPossessAI);                                            // 0x0259(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0022 PADDING_0516, unsigned char,                                                         RemoteViewPitch);                                          // 0x025A(0x0001)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0516, class UClass*,                                                         AIControllerClass);                                        // 0x0260(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0516, class APlayerState*,                                                   PlayerState);                                              // 0x0268(0x0008)  (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0516, class AController*,                                                    LastHitBy);                                                // 0x0278(0x0008)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0516, class AController*,                                                    Controller);                                               // 0x0280(0x0008)  (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0054 PADDING_0516, struct FVector,                                                        ControlInputVector);                                       // 0x028C(0x000C)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0516, struct FVector,                                                        LastControlInputVector);                                   // 0x0298(0x000C)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Pawn");
		return ptr;
	}


	void SpawnDefaultController();
	void SetCanAffectNavigationGeneration(bool bNewValue, bool bForceUpdate);
	void ReceiveUnpossessed(class AController* OldController);
	void ReceivePossessed(class AController* NewController);
	void PawnMakeNoise(float Loudness, const struct FVector& NoiseLocation, bool bUseNoiseMakerLocation, class AActor* NoiseMaker);
	void OnRep_PlayerState();
	void OnRep_Controller();
	void LaunchPawn(const struct FVector& LaunchVelocity, bool bXYOverride, bool bZOverride);
	struct FVector K2_GetMovementInputVector();
	bool IsPlayerControlled();
	bool IsMoveInputIgnored();
	bool IsLocallyControlled();
	bool IsControlled();
	bool IsBotControlled();
	struct FVector GetPendingMovementInputVector();
	struct FVector GetNavAgentLocation();
	class UPawnMovementComponent* GetMovementComponent();
	static class AActor* STATIC_GetMovementBaseActor(class APawn* Pawn);
	struct FVector GetLastMovementInputVector();
	struct FRotator GetControlRotation();
	class AController* GetController();
	struct FRotator GetBaseAimRotation();
	void DetachFromControllerPendingDestroy();
	struct FVector ConsumeMovementInputVector();
	void AddMovementInput(const struct FVector& WorldDirection, float ScaleValue, bool bForce);
	void AddControllerYawInput(float Val);
	void AddControllerRollInput(float Val);
	void AddControllerPitchInput(float Val);
};

// Class Engine.Character
// 0x03B4 (FullSize[0x0658] - InheritedSize[0x02A4])
// LastOffsetWithSize(0x02A4)
#define PADDING_0517 - 0x0000 // Minimum to subtract -> (0004)
class ACharacter : public APawn
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_0517, class USkeletalMeshComponent*,                                         Mesh);                                                     // 0x02A8(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x000C PADDING_0517, class UCharacterMovementComponent*,                                    CharacterMovement);                                        // 0x02B0(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0517, class UCapsuleComponent*,                                              CapsuleComponent);                                         // 0x02B8(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x001C PADDING_0517, struct FBasedMovementInfo,                                             BasedMovement);                                            // 0x02C0(0x0030)  (NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x004C PADDING_0517, struct FBasedMovementInfo,                                             ReplicatedBasedMovement);                                  // 0x02F0(0x0030)  (Net, RepNotify, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x007C PADDING_0517, float,                                                                 AnimRootMotionTranslationScale);                           // 0x0320(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0517, struct FVector,                                                        BaseTranslationOffset);                                    // 0x0324(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x008C PADDING_0517, struct FQuat,                                                          BaseRotationOffset);                                       // 0x0330(0x0010)  (IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x009C PADDING_0517, float,                                                                 ReplicatedServerLastTransformUpdateTimeStamp);             // 0x0340(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0517, float,                                                                 ReplayLastTransformUpdateTimeStamp);                       // 0x0344(0x0004)  (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_0517, unsigned char,                                                         ReplicatedMovementMode);                                   // 0x0348(0x0001)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_0517, bool,                                                                  bInBaseReplication);                                       // 0x0349(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0517, float,                                                                 CrouchedEyeHeight);                                        // 0x034C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0517, unsigned char,                                                         bIsCrouched);                                              // 0x0350(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0517, unsigned char,                                                         bProxyIsJumpForceApplied);                                 // 0x0350(0x0001) BIT_FIELD (Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0517, unsigned char,                                                         bPressedJump);                                             // 0x0350(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0517, unsigned char,                                                         bClientUpdating);                                          // 0x0350(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0517, unsigned char,                                                         bClientWasFalling);                                        // 0x0350(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0517, unsigned char,                                                         bClientResimulateRootMotion);                              // 0x0350(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0517, unsigned char,                                                         bClientResimulateRootMotionSources);                       // 0x0350(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0517, unsigned char,                                                         bSimGravityDisabled);                                      // 0x0350(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_0517, unsigned char,                                                         bClientCheckEncroachmentOnNetUpdate);                      // 0x0351(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_0517, unsigned char,                                                         bServerMoveIgnoreRootMotion);                              // 0x0351(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_0517, unsigned char,                                                         bWasJumping);                                              // 0x0351(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_0517, float,                                                                 JumpKeyHoldTime);                                          // 0x0354(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B4 PADDING_0517, float,                                                                 JumpForceTimeRemaining);                                   // 0x0358(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_0517, float,                                                                 ProxyJumpForceStartedTime);                                // 0x035C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BC PADDING_0517, float,                                                                 JumpMaxHoldTime);                                          // 0x0360(0x0004)  (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_0517, int,                                                                   JumpMaxCount);                                             // 0x0364(0x0004)  (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C4 PADDING_0517, int,                                                                   JumpCurrentCount);                                         // 0x0368(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00CC PADDING_0517, struct FScriptMulticastDelegate,                                       OnReachedJumpApex);                                        // 0x0370(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00EC PADDING_0517, struct FScriptMulticastDelegate,                                       MovementModeChangedDelegate);                              // 0x0390(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FC PADDING_0517, struct FScriptMulticastDelegate,                                       OnCharacterMovementUpdated);                               // 0x03A0(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010C PADDING_0517, struct FRootMotionSourceGroup,                                         SavedRootMotion);                                          // 0x03B0(0x00F8)  (Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x020C PADDING_0517, struct FRootMotionMovementParams,                                      ClientRootMotionParams);                                   // 0x04B0(0x0040)  (Transient, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x024C PADDING_0517, TArray<struct FSimulatedRootMotionReplicatedMove>,                     RootMotionRepMoves);                                       // 0x04F0(0x0010)  (ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x025C PADDING_0517, struct FRepRootMotionMontage,                                          RepRootMotion);                                            // 0x0500(0x0158)  (Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Character");
		return ptr;
	}


	void UnCrouch(bool bClientSimulation);
	void StopJumping();
	void StopAnimMontage(class UAnimMontage* AnimMontage);
	void ServerMoveOld(float OldTimeStamp, const struct FVector_NetQuantize10& OldAccel, unsigned char OldMoveFlags);
	void ServerMoveNoBase(float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char CompressedMoveFlags, unsigned char ClientRoll, uint32_t View, unsigned char ClientMovementMode);
	void ServerMoveDualNoBase(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, uint32_t View0, float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char NewFlags, unsigned char ClientRoll, uint32_t View, unsigned char ClientMovementMode);
	void ServerMoveDualHybridRootMotion(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, uint32_t View0, float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char NewFlags, unsigned char ClientRoll, uint32_t View, class UPrimitiveComponent* ClientMovementBase, const struct FName& ClientBaseBoneName, unsigned char ClientMovementMode);
	void ServerMoveDual(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, uint32_t View0, float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char NewFlags, unsigned char ClientRoll, uint32_t View, class UPrimitiveComponent* ClientMovementBase, const struct FName& ClientBaseBoneName, unsigned char ClientMovementMode);
	void ServerMove(float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char CompressedMoveFlags, unsigned char ClientRoll, uint32_t View, class UPrimitiveComponent* ClientMovementBase, const struct FName& ClientBaseBoneName, unsigned char ClientMovementMode);
	void RootMotionDebugClientPrintOnScreen(const struct FString& inString);
	float PlayAnimMontage(class UAnimMontage* AnimMontage, float InPlayRate, const struct FName& StartSectionName);
	void OnWalkingOffLedge(const struct FVector& PreviousFloorImpactNormal, const struct FVector& PreviousFloorContactNormal, const struct FVector& PreviousLocation, float TimeDelta);
	void OnRep_RootMotion();
	void OnRep_ReplicatedBasedMovement();
	void OnRep_ReplayLastTransformUpdateTimeStamp();
	void OnRep_IsCrouched();
	void OnLaunched(const struct FVector& LaunchVelocity, bool bXYOverride, bool bZOverride);
	void OnLanded(const struct FHitResult& Hit);
	void OnJumped();
	void LaunchCharacter(const struct FVector& LaunchVelocity, bool bXYOverride, bool bZOverride);
	void K2_UpdateCustomMovement(float DeltaTime);
	void K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
	void K2_OnMovementModeChanged(TEnumAsByte<EMovementMode> PrevMovementMode, TEnumAsByte<EMovementMode> NewMovementMode, unsigned char PrevCustomMode, unsigned char NewCustomMode);
	void K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
	void Jump();
	bool IsPlayingRootMotion();
	bool IsPlayingNetworkedRootMotionMontage();
	bool IsJumpProvidingForce();
	bool HasAnyRootMotion();
	class UAnimMontage* GetCurrentMontage();
	struct FVector GetBaseTranslationOffset();
	struct FRotator GetBaseRotationOffsetRotator();
	float GetAnimRootMotionTranslationScale();
	void Crouch(bool bClientSimulation);
	void ClientVeryShortAdjustPosition(float Timestamp, const struct FVector& NewLoc, class UPrimitiveComponent* NewBase, const struct FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode);
	void ClientCheatWalk();
	void ClientCheatGhost();
	void ClientCheatFly();
	void ClientAdjustRootMotionSourcePosition(float Timestamp, const struct FRootMotionSourceGroup& ServerRootMotion, bool bHasAnimRootMotion, float ServerMontageTrackPosition, const struct FVector& ServerLoc, const struct FVector_NetQuantizeNormal& ServerRotation, float ServerVelZ, class UPrimitiveComponent* ServerBase, const struct FName& ServerBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode);
	void ClientAdjustRootMotionPosition(float Timestamp, float ServerMontageTrackPosition, const struct FVector& ServerLoc, const struct FVector_NetQuantizeNormal& ServerRotation, float ServerVelZ, class UPrimitiveComponent* ServerBase, const struct FName& ServerBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode);
	void ClientAdjustPosition(float Timestamp, const struct FVector& NewLoc, const struct FVector& NewVel, class UPrimitiveComponent* NewBase, const struct FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode);
	void ClientAckGoodMove(float Timestamp);
	bool CanJumpInternal();
	bool CanJump();
	bool CanCrouch();
	void CacheInitialMeshOffset(const struct FVector& MeshRelativeLocation, const struct FRotator& MeshRelativeRotation);
};

// Class Engine.DamageType
// 0x0014 (FullSize[0x003C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0518 - 0x0000 // Minimum to subtract -> (0000)
class UDamageType : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0518, unsigned char,                                                         bCausedByWorld);                                           // 0x0028(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_000(0x0000 PADDING_0518, unsigned char,                                                         bScaleMomentumByMass);                                     // 0x0028(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_000(0x0000 PADDING_0518, unsigned char,                                                         bRadialDamageVelChange);                                   // 0x0028(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0518, float,                                                                 DamageImpulse);                                            // 0x002C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0518, float,                                                                 DestructibleImpulse);                                      // 0x0030(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0518, float,                                                                 DestructibleDamageSpreadScale);                            // 0x0034(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0518, float,                                                                 DamageFalloff);                                            // 0x0038(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DamageType");
		return ptr;
	}


};

// Class Engine.CheatManager
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0519 - 0x0000 // Minimum to subtract -> (0000)
class UCheatManager : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0519, class ADebugCameraController*,                                         DebugCameraControllerRef);                                 // 0x0028(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0519, class UClass*,                                                         DebugCameraControllerClass);                               // 0x0030(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CheatManager");
		return ptr;
	}


	void Walk();
	void ViewSelf();
	void ViewPlayer(const struct FString& S);
	void ViewClass(class UClass* DesiredClass);
	void ViewActor(const struct FName& ActorName);
	void UpdateSafeArea();
	void ToggleServerStatReplicatorUpdateStatNet();
	void ToggleServerStatReplicatorClientOverwrite();
	void ToggleDebugCamera();
	void ToggleAILogging();
	void TestCollisionDistance();
	void Teleport();
	void Summon(const struct FString& ClassName);
	void StreamLevelOut(const struct FName& PackageName);
	void StreamLevelIn(const struct FName& PackageName);
	void SpawnServerStatReplicator();
	void Slomo(float NewTimeDilation);
	void SetWorldOrigin();
	void SetMouseSensitivityToDefault();
	void ServerToggleAILogging();
	void ReceiveInitCheatManager();
	void ReceiveEndPlay();
	void PlayersOnly();
	void OnlyLoadLevel(const struct FName& PackageName);
	void LogLoc();
	void InvertMouse();
	void God();
	void Ghost();
	void FreezeFrame(float Delay);
	void Fly();
	void FlushLog();
	void EnableDebugCamera();
	void DumpVoiceMutingState();
	void DumpPartyState();
	void DumpOnlineSessionState();
	void DumpChatState();
	void DisableDebugCamera();
	void DestroyTarget();
	void DestroyServerStatReplicator();
	void DestroyPawns(class UClass* aClass);
	void DestroyAllPawnsExceptTarget();
	void DestroyAll(class UClass* aClass);
	void DebugCapsuleSweepSize(float HalfHeight, float Radius);
	void DebugCapsuleSweepPawn();
	void DebugCapsuleSweepComplex(bool bTraceComplex);
	void DebugCapsuleSweepClear();
	void DebugCapsuleSweepChannel(TEnumAsByte<ECollisionChannel> Channel);
	void DebugCapsuleSweepCapture();
	void DebugCapsuleSweep();
	void DamageTarget(float DamageAmount);
	void CheatScript(const struct FString& ScriptName);
	void ChangeSize(float F);
	void BugItStringCreator(const struct FVector& ViewLocation, const struct FRotator& ViewRotation, struct FString* GoString, struct FString* LocString);
	void BugItGo(float X, float Y, float Z, float Pitch, float Yaw, float Roll);
	void BugIt(const struct FString& ScreenShotDescription);
};

// Class Engine.DeveloperSettings
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UDeveloperSettings : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DeveloperSettings");
		return ptr;
	}


};

// Class Engine.GameInstance
// 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_051B - 0x0000 // Minimum to subtract -> (0010)
class UGameInstance : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_051B, TArray<class ULocalPlayer*>,                                           LocalPlayers);                                             // 0x0038(0x0010)  (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0020 PADDING_051B, class UOnlineSession*,                                                 OnlineSession);                                            // 0x0048(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0028 PADDING_051B, TArray<class UObject*>,                                                ReferencedObjects);                                        // 0x0050(0x0010)  (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.GameInstance");
		return ptr;
	}


	void ReceiveShutdown();
	void ReceiveInit();
	void HandleTravelError(TEnumAsByte<ETravelFailure> FailureType);
	void HandleNetworkError(TEnumAsByte<ENetworkFailure> FailureType, bool bIsServer);
	void DebugRemovePlayer(int ControllerId);
	void DebugCreatePlayer(int ControllerId);
};

// Class Engine.Subsystem
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class USubsystem : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Subsystem");
		return ptr;
	}


};

// Class Engine.GameInstanceSubsystem
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UGameInstanceSubsystem : public USubsystem
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.GameInstanceSubsystem");
		return ptr;
	}


};

// Class Engine.Info
// 0x0010 (FullSize[0x0248] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
class AInfo : public AActor
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Info");
		return ptr;
	}


};

// Class Engine.Engine
// 0x0BFC (FullSize[0x0C24] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_051F - 0x0000 // Minimum to subtract -> (0008)
class UEngine : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_051F, class UFont*,                                                          TinyFont);                                                 // 0x0030(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0010 PADDING_051F, struct FSoftObjectPath,                                                TinyFontName);                                             // 0x0038(0x0018)  (Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_051F, class UFont*,                                                          SmallFont);                                                // 0x0050(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0030 PADDING_051F, struct FSoftObjectPath,                                                SmallFontName);                                            // 0x0058(0x0018)  (Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_051F, class UFont*,                                                          MediumFont);                                               // 0x0070(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0050 PADDING_051F, struct FSoftObjectPath,                                                MediumFontName);                                           // 0x0078(0x0018)  (Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_051F, class UFont*,                                                          LargeFont);                                                // 0x0090(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0070 PADDING_051F, struct FSoftObjectPath,                                                LargeFontName);                                            // 0x0098(0x0018)  (Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_051F, class UFont*,                                                          SubtitleFont);                                             // 0x00B0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0090 PADDING_051F, struct FSoftObjectPath,                                                SubtitleFontName);                                         // 0x00B8(0x0018)  (Edit, ZeroConstructor, Config, GlobalConfig, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_051F, TArray<class UFont*>,                                                  AdditionalFonts);                                          // 0x00D0(0x0010)  (ZeroConstructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_051F, TArray<struct FString>,                                                AdditionalFontNames);                                      // 0x00E8(0x0010)  (Edit, ZeroConstructor, Config, GlobalConfig, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_051F, class UClass*,                                                         ConsoleClass);                                             // 0x00F8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D8 PADDING_051F, struct FSoftClassPath,                                                 ConsoleClassName);                                         // 0x0100(0x0018)  (Edit, ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F0 PADDING_051F, class UClass*,                                                         GameViewportClientClass);                                  // 0x0118(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F8 PADDING_051F, struct FSoftClassPath,                                                 GameViewportClientClassName);                              // 0x0120(0x0018)  (Edit, ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0110 PADDING_051F, class UClass*,                                                         LocalPlayerClass);                                         // 0x0138(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0118 PADDING_051F, struct FSoftClassPath,                                                 LocalPlayerClassName);                                     // 0x0140(0x0018)  (Edit, ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0130 PADDING_051F, class UClass*,                                                         WorldSettingsClass);                                       // 0x0158(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0138 PADDING_051F, struct FSoftClassPath,                                                 WorldSettingsClassName);                                   // 0x0160(0x0018)  (Edit, ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0150 PADDING_051F, struct FSoftClassPath,                                                 NavigationSystemClassName);                                // 0x0178(0x0018)  (ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0168 PADDING_051F, class UClass*,                                                         NavigationSystemClass);                                    // 0x0190(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0170 PADDING_051F, struct FSoftClassPath,                                                 NavigationSystemConfigClassName);                          // 0x0198(0x0018)  (ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0188 PADDING_051F, class UClass*,                                                         NavigationSystemConfigClass);                              // 0x01B0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0190 PADDING_051F, struct FSoftClassPath,                                                 AvoidanceManagerClassName);                                // 0x01B8(0x0018)  (ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01A8 PADDING_051F, class UClass*,                                                         AvoidanceManagerClass);                                    // 0x01D0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01B0 PADDING_051F, class UClass*,                                                         PhysicsCollisionHandlerClass);                             // 0x01D8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01B8 PADDING_051F, struct FSoftClassPath,                                                 PhysicsCollisionHandlerClassName);                         // 0x01E0(0x0018)  (Edit, ZeroConstructor, Config, GlobalConfig, NoClear, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01D0 PADDING_051F, struct FSoftClassPath,                                                 GameUserSettingsClassName);                                // 0x01F8(0x0018)  (ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01E8 PADDING_051F, class UClass*,                                                         GameUserSettingsClass);                                    // 0x0210(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01F0 PADDING_051F, struct FSoftClassPath,                                                 AIControllerClassName);                                    // 0x0218(0x0018)  (ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0208 PADDING_051F, class UGameUserSettings*,                                              GameUserSettings);                                         // 0x0230(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0210 PADDING_051F, class UClass*,                                                         LevelScriptActorClass);                                    // 0x0238(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0218 PADDING_051F, struct FSoftClassPath,                                                 LevelScriptActorClassName);                                // 0x0240(0x0018)  (Edit, ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0230 PADDING_051F, struct FSoftClassPath,                                                 DefaultBlueprintBaseClassName);                            // 0x0258(0x0018)  (Edit, ZeroConstructor, Config, GlobalConfig, NoClear, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0248 PADDING_051F, struct FSoftClassPath,                                                 GameSingletonClassName);                                   // 0x0270(0x0018)  (Edit, ZeroConstructor, Config, GlobalConfig, NoClear, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0260 PADDING_051F, class UObject*,                                                        GameSingleton);                                            // 0x0288(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0268 PADDING_051F, struct FSoftClassPath,                                                 AssetManagerClassName);                                    // 0x0290(0x0018)  (Edit, ZeroConstructor, Config, GlobalConfig, NoClear, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0280 PADDING_051F, class UAssetManager*,                                                  AssetManager);                                             // 0x02A8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0288 PADDING_051F, class UTexture2D*,                                                     DefaultTexture);                                           // 0x02B0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0290 PADDING_051F, struct FSoftObjectPath,                                                DefaultTextureName);                                       // 0x02B8(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02A8 PADDING_051F, class UTexture*,                                                       DefaultDiffuseTexture);                                    // 0x02D0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02B0 PADDING_051F, struct FSoftObjectPath,                                                DefaultDiffuseTextureName);                                // 0x02D8(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02C8 PADDING_051F, class UTexture2D*,                                                     DefaultBSPVertexTexture);                                  // 0x02F0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02D0 PADDING_051F, struct FSoftObjectPath,                                                DefaultBSPVertexTextureName);                              // 0x02F8(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02E8 PADDING_051F, class UTexture2D*,                                                     HighFrequencyNoiseTexture);                                // 0x0310(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02F0 PADDING_051F, struct FSoftObjectPath,                                                HighFrequencyNoiseTextureName);                            // 0x0318(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0308 PADDING_051F, class UTexture2D*,                                                     DefaultBokehTexture);                                      // 0x0330(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0310 PADDING_051F, struct FSoftObjectPath,                                                DefaultBokehTextureName);                                  // 0x0338(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0328 PADDING_051F, class UTexture2D*,                                                     DefaultBloomKernelTexture);                                // 0x0350(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0330 PADDING_051F, struct FSoftObjectPath,                                                DefaultBloomKernelTextureName);                            // 0x0358(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0348 PADDING_051F, class UMaterial*,                                                      WireframeMaterial);                                        // 0x0370(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0350 PADDING_051F, struct FString,                                                        WireframeMaterialName);                                    // 0x0378(0x0010)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0360 PADDING_051F, class UMaterial*,                                                      DebugMeshMaterial);                                        // 0x0388(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0368 PADDING_051F, struct FSoftObjectPath,                                                DebugMeshMaterialName);                                    // 0x0390(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0380 PADDING_051F, class UMaterial*,                                                      EmissiveMeshMaterial);                                     // 0x03A8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0388 PADDING_051F, struct FSoftObjectPath,                                                EmissiveMeshMaterialName);                                 // 0x03B0(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x03A0 PADDING_051F, class UMaterial*,                                                      LevelColorationLitMaterial);                               // 0x03C8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x03A8 PADDING_051F, struct FString,                                                        LevelColorationLitMaterialName);                           // 0x03D0(0x0010)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x03B8 PADDING_051F, class UMaterial*,                                                      LevelColorationUnlitMaterial);                             // 0x03E0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x03C0 PADDING_051F, struct FString,                                                        LevelColorationUnlitMaterialName);                         // 0x03E8(0x0010)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x03D0 PADDING_051F, class UMaterial*,                                                      LightingTexelDensityMaterial);                             // 0x03F8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x03D8 PADDING_051F, struct FString,                                                        LightingTexelDensityName);                                 // 0x0400(0x0010)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x03E8 PADDING_051F, class UMaterial*,                                                      ShadedLevelColorationLitMaterial);                         // 0x0410(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x03F0 PADDING_051F, struct FString,                                                        ShadedLevelColorationLitMaterialName);                     // 0x0418(0x0010)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0400 PADDING_051F, class UMaterial*,                                                      ShadedLevelColorationUnlitMaterial);                       // 0x0428(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0408 PADDING_051F, struct FString,                                                        ShadedLevelColorationUnlitMaterialName);                   // 0x0430(0x0010)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0418 PADDING_051F, class UMaterial*,                                                      RemoveSurfaceMaterial);                                    // 0x0440(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0420 PADDING_051F, struct FSoftObjectPath,                                                RemoveSurfaceMaterialName);                                // 0x0448(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0438 PADDING_051F, class UMaterial*,                                                      VertexColorMaterial);                                      // 0x0460(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0440 PADDING_051F, struct FString,                                                        VertexColorMaterialName);                                  // 0x0468(0x0010)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0450 PADDING_051F, class UMaterial*,                                                      VertexColorViewModeMaterial_ColorOnly);                    // 0x0478(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0458 PADDING_051F, struct FString,                                                        VertexColorViewModeMaterialName_ColorOnly);                // 0x0480(0x0010)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0468 PADDING_051F, class UMaterial*,                                                      VertexColorViewModeMaterial_AlphaAsColor);                 // 0x0490(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0470 PADDING_051F, struct FString,                                                        VertexColorViewModeMaterialName_AlphaAsColor);             // 0x0498(0x0010)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0480 PADDING_051F, class UMaterial*,                                                      VertexColorViewModeMaterial_RedOnly);                      // 0x04A8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0488 PADDING_051F, struct FString,                                                        VertexColorViewModeMaterialName_RedOnly);                  // 0x04B0(0x0010)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0498 PADDING_051F, class UMaterial*,                                                      VertexColorViewModeMaterial_GreenOnly);                    // 0x04C0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x04A0 PADDING_051F, struct FString,                                                        VertexColorViewModeMaterialName_GreenOnly);                // 0x04C8(0x0010)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x04B0 PADDING_051F, class UMaterial*,                                                      VertexColorViewModeMaterial_BlueOnly);                     // 0x04D8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x04B8 PADDING_051F, struct FString,                                                        VertexColorViewModeMaterialName_BlueOnly);                 // 0x04E0(0x0010)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x04C8 PADDING_051F, struct FSoftObjectPath,                                                DebugEditorMaterialName);                                  // 0x04F0(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x04E0 PADDING_051F, class UMaterial*,                                                      ConstraintLimitMaterial);                                  // 0x0508(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x04E8 PADDING_051F, class UMaterialInstanceDynamic*,                                       ConstraintLimitMaterialX);                                 // 0x0510(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x04F0 PADDING_051F, class UMaterialInstanceDynamic*,                                       ConstraintLimitMaterialXAxis);                             // 0x0518(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x04F8 PADDING_051F, class UMaterialInstanceDynamic*,                                       ConstraintLimitMaterialY);                                 // 0x0520(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0500 PADDING_051F, class UMaterialInstanceDynamic*,                                       ConstraintLimitMaterialYAxis);                             // 0x0528(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0508 PADDING_051F, class UMaterialInstanceDynamic*,                                       ConstraintLimitMaterialZ);                                 // 0x0530(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0510 PADDING_051F, class UMaterialInstanceDynamic*,                                       ConstraintLimitMaterialZAxis);                             // 0x0538(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0518 PADDING_051F, class UMaterialInstanceDynamic*,                                       ConstraintLimitMaterialPrismatic);                         // 0x0540(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0520 PADDING_051F, class UMaterial*,                                                      InvalidLightmapSettingsMaterial);                          // 0x0548(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0528 PADDING_051F, struct FSoftObjectPath,                                                InvalidLightmapSettingsMaterialName);                      // 0x0550(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0540 PADDING_051F, class UMaterial*,                                                      PreviewShadowsIndicatorMaterial);                          // 0x0568(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0548 PADDING_051F, struct FSoftObjectPath,                                                PreviewShadowsIndicatorMaterialName);                      // 0x0570(0x0018)  (Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0560 PADDING_051F, class UMaterial*,                                                      ArrowMaterial);                                            // 0x0588(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0568 PADDING_051F, class UMaterialInstanceDynamic*,                                       ArrowMaterialYellow);                                      // 0x0590(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0570 PADDING_051F, struct FSoftObjectPath,                                                ArrowMaterialName);                                        // 0x0598(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0588 PADDING_051F, struct FLinearColor,                                                   LightingOnlyBrightness);                                   // 0x05B0(0x0010)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0598 PADDING_051F, TArray<struct FLinearColor>,                                           ShaderComplexityColors);                                   // 0x05C0(0x0010)  (ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05A8 PADDING_051F, TArray<struct FLinearColor>,                                           QuadComplexityColors);                                     // 0x05D0(0x0010)  (ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05B8 PADDING_051F, TArray<struct FLinearColor>,                                           LightComplexityColors);                                    // 0x05E0(0x0010)  (ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05C8 PADDING_051F, TArray<struct FLinearColor>,                                           StationaryLightOverlapColors);                             // 0x05F0(0x0010)  (ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05D8 PADDING_051F, TArray<struct FLinearColor>,                                           LODColorationColors);                                      // 0x0600(0x0010)  (ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05E8 PADDING_051F, TArray<struct FLinearColor>,                                           HLODColorationColors);                                     // 0x0610(0x0010)  (ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05F8 PADDING_051F, TArray<struct FLinearColor>,                                           StreamingAccuracyColors);                                  // 0x0620(0x0010)  (ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0608 PADDING_051F, float,                                                                 MaxPixelShaderAdditiveComplexityCount);                    // 0x0630(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x060C PADDING_051F, float,                                                                 MaxES2PixelShaderAdditiveComplexityCount);                 // 0x0634(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0610 PADDING_051F, float,                                                                 MaxES3PixelShaderAdditiveComplexityCount);                 // 0x0638(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0614 PADDING_051F, float,                                                                 MinLightMapDensity);                                       // 0x063C(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0618 PADDING_051F, float,                                                                 IdealLightMapDensity);                                     // 0x0640(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x061C PADDING_051F, float,                                                                 MaxLightMapDensity);                                       // 0x0644(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0620 PADDING_051F, unsigned char,                                                         bRenderLightMapDensityGrayscale);                          // 0x0648(0x0001) BIT_FIELD (Config, GlobalConfig, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0624 PADDING_051F, float,                                                                 RenderLightMapDensityGrayscaleScale);                      // 0x064C(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0628 PADDING_051F, float,                                                                 RenderLightMapDensityColorScale);                          // 0x0650(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x062C PADDING_051F, struct FLinearColor,                                                   LightMapDensityVertexMappedColor);                         // 0x0654(0x0010)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x063C PADDING_051F, struct FLinearColor,                                                   LightMapDensitySelectedColor);                             // 0x0664(0x0010)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0650 PADDING_051F, TArray<struct FStatColorMapping>,                                      StatColorMappings);                                        // 0x0678(0x0010)  (ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0660 PADDING_051F, class UPhysicalMaterial*,                                              DefaultPhysMaterial);                                      // 0x0688(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0668 PADDING_051F, struct FSoftObjectPath,                                                DefaultPhysMaterialName);                                  // 0x0690(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0680 PADDING_051F, TArray<struct FGameNameRedirect>,                                      ActiveGameNameRedirects);                                  // 0x06A8(0x0010)  (ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0690 PADDING_051F, TArray<struct FClassRedirect>,                                         ActiveClassRedirects);                                     // 0x06B8(0x0010)  (ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x06A0 PADDING_051F, TArray<struct FPluginRedirect>,                                        ActivePluginRedirects);                                    // 0x06C8(0x0010)  (ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x06B0 PADDING_051F, TArray<struct FStructRedirect>,                                        ActiveStructRedirects);                                    // 0x06D8(0x0010)  (ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x06C0 PADDING_051F, class UTexture2D*,                                                     PreIntegratedSkinBRDFTexture);                             // 0x06E8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x06C8 PADDING_051F, struct FSoftObjectPath,                                                PreIntegratedSkinBRDFTextureName);                         // 0x06F0(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x06E0 PADDING_051F, class UTexture2D*,                                                     BlueNoiseTexture);                                         // 0x0708(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x06E8 PADDING_051F, struct FSoftObjectPath,                                                BlueNoiseTextureName);                                     // 0x0710(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0700 PADDING_051F, class UTexture2D*,                                                     MiniFontTexture);                                          // 0x0728(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0708 PADDING_051F, struct FSoftObjectPath,                                                MiniFontTextureName);                                      // 0x0730(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0720 PADDING_051F, class UTexture*,                                                       WeightMapPlaceholderTexture);                              // 0x0748(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0728 PADDING_051F, struct FSoftObjectPath,                                                WeightMapPlaceholderTextureName);                          // 0x0750(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0740 PADDING_051F, class UTexture2D*,                                                     LightMapDensityTexture);                                   // 0x0768(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0748 PADDING_051F, struct FSoftObjectPath,                                                LightMapDensityTextureName);                               // 0x0770(0x0018)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0768 PADDING_051F, class UGameViewportClient*,                                            GameViewport);                                             // 0x0790(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0770 PADDING_051F, TArray<struct FString>,                                                DeferredCommands);                                         // 0x0798(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0780 PADDING_051F, int,                                                                   TickCycles);                                               // 0x07A8(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0784 PADDING_051F, int,                                                                   GameCycles);                                               // 0x07AC(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0788 PADDING_051F, int,                                                                   ClientCycles);                                             // 0x07B0(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x078C PADDING_051F, float,                                                                 NearClipPlane);                                            // 0x07B4(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0790 PADDING_051F, unsigned char,                                                         bHardwareSurveyEnabled);                                   // 0x07B8(0x0001) BIT_FIELD (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0790 PADDING_051F, unsigned char,                                                         bSubtitlesEnabled);                                        // 0x07B8(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0790 PADDING_051F, unsigned char,                                                         bSubtitlesForcedOff);                                      // 0x07B8(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0794 PADDING_051F, int,                                                                   MaximumLoopIterationCount);                                // 0x07BC(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0798 PADDING_051F, unsigned char,                                                         bCanBlueprintsTickByDefault);                              // 0x07C0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0798 PADDING_051F, unsigned char,                                                         bOptimizeAnimBlueprintMemberVariableAccess);               // 0x07C0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0798 PADDING_051F, unsigned char,                                                         bAllowMultiThreadedAnimationUpdate);                       // 0x07C0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0798 PADDING_051F, unsigned char,                                                         bEnableEditorPSysRealtimeLOD);                             // 0x07C0(0x0001) BIT_FIELD (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0798 PADDING_051F, unsigned char,                                                         bSmoothFrameRate);                                         // 0x07C0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0798 PADDING_051F, unsigned char,                                                         bUseFixedFrameRate);                                       // 0x07C0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x079C PADDING_051F, float,                                                                 FixedFrameRate);                                           // 0x07C4(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x07A0 PADDING_051F, struct FFloatRange,                                                    SmoothedFrameRateRange);                                   // 0x07C8(0x0010)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x07B0 PADDING_051F, class UEngineCustomTimeStep*,                                          DefaultCustomTimeStep);                                    // 0x07D8(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x07B8 PADDING_051F, class UEngineCustomTimeStep*,                                          CurrentCustomTimeStep);                                    // 0x07E0(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x07C0 PADDING_051F, struct FSoftClassPath,                                                 CustomTimeStepClassName);                                  // 0x07E8(0x0018)  (Edit, ZeroConstructor, Config, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x07D8 PADDING_051F, class UTimecodeProvider*,                                              DefaultTimecodeProvider);                                  // 0x0800(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x07E0 PADDING_051F, class UTimecodeProvider*,                                              CustomTimecodeProvider);                                   // 0x0808(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x07E8 PADDING_051F, struct FSoftClassPath,                                                 DefaultTimecodeProviderClassName);                         // 0x0810(0x0018)  (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0800 PADDING_051F, struct FSoftClassPath,                                                 TimecodeProviderClassName);                                // 0x0828(0x0018)  (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0818 PADDING_051F, struct FFrameRate,                                                     DefaultTimecodeFrameRate);                                 // 0x0840(0x0008)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0820 PADDING_051F, unsigned char,                                                         bCheckForMultiplePawnsSpawnedInAFrame);                    // 0x0848(0x0001) BIT_FIELD (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0824 PADDING_051F, int,                                                                   NumPawnsAllowedToBeSpawnedInAFrame);                       // 0x084C(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0828 PADDING_051F, unsigned char,                                                         bShouldGenerateLowQualityLightmaps);                       // 0x0850(0x0001) BIT_FIELD (Config, GlobalConfig, Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x082C PADDING_051F, struct FColor,                                                         C_WorldBox);                                               // 0x0854(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0830 PADDING_051F, struct FColor,                                                         C_BrushWire);                                              // 0x0858(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0834 PADDING_051F, struct FColor,                                                         C_AddWire);                                                // 0x085C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0838 PADDING_051F, struct FColor,                                                         C_SubtractWire);                                           // 0x0860(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x083C PADDING_051F, struct FColor,                                                         C_SemiSolidWire);                                          // 0x0864(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0840 PADDING_051F, struct FColor,                                                         C_NonSolidWire);                                           // 0x0868(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0844 PADDING_051F, struct FColor,                                                         C_WireBackground);                                         // 0x086C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0848 PADDING_051F, struct FColor,                                                         C_ScaleBoxHi);                                             // 0x0870(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x084C PADDING_051F, struct FColor,                                                         C_VolumeCollision);                                        // 0x0874(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0850 PADDING_051F, struct FColor,                                                         C_BSPCollision);                                           // 0x0878(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0854 PADDING_051F, struct FColor,                                                         C_OrthoBackground);                                        // 0x087C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0858 PADDING_051F, struct FColor,                                                         C_Volume);                                                 // 0x0880(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x085C PADDING_051F, struct FColor,                                                         C_BrushShape);                                             // 0x0884(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0860 PADDING_051F, float,                                                                 StreamingDistanceFactor);                                  // 0x0888(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0868 PADDING_051F, struct FDirectoryPath,                                                 GameScreenshotSaveDirectory);                              // 0x0890(0x0010)  (Edit, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0878 PADDING_051F, ETransitionType,                                                       TransitionType);                                           // 0x08A0(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0880 PADDING_051F, struct FString,                                                        TransitionDescription);                                    // 0x08A8(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0890 PADDING_051F, struct FString,                                                        TransitionGameMode);                                       // 0x08B8(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x08A0 PADDING_051F, float,                                                                 MeshLODRange);                                             // 0x08C8(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x08A4 PADDING_051F, unsigned char,                                                         bAllowMatureLanguage);                                     // 0x08CC(0x0001) BIT_FIELD (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x08A8 PADDING_051F, float,                                                                 CameraRotationThreshold);                                  // 0x08D0(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x08AC PADDING_051F, float,                                                                 CameraTranslationThreshold);                               // 0x08D4(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x08B0 PADDING_051F, float,                                                                 PrimitiveProbablyVisibleTime);                             // 0x08D8(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x08B4 PADDING_051F, float,                                                                 MaxOcclusionPixelsFraction);                               // 0x08DC(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x08B8 PADDING_051F, unsigned char,                                                         bPauseOnLossOfFocus);                                      // 0x08E0(0x0001) BIT_FIELD (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x08BC PADDING_051F, int,                                                                   MaxParticleResize);                                        // 0x08E4(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x08C0 PADDING_051F, int,                                                                   MaxParticleResizeWarn);                                    // 0x08E8(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x08C8 PADDING_051F, TArray<struct FDropNoteInfo>,                                          PendingDroppedNotes);                                      // 0x08F0(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x08D8 PADDING_051F, float,                                                                 NetClientTicksPerSecond);                                  // 0x0900(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x08DC PADDING_051F, float,                                                                 DisplayGamma);                                             // 0x0904(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x08E0 PADDING_051F, float,                                                                 MinDesiredFrameRate);                                      // 0x0908(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x08E4 PADDING_051F, struct FLinearColor,                                                   DefaultSelectedMaterialColor);                             // 0x090C(0x0010)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x08F4 PADDING_051F, struct FLinearColor,                                                   SelectedMaterialColor);                                    // 0x091C(0x0010)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0904 PADDING_051F, struct FLinearColor,                                                   SelectionOutlineColor);                                    // 0x092C(0x0010)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0914 PADDING_051F, struct FLinearColor,                                                   SubduedSelectionOutlineColor);                             // 0x093C(0x0010)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0924 PADDING_051F, struct FLinearColor,                                                   SelectedMaterialColorOverride);                            // 0x094C(0x0010)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0934 PADDING_051F, bool,                                                                  bIsOverridingSelectedColor);                               // 0x095C(0x0001)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0938 PADDING_051F, unsigned char,                                                         bEnableOnScreenDebugMessages);                             // 0x0960(0x0001) BIT_FIELD (Config, GlobalConfig, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0938 PADDING_051F, unsigned char,                                                         bEnableOnScreenDebugMessagesDisplay);                      // 0x0960(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0938 PADDING_051F, unsigned char,                                                         bSuppressMapWarnings);                                     // 0x0960(0x0001) BIT_FIELD (Config, GlobalConfig, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0938 PADDING_051F, unsigned char,                                                         bDisableAILogging);                                        // 0x0960(0x0001) BIT_FIELD (Config, GlobalConfig, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x093C PADDING_051F, uint32_t,                                                              bEnableVisualLogRecordingOnStart);                         // 0x0964(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0944 PADDING_051F, int,                                                                   ScreenSaverInhibitorSemaphore);                            // 0x096C(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0948 PADDING_051F, unsigned char,                                                         bLockReadOnlyLevels);                                      // 0x0970(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0950 PADDING_051F, struct FString,                                                        ParticleEventManagerClassPath);                            // 0x0978(0x0010)  (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0970 PADDING_051F, float,                                                                 SelectionHighlightIntensity);                              // 0x0998(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0974 PADDING_051F, float,                                                                 BSPSelectionHighlightIntensity);                           // 0x099C(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0978 PADDING_051F, float,                                                                 SelectionHighlightIntensityBillboards);                    // 0x09A0(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0BA8 PADDING_051F, TArray<struct FNetDriverDefinition>,                                   NetDriverDefinitions);                                     // 0x0BD0(0x0010)  (ZeroConstructor, Transient, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0BB8 PADDING_051F, TArray<struct FString>,                                                ServerActors);                                             // 0x0BE0(0x0010)  (ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0BC8 PADDING_051F, TArray<struct FString>,                                                RuntimeServerActors);                                      // 0x0BF0(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0BD8 PADDING_051F, float,                                                                 NetErrorLogInterval);                                      // 0x0C00(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0BDC PADDING_051F, unsigned char,                                                         bStartedLoadMapMovie);                                     // 0x0C04(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0BF8 PADDING_051F, int,                                                                   NextWorldContextHandle);                                   // 0x0C20(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Engine");
		return ptr;
	}


};

// Class Engine.ScriptViewportClient
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UScriptViewportClient : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ScriptViewportClient");
		return ptr;
	}


};

// Class Engine.GameViewportClient
// 0x0060 (FullSize[0x0088] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0521 - 0x0000 // Minimum to subtract -> (0018)
class UGameViewportClient : public UScriptViewportClient
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0018 PADDING_0521, class UConsole*,                                                       ViewportConsole);                                          // 0x0040(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0521, TArray<struct FDebugDisplayProperty>,                                  DebugProperties);                                          // 0x0048(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0521, class UWorld*,                                                         World);                                                    // 0x0078(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0521, class UGameInstance*,                                                  GameInstance);                                             // 0x0080(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.GameViewportClient");
		return ptr;
	}


	void SSSwapControllers();
	void ShowTitleSafeArea();
	void SetConsoleTarget(int PlayerIndex);
};

// Class Engine.Console
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0522 - 0x0000 // Minimum to subtract -> (0010)
class UConsole : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0522, class ULocalPlayer*,                                                   ConsoleTargetPlayer);                                      // 0x0038(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0522, class UTexture2D*,                                                     DefaultTexture_Black);                                     // 0x0040(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0522, class UTexture2D*,                                                     DefaultTexture_White);                                     // 0x0048(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0522, TArray<struct FString>,                                                HistoryBuffer);                                            // 0x0068(0x0010)  (ZeroConstructor, Config, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Console");
		return ptr;
	}


};

// Class Engine.ChildActorComponent
// 0x00B0 (FullSize[0x0230] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_0523 - 0x0000 // Minimum to subtract -> (0089)
class UChildActorComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0089 PADDING_0523, class UClass*,                                                         ChildActorClass);                                          // 0x0218(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0091 PADDING_0523, class AActor*,                                                         ChildActor);                                               // 0x0220(0x0008)  (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, TextExportTransient, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0099 PADDING_0523, class AActor*,                                                         ChildActorTemplate);                                       // 0x0228(0x0008)  (Edit, ZeroConstructor, DisableEditOnInstance, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ChildActorComponent");
		return ptr;
	}


	void SetChildActorClass(class UClass* InClass);
};

// Class Engine.DPICustomScalingRule
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UDPICustomScalingRule : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DPICustomScalingRule");
		return ptr;
	}


};

// Class Engine.StaticMeshComponent
// 0x006F (FullSize[0x0498] - InheritedSize[0x0429])
// LastOffsetWithSize(0x0429)
#define PADDING_0525 - 0x0000 // Minimum to subtract -> (0007)
class UStaticMeshComponent : public UMeshComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0525, int,                                                                   ForcedLodModel);                                           // 0x0430(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_0525, int,                                                                   PreviousLODLevel);                                         // 0x0434(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_0525, int,                                                                   MinLOD);                                                   // 0x0438(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_0525, int,                                                                   SubDivisionStepSize);                                      // 0x043C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_0525, class UStaticMesh*,                                                    StaticMesh);                                               // 0x0440(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x001F PADDING_0525, struct FColor,                                                         WireframeColorOverride);                                   // 0x0448(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_0525, unsigned char,                                                         bOverrideWireframeColor);                                  // 0x044C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_0525, unsigned char,                                                         bOverrideMinLOD);                                          // 0x044C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_0525, unsigned char,                                                         bOverrideNavigationExport);                                // 0x044C(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_0525, unsigned char,                                                         bForceNavigationObstacle);                                 // 0x044C(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_0525, unsigned char,                                                         bDisallowMeshPaintPerInstance);                            // 0x044C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_0525, unsigned char,                                                         bIgnoreInstanceForTextureStreaming);                       // 0x044C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_0525, unsigned char,                                                         bOverrideLightMapRes);                                     // 0x044C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_0525, unsigned char,                                                         bCastDistanceFieldIndirectShadow);                         // 0x044C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0525, unsigned char,                                                         bOverrideDistanceFieldSelfShadowBias);                     // 0x044D(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0525, unsigned char,                                                         bUseSubDivisions);                                         // 0x044D(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0525, unsigned char,                                                         bUseDefaultCollision);                                     // 0x044D(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0525, unsigned char,                                                         bReverseCulling);                                          // 0x044D(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_0525, int,                                                                   OverriddenLightMapRes);                                    // 0x0450(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002B PADDING_0525, float,                                                                 DistanceFieldIndirectShadowMinVisibility);                 // 0x0454(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_0525, float,                                                                 DistanceFieldSelfShadowBias);                              // 0x0458(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_0525, float,                                                                 StreamingDistanceMultiplier);                              // 0x045C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_0525, TArray<struct FStaticMeshComponentLODInfo>,                            LODData);                                                  // 0x0460(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_0525, TArray<struct FStreamingTextureBuildInfo>,                             StreamingTextureData);                                     // 0x0470(0x0010)  (ZeroConstructor, NonTransactional, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_0525, struct FLightmassPrimitiveSettings,                                    LightmassSettings);                                        // 0x0480(0x0018)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.StaticMeshComponent");
		return ptr;
	}


	bool SetStaticMesh(class UStaticMesh* NewMesh);
	void SetReverseCulling(bool ReverseCulling);
	void SetForcedLodModel(int NewForcedLodModel);
	void SetDistanceFieldSelfShadowBias(float NewValue);
	void OnRep_StaticMesh(class UStaticMesh* OldStaticMesh);
	void GetLocalBounds(struct FVector* Min, struct FVector* Max);
};

// Class Engine.GameStateBase
// 0x0038 (FullSize[0x0280] - InheritedSize[0x0248])
// LastOffsetWithSize(0x0238)
#define PADDING_0526 - 0x0000 // Minimum to subtract -> (0010)
class AGameStateBase : public AInfo
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0526, class UClass*,                                                         GameModeClass);                                            // 0x0248(0x0008)  (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0526, class AGameModeBase*,                                                  AuthorityGameMode);                                        // 0x0250(0x0008)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0526, class UClass*,                                                         SpectatorClass);                                           // 0x0258(0x0008)  (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0526, TArray<class APlayerState*>,                                           PlayerArray);                                              // 0x0260(0x0010)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0526, bool,                                                                  bReplicatedHasBegunPlay);                                  // 0x0270(0x0001)  (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x003C PADDING_0526, float,                                                                 ReplicatedWorldTimeSeconds);                               // 0x0274(0x0004)  (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0526, float,                                                                 ServerWorldTimeSecondsDelta);                              // 0x0278(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0526, float,                                                                 ServerWorldTimeSecondsUpdateFrequency);                    // 0x027C(0x0004)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.GameStateBase");
		return ptr;
	}


	void OnRep_SpectatorClass();
	void OnRep_ReplicatedWorldTimeSeconds();
	void OnRep_ReplicatedHasBegunPlay();
	void OnRep_GameModeClass();
	bool HasMatchStarted();
	bool HasBegunPlay();
	float GetServerWorldTimeSeconds();
	float GetPlayerStartTime(class AController* Controller);
	float GetPlayerRespawnDelay(class AController* Controller);
};

// Class Engine.GameState
// 0x001C (FullSize[0x029C] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
#define PADDING_0527 - 0x0000 // Minimum to subtract -> (0008)
class AGameState : public AGameStateBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0527, struct FName,                                                          MatchState);                                               // 0x0288(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0527, struct FName,                                                          PreviousMatchState);                                       // 0x0290(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0527, int,                                                                   ElapsedTime);                                              // 0x0298(0x0004)  (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.GameState");
		return ptr;
	}


	void OnRep_MatchState();
	void OnRep_ElapsedTime();
};

// Class Engine.GameEngine
// 0x01A4 (FullSize[0x0DC8] - InheritedSize[0x0C24])
// LastOffsetWithSize(0x0C24)
#define PADDING_0528 - 0x0000 // Minimum to subtract -> (0194)
class UGameEngine : public UEngine
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0194 PADDING_0528, float,                                                                 MaxDeltaTime);                                             // 0x0DB8(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0198 PADDING_0528, float,                                                                 ServerFlushLogInterval);                                   // 0x0DBC(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x019C PADDING_0528, class UGameInstance*,                                                  GameInstance);                                             // 0x0DC0(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.GameEngine");
		return ptr;
	}


};

// Class Engine.GameModeBase
// 0x00D9 (FullSize[0x0321] - InheritedSize[0x0248])
// LastOffsetWithSize(0x0238)
#define PADDING_0529 - 0x0000 // Minimum to subtract -> (0010)
class AGameModeBase : public AInfo
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0529, struct FString,                                                        OptionsString);                                            // 0x0248(0x0010)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0529, class UClass*,                                                         GameSessionClass);                                         // 0x0258(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0529, class UClass*,                                                         GameStateClass);                                           // 0x0260(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0529, class UClass*,                                                         PlayerControllerClass);                                    // 0x0268(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0529, class UClass*,                                                         PlayerStateClass);                                         // 0x0270(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0529, class UClass*,                                                         HUDClass);                                                 // 0x0278(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0529, class UClass*,                                                         DefaultPawnClass);                                         // 0x0280(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0529, class UClass*,                                                         SpectatorClass);                                           // 0x0288(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0529, class UClass*,                                                         ReplaySpectatorPlayerControllerClass);                     // 0x0290(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0529, class UClass*,                                                         ServerStatReplicatorClass);                                // 0x0298(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0529, class AGameSession*,                                                   GameSession);                                              // 0x02A0(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0529, class AGameStateBase*,                                                 GameState);                                                // 0x02A8(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0529, class AServerStatReplicator*,                                          ServerStatReplicator);                                     // 0x02B0(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_0529, struct FText,                                                          DefaultPlayerName);                                        // 0x0308(0x0018)  (Edit, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E8 PADDING_0529, unsigned char,                                                         bUseSeamlessTravel);                                       // 0x0320(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E8 PADDING_0529, unsigned char,                                                         bStartPlayersAsSpectators);                                // 0x0320(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00E8 PADDING_0529, unsigned char,                                                         bPauseable);                                               // 0x0320(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.GameModeBase");
		return ptr;
	}


	void StartPlay();
	class APawn* SpawnDefaultPawnFor(class AController* NewPlayer, class AActor* StartSpot);
	class APawn* SpawnDefaultPawnAtTransform(class AController* NewPlayer, const struct FTransform& SpawnTransform);
	bool ShouldReset(class AActor* ActorToReset);
	void ReturnToMainMenuHost();
	void RestartPlayerAtTransform(class AController* NewPlayer, const struct FTransform& SpawnTransform);
	void RestartPlayerAtPlayerStart(class AController* NewPlayer, class AActor* StartSpot);
	void RestartPlayer(class AController* NewPlayer);
	void ResetLevel();
	bool PlayerCanRestart(class APlayerController* Player);
	bool MustSpectate(class APlayerController* NewPlayerController);
	void K2_PostLogin(class APlayerController* NewPlayer);
	void K2_OnSwapPlayerControllers(class APlayerController* OldPC, class APlayerController* NewPC);
	void K2_OnRestartPlayer(class AController* NewPlayer);
	void K2_OnLogout(class AController* ExitingController);
	void K2_OnChangeName(class AController* Other, const struct FString& NewName, bool bNameChange);
	class AActor* K2_FindPlayerStart(class AController* Player, const struct FString& IncomingName);
	void InitStartSpot(class AActor* StartSpot, class AController* NewPlayer);
	void InitializeHUDForPlayer(class APlayerController* NewPlayer);
	bool HasMatchStarted();
	void HandleStartingNewPlayer(class APlayerController* NewPlayer);
	int GetNumSpectators();
	int GetNumPlayers();
	class UClass* GetDefaultPawnClassForController(class AController* InController);
	class AActor* FindPlayerStart(class AController* Player, const struct FString& IncomingName);
	class AActor* ChoosePlayerStart(class AController* Player);
	void ChangeName(class AController* Controller, const struct FString& NewName, bool bNameChange);
	bool CanSpectate(class APlayerController* Viewer, class APlayerState* ViewTarget);
};

// Class Engine.GameMode
// 0x0068 (FullSize[0x0389] - InheritedSize[0x0321])
// LastOffsetWithSize(0x0321)
#define PADDING_052A - 0x0000 // Minimum to subtract -> (001F)
class AGameMode : public AGameModeBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x001F PADDING_052A, struct FName,                                                          MatchState);                                               // 0x0340(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0027 PADDING_052A, unsigned char,                                                         bDelayedStart);                                            // 0x0348(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002B PADDING_052A, int,                                                                   NumSpectators);                                            // 0x034C(0x0004)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_052A, int,                                                                   NumPlayers);                                               // 0x0350(0x0004)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_052A, int,                                                                   NumBots);                                                  // 0x0354(0x0004)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_052A, float,                                                                 MinRespawnDelay);                                          // 0x0358(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003B PADDING_052A, int,                                                                   NumTravellingPlayers);                                     // 0x035C(0x0004)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_052A, class UClass*,                                                         EngineMessageClass);                                       // 0x0368(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004F PADDING_052A, TArray<class APlayerState*>,                                           InactivePlayerArray);                                      // 0x0370(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005F PADDING_052A, float,                                                                 InactivePlayerStateLifeSpan);                              // 0x0380(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0063 PADDING_052A, int,                                                                   MaxInactivePlayers);                                       // 0x0384(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0067 PADDING_052A, bool,                                                                  bHandleDedicatedServerReplays);                            // 0x0388(0x0001)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.GameMode");
		return ptr;
	}


	void StartMatch();
	void SetBandwidthLimit(float AsyncIOBandwidthLimit);
	void Say(const struct FString& Msg);
	void RestartGame();
	bool ReadyToStartMatch();
	bool ReadyToEndMatch();
	void K2_OnSetMatchState(const struct FName& NewState);
	bool IsMatchInProgress();
	bool HasMatchEnded();
	struct FName GetMatchState();
	void EndMatch();
	void AbortMatch();
};

// Class Engine.NavigationObjectBase
// 0x0031 (FullSize[0x0269] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_052B - 0x0000 // Minimum to subtract -> (0018)
class ANavigationObjectBase : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0018 PADDING_052B, class UCapsuleComponent*,                                              CapsuleComponent);                                         // 0x0250(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0020 PADDING_052B, class UBillboardComponent*,                                            GoodSprite);                                               // 0x0258(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0028 PADDING_052B, class UBillboardComponent*,                                            BadSprite);                                                // 0x0260(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0030 PADDING_052B, unsigned char,                                                         bIsPIEPlayerStart);                                        // 0x0268(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NavigationObjectBase");
		return ptr;
	}


};

// Class Engine.PlayerStart
// 0x000F (FullSize[0x0278] - InheritedSize[0x0269])
// LastOffsetWithSize(0x0269)
#define PADDING_052C - 0x0000 // Minimum to subtract -> (0007)
class APlayerStart : public ANavigationObjectBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_052C, struct FName,                                                          PlayerStartTag);                                           // 0x0270(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PlayerStart");
		return ptr;
	}


};

// Class Engine.GameSession
// 0x0018 (FullSize[0x0260] - InheritedSize[0x0248])
// LastOffsetWithSize(0x0238)
#define PADDING_052D - 0x0000 // Minimum to subtract -> (0010)
class AGameSession : public AInfo
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_052D, int,                                                                   MaxSpectators);                                            // 0x0248(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_052D, int,                                                                   MaxPlayers);                                               // 0x024C(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_052D, int,                                                                   MaxPartySize);                                             // 0x0250(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_052D, unsigned char,                                                         MaxSplitscreensPerConnection);                             // 0x0254(0x0001)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001D PADDING_052D, bool,                                                                  bRequiresPushToTalk);                                      // 0x0255(0x0001)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_052D, struct FName,                                                          SessionName);                                              // 0x0258(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.GameSession");
		return ptr;
	}


};

// Class Engine.GameUserSettings
// 0x00F0 (FullSize[0x0118] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_052E - 0x0000 // Minimum to subtract -> (0000)
class UGameUserSettings : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_052E, bool,                                                                  bUseVSync);                                                // 0x0028(0x0001)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0001 PADDING_052E, bool,                                                                  bUseDynamicResolution);                                    // 0x0029(0x0001)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_052E, uint32_t,                                                              ResolutionSizeX);                                          // 0x0078(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0054 PADDING_052E, uint32_t,                                                              ResolutionSizeY);                                          // 0x007C(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0058 PADDING_052E, uint32_t,                                                              LastUserConfirmedResolutionSizeX);                         // 0x0080(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x005C PADDING_052E, uint32_t,                                                              LastUserConfirmedResolutionSizeY);                         // 0x0084(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0060 PADDING_052E, int,                                                                   WindowPosX);                                               // 0x0088(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0064 PADDING_052E, int,                                                                   WindowPosY);                                               // 0x008C(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0068 PADDING_052E, int,                                                                   FullscreenMode);                                           // 0x0090(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x006C PADDING_052E, int,                                                                   LastConfirmedFullscreenMode);                              // 0x0094(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0070 PADDING_052E, int,                                                                   PreferredFullscreenMode);                                  // 0x0098(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0074 PADDING_052E, uint32_t,                                                              Version);                                                  // 0x009C(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0078 PADDING_052E, int,                                                                   AudioQualityLevel);                                        // 0x00A0(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x007C PADDING_052E, int,                                                                   LastConfirmedAudioQualityLevel);                           // 0x00A4(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0080 PADDING_052E, float,                                                                 FrameRateLimit);                                           // 0x00A8(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0088 PADDING_052E, int,                                                                   DesiredScreenWidth);                                       // 0x00B0(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x008C PADDING_052E, bool,                                                                  bUseDesiredScreenHeight);                                  // 0x00B4(0x0001)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0090 PADDING_052E, int,                                                                   DesiredScreenHeight);                                      // 0x00B8(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0094 PADDING_052E, int,                                                                   LastUserConfirmedDesiredScreenWidth);                      // 0x00BC(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0098 PADDING_052E, int,                                                                   LastUserConfirmedDesiredScreenHeight);                     // 0x00C0(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x009C PADDING_052E, float,                                                                 LastRecommendedScreenWidth);                               // 0x00C4(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_052E, float,                                                                 LastRecommendedScreenHeight);                              // 0x00C8(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_052E, float,                                                                 LastCPUBenchmarkResult);                                   // 0x00CC(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_052E, float,                                                                 LastGPUBenchmarkResult);                                   // 0x00D0(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_052E, TArray<float>,                                                         LastCPUBenchmarkSteps);                                    // 0x00D8(0x0010)  (ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_052E, TArray<float>,                                                         LastGPUBenchmarkSteps);                                    // 0x00E8(0x0010)  (ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_052E, float,                                                                 LastGPUBenchmarkMultiplier);                               // 0x00F8(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00D4 PADDING_052E, bool,                                                                  bUseHDRDisplayOutput);                                     // 0x00FC(0x0001)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00D8 PADDING_052E, int,                                                                   HDRDisplayOutputNits);                                     // 0x0100(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00E0 PADDING_052E, struct FScriptMulticastDelegate,                                       OnGameUserSettingsUINeedsUpdate);                          // 0x0108(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.GameUserSettings");
		return ptr;
	}


	void ValidateSettings();
	bool SupportsHDRDisplayOutput();
	void SetVSyncEnabled(bool bEnable);
	void SetVisualEffectQuality(int Value);
	void SetViewDistanceQuality(int Value);
	void SetToDefaults();
	void SetTextureQuality(int Value);
	void SetShadowQuality(int Value);
	void SetScreenResolution(const struct FIntPoint& Resolution);
	void SetResolutionScaleValueEx(float NewScaleValue);
	void SetResolutionScaleValue(int NewScaleValue);
	void SetResolutionScaleNormalized(float NewScaleNormalized);
	void SetPostProcessingQuality(int Value);
	void SetOverallScalabilityLevel(int Value);
	void SetFullscreenMode(TEnumAsByte<EWindowMode> InFullscreenMode);
	void SetFrameRateLimit(float NewLimit);
	void SetFoliageQuality(int Value);
	void SetDynamicResolutionEnabled(bool bEnable);
	void SetBenchmarkFallbackValues();
	void SetAudioQualityLevel(int QualityLevel);
	void SetAntiAliasingQuality(int Value);
	void SaveSettings();
	void RunHardwareBenchmark(int WorkScale, float CPUMultiplier, float GPUMultiplier);
	void RevertVideoMode();
	void ResetToCurrentSettings();
	void LoadSettings(bool bForceReload);
	bool IsVSyncEnabled();
	bool IsVSyncDirty();
	bool IsScreenResolutionDirty();
	bool IsHDREnabled();
	bool IsFullscreenModeDirty();
	bool IsDynamicResolutionEnabled();
	bool IsDynamicResolutionDirty();
	bool IsDirty();
	int GetVisualEffectQuality();
	int GetViewDistanceQuality();
	int GetTextureQuality();
	static int STATIC_GetSyncInterval();
	int GetShadowQuality();
	struct FIntPoint GetScreenResolution();
	float GetResolutionScaleNormalized();
	void GetResolutionScaleInformationEx(float* CurrentScaleNormalized, float* CurrentScaleValue, float* MinScaleValue, float* MaxScaleValue);
	void GetResolutionScaleInformation(float* CurrentScaleNormalized, int* CurrentScaleValue, int* MinScaleValue, int* MaxScaleValue);
	float GetRecommendedResolutionScale();
	TEnumAsByte<EWindowMode> GetPreferredFullscreenMode();
	int GetPostProcessingQuality();
	int GetOverallScalabilityLevel();
	struct FIntPoint GetLastConfirmedScreenResolution();
	TEnumAsByte<EWindowMode> GetLastConfirmedFullscreenMode();
	static class UGameUserSettings* STATIC_GetGameUserSettings();
	TEnumAsByte<EWindowMode> GetFullscreenMode();
	float GetFrameRateLimit();
	int GetFoliageQuality();
	struct FIntPoint GetDesktopResolution();
	static struct FIntPoint STATIC_GetDefaultWindowPosition();
	static TEnumAsByte<EWindowMode> STATIC_GetDefaultWindowMode();
	float GetDefaultResolutionScale();
	static struct FIntPoint STATIC_GetDefaultResolution();
	int GetCurrentHDRDisplayNits();
	int GetAudioQualityLevel();
	int GetAntiAliasingQuality();
	void EnableHDRDisplayOutput(bool bEnable, int DisplayNits);
	void ConfirmVideoMode();
	void ApplySettings(bool bCheckForCommandLineOverrides);
	void ApplyResolutionSettings(bool bCheckForCommandLineOverrides);
	void ApplyNonResolutionSettings();
	void ApplyHardwareBenchmarkResults();
};

// Class Engine.HUD
// 0x0090 (FullSize[0x02C8] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_052F - 0x0000 // Minimum to subtract -> (0010)
class AHUD : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_052F, class APlayerController*,                                              PlayerOwner);                                              // 0x0248(0x0008)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_052F, unsigned char,                                                         bLostFocusPaused);                                         // 0x0250(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_052F, unsigned char,                                                         bShowHUD);                                                 // 0x0250(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_052F, unsigned char,                                                         bShowDebugInfo);                                           // 0x0250(0x0001) BIT_FIELD (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_052F, int,                                                                   CurrentTargetIndex);                                       // 0x0254(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_052F, unsigned char,                                                         bShowHitBoxDebugInfo);                                     // 0x0258(0x0001) BIT_FIELD (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_052F, unsigned char,                                                         bShowOverlays);                                            // 0x0258(0x0001) BIT_FIELD (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_052F, unsigned char,                                                         bEnableDebugTextShadow);                                   // 0x0258(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_052F, TArray<class AActor*>,                                                 PostRenderedActors);                                       // 0x0260(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_052F, TArray<struct FName>,                                                  DebugDisplay);                                             // 0x0278(0x0010)  (ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_052F, TArray<struct FName>,                                                  ToggledDebugCategories);                                   // 0x0288(0x0010)  (ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_052F, class UCanvas*,                                                        Canvas);                                                   // 0x0298(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0068 PADDING_052F, class UCanvas*,                                                        DebugCanvas);                                              // 0x02A0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0070 PADDING_052F, TArray<struct FDebugTextInfo>,                                         DebugTextList);                                            // 0x02A8(0x0010)  (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0080 PADDING_052F, class UClass*,                                                         ShowDebugTargetDesiredClass);                              // 0x02B8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0088 PADDING_052F, class AActor*,                                                         ShowDebugTargetActor);                                     // 0x02C0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.HUD");
		return ptr;
	}


	void ShowHUD();
	void ShowDebugToggleSubCategory(const struct FName& Category);
	void ShowDebugForReticleTargetToggle(class UClass* DesiredClass);
	void ShowDebug(const struct FName& DebugType);
	void RemoveDebugText(class AActor* SrcActor, bool bLeaveDurationText);
	void RemoveAllDebugStrings();
	void ReceiveHitBoxRelease(const struct FName& BoxName);
	void ReceiveHitBoxEndCursorOver(const struct FName& BoxName);
	void ReceiveHitBoxClick(const struct FName& BoxName);
	void ReceiveHitBoxBeginCursorOver(const struct FName& BoxName);
	void ReceiveDrawHUD(int SizeX, int SizeY);
	struct FVector Project(const struct FVector& Location);
	void PreviousDebugTarget();
	void NextDebugTarget();
	void GetTextSize(const struct FString& Text, float* OutWidth, float* OutHeight, class UFont* Font, float Scale);
	class APlayerController* GetOwningPlayerController();
	class APawn* GetOwningPawn();
	void GetActorsInSelectionRectangle(class UClass* ClassFilter, const struct FVector2D& FirstPoint, const struct FVector2D& SecondPoint, TArray<class AActor*>* OutActors, bool bIncludeNonCollidingComponents, bool bActorMustBeFullyEnclosed);
	void DrawTextureSimple(class UTexture* Texture, float ScreenX, float ScreenY, float Scale, bool bScalePosition);
	void DrawTexture(class UTexture* Texture, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float TextureU, float TextureV, float TextureUWidth, float TextureVHeight, const struct FLinearColor& TintColor, TEnumAsByte<EBlendMode> BlendMode, float Scale, bool bScalePosition, float Rotation, const struct FVector2D& RotPivot);
	void DrawText(const struct FString& Text, const struct FLinearColor& TextColor, float ScreenX, float ScreenY, class UFont* Font, float Scale, bool bScalePosition);
	void DrawRect(const struct FLinearColor& RectColor, float ScreenX, float ScreenY, float ScreenW, float ScreenH);
	void DrawMaterialTriangle(class UMaterialInterface* Material, const struct FVector2D& V0_Pos, const struct FVector2D& V1_Pos, const struct FVector2D& V2_Pos, const struct FVector2D& V0_UV, const struct FVector2D& V1_UV, const struct FVector2D& V2_UV, const struct FLinearColor& V0_Color, const struct FLinearColor& V1_Color, const struct FLinearColor& V2_Color);
	void DrawMaterialSimple(class UMaterialInterface* Material, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float Scale, bool bScalePosition);
	void DrawMaterial(class UMaterialInterface* Material, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float MaterialU, float MaterialV, float MaterialUWidth, float MaterialVHeight, float Scale, bool bScalePosition, float Rotation, const struct FVector2D& RotPivot);
	void DrawLine(float StartScreenX, float StartScreenY, float EndScreenX, float EndScreenY, const struct FLinearColor& LineColor, float LineThickness);
	void Deproject(float ScreenX, float ScreenY, struct FVector* WorldPosition, struct FVector* WorldDirection);
	void AddHitBox(const struct FVector2D& Position, const struct FVector2D& Size, const struct FName& InName, bool bConsumesInput, int Priority);
	void AddDebugText(const struct FString& DebugText, class AActor* SrcActor, float Duration, const struct FVector& Offset, const struct FVector& DesiredOffset, const struct FColor& TextColor, bool bSkipOverwriteCheck, bool bAbsoluteLocation, bool bKeepAttachedToActor, class UFont* InFont, float FontScale, bool bDrawShadow);
};

// Class Engine.InputComponent
// 0x0090 (FullSize[0x0158] - InheritedSize[0x00C8])
// LastOffsetWithSize(0x00C8)
#define PADDING_0530 - 0x0000 // Minimum to subtract -> (0080)
class UInputComponent : public UActorComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0080 PADDING_0530, TArray<struct FCachedKeyToActionInfo>,                                 CachedKeyToActionInfo);                                    // 0x0148(0x0010)  (ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InputComponent");
		return ptr;
	}


	bool WasControllerKeyJustReleased(const struct FKey& Key);
	bool WasControllerKeyJustPressed(const struct FKey& Key);
	bool IsControllerKeyDown(const struct FKey& Key);
	void GetTouchState(int FingerIndex, float* LocationX, float* LocationY, bool* bIsCurrentlyPressed);
	struct FVector GetControllerVectorKeyState(const struct FKey& Key);
	void GetControllerMouseDelta(float* DeltaX, float* DeltaY);
	float GetControllerKeyTimeDown(const struct FKey& Key);
	void GetControllerAnalogStickState(TEnumAsByte<EControllerAnalogStick> WhichStick, float* StickX, float* StickY);
	float GetControllerAnalogKeyState(const struct FKey& Key);
};

// Class Engine.Player
// 0x001C (FullSize[0x0044] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0531 - 0x0000 // Minimum to subtract -> (0008)
class UPlayer : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0531, class APlayerController*,                                              PlayerController);                                         // 0x0030(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0531, int,                                                                   CurrentNetSpeed);                                          // 0x0038(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0531, int,                                                                   ConfiguredInternetSpeed);                                  // 0x003C(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0531, int,                                                                   ConfiguredLanSpeed);                                       // 0x0040(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Player");
		return ptr;
	}


};

// Class Engine.LocalPlayer
// 0x00A0 (FullSize[0x00E4] - InheritedSize[0x0044])
// LastOffsetWithSize(0x0044)
#define PADDING_0532 - 0x0000 // Minimum to subtract -> (002C)
class ULocalPlayer : public UPlayer
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x002C PADDING_0532, class UGameViewportClient*,                                            ViewportClient);                                           // 0x0070(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0532, TEnumAsByte<EAspectRatioAxisConstraint>,                               AspectRatioAxisConstraint);                                // 0x0094(0x0001)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0054 PADDING_0532, class UClass*,                                                         PendingLevelPlayerControllerClass);                        // 0x0098(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005C PADDING_0532, unsigned char,                                                         bSentSplitJoin);                                           // 0x00A0(0x0001) BIT_FIELD (Edit, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009C PADDING_0532, int,                                                                   ControllerId);                                             // 0x00E0(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LocalPlayer");
		return ptr;
	}


};

// Class Engine.PrimaryDataAsset
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
// LastOffsetWithSize(0x0030)
class UPrimaryDataAsset : public UDataAsset
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PrimaryDataAsset");
		return ptr;
	}


};

// Class Engine.ShapeComponent
// 0x001B (FullSize[0x0420] - InheritedSize[0x0405])
// LastOffsetWithSize(0x0408)
#define PADDING_0534 - 0x0000 // Minimum to subtract -> (0000)
class UShapeComponent : public UPrimitiveComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0534, class UBodySetup*,                                                     ShapeBodySetup);                                           // 0x0408(0x0008)  (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0534, struct FColor,                                                         ShapeColor);                                               // 0x0410(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0534, unsigned char,                                                         bDrawOnlyIfSelected);                                      // 0x0414(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0534, unsigned char,                                                         bShouldCollideWhenPlacing);                                // 0x0414(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0534, unsigned char,                                                         bDynamicObstacle);                                         // 0x0414(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0534, class UClass*,                                                         AreaClass);                                                // 0x0418(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ShapeComponent");
		return ptr;
	}


};

// Class Engine.BoxComponent
// 0x0010 (FullSize[0x0430] - InheritedSize[0x0420])
// LastOffsetWithSize(0x0420)
#define PADDING_0535 - 0x0000 // Minimum to subtract -> (0000)
class UBoxComponent : public UShapeComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0535, struct FVector,                                                        BoxExtent);                                                // 0x0420(0x000C)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x000C PADDING_0535, float,                                                                 LineThickness);                                            // 0x042C(0x0004)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BoxComponent");
		return ptr;
	}


	void SetBoxExtent(const struct FVector& InBoxExtent, bool bUpdateOverlaps);
	struct FVector GetUnscaledBoxExtent();
	struct FVector GetScaledBoxExtent();
};

// Class Engine.TriggerBase
// 0x0018 (FullSize[0x0250] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0536 - 0x0000 // Minimum to subtract -> (0010)
class ATriggerBase : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0536, class UShapeComponent*,                                                CollisionComponent);                                       // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TriggerBase");
		return ptr;
	}


};

// Class Engine.TriggerBox
// 0x0000 (FullSize[0x0250] - InheritedSize[0x0250])
// LastOffsetWithSize(0x0250)
class ATriggerBox : public ATriggerBase
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TriggerBox");
		return ptr;
	}


};

// Class Engine.PhysicalMaterial
// 0x0040 (FullSize[0x0068] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0538 - 0x0000 // Minimum to subtract -> (0000)
class UPhysicalMaterial : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0538, float,                                                                 Friction);                                                 // 0x0028(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0538, TEnumAsByte<EFrictionCombineMode>,                                     FrictionCombineMode);                                      // 0x002C(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0005 PADDING_0538, bool,                                                                  bOverrideFrictionCombineMode);                             // 0x002D(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0538, float,                                                                 Restitution);                                              // 0x0030(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0538, TEnumAsByte<EFrictionCombineMode>,                                     RestitutionCombineMode);                                   // 0x0034(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000D PADDING_0538, bool,                                                                  bOverrideRestitutionCombineMode);                          // 0x0035(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0538, float,                                                                 Density);                                                  // 0x0038(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0538, float,                                                                 RaiseMassToPower);                                         // 0x003C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0538, float,                                                                 DestructibleDamageThresholdScale);                         // 0x0040(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0538, class UPhysicalMaterialPropertyBase*,                                  PhysicalMaterialProperty);                                 // 0x0048(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0538, TEnumAsByte<EPhysicalSurface>,                                         SurfaceType);                                              // 0x0050(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0538, float,                                                                 TireFrictionScale);                                        // 0x0054(0x0004)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0538, TArray<struct FTireFrictionScalePair>,                                 TireFrictionScales);                                       // 0x0058(0x0010)  (Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PhysicalMaterial");
		return ptr;
	}


};

// Class Engine.PhysicsVolume
// 0x000D (FullSize[0x028D] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
#define PADDING_0539 - 0x0000 // Minimum to subtract -> (0000)
class APhysicsVolume : public AVolume
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0539, float,                                                                 TerminalVelocity);                                         // 0x0280(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0539, int,                                                                   Priority);                                                 // 0x0284(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0539, float,                                                                 FluidFriction);                                            // 0x0288(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0539, unsigned char,                                                         bWaterVolume);                                             // 0x028C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0539, unsigned char,                                                         bPhysicsOnContact);                                        // 0x028C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PhysicsVolume");
		return ptr;
	}


};

// Class Engine.PlayerCameraManager
// 0x24BC (FullSize[0x26F4] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_053A - 0x0000 // Minimum to subtract -> (0010)
class APlayerCameraManager : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_053A, class APlayerController*,                                              PCOwner);                                                  // 0x0248(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_053A, class USceneComponent*,                                                TransformComponent);                                       // 0x0250(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0028 PADDING_053A, float,                                                                 DefaultFOV);                                               // 0x0260(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_053A, float,                                                                 DefaultOrthoWidth);                                        // 0x0268(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_053A, float,                                                                 DefaultAspectRatio);                                       // 0x0270(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_053A, struct FCameraCacheEntry,                                              CameraCache);                                              // 0x02C0(0x05D0)  (Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0658 PADDING_053A, struct FCameraCacheEntry,                                              LastFrameCameraCache);                                     // 0x0890(0x05D0)  (Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0C28 PADDING_053A, struct FTViewTarget,                                                   ViewTarget);                                               // 0x0E60(0x05E0)  (Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x1208 PADDING_053A, struct FTViewTarget,                                                   PendingViewTarget);                                        // 0x1440(0x05E0)  (Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x1808 PADDING_053A, struct FCameraCacheEntry,                                              CameraCachePrivate);                                       // 0x1A40(0x05D0)  (Transient, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x1DD8 PADDING_053A, struct FCameraCacheEntry,                                              LastFrameCameraCachePrivate);                              // 0x2010(0x05D0)  (Transient, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x23A8 PADDING_053A, TArray<class UCameraModifier*>,                                        ModifierList);                                             // 0x25E0(0x0010)  (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x23B8 PADDING_053A, TArray<class UClass*>,                                                 DefaultModifiers);                                         // 0x25F0(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x23C8 PADDING_053A, float,                                                                 FreeCamDistance);                                          // 0x2600(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x23CC PADDING_053A, struct FVector,                                                        FreeCamOffset);                                            // 0x2604(0x000C)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x23D8 PADDING_053A, struct FVector,                                                        ViewTargetOffset);                                         // 0x2610(0x000C)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x23F8 PADDING_053A, TArray<class AEmitterCameraLensEffectBase*>,                           CameraLensEffects);                                        // 0x2630(0x0010)  (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x2408 PADDING_053A, class UCameraModifier_CameraShake*,                                    CachedCameraShakeMod);                                     // 0x2640(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x2410 PADDING_053A, class UCameraAnimInst*,                                                AnimInstPool[0x8]);                                        // 0x2648(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x2450 PADDING_053A, TArray<struct FPostProcessSettings>,                                   PostProcessBlendCache);                                    // 0x2688(0x0010)  (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x2470 PADDING_053A, TArray<class UCameraAnimInst*>,                                        ActiveAnims);                                              // 0x26A8(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x2480 PADDING_053A, TArray<class UCameraAnimInst*>,                                        FreeAnims);                                                // 0x26B8(0x0010)  (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x2490 PADDING_053A, class ACameraActor*,                                                   AnimCameraActor);                                          // 0x26C8(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x2498 PADDING_053A, unsigned char,                                                         bIsOrthographic);                                          // 0x26D0(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x2498 PADDING_053A, unsigned char,                                                         bDefaultConstrainAspectRatio);                             // 0x26D0(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x2498 PADDING_053A, unsigned char,                                                         bClientSimulatingViewTarget);                              // 0x26D0(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x2498 PADDING_053A, unsigned char,                                                         bUseClientSideCameraUpdates);                              // 0x26D0(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x2499 PADDING_053A, unsigned char,                                                         bGameCameraCutThisFrame);                                  // 0x26D1(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x249C PADDING_053A, float,                                                                 ViewPitchMin);                                             // 0x26D4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x24A0 PADDING_053A, float,                                                                 ViewPitchMax);                                             // 0x26D8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x24A4 PADDING_053A, float,                                                                 ViewYawMin);                                               // 0x26DC(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x24A8 PADDING_053A, float,                                                                 ViewYawMax);                                               // 0x26E0(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x24AC PADDING_053A, float,                                                                 ViewRollMin);                                              // 0x26E4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x24B0 PADDING_053A, float,                                                                 ViewRollMax);                                              // 0x26E8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x24B8 PADDING_053A, float,                                                                 ServerUpdateCameraTimeout);                                // 0x26F0(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PlayerCameraManager");
		return ptr;
	}


	void StopCameraShake(class UCameraShake* ShakeInstance, bool bImmediately);
	void StopCameraFade();
	void StopCameraAnimInst(class UCameraAnimInst* AnimInst, bool bImmediate);
	void StopAllInstancesOfCameraShake(class UClass* Shake, bool bImmediately);
	void StopAllInstancesOfCameraAnim(class UCameraAnim* Anim, bool bImmediate);
	void StopAllCameraShakes(bool bImmediately);
	void StopAllCameraAnims(bool bImmediate);
	void StartCameraFade(float FromAlpha, float ToAlpha, float Duration, const struct FLinearColor& Color, bool bShouldFadeAudio, bool bHoldWhenFinished);
	void SetManualCameraFade(float InFadeAmount, const struct FLinearColor& Color, bool bInFadeAudio);
	void SetGameCameraCutThisFrame();
	bool RemoveCameraModifier(class UCameraModifier* ModifierToRemove);
	void RemoveCameraLensEffect(class AEmitterCameraLensEffectBase* Emitter);
	class UCameraShake* PlayCameraShake(class UClass* ShakeClass, float Scale, TEnumAsByte<ECameraAnimPlaySpace> PlaySpace, const struct FRotator& UserPlaySpaceRot);
	class UCameraAnimInst* PlayCameraAnim(class UCameraAnim* Anim, float Rate, float Scale, float BlendInTime, float blendOutTime, bool bLoop, bool bRandomStartTime, float Duration, TEnumAsByte<ECameraAnimPlaySpace> PlaySpace, const struct FRotator& UserPlaySpaceRot);
	void PhotographyCameraModify(const struct FVector& NewCameraLocation, const struct FVector& PreviousCameraLocation, const struct FVector& OriginalCameraLocation, struct FVector* ResultCameraLocation);
	void OnPhotographySessionStart();
	void OnPhotographySessionEnd();
	void OnPhotographyMultiPartCaptureStart();
	void OnPhotographyMultiPartCaptureEnd();
	class APlayerController* GetOwningPlayerController();
	float GetFOVAngle();
	struct FRotator GetCameraRotation();
	struct FVector GetCameraLocation();
	class UCameraModifier* FindCameraModifierByClass(class UClass* ModifierClass);
	void ClearCameraLensEffects();
	bool BlueprintUpdateCamera(class AActor* CameraTarget, struct FVector* NewCameraLocation, struct FRotator* NewCameraRotation, float* NewCameraFOV);
	class UCameraModifier* AddNewCameraModifier(class UClass* ModifierClass);
	class AEmitterCameraLensEffectBase* AddCameraLensEffect(class UClass* LensEffectEmitterClass);
};

// Class Engine.PlayerState
// 0x0118 (FullSize[0x0360] - InheritedSize[0x0248])
// LastOffsetWithSize(0x0238)
#define PADDING_053B - 0x0000 // Minimum to subtract -> (0010)
class APlayerState : public AInfo
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_053B, float,                                                                 Score);                                                    // 0x0248(0x0004)  (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_053B, struct FString,                                                        PlayerName);                                               // 0x0250(0x0010)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_053B, int,                                                                   PlayerId);                                                 // 0x0270(0x0004)  (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_053B, unsigned char,                                                         Ping);                                                     // 0x0274(0x0001)  (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003E PADDING_053B, unsigned char,                                                         bShouldUpdateReplicatedPing);                              // 0x0276(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x003E PADDING_053B, unsigned char,                                                         bIsSpectator);                                             // 0x0276(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003E PADDING_053B, unsigned char,                                                         bOnlySpectator);                                           // 0x0276(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003E PADDING_053B, unsigned char,                                                         bIsABot);                                                  // 0x0276(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003E PADDING_053B, unsigned char,                                                         bIsInactive);                                              // 0x0276(0x0001) BIT_FIELD (Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003E PADDING_053B, unsigned char,                                                         bFromPreviousLevel);                                       // 0x0276(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_053B, int,                                                                   StartTime);                                                // 0x0278(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_053B, class UClass*,                                                         EngineMessageClass);                                       // 0x0280(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_053B, struct FString,                                                        SavedNetworkAddress);                                      // 0x0290(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_053B, struct FUniqueNetIdRepl,                                               UniqueID);                                                 // 0x02A0(0x0028)  (Net, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_053B, class APawn*,                                                          PawnPrivate);                                              // 0x02D0(0x0008)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0118 PADDING_053B, struct FString,                                                        PlayerNamePrivate);                                        // 0x0350(0x0010)  (Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PlayerState");
		return ptr;
	}


	void ReceiveOverrideWith(class APlayerState* OldPlayerState);
	void ReceiveCopyProperties(class APlayerState* NewPlayerState);
	void OnRep_UniqueId();
	void OnRep_Score();
	void OnRep_PlayerName();
	void OnRep_PlayerId();
	void OnRep_bIsInactive();
	struct FString GetPlayerName();
};

// Class Engine.ProjectileMovementComponent
// 0x0084 (FullSize[0x0198] - InheritedSize[0x0114])
// LastOffsetWithSize(0x0114)
#define PADDING_053C - 0x0000 // Minimum to subtract -> (0004)
class UProjectileMovementComponent : public UMovementComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_053C, float,                                                                 InitialSpeed);                                             // 0x0118(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_053C, float,                                                                 MaxSpeed);                                                 // 0x011C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_053C, unsigned char,                                                         bRotationFollowsVelocity);                                 // 0x0120(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_053C, unsigned char,                                                         bRotationRemainsVertical);                                 // 0x0120(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_053C, unsigned char,                                                         bShouldBounce);                                            // 0x0120(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_053C, unsigned char,                                                         bInitialVelocityInLocalSpace);                             // 0x0120(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_053C, unsigned char,                                                         bForceSubStepping);                                        // 0x0120(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_053C, unsigned char,                                                         bSimulationEnabled);                                       // 0x0120(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_053C, unsigned char,                                                         bSweepCollision);                                          // 0x0120(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_053C, unsigned char,                                                         bIsHomingProjectile);                                      // 0x0120(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000D PADDING_053C, unsigned char,                                                         bBounceAngleAffectsFriction);                              // 0x0121(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000D PADDING_053C, unsigned char,                                                         bIsSliding);                                               // 0x0121(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000D PADDING_053C, unsigned char,                                                         bInterpMovement);                                          // 0x0121(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000D PADDING_053C, unsigned char,                                                         bInterpRotation);                                          // 0x0121(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_053C, float,                                                                 PreviousHitTime);                                          // 0x0124(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_053C, struct FVector,                                                        PreviousHitNormal);                                        // 0x0128(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_053C, float,                                                                 ProjectileGravityScale);                                   // 0x0134(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_053C, float,                                                                 Buoyancy);                                                 // 0x0138(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_053C, float,                                                                 Bounciness);                                               // 0x013C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_053C, float,                                                                 Friction);                                                 // 0x0140(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_053C, float,                                                                 BounceVelocityStopSimulatingThreshold);                    // 0x0144(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_053C, float,                                                                 MinFrictionFraction);                                      // 0x0148(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_053C, struct FScriptMulticastDelegate,                                       OnProjectileBounce);                                       // 0x0150(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004C PADDING_053C, struct FScriptMulticastDelegate,                                       OnProjectileStop);                                         // 0x0160(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005C PADDING_053C, float,                                                                 HomingAccelerationMagnitude);                              // 0x0170(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_053C, TWeakObjectPtr<class USceneComponent>,                                 HomingTargetComponent);                                    // 0x0174(0x0008)  (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_053C, float,                                                                 MaxSimulationTimeStep);                                    // 0x017C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_053C, int,                                                                   MaxSimulationIterations);                                  // 0x0180(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_053C, int,                                                                   BounceAdditionalIterations);                               // 0x0184(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_053C, float,                                                                 InterpLocationTime);                                       // 0x0188(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_053C, float,                                                                 InterpRotationTime);                                       // 0x018C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007C PADDING_053C, float,                                                                 InterpLocationMaxLagDistance);                             // 0x0190(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_053C, float,                                                                 InterpLocationSnapToTargetDistance);                       // 0x0194(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ProjectileMovementComponent");
		return ptr;
	}


	void StopSimulating(const struct FHitResult& HitResult);
	void SetVelocityInLocalSpace(const struct FVector& NewVelocity);
	void SetInterpolatedComponent(class USceneComponent* Component);
	void ResetInterpolation();
	void OnProjectileStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult);
	void OnProjectileBounceDelegate__DelegateSignature(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
	void MoveInterpolationTarget(const struct FVector& NewLocation, const struct FRotator& NewRotation);
	struct FVector LimitVelocity(const struct FVector& NewVelocity);
	bool IsVelocityUnderSimulationThreshold();
	bool IsInterpolationComplete();
};

// Class Engine.ReplicationDriver
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UReplicationDriver : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ReplicationDriver");
		return ptr;
	}


};

// Class Engine.AudioComponent
// 0x04D0 (FullSize[0x0650] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_053E - 0x0000 // Minimum to subtract -> (0089)
class UAudioComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0089 PADDING_053E, class USoundBase*,                                                     Sound);                                                    // 0x0218(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0091 PADDING_053E, TArray<struct FAudioComponentParam>,                                   InstanceParameters);                                       // 0x0220(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A1 PADDING_053E, class USoundClass*,                                                    SoundClassOverride);                                       // 0x0230(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A9 PADDING_053E, unsigned char,                                                         bAutoDestroy);                                             // 0x0238(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A9 PADDING_053E, unsigned char,                                                         bStopWhenOwnerDestroyed);                                  // 0x0238(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A9 PADDING_053E, unsigned char,                                                         bShouldRemainActiveIfDropped);                             // 0x0238(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A9 PADDING_053E, unsigned char,                                                         bAllowSpatialization);                                     // 0x0238(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A9 PADDING_053E, unsigned char,                                                         bOverrideAttenuation);                                     // 0x0238(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A9 PADDING_053E, unsigned char,                                                         bOverrideSubtitlePriority);                                // 0x0238(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A9 PADDING_053E, unsigned char,                                                         bIsUISound);                                               // 0x0238(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A9 PADDING_053E, unsigned char,                                                         bEnableLowPassFilter);                                     // 0x0238(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AA PADDING_053E, unsigned char,                                                         bOverridePriority);                                        // 0x0239(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AA PADDING_053E, unsigned char,                                                         bSuppressSubtitles);                                       // 0x0239(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AB PADDING_053E, unsigned char,                                                         bAutoManageAttachment);                                    // 0x023A(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B1 PADDING_053E, struct FName,                                                          AudioComponentUserID);                                     // 0x0240(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B9 PADDING_053E, unsigned char,                                                         bIsFadingOut);                                             // 0x0248(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BD PADDING_053E, float,                                                                 StartedPlayingTime);                                       // 0x024C(0x0004)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C1 PADDING_053E, float,                                                                 PitchModulationMin);                                       // 0x0250(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C5 PADDING_053E, float,                                                                 PitchModulationMax);                                       // 0x0254(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C9 PADDING_053E, float,                                                                 VolumeModulationMin);                                      // 0x0258(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00CD PADDING_053E, float,                                                                 VolumeModulationMax);                                      // 0x025C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D1 PADDING_053E, float,                                                                 VolumeMultiplier);                                         // 0x0260(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D5 PADDING_053E, int,                                                                   EnvelopeFollowerAttackTime);                               // 0x0264(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D9 PADDING_053E, int,                                                                   EnvelopeFollowerReleaseTime);                              // 0x0268(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00DD PADDING_053E, float,                                                                 Priority);                                                 // 0x026C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E1 PADDING_053E, float,                                                                 SubtitlePriority);                                         // 0x0270(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E5 PADDING_053E, float,                                                                 PitchMultiplier);                                          // 0x0274(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E9 PADDING_053E, float,                                                                 LowPassFilterFrequency);                                   // 0x0278(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F1 PADDING_053E, class USoundAttenuation*,                                              AttenuationSettings);                                      // 0x0280(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F9 PADDING_053E, struct FSoundAttenuationSettings,                                      AttenuationOverrides);                                     // 0x0288(0x02E8)  (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x03E1 PADDING_053E, class USoundConcurrency*,                                              ConcurrencySettings);                                      // 0x0570(0x0008)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x043D PADDING_053E, EAttachmentRule,                                                       AutoAttachLocationRule);                                   // 0x05CC(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x043E PADDING_053E, EAttachmentRule,                                                       AutoAttachRotationRule);                                   // 0x05CD(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x043F PADDING_053E, EAttachmentRule,                                                       AutoAttachScaleRule);                                      // 0x05CE(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0441 PADDING_053E, struct FScriptMulticastDelegate,                                       OnAudioFinished);                                          // 0x05D0(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0469 PADDING_053E, struct FScriptMulticastDelegate,                                       OnAudioPlaybackPercent);                                   // 0x05F8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0491 PADDING_053E, struct FScriptMulticastDelegate,                                       OnAudioSingleEnvelopeValue);                               // 0x0620(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x04B9 PADDING_053E, struct FScriptMulticastDelegate,                                       OnAudioMultiEnvelopeValue);                                // 0x0648(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x04E1 PADDING_053E, struct FSoundModulation,                                               Modulation);                                               // 0x0670(0x0010)  (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x04F1 PADDING_053E, struct FScriptDelegate,                                                OnQueueSubtitles);                                         // 0x0680(0x0010)  (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0501 PADDING_053E, TWeakObjectPtr<class USceneComponent>,                                 AutoAttachParent);                                         // 0x0690(0x0008)  (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0509 PADDING_053E, struct FName,                                                          AutoAttachSocketName);                                     // 0x0698(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AudioComponent");
		return ptr;
	}


	void StopDelayed(float DelayTime);
	void Stop();
	void SetWaveParameter(const struct FName& InName, class USoundWave* InWave);
	void SetVolumeMultiplier(float NewVolumeMultiplier);
	void SetUISound(bool bInUISound);
	void SetSubmixSend(class USoundSubmix* Submix, float SendLevel);
	void SetSourceBusSendPreEffect(class USoundSourceBus* SoundSourceBus, float SourceBusSendLevel);
	void SetSourceBusSendPostEffect(class USoundSourceBus* SoundSourceBus, float SourceBusSendLevel);
	void SetSound(class USoundBase* NewSound);
	void SetPitchMultiplier(float NewPitchMultiplier);
	void SetPaused(bool bPause);
	void SetLowPassFilterFrequency(float InLowPassFilterFrequency);
	void SetLowPassFilterEnabled(bool InLowPassFilterEnabled);
	void SetIntParameter(const struct FName& InName, int inInt);
	void SetFloatParameter(const struct FName& InName, float InFloat);
	void SetBoolParameter(const struct FName& InName, bool InBool);
	void Play(float StartTime);
	bool IsPlaying();
	bool HasCookedFFTData();
	bool HasCookedAmplitudeEnvelopeData();
	bool GetCookedFFTDataForAllPlayingSounds(TArray<struct FSoundWaveSpectralDataPerSound>* OutSoundWaveSpectralData);
	bool GetCookedFFTData(TArray<float> FrequenciesToGet, TArray<struct FSoundWaveSpectralData>* OutSoundWaveSpectralData);
	bool GetCookedEnvelopeDataForAllPlayingSounds(TArray<struct FSoundWaveEnvelopeDataPerSound>* OutEnvelopeData);
	bool GetCookedEnvelopeData(float* OutEnvelopeData);
	void FadeOut(float FadeoutDuration, float FadeVolumeLevel);
	void FadeIn(float FadeInDuration, float FadeVolumeLevel, float StartTime);
	bool BP_GetAttenuationSettingsToApply(struct FSoundAttenuationSettings* OutAttenuationSettings);
	void AdjustVolume(float AdjustVolumeDuration, float AdjustVolumeLevel);
	void AdjustAttenuation(const struct FSoundAttenuationSettings& InAttenuationSettings);
};

// Class Engine.CharacterMovementComponent
// 0x05AC (FullSize[0x070C] - InheritedSize[0x0160])
// LastOffsetWithSize(0x0160)
#define PADDING_053F - 0x0000 // Minimum to subtract -> (0010)
class UCharacterMovementComponent : public UPawnMovementComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_053F, class ACharacter*,                                                     CharacterOwner);                                           // 0x0170(0x0008)  (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0018 PADDING_053F, float,                                                                 GravityScale);                                             // 0x0178(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_053F, float,                                                                 MaxStepHeight);                                            // 0x017C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_053F, float,                                                                 JumpZVelocity);                                            // 0x0180(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_053F, float,                                                                 JumpOffJumpZFactor);                                       // 0x0184(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_053F, float,                                                                 WalkableFloorAngle);                                       // 0x0188(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x002C PADDING_053F, float,                                                                 WalkableFloorZ);                                           // 0x018C(0x0004)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0030 PADDING_053F, TEnumAsByte<EMovementMode>,                                            MovementMode);                                             // 0x0190(0x0001)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0031 PADDING_053F, unsigned char,                                                         CustomMovementMode);                                       // 0x0191(0x0001)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0032 PADDING_053F, ENetworkSmoothingMode,                                                 NetworkSmoothingMode);                                     // 0x0192(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_053F, float,                                                                 GroundFriction);                                           // 0x0194(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005C PADDING_053F, float,                                                                 MaxWalkSpeed);                                             // 0x01BC(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_053F, float,                                                                 MaxWalkSpeedCrouched);                                     // 0x01C0(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0064 PADDING_053F, float,                                                                 MaxSwimSpeed);                                             // 0x01C4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_053F, float,                                                                 MaxFlySpeed);                                              // 0x01C8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_053F, float,                                                                 MaxCustomMovementSpeed);                                   // 0x01CC(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_053F, float,                                                                 MaxAcceleration);                                          // 0x01D0(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_053F, float,                                                                 MinAnalogWalkSpeed);                                       // 0x01D4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_053F, float,                                                                 BrakingFrictionFactor);                                    // 0x01D8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007C PADDING_053F, float,                                                                 BrakingFriction);                                          // 0x01DC(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_053F, float,                                                                 BrakingSubStepTime);                                       // 0x01E0(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0084 PADDING_053F, float,                                                                 BrakingDecelerationWalking);                               // 0x01E4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_053F, float,                                                                 BrakingDecelerationFalling);                               // 0x01E8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008C PADDING_053F, float,                                                                 BrakingDecelerationSwimming);                              // 0x01EC(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_053F, float,                                                                 BrakingDecelerationFlying);                                // 0x01F0(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_053F, float,                                                                 AirControl);                                               // 0x01F4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_053F, float,                                                                 AirControlBoostMultiplier);                                // 0x01F8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009C PADDING_053F, float,                                                                 AirControlBoostVelocityThreshold);                         // 0x01FC(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_053F, float,                                                                 FallingLateralFriction);                                   // 0x0200(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_053F, float,                                                                 CrouchedHalfHeight);                                       // 0x0204(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_053F, float,                                                                 Buoyancy);                                                 // 0x0208(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_053F, float,                                                                 PerchRadiusThreshold);                                     // 0x020C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_053F, float,                                                                 PerchAdditionalHeight);                                    // 0x0210(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B4 PADDING_053F, struct FRotator,                                                       RotationRate);                                             // 0x0214(0x000C)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_053F, unsigned char,                                                         bUseSeparateBrakingFriction);                              // 0x0220(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_053F, unsigned char,                                                         bApplyGravityWhileJumping);                                // 0x0220(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_053F, unsigned char,                                                         bUseControllerDesiredRotation);                            // 0x0220(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_053F, unsigned char,                                                         bOrientRotationToMovement);                                // 0x0220(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_053F, unsigned char,                                                         bSweepWhileNavWalking);                                    // 0x0220(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_053F, unsigned char,                                                         bMovementInProgress);                                      // 0x0220(0x0001) BIT_FIELD (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_053F, unsigned char,                                                         bEnableScopedMovementUpdates);                             // 0x0220(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C1 PADDING_053F, unsigned char,                                                         bEnableServerDualMoveScopedMovementUpdates);               // 0x0221(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C1 PADDING_053F, unsigned char,                                                         bForceMaxAccel);                                           // 0x0221(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C1 PADDING_053F, unsigned char,                                                         bRunPhysicsWithNoController);                              // 0x0221(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C1 PADDING_053F, unsigned char,                                                         bForceNextFloorCheck);                                     // 0x0221(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnTemplate, EditConst, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C1 PADDING_053F, unsigned char,                                                         bShrinkProxyCapsule);                                      // 0x0221(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C1 PADDING_053F, unsigned char,                                                         bCanWalkOffLedges);                                        // 0x0221(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C1 PADDING_053F, unsigned char,                                                         bCanWalkOffLedgesWhenCrouching);                           // 0x0221(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C2 PADDING_053F, unsigned char,                                                         bNetworkSkipProxyPredictionOnNetUpdate);                   // 0x0222(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C2 PADDING_053F, unsigned char,                                                         bNetworkAlwaysReplicateTransformUpdateTimestamp);          // 0x0222(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C2 PADDING_053F, unsigned char,                                                         bDeferUpdateMoveComponent);                                // 0x0222(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C2 PADDING_053F, unsigned char,                                                         bEnablePhysicsInteraction);                                // 0x0222(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C2 PADDING_053F, unsigned char,                                                         bTouchForceScaledToMass);                                  // 0x0222(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C2 PADDING_053F, unsigned char,                                                         bPushForceScaledToMass);                                   // 0x0222(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C2 PADDING_053F, unsigned char,                                                         bPushForceUsingZOffset);                                   // 0x0222(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C3 PADDING_053F, unsigned char,                                                         bScalePushForceToVelocity);                                // 0x0223(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C8 PADDING_053F, class USceneComponent*,                                                DeferredUpdatedMoveComponent);                             // 0x0228(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_053F, float,                                                                 MaxOutOfWaterStepHeight);                                  // 0x0230(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D4 PADDING_053F, float,                                                                 OutofWaterZ);                                              // 0x0234(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D8 PADDING_053F, float,                                                                 Mass);                                                     // 0x0238(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00DC PADDING_053F, float,                                                                 StandingDownwardForceScale);                               // 0x023C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E0 PADDING_053F, float,                                                                 InitialPushForceFactor);                                   // 0x0240(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E4 PADDING_053F, float,                                                                 PushForceFactor);                                          // 0x0244(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E8 PADDING_053F, float,                                                                 PushForcePointZOffsetFactor);                              // 0x0248(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00EC PADDING_053F, float,                                                                 TouchForceFactor);                                         // 0x024C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F0 PADDING_053F, float,                                                                 MinTouchForce);                                            // 0x0250(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F4 PADDING_053F, float,                                                                 MaxTouchForce);                                            // 0x0254(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F8 PADDING_053F, float,                                                                 RepulsionForce);                                           // 0x0258(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FC PADDING_053F, struct FVector,                                                        Acceleration);                                             // 0x025C(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0110 PADDING_053F, struct FQuat,                                                          LastUpdateRotation);                                       // 0x0270(0x0010)  (IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0120 PADDING_053F, struct FVector,                                                        LastUpdateLocation);                                       // 0x0280(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x012C PADDING_053F, struct FVector,                                                        LastUpdateVelocity);                                       // 0x028C(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0138 PADDING_053F, float,                                                                 ServerLastTransformUpdateTimeStamp);                       // 0x0298(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x013C PADDING_053F, float,                                                                 ServerLastClientGoodMoveAckTime);                          // 0x029C(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0140 PADDING_053F, float,                                                                 ServerLastClientAdjustmentTime);                           // 0x02A0(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0144 PADDING_053F, struct FVector,                                                        PendingImpulseToApply);                                    // 0x02A4(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0150 PADDING_053F, struct FVector,                                                        PendingForceToApply);                                      // 0x02B0(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x015C PADDING_053F, float,                                                                 AnalogInputModifier);                                      // 0x02BC(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x016C PADDING_053F, float,                                                                 MaxSimulationTimeStep);                                    // 0x02CC(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0170 PADDING_053F, int,                                                                   MaxSimulationIterations);                                  // 0x02D0(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0174 PADDING_053F, int,                                                                   MaxJumpApexAttemptsPerSimulation);                         // 0x02D4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0178 PADDING_053F, float,                                                                 MaxDepenetrationWithGeometry);                             // 0x02D8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x017C PADDING_053F, float,                                                                 MaxDepenetrationWithGeometryAsProxy);                      // 0x02DC(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0180 PADDING_053F, float,                                                                 MaxDepenetrationWithPawn);                                 // 0x02E0(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0184 PADDING_053F, float,                                                                 MaxDepenetrationWithPawnAsProxy);                          // 0x02E4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0188 PADDING_053F, float,                                                                 NetworkSimulatedSmoothLocationTime);                       // 0x02E8(0x0004)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x018C PADDING_053F, float,                                                                 NetworkSimulatedSmoothRotationTime);                       // 0x02EC(0x0004)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0190 PADDING_053F, float,                                                                 ListenServerNetworkSimulatedSmoothLocationTime);           // 0x02F0(0x0004)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0194 PADDING_053F, float,                                                                 ListenServerNetworkSimulatedSmoothRotationTime);           // 0x02F4(0x0004)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0198 PADDING_053F, float,                                                                 NetProxyShrinkRadius);                                     // 0x02F8(0x0004)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x019C PADDING_053F, float,                                                                 NetProxyShrinkHalfHeight);                                 // 0x02FC(0x0004)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01A0 PADDING_053F, float,                                                                 NetworkMaxSmoothUpdateDistance);                           // 0x0300(0x0004)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01A4 PADDING_053F, float,                                                                 NetworkNoSmoothUpdateDistance);                            // 0x0304(0x0004)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01A8 PADDING_053F, float,                                                                 NetworkMinTimeBetweenClientAckGoodMoves);                  // 0x0308(0x0004)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01AC PADDING_053F, float,                                                                 NetworkMinTimeBetweenClientAdjustments);                   // 0x030C(0x0004)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01B0 PADDING_053F, float,                                                                 NetworkMinTimeBetweenClientAdjustmentsLargeCorrection);    // 0x0310(0x0004)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01B4 PADDING_053F, float,                                                                 NetworkLargeClientCorrectionDistance);                     // 0x0314(0x0004)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01B8 PADDING_053F, float,                                                                 LedgeCheckThreshold);                                      // 0x0318(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01BC PADDING_053F, float,                                                                 JumpOutOfWaterPitch);                                      // 0x031C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01C0 PADDING_053F, struct FFindFloorResult,                                               CurrentFloor);                                             // 0x0320(0x0094)  (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0254 PADDING_053F, TEnumAsByte<EMovementMode>,                                            DefaultLandMovementMode);                                  // 0x03B4(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0255 PADDING_053F, TEnumAsByte<EMovementMode>,                                            DefaultWaterMovementMode);                                 // 0x03B5(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0256 PADDING_053F, TEnumAsByte<EMovementMode>,                                            GroundMovementMode);                                       // 0x03B6(0x0001)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0257 PADDING_053F, unsigned char,                                                         bMaintainHorizontalGroundVelocity);                        // 0x03B7(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0257 PADDING_053F, unsigned char,                                                         bImpartBaseVelocityX);                                     // 0x03B7(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0257 PADDING_053F, unsigned char,                                                         bImpartBaseVelocityY);                                     // 0x03B7(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0257 PADDING_053F, unsigned char,                                                         bImpartBaseVelocityZ);                                     // 0x03B7(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0257 PADDING_053F, unsigned char,                                                         bImpartBaseAngularVelocity);                               // 0x03B7(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0257 PADDING_053F, unsigned char,                                                         bJustTeleported);                                          // 0x03B7(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0257 PADDING_053F, unsigned char,                                                         bNetworkUpdateReceived);                                   // 0x03B7(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0257 PADDING_053F, unsigned char,                                                         bNetworkMovementModeChanged);                              // 0x03B7(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0258 PADDING_053F, unsigned char,                                                         bIgnoreClientMovementErrorChecksAndCorrection);            // 0x03B8(0x0001) BIT_FIELD (Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0258 PADDING_053F, unsigned char,                                                         bServerAcceptClientAuthoritativePosition);                 // 0x03B8(0x0001) BIT_FIELD (Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0258 PADDING_053F, unsigned char,                                                         bNotifyApex);                                              // 0x03B8(0x0001) BIT_FIELD (Edit, BlueprintVisible, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0258 PADDING_053F, unsigned char,                                                         bCheatFlying);                                             // 0x03B8(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0258 PADDING_053F, unsigned char,                                                         bWantsToCrouch);                                           // 0x03B8(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0258 PADDING_053F, unsigned char,                                                         bCrouchMaintainsBaseLocation);                             // 0x03B8(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnTemplate, EditConst, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0258 PADDING_053F, unsigned char,                                                         bIgnoreBaseRotation);                                      // 0x03B8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0258 PADDING_053F, unsigned char,                                                         bFastAttachedMove);                                        // 0x03B8(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0259 PADDING_053F, unsigned char,                                                         bAlwaysCheckFloor);                                        // 0x03B9(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0259 PADDING_053F, unsigned char,                                                         bUseFlatBaseForFloorChecks);                               // 0x03B9(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0259 PADDING_053F, unsigned char,                                                         bPerformingJumpOff);                                       // 0x03B9(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0259 PADDING_053F, unsigned char,                                                         bWantsToLeaveNavWalking);                                  // 0x03B9(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0259 PADDING_053F, unsigned char,                                                         bUseRVOAvoidance);                                         // 0x03B9(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0259 PADDING_053F, unsigned char,                                                         bRequestedMoveUseAcceleration);                            // 0x03B9(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0259 PADDING_053F, unsigned char,                                                         bWasSimulatingRootMotion);                                 // 0x03B9(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x025A PADDING_053F, unsigned char,                                                         bAllowPhysicsRotationDuringAnimRootMotion);                // 0x03BA(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x025A PADDING_053F, unsigned char,                                                         bHasRequestedVelocity);                                    // 0x03BA(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x025A PADDING_053F, unsigned char,                                                         bRequestedMoveWithMaxSpeed);                               // 0x03BA(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x025A PADDING_053F, unsigned char,                                                         bWasAvoidanceUpdated);                                     // 0x03BA(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x025A PADDING_053F, unsigned char,                                                         bProjectNavMeshWalking);                                   // 0x03BA(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x025A PADDING_053F, unsigned char,                                                         bProjectNavMeshOnBothWorldChannels);                       // 0x03BA(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x026C PADDING_053F, float,                                                                 AvoidanceConsiderationRadius);                             // 0x03CC(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0270 PADDING_053F, struct FVector,                                                        RequestedVelocity);                                        // 0x03D0(0x000C)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x027C PADDING_053F, int,                                                                   AvoidanceUID);                                             // 0x03DC(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0280 PADDING_053F, struct FNavAvoidanceMask,                                              AvoidanceGroup);                                           // 0x03E0(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0284 PADDING_053F, struct FNavAvoidanceMask,                                              GroupsToAvoid);                                            // 0x03E4(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0288 PADDING_053F, struct FNavAvoidanceMask,                                              GroupsToIgnore);                                           // 0x03E8(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x028C PADDING_053F, float,                                                                 AvoidanceWeight);                                          // 0x03EC(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0290 PADDING_053F, struct FVector,                                                        PendingLaunchVelocity);                                    // 0x03F0(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0340 PADDING_053F, float,                                                                 NavMeshProjectionInterval);                                // 0x04A0(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0344 PADDING_053F, float,                                                                 NavMeshProjectionTimer);                                   // 0x04A4(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0348 PADDING_053F, float,                                                                 NavMeshProjectionInterpSpeed);                             // 0x04A8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x034C PADDING_053F, float,                                                                 NavMeshProjectionHeightScaleUp);                           // 0x04AC(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0350 PADDING_053F, float,                                                                 NavMeshProjectionHeightScaleDown);                         // 0x04B0(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0354 PADDING_053F, float,                                                                 NavWalkingFloorDistTolerance);                             // 0x04B4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0358 PADDING_053F, struct FCharacterMovementComponentPostPhysicsTickFunction,             PostPhysicsTickFunction);                                  // 0x04B8(0x0058)  (NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x03C8 PADDING_053F, float,                                                                 MinTimeBetweenTimeStampResets);                            // 0x0528(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x03D0 PADDING_053F, struct FRootMotionSourceGroup,                                         CurrentRootMotion);                                        // 0x0530(0x00F8)  (Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0560 PADDING_053F, struct FRootMotionMovementParams,                                      RootMotionParams);                                         // 0x06C0(0x0040)  (Transient, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05A0 PADDING_053F, struct FVector,                                                        AnimRootMotionVelocity);                                   // 0x0700(0x000C)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CharacterMovementComponent");
		return ptr;
	}


	void SetWalkableFloorZ(float InWalkableFloorZ);
	void SetWalkableFloorAngle(float InWalkableFloorAngle);
	void SetMovementMode(TEnumAsByte<EMovementMode> NewMovementMode, unsigned char NewCustomMode);
	void SetGroupsToIgnoreMask(const struct FNavAvoidanceMask& GroupMask);
	void SetGroupsToIgnore(int GroupFlags);
	void SetGroupsToAvoidMask(const struct FNavAvoidanceMask& GroupMask);
	void SetGroupsToAvoid(int GroupFlags);
	void SetAvoidanceGroupMask(const struct FNavAvoidanceMask& GroupMask);
	void SetAvoidanceGroup(int GroupFlags);
	void SetAvoidanceEnabled(bool bEnable);
	float K2_GetWalkableFloorZ();
	float K2_GetWalkableFloorAngle();
	float K2_GetModifiedMaxAcceleration();
	void K2_FindFloor(const struct FVector& CapsuleLocation, struct FFindFloorResult* FloorResult);
	void K2_ComputeFloorDist(const struct FVector& CapsuleLocation, float LineDistance, float SweepDistance, float SweepRadius, struct FFindFloorResult* FloorResult);
	bool IsWalking();
	bool IsWalkable(const struct FHitResult& Hit);
	float GetValidPerchRadius();
	float GetPerchRadiusThreshold();
	class UPrimitiveComponent* GetMovementBase();
	float GetMinAnalogSpeed();
	float GetMaxJumpHeightWithJumpTime();
	float GetMaxJumpHeight();
	float GetMaxBrakingDeceleration();
	float GetMaxAcceleration();
	struct FVector GetLastUpdateVelocity();
	struct FRotator GetLastUpdateRotation();
	struct FVector GetLastUpdateLocation();
	struct FVector GetImpartedMovementBaseVelocity();
	struct FVector GetCurrentAcceleration();
	class ACharacter* GetCharacterOwner();
	float GetAnalogInputModifier();
	void DisableMovement();
	void ClearAccumulatedForces();
	void CapsuleTouched(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void CalcVelocity(float DeltaTime, float Friction, bool bFluid, float BrakingDeceleration);
	void AddImpulse(const struct FVector& Impulse, bool bVelocityChange);
	void AddForce(const struct FVector& Force);
};

// Class Engine.SoundNode
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0540 - 0x0000 // Minimum to subtract -> (0000)
class USoundNode : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0540, TArray<class USoundNode*>,                                             ChildNodes);                                               // 0x0028(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNode");
		return ptr;
	}


};

// Class Engine.SoundBase
// 0x0098 (FullSize[0x00C0] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0541 - 0x0000 // Minimum to subtract -> (0000)
class USoundBase : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0541, class USoundClass*,                                                    SoundClassObject);                                         // 0x0028(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0541, unsigned char,                                                         bDebug);                                                   // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0541, unsigned char,                                                         bOverrideConcurrency);                                     // 0x0030(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0541, unsigned char,                                                         bOutputToBusOnly);                                         // 0x0030(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0541, unsigned char,                                                         bHasDelayNode);                                            // 0x0030(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0541, unsigned char,                                                         bHasConcatenatorNode);                                     // 0x0030(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0541, unsigned char,                                                         bBypassVolumeScaleForPriority);                            // 0x0030(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0009 PADDING_0541, EVirtualizationMode,                                                   VirtualizationMode);                                       // 0x0031(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0541, struct FSoundConcurrencySettings,                                      ConcurrencyOverrides);                                     // 0x0088(0x0020)  (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0541, float,                                                                 Duration);                                                 // 0x00A8(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0084 PADDING_0541, float,                                                                 MaxDistance);                                              // 0x00AC(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_0541, float,                                                                 TotalSamples);                                             // 0x00B0(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008C PADDING_0541, float,                                                                 Priority);                                                 // 0x00B4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_0541, class USoundAttenuation*,                                              AttenuationSettings);                                      // 0x00B8(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_0541, struct FSoundModulation,                                               Modulation);                                               // 0x00C0(0x0010)  (Edit, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0541, class USoundSubmix*,                                                   SoundSubmixObject);                                        // 0x00D0(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_0541, TArray<struct FSoundSubmixSendInfo>,                                   SoundSubmixSends);                                         // 0x00D8(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_0541, class USoundEffectSourcePresetChain*,                                  SourceEffectChain);                                        // 0x00E8(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C8 PADDING_0541, TArray<struct FSoundSourceBusSendInfo>,                                BusSends);                                                 // 0x00F0(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D8 PADDING_0541, TArray<struct FSoundSourceBusSendInfo>,                                PreEffectBusSends);                                        // 0x0100(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundBase");
		return ptr;
	}


};

// Class Engine.SoundWave
// 0x00E8 (FullSize[0x01A8] - InheritedSize[0x00C0])
// LastOffsetWithSize(0x0110)
#define PADDING_0542 - 0x0000 // Minimum to subtract -> (0000)
class USoundWave : public USoundBase
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0542, int,                                                                   CompressionQuality);                                       // 0x0110(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0542, int,                                                                   StreamingPriority);                                        // 0x0114(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0542, ESoundwaveSampleRateSettings,                                          SampleRateQuality);                                        // 0x0118(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000A PADDING_0542, TEnumAsByte<ESoundGroup>,                                              SoundGroup);                                               // 0x011A(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_0542, unsigned char,                                                         bLooping);                                                 // 0x011B(0x0001) BIT_FIELD (Edit, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_0542, unsigned char,                                                         bStreaming);                                               // 0x011B(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_0542, unsigned char,                                                         bSeekableStreaming);                                       // 0x011B(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0542, unsigned char,                                                         bMature);                                                  // 0x011C(0x0001) BIT_FIELD (Edit, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0542, unsigned char,                                                         bManualWordWrap);                                          // 0x011C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0542, unsigned char,                                                         bSingleLine);                                              // 0x011C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0542, unsigned char,                                                         bIsAmbisonics);                                            // 0x011C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0542, TArray<float>,                                                         FrequenciesToAnalyze);                                     // 0x0120(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0542, TArray<struct FSoundWaveSpectralTimeData>,                             CookedSpectralTimeData);                                   // 0x0130(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0542, TArray<struct FSoundWaveEnvelopeTimeData>,                             CookedEnvelopeTimeData);                                   // 0x0140(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0542, struct FString,                                                        SpokenText);                                               // 0x0160(0x0010)  (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0542, float,                                                                 SubtitlePriority);                                         // 0x0170(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0064 PADDING_0542, float,                                                                 Volume);                                                   // 0x0174(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0542, float,                                                                 Pitch);                                                    // 0x0178(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_0542, int,                                                                   NumChannels);                                              // 0x017C(0x0004)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0542, int,                                                                   SampleRate);                                               // 0x0180(0x0004)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0542, TArray<struct FSubtitleCue>,                                           Subtitles);                                                // 0x0188(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_0542, class UCurveTable*,                                                    Curves);                                                   // 0x0198(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0090 PADDING_0542, class UCurveTable*,                                                    InternalCurves);                                           // 0x01A0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundWave");
		return ptr;
	}


};

// Class Engine.DefaultPawn
// 0x0025 (FullSize[0x02C9] - InheritedSize[0x02A4])
// LastOffsetWithSize(0x02A4)
#define PADDING_0543 - 0x0000 // Minimum to subtract -> (0004)
class ADefaultPawn : public APawn
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_0543, float,                                                                 BaseTurnRate);                                             // 0x02A8(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0543, float,                                                                 BaseLookUpRate);                                           // 0x02AC(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0543, class UPawnMovementComponent*,                                         MovementComponent);                                        // 0x02B0(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0543, class USphereComponent*,                                               CollisionComponent);                                       // 0x02B8(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x001C PADDING_0543, class UStaticMeshComponent*,                                           MeshComponent);                                            // 0x02C0(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0543, unsigned char,                                                         bAddDefaultMovementBindings);                              // 0x02C8(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DefaultPawn");
		return ptr;
	}


	void TurnAtRate(float Rate);
	void MoveUp_World(float Val);
	void MoveRight(float Val);
	void MoveForward(float Val);
	void LookUpAtRate(float Rate);
};

// Class Engine.SpectatorPawn
// 0x0007 (FullSize[0x02D0] - InheritedSize[0x02C9])
// LastOffsetWithSize(0x02C9)
class ASpectatorPawn : public ADefaultPawn
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SpectatorPawn");
		return ptr;
	}


};

// Class Engine.WorldSettings
// 0x0180 (FullSize[0x03C8] - InheritedSize[0x0248])
// LastOffsetWithSize(0x0238)
#define PADDING_0545 - 0x0000 // Minimum to subtract -> (0018)
class AWorldSettings : public AInfo
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0018 PADDING_0545, int,                                                                   VisibilityCellSize);                                       // 0x0250(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0545, TEnumAsByte<EVisibilityAggressiveness>,                                VisibilityAggressiveness);                                 // 0x0254(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001D PADDING_0545, unsigned char,                                                         bPrecomputeVisibility);                                    // 0x0255(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001D PADDING_0545, unsigned char,                                                         bPlaceCellsOnlyAlongCameraTracks);                         // 0x0255(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001D PADDING_0545, unsigned char,                                                         bEnableWorldBoundsChecks);                                 // 0x0255(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001D PADDING_0545, unsigned char,                                                         bEnableNavigationSystem);                                  // 0x0255(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x001D PADDING_0545, unsigned char,                                                         bEnableAISystem);                                          // 0x0255(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001D PADDING_0545, unsigned char,                                                         bEnableWorldComposition);                                  // 0x0255(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001D PADDING_0545, unsigned char,                                                         bUseClientSideLevelStreamingVolumes);                      // 0x0255(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001D PADDING_0545, unsigned char,                                                         bEnableWorldOriginRebasing);                               // 0x0255(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001E PADDING_0545, unsigned char,                                                         bWorldGravitySet);                                         // 0x0256(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001E PADDING_0545, unsigned char,                                                         bGlobalGravitySet);                                        // 0x0256(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001E PADDING_0545, unsigned char,                                                         bMinimizeBSPSections);                                     // 0x0256(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001E PADDING_0545, unsigned char,                                                         bForceNoPrecomputedLighting);                              // 0x0256(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001E PADDING_0545, unsigned char,                                                         bHighPriorityLoading);                                     // 0x0256(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001E PADDING_0545, unsigned char,                                                         bHighPriorityLoadingLocal);                                // 0x0256(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001E PADDING_0545, unsigned char,                                                         bOverrideDefaultBroadphaseSettings);                       // 0x0256(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0545, class UNavigationSystemConfig*,                                        NavigationSystemConfig);                                   // 0x0258(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0545, class UNavigationSystemConfig*,                                        NavigationSystemConfigOverride);                           // 0x0260(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0545, float,                                                                 WorldToMeters);                                            // 0x0268(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0545, float,                                                                 KillZ);                                                    // 0x026C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0545, class UClass*,                                                         KillZDamageType);                                          // 0x0270(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0545, float,                                                                 WorldGravityZ);                                            // 0x0278(0x0004)  (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0545, float,                                                                 GlobalGravityZ);                                           // 0x027C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0545, class UClass*,                                                         DefaultPhysicsVolumeClass);                                // 0x0280(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0545, class UClass*,                                                         PhysicsCollisionHandlerClass);                             // 0x0288(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0545, class UClass*,                                                         DefaultGameMode);                                          // 0x0290(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0545, class UClass*,                                                         GameNetworkManagerClass);                                  // 0x0298(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0545, int,                                                                   PackedLightAndShadowMapTextureSize);                       // 0x02A0(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_0545, struct FVector,                                                        DefaultColorScale);                                        // 0x02A4(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0545, float,                                                                 DefaultMaxDistanceFieldOcclusionDistance);                 // 0x02B0(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007C PADDING_0545, float,                                                                 GlobalDistanceFieldViewDistance);                          // 0x02B4(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0545, float,                                                                 DynamicIndirectShadowsSelfShadowingIntensity);             // 0x02B8(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_0545, struct FReverbSettings,                                                DefaultReverbSettings);                                    // 0x02C0(0x0020)  (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0545, struct FInteriorSettings,                                              DefaultAmbientZoneSettings);                               // 0x02E0(0x0024)  (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00CC PADDING_0545, float,                                                                 MonoCullingDistance);                                      // 0x0304(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_0545, class USoundMix*,                                                      DefaultBaseSoundMix);                                      // 0x0308(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D8 PADDING_0545, float,                                                                 TimeDilation);                                             // 0x0310(0x0004)  (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00DC PADDING_0545, float,                                                                 MatineeTimeDilation);                                      // 0x0314(0x0004)  (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E0 PADDING_0545, float,                                                                 DemoPlayTimeDilation);                                     // 0x0318(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E4 PADDING_0545, float,                                                                 MinGlobalTimeDilation);                                    // 0x031C(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E8 PADDING_0545, float,                                                                 MaxGlobalTimeDilation);                                    // 0x0320(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00EC PADDING_0545, float,                                                                 MinUndilatedFrameTime);                                    // 0x0324(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F0 PADDING_0545, float,                                                                 MaxUndilatedFrameTime);                                    // 0x0328(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F4 PADDING_0545, struct FBroadphaseSettings,                                            BroadphaseSettings);                                       // 0x032C(0x0040)  (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0138 PADDING_0545, class APlayerState*,                                                   Pauser);                                                   // 0x0370(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0140 PADDING_0545, TArray<struct FNetViewer>,                                             ReplicationViewers);                                       // 0x0378(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0150 PADDING_0545, TArray<class UAssetUserData*>,                                         AssetUserData);                                            // 0x0388(0x0010)  (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0160 PADDING_0545, class APlayerState*,                                                   PauserPlayerState);                                        // 0x0398(0x0008)  (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0168 PADDING_0545, int,                                                                   MaxNumberOfBookmarks);                                     // 0x03A0(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0170 PADDING_0545, class UClass*,                                                         DefaultBookmarkClass);                                     // 0x03A8(0x0008)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0178 PADDING_0545, TArray<class UBookmarkBase*>,                                          BookmarkArray);                                            // 0x03B0(0x0010)  (ZeroConstructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0188 PADDING_0545, class UClass*,                                                         LastBookmarkClass);                                        // 0x03C0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.WorldSettings");
		return ptr;
	}


	void OnRep_WorldGravityZ();
};

// Class Engine.Channel
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0546 - 0x0000 // Minimum to subtract -> (0000)
class UChannel : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0546, class UNetConnection*,                                                 Connection);                                               // 0x0028(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Channel");
		return ptr;
	}


};

// Class Engine.VoiceChannel
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
// LastOffsetWithSize(0x0030)
class UVoiceChannel : public UChannel
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.VoiceChannel");
		return ptr;
	}


};

// Class Engine.NetConnection
// 0x1484 (FullSize[0x14C8] - InheritedSize[0x0044])
// LastOffsetWithSize(0x0044)
#define PADDING_0548 - 0x0000 // Minimum to subtract -> (0004)
class UNetConnection : public UPlayer
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_0548, TArray<class UChildConnection*>,                                       Children);                                                 // 0x0048(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0548, class UNetDriver*,                                                     Driver);                                                   // 0x0058(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0548, class UClass*,                                                         PackageMapClass);                                          // 0x0060(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0548, class UPackageMap*,                                                    PackageMap);                                               // 0x0068(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0548, TArray<class UChannel*>,                                               OpenChannels);                                             // 0x0070(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_0548, TArray<class AActor*>,                                                 SentTemporaries);                                          // 0x0080(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004C PADDING_0548, class AActor*,                                                         ViewTarget);                                               // 0x0090(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0054 PADDING_0548, class AActor*,                                                         OwningActor);                                              // 0x0098(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005C PADDING_0548, int,                                                                   MaxPacket);                                                // 0x00A0(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0548, unsigned char,                                                         InternalAck);                                              // 0x00A4(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x011C PADDING_0548, struct FUniqueNetIdRepl,                                               PlayerId);                                                 // 0x0160(0x0028)  (HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01AC PADDING_0548, double,                                                                LastReceiveTime);                                          // 0x01F0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x1474 PADDING_0548, TArray<class UChannel*>,                                               ChannelsToTick);                                           // 0x14B8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NetConnection");
		return ptr;
	}


};

// Class Engine.NetDriver
// 0x0700 (FullSize[0x0728] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0549 - 0x0000 // Minimum to subtract -> (0008)
class UNetDriver : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0549, struct FString,                                                        NetConnectionClassName);                                   // 0x0030(0x0010)  (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0549, struct FString,                                                        ReplicationDriverClassName);                               // 0x0040(0x0010)  (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0549, int,                                                                   MaxDownloadSize);                                          // 0x0050(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0549, unsigned char,                                                         bClampListenServerTickRate);                               // 0x0054(0x0001) BIT_FIELD (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0549, int,                                                                   NetServerMaxTickRate);                                     // 0x0058(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0549, int,                                                                   MaxNetTickRate);                                           // 0x005C(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0549, int,                                                                   MaxInternetClientRate);                                    // 0x0060(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_0549, int,                                                                   MaxClientRate);                                            // 0x0064(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0549, float,                                                                 ServerTravelPause);                                        // 0x0068(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0549, float,                                                                 SpawnPrioritySeconds);                                     // 0x006C(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0549, float,                                                                 RelevantTimeout);                                          // 0x0070(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004C PADDING_0549, float,                                                                 KeepAliveTime);                                            // 0x0074(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0549, float,                                                                 InitialConnectTimeout);                                    // 0x0078(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0054 PADDING_0549, float,                                                                 ConnectionTimeout);                                        // 0x007C(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0549, float,                                                                 TimeoutMultiplierForUnoptimizedBuilds);                    // 0x0080(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005C PADDING_0549, bool,                                                                  bNoTimeouts);                                              // 0x0084(0x0001)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0549, class UNetConnection*,                                                 ServerConnection);                                         // 0x0088(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0549, TArray<class UNetConnection*>,                                         ClientConnections);                                        // 0x0090(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D8 PADDING_0549, int,                                                                   RecentlyDisconnectedTrackingTime);                         // 0x0100(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0118 PADDING_0549, class UWorld*,                                                         World);                                                    // 0x0140(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0120 PADDING_0549, class UPackage*,                                                       WorldPackage);                                             // 0x0148(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0148 PADDING_0549, class UClass*,                                                         NetConnectionClass);                                       // 0x0170(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0150 PADDING_0549, class UClass*,                                                         ReplicationDriverClass);                                   // 0x0178(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0158 PADDING_0549, class UProperty*,                                                      RoleProperty);                                             // 0x0180(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0160 PADDING_0549, class UProperty*,                                                      RemoteRoleProperty);                                       // 0x0188(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0168 PADDING_0549, struct FName,                                                          NetDriverName);                                            // 0x0190(0x0008)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01B0 PADDING_0549, TArray<struct FChannelDefinition>,                                     ChannelDefinitions);                                       // 0x01D8(0x0010)  (ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01C0 PADDING_0549, TMap<struct FName COMMA struct FChannelDefinition>,                    ChannelDefinitionMap);                                     // 0x01E8(0x0050)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0210 PADDING_0549, TArray<class UChannel*>,                                               ActorChannelPool);                                         // 0x0238(0x0010)  (ZeroConstructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0228 PADDING_0549, float,                                                                 Time);                                                     // 0x0250(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x06F8 PADDING_0549, class UReplicationDriver*,                                             ReplicationDriver);                                        // 0x0720(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NetDriver");
		return ptr;
	}


};

// Class Engine.BlueprintAsyncActionBase
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UBlueprintAsyncActionBase : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BlueprintAsyncActionBase");
		return ptr;
	}


	void Activate();
};

// Class Engine.OnlineEngineInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UOnlineEngineInterface : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.OnlineEngineInterface");
		return ptr;
	}


};

// Class Engine.OnlineSession
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UOnlineSession : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.OnlineSession");
		return ptr;
	}


};

// Class Engine.ReplicationConnectionDriver
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UReplicationConnectionDriver : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ReplicationConnectionDriver");
		return ptr;
	}


};

// Class Engine.Exporter
// 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_054E - 0x0000 // Minimum to subtract -> (0000)
class UExporter : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_054E, class UClass*,                                                         SupportedClass);                                           // 0x0028(0x0008)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_054E, class UObject*,                                                        ExportRootScope);                                          // 0x0030(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_054E, TArray<struct FString>,                                                FormatExtension);                                          // 0x0038(0x0010)  (BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_054E, TArray<struct FString>,                                                FormatDescription);                                        // 0x0048(0x0010)  (BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_054E, int,                                                                   PreferredFormatIndex);                                     // 0x0058(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_054E, int,                                                                   TextIndent);                                               // 0x005C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_054E, unsigned char,                                                         bText);                                                    // 0x0060(0x0001) BIT_FIELD (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_054E, unsigned char,                                                         bSelectedOnly);                                            // 0x0060(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_054E, unsigned char,                                                         bForceFileOperations);                                     // 0x0060(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_054E, class UAssetExportTask*,                                               ExportTask);                                               // 0x0068(0x0008)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Exporter");
		return ptr;
	}


	bool ScriptRunAssetExportTask(class UAssetExportTask* Task);
	static bool STATIC_RunAssetExportTasks(TArray<class UAssetExportTask*> ExportTasks);
	static bool STATIC_RunAssetExportTask(class UAssetExportTask* Task);
};

// Class Engine.AssetImportData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAssetImportData : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AssetImportData");
		return ptr;
	}


};

// Class Engine.AssetUserData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAssetUserData : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AssetUserData");
		return ptr;
	}


};

// Class Engine.SkyLight
// 0x0009 (FullSize[0x0251] - InheritedSize[0x0248])
// LastOffsetWithSize(0x0238)
#define PADDING_0551 - 0x0000 // Minimum to subtract -> (0010)
class ASkyLight : public AInfo
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0551, class USkyLightComponent*,                                             LightComponent);                                           // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0551, unsigned char,                                                         bEnabled);                                                 // 0x0250(0x0001) BIT_FIELD (Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SkyLight");
		return ptr;
	}


	void OnRep_bEnabled();
};

// Class Engine.StreamableRenderAsset
// 0x0016 (FullSize[0x003E] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0552 - 0x0000 // Minimum to subtract -> (0000)
class UStreamableRenderAsset : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0552, double,                                                                ForceMipLevelsToBeResidentTimestamp);                      // 0x0028(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0552, int,                                                                   NumCinematicMipLevels);                                    // 0x0030(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0552, int,                                                                   StreamingIndex);                                           // 0x0034(0x0004)  (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NonTransactional, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0552, int,                                                                   CachedCombinedLODBias);                                    // 0x0038(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0552, unsigned char,                                                         CachedNumResidentLODs);                                    // 0x003C(0x0001)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0015 PADDING_0552, unsigned char,                                                         bCachedReadyForStreaming);                                 // 0x003D(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0015 PADDING_0552, unsigned char,                                                         NeverStream);                                              // 0x003D(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0015 PADDING_0552, unsigned char,                                                         bGlobalForceMipLevelsToBeResident);                        // 0x003D(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0015 PADDING_0552, unsigned char,                                                         bIsStreamable);                                            // 0x003D(0x0001) BIT_FIELD (Transient, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0015 PADDING_0552, unsigned char,                                                         bHasStreamingUpdatePending);                               // 0x003D(0x0001) BIT_FIELD (Transient, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0015 PADDING_0552, unsigned char,                                                         bForceMiplevelsToBeResident);                              // 0x003D(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0015 PADDING_0552, unsigned char,                                                         bIgnoreStreamingMipBias);                                  // 0x003D(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0015 PADDING_0552, unsigned char,                                                         bUseCinematicMipLevels);                                   // 0x003D(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.StreamableRenderAsset");
		return ptr;
	}


};

// Class Engine.Texture
// 0x003A (FullSize[0x0078] - InheritedSize[0x003E])
// LastOffsetWithSize(0x003E)
#define PADDING_0553 - 0x0000 // Minimum to subtract -> (000A)
class UTexture : public UStreamableRenderAsset
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x000A PADDING_0553, struct FGuid,                                                          LightingGuid);                                             // 0x0048(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x001A PADDING_0553, int,                                                                   LODBias);                                                  // 0x0058(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001E PADDING_0553, TEnumAsByte<ETextureCompressionSettings>,                              CompressionSettings);                                      // 0x005C(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_0553, TEnumAsByte<ETextureFilter>,                                           Filter);                                                   // 0x005D(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0553, ETextureMipLoadOptions,                                                MipLoadOptions);                                           // 0x005E(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0021 PADDING_0553, TEnumAsByte<ETextureGroup>,                                            LODGroup);                                                 // 0x005F(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0022 PADDING_0553, unsigned char,                                                         SRGB);                                                     // 0x0060(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0022 PADDING_0553, unsigned char,                                                         bNoTiling);                                                // 0x0060(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0022 PADDING_0553, unsigned char,                                                         VirtualTextureStreaming);                                  // 0x0060(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0022 PADDING_0553, unsigned char,                                                         bAsyncResourceReleaseHasBeenStarted);                      // 0x0060(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x002A PADDING_0553, TArray<class UAssetUserData*>,                                         AssetUserData);                                            // 0x0068(0x0010)  (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Texture");
		return ptr;
	}


};

// Class Engine.TextureCube
// 0x0058 (FullSize[0x00D0] - InheritedSize[0x0078])
// LastOffsetWithSize(0x0078)
class UTextureCube : public UTexture
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TextureCube");
		return ptr;
	}


};

// Class Engine.InstancedStaticMeshComponent
// 0x0090 (FullSize[0x0528] - InheritedSize[0x0498])
// LastOffsetWithSize(0x0498)
#define PADDING_0555 - 0x0000 // Minimum to subtract -> (0000)
class UInstancedStaticMeshComponent : public UStaticMeshComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0555, TArray<struct FInstancedStaticMeshInstanceData>,                       PerInstanceSMData);                                        // 0x0498(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic, CPF_SkipSerialization)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0555, int,                                                                   InstancingRandomSeed);                                     // 0x04A8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0555, int,                                                                   InstanceStartCullDistance);                                // 0x04AC(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0555, int,                                                                   InstanceEndCullDistance);                                  // 0x04B0(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0555, TArray<int>,                                                           InstanceReorderTable);                                     // 0x04B8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0555, int,                                                                   NumPendingLightmaps);                                      // 0x0510(0x0004)  (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, TextExportTransient, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0555, TArray<struct FInstancedStaticMeshMappingInfo>,                        CachedMappings);                                           // 0x0518(0x0010)  (ZeroConstructor, Transient, DuplicateTransient, Protected, TextExportTransient, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InstancedStaticMeshComponent");
		return ptr;
	}


	bool UpdateInstanceTransform(int InstanceIndex, const struct FTransform& NewInstanceTransform, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport);
	void SetCullDistances(int StartCullDistance, int EndCullDistance);
	bool RemoveInstance(int InstanceIndex);
	bool GetInstanceTransform(int InstanceIndex, struct FTransform* OutInstanceTransform, bool bWorldSpace);
	TArray<int> GetInstancesOverlappingSphere(const struct FVector& Center, float Radius, bool bSphereInWorldSpace);
	TArray<int> GetInstancesOverlappingBox(const struct FBox& Box, bool bBoxInWorldSpace);
	int GetInstanceCount();
	void ClearInstances();
	bool BatchUpdateInstancesTransforms(int StartInstanceIndex, TArray<struct FTransform> NewInstancesTransforms, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport);
	bool BatchUpdateInstancesTransform(int StartInstanceIndex, int NumInstances, const struct FTransform& NewInstancesTransform, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport);
	int AddInstanceWorldSpace(const struct FTransform& WorldTransform);
	int AddInstance(const struct FTransform& InstanceTransform);
};

// Class Engine.HierarchicalInstancedStaticMeshComponent
// 0x00A4 (FullSize[0x05CC] - InheritedSize[0x0528])
// LastOffsetWithSize(0x0528)
#define PADDING_0556 - 0x0000 // Minimum to subtract -> (0010)
class UHierarchicalInstancedStaticMeshComponent : public UInstancedStaticMeshComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0556, TArray<int>,                                                           SortedInstances);                                          // 0x0538(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0556, int,                                                                   NumBuiltInstances);                                        // 0x0548(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0556, struct FBox,                                                           BuiltInstanceBounds);                                      // 0x0550(0x001C)  (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0556, struct FBox,                                                           UnbuiltInstanceBounds);                                    // 0x056C(0x001C)  (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0556, TArray<struct FBox>,                                                   UnbuiltInstanceBoundsList);                                // 0x0588(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0556, unsigned char,                                                         bEnableDensityScaling);                                    // 0x0598(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0556, int,                                                                   OcclusionLayerNumNodes);                                   // 0x05A0(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007C PADDING_0556, struct FBoxSphereBounds,                                               CacheMeshExtendedBounds);                                  // 0x05A4(0x001C)  (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009C PADDING_0556, bool,                                                                  bDisableCollision);                                        // 0x05C4(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0556, int,                                                                   InstanceCountToRender);                                    // 0x05C8(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.HierarchicalInstancedStaticMeshComponent");
		return ptr;
	}


	bool RemoveInstances(TArray<int> InstancesToRemove);
};

// Class Engine.StaticMeshActor
// 0x001A (FullSize[0x0252] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0557 - 0x0000 // Minimum to subtract -> (0010)
class AStaticMeshActor : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0557, class UStaticMeshComponent*,                                           StaticMeshComponent);                                      // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0557, bool,                                                                  bStaticMeshReplicateMovement);                             // 0x0250(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0019 PADDING_0557, ENavDataGatheringMode,                                                 NavigationGeometryGatheringMode);                          // 0x0251(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.StaticMeshActor");
		return ptr;
	}


	void SetMobility(TEnumAsByte<EComponentMobility> InMobility);
};

// Class Engine.MaterialInterface
// 0x0060 (FullSize[0x0088] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0558 - 0x0000 // Minimum to subtract -> (0010)
class UMaterialInterface : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0558, class USubsurfaceProfile*,                                             SubsurfaceProfile);                                        // 0x0038(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0558, struct FLightmassMaterialInterfaceSettings,                            LightmassSettings);                                        // 0x0050(0x0014)  (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0558, TArray<struct FMaterialTextureInfo>,                                   TextureStreamingData);                                     // 0x0068(0x0010)  (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0558, TArray<class UAssetUserData*>,                                         AssetUserData);                                            // 0x0078(0x0010)  (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialInterface");
		return ptr;
	}


	void SetForceMipLevelsToBeResident(bool OverrideForceMiplevelsToBeResident, bool bForceMiplevelsToBeResidentValue, float ForceDuration, int CinematicTextureGroups);
	class UPhysicalMaterial* GetPhysicalMaterial();
	class UMaterial* GetBaseMaterial();
};

// Class Engine.MaterialInstance
// 0x00C0 (FullSize[0x0148] - InheritedSize[0x0088])
// LastOffsetWithSize(0x0088)
#define PADDING_0559 - 0x0000 // Minimum to subtract -> (0000)
class UMaterialInstance : public UMaterialInterface
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0559, class UPhysicalMaterial*,                                              PhysMaterial);                                             // 0x0088(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0559, class UMaterialInterface*,                                             Parent);                                                   // 0x0090(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0012 PADDING_0559, unsigned char,                                                         bHasStaticPermutationResource);                            // 0x009A(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0012 PADDING_0559, unsigned char,                                                         bOverrideSubsurfaceProfile);                               // 0x009A(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0559, TArray<struct FScalarParameterValue>,                                  ScalarParameterValues);                                    // 0x00A0(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0559, TArray<struct FVectorParameterValue>,                                  VectorParameterValues);                                    // 0x00B0(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0559, TArray<struct FTextureParameterValue>,                                 TextureParameterValues);                                   // 0x00C0(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0559, TArray<struct FFontParameterValue>,                                    FontParameterValues);                                      // 0x00D0(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0559, struct FMaterialInstanceBasePropertyOverrides,                         BasePropertyOverrides);                                    // 0x00E0(0x0008)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0559, TArray<class UObject*>,                                                PermutationTextureReferences);                             // 0x00F8(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0559, struct FStaticParameterSet,                                            StaticParameters);                                         // 0x0108(0x0040)  (NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialInstance");
		return ptr;
	}


};

// Class Engine.MaterialInstanceConstant
// 0x0080 (FullSize[0x01C8] - InheritedSize[0x0148])
// LastOffsetWithSize(0x0148)
class UMaterialInstanceConstant : public UMaterialInstance
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialInstanceConstant");
		return ptr;
	}


	struct FLinearColor K2_GetVectorParameterValue(const struct FName& ParameterName);
	class UTexture* K2_GetTextureParameterValue(const struct FName& ParameterName);
	float K2_GetScalarParameterValue(const struct FName& ParameterName);
};

// Class Engine.MaterialExpression
// 0x0011 (FullSize[0x0039] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_055B - 0x0000 // Minimum to subtract -> (0000)
class UMaterialExpression : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_055B, class UMaterial*,                                                      Material);                                                 // 0x0028(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_055B, class UMaterialFunction*,                                              Function);                                                 // 0x0030(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_055B, unsigned char,                                                         bIsParameterExpression);                                   // 0x0038(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpression");
		return ptr;
	}


};

// Class Engine.MaterialExpressionCustomOutput
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionCustomOutput : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionCustomOutput");
		return ptr;
	}


};

// Class Engine.EngineCustomTimeStep
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UEngineCustomTimeStep : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.EngineCustomTimeStep");
		return ptr;
	}


};

// Class Engine.AnimNotifyState
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAnimNotifyState : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimNotifyState");
		return ptr;
	}


	bool Received_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);
	bool Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
	bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);
	struct FString GetNotifyName();
};

// Class Engine.DynamicBlueprintBinding
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UDynamicBlueprintBinding : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DynamicBlueprintBinding");
		return ptr;
	}


};

// Class Engine.BlueprintGeneratedClass
// 0x0210 (FullSize[0x02A8] - InheritedSize[0x0098])
// LastOffsetWithSize(0x0098)
#define PADDING_0560 - 0x0000 // Minimum to subtract -> (0168)
class UBlueprintGeneratedClass : public UClass
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0168 PADDING_0560, int,                                                                   NumReplicatedProperties);                                  // 0x0200(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016C PADDING_0560, unsigned char,                                                         bHasNativizedParent);                                      // 0x0204(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016C PADDING_0560, unsigned char,                                                         bHasCookedComponentInstancingData);                        // 0x0204(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0170 PADDING_0560, TArray<class UDynamicBlueprintBinding*>,                               DynamicBindingObjects);                                    // 0x0208(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0180 PADDING_0560, TArray<class UActorComponent*>,                                        ComponentTemplates);                                       // 0x0218(0x0010)  (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0190 PADDING_0560, TArray<class UTimelineTemplate*>,                                      Timelines);                                                // 0x0228(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01A0 PADDING_0560, class USimpleConstructionScript*,                                      SimpleConstructionScript);                                 // 0x0238(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01A8 PADDING_0560, class UInheritableComponentHandler*,                                   InheritableComponentHandler);                              // 0x0240(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01B0 PADDING_0560, class UStructProperty*,                                                UberGraphFramePointerProperty);                            // 0x0248(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01B8 PADDING_0560, class UFunction*,                                                      UberGraphFunction);                                        // 0x0250(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01C0 PADDING_0560, TMap<struct FName COMMA struct FBlueprintCookedComponentInstancingData>, CookedComponentInstancingData);                            // 0x0258(0x0050)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BlueprintGeneratedClass");
		return ptr;
	}


};

// Class Engine.CameraActor
// 0x0578 (FullSize[0x07B0] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0561 - 0x0000 // Minimum to subtract -> (0010)
class ACameraActor : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0561, TEnumAsByte<EAutoReceiveInput>,                                        AutoActivateForPlayer);                                    // 0x0248(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0561, class UCameraComponent*,                                               CameraComponent);                                          // 0x0250(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0561, class USceneComponent*,                                                SceneComponent);                                           // 0x0258(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0561, unsigned char,                                                         bConstrainAspectRatio);                                    // 0x0268(0x0001) BIT_FIELD (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0561, float,                                                                 AspectRatio);                                              // 0x026C(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0561, float,                                                                 FOVAngle);                                                 // 0x0270(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x003C PADDING_0561, float,                                                                 PostProcessBlendWeight);                                   // 0x0274(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0561, struct FPostProcessSettings,                                           PostProcessSettings);                                      // 0x0280(0x0530)  (Deprecated, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CameraActor");
		return ptr;
	}


	int GetAutoActivatePlayerIndex();
};

// Class Engine.CameraComponent
// 0x0640 (FullSize[0x07C0] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_0562 - 0x0000 // Minimum to subtract -> (008D)
class UCameraComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x008D PADDING_0562, float,                                                                 OrthoWidth);                                               // 0x021C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0091 PADDING_0562, float,                                                                 OrthoNearClipPlane);                                       // 0x0220(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0095 PADDING_0562, float,                                                                 OrthoFarClipPlane);                                        // 0x0224(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0099 PADDING_0562, float,                                                                 AspectRatio);                                              // 0x0228(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009D PADDING_0562, unsigned char,                                                         bConstrainAspectRatio);                                    // 0x022C(0x0001) BIT_FIELD (Edit, BlueprintVisible, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009D PADDING_0562, unsigned char,                                                         bUseFieldOfViewForLOD);                                    // 0x022C(0x0001) BIT_FIELD (Edit, BlueprintVisible, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009D PADDING_0562, unsigned char,                                                         bLockToHmd);                                               // 0x022C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009D PADDING_0562, unsigned char,                                                         bUsePawnControlRotation);                                  // 0x022C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009E PADDING_0562, TEnumAsByte<ECameraProjectionMode>,                                    ProjectionMode);                                           // 0x022D(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D1 PADDING_0562, float,                                                                 PostProcessBlendWeight);                                   // 0x0260(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0101 PADDING_0562, struct FPostProcessSettings,                                           PostProcessSettings);                                      // 0x0290(0x0530)  (Edit, BlueprintVisible, Interp, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CameraComponent");
		return ptr;
	}


	void SetUseFieldOfViewForLOD(bool bInUseFieldOfViewForLOD);
	void SetProjectionMode(TEnumAsByte<ECameraProjectionMode> InProjectionMode);
	void SetPostProcessBlendWeight(float InPostProcessBlendWeight);
	void SetOrthoWidth(float InOrthoWidth);
	void SetOrthoNearClipPlane(float InOrthoNearClipPlane);
	void SetOrthoFarClipPlane(float InOrthoFarClipPlane);
	void SetFieldOfView(float InFieldOfView);
	void SetConstraintAspectRatio(bool bInConstrainAspectRatio);
	void SetAspectRatio(float InAspectRatio);
	void RemoveBlendable(const TScriptInterface<class UBlendableInterface>& InBlendableObject);
	void GetCameraView(float DeltaTime, struct FMinimalViewInfo* DesiredView);
	void AddOrUpdateBlendable(const TScriptInterface<class UBlendableInterface>& InBlendableObject, float InWeight);
};

// Class Engine.SoundEffectPreset
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class USoundEffectPreset : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundEffectPreset");
		return ptr;
	}


};

// Class Engine.SoundEffectSubmixPreset
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class USoundEffectSubmixPreset : public USoundEffectPreset
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundEffectSubmixPreset");
		return ptr;
	}


};

// Class Engine.SoundWaveProcedural
// 0x0118 (FullSize[0x02C0] - InheritedSize[0x01A8])
// LastOffsetWithSize(0x01A8)
class USoundWaveProcedural : public USoundWave
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundWaveProcedural");
		return ptr;
	}


};

// Class Engine.BlueprintCore
// 0x0024 (FullSize[0x004C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0566 - 0x0000 // Minimum to subtract -> (0000)
class UBlueprintCore : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0566, class UClass*,                                                         SkeletonGeneratedClass);                                   // 0x0028(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0566, class UClass*,                                                         GeneratedClass);                                           // 0x0030(0x0008)  (ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0566, bool,                                                                  bLegacyNeedToPurgeSkelRefs);                               // 0x0038(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0566, struct FGuid,                                                          BlueprintGuid);                                            // 0x003C(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BlueprintCore");
		return ptr;
	}


};

// Class Engine.Blueprint
// 0x0085 (FullSize[0x00D1] - InheritedSize[0x004C])
// LastOffsetWithSize(0x004C)
#define PADDING_0567 - 0x0000 // Minimum to subtract -> (0004)
class UBlueprint : public UBlueprintCore
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_0567, unsigned char,                                                         bRecompileOnLoad);                                         // 0x0050(0x0001) BIT_FIELD (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0567, class UClass*,                                                         ParentClass);                                              // 0x0058(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0567, unsigned char,                                                         bHasBeenRegenerated);                                      // 0x0060(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0567, unsigned char,                                                         bIsRegeneratingOnLoad);                                    // 0x0060(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0567, class USimpleConstructionScript*,                                      SimpleConstructionScript);                                 // 0x0068(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0567, TArray<class UActorComponent*>,                                        ComponentTemplates);                                       // 0x0070(0x0010)  (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0567, TArray<class UTimelineTemplate*>,                                      Timelines);                                                // 0x0080(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0567, class UInheritableComponentHandler*,                                   InheritableComponentHandler);                              // 0x0090(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004C PADDING_0567, TEnumAsByte<EBlueprintType>,                                           BlueprintType);                                            // 0x0098(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0567, int,                                                                   BlueprintSystemVersion);                                   // 0x009C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0084 PADDING_0567, bool,                                                                  bNativize);                                                // 0x00D0(0x0001)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Blueprint");
		return ptr;
	}


};

// Class Engine.Model
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UModel : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Model");
		return ptr;
	}


};

// Class Engine.ActorChannel
// 0x0148 (FullSize[0x0178] - InheritedSize[0x0030])
// LastOffsetWithSize(0x0030)
#define PADDING_0569 - 0x0000 // Minimum to subtract -> (0040)
class UActorChannel : public UChannel
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0040 PADDING_0569, class AActor*,                                                         Actor);                                                    // 0x0070(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0138 PADDING_0569, TArray<class UObject*>,                                                CreateSubObjects);                                         // 0x0168(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ActorChannel");
		return ptr;
	}


};

// Class Engine.AnimationAsset
// 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_056A - 0x0000 // Minimum to subtract -> (0010)
class UAnimationAsset : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_056A, class USkeleton*,                                                      Skeleton);                                                 // 0x0038(0x0008)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0038 PADDING_056A, TArray<class UAnimMetaData*>,                                          MetaData);                                                 // 0x0060(0x0010)  (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0048 PADDING_056A, TArray<class UAssetUserData*>,                                         AssetUserData);                                            // 0x0070(0x0010)  (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimationAsset");
		return ptr;
	}


};

// Class Engine.BlendSpaceBase
// 0x00C8 (FullSize[0x0148] - InheritedSize[0x0080])
// LastOffsetWithSize(0x0080)
#define PADDING_056B - 0x0000 // Minimum to subtract -> (0008)
class UBlendSpaceBase : public UAnimationAsset
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_056B, bool,                                                                  bRotationBlendInMeshSpace);                                // 0x0088(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_056B, float,                                                                 AnimLength);                                               // 0x008C(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_056B, struct FInterpolationParameter,                                        InterpolationParam[0x3]);                                  // 0x0090(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_056B, float,                                                                 TargetWeightInterpolationSpeedPerSec);                     // 0x00A8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_056B, TEnumAsByte<ENotifyTriggerMode>,                                       NotifyTriggerMode);                                        // 0x00AC(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_056B, TArray<struct FPerBoneInterpolation>,                                  PerBoneBlend);                                             // 0x00B0(0x0010)  (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0040 PADDING_056B, int,                                                                   SampleIndexWithMarkers);                                   // 0x00C0(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0048 PADDING_056B, TArray<struct FBlendSample>,                                           SampleData);                                               // 0x00C8(0x0010)  (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0058 PADDING_056B, TArray<struct FEditorElement>,                                         GridSamples);                                              // 0x00D8(0x0010)  (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0068 PADDING_056B, struct FBlendParameter,                                                BlendParameters[0x3]);                                     // 0x00E8(0x0020)  (Edit, Protected, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BlendSpaceBase");
		return ptr;
	}


};

// Class Engine.BlendSpace
// 0x0001 (FullSize[0x0149] - InheritedSize[0x0148])
// LastOffsetWithSize(0x0108)
#define PADDING_056C - 0x0000 // Minimum to subtract -> (0040)
class UBlendSpace : public UBlendSpaceBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0040 PADDING_056C, TEnumAsByte<EBlendSpaceAxis>,                                          AxisToScaleAnimation);                                     // 0x0148(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BlendSpace");
		return ptr;
	}


};

// Class Engine.AimOffsetBlendSpace
// 0x0007 (FullSize[0x0150] - InheritedSize[0x0149])
// LastOffsetWithSize(0x0149)
class UAimOffsetBlendSpace : public UBlendSpace
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AimOffsetBlendSpace");
		return ptr;
	}


};

// Class Engine.BlendSpace1D
// 0x0001 (FullSize[0x0149] - InheritedSize[0x0148])
// LastOffsetWithSize(0x0108)
#define PADDING_056E - 0x0000 // Minimum to subtract -> (0040)
class UBlendSpace1D : public UBlendSpaceBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0040 PADDING_056E, bool,                                                                  bScaleAnimation);                                          // 0x0148(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BlendSpace1D");
		return ptr;
	}


};

// Class Engine.AimOffsetBlendSpace1D
// 0x0007 (FullSize[0x0150] - InheritedSize[0x0149])
// LastOffsetWithSize(0x0149)
class UAimOffsetBlendSpace1D : public UBlendSpace1D
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AimOffsetBlendSpace1D");
		return ptr;
	}


};

// Class Engine.AISystemBase
// 0x0029 (FullSize[0x0051] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0570 - 0x0000 // Minimum to subtract -> (0000)
class UAISystemBase : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0570, struct FSoftClassPath,                                                 AISystemClassName);                                        // 0x0028(0x0018)  (ZeroConstructor, Config, GlobalConfig, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0570, struct FName,                                                          AISystemModuleName);                                       // 0x0040(0x0008)  (ZeroConstructor, Config, GlobalConfig, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0570, bool,                                                                  bInstantiateAISystemOnClient);                             // 0x0050(0x0001)  (ZeroConstructor, Config, GlobalConfig, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AISystemBase");
		return ptr;
	}


};

// Class Engine.AmbientSound
// 0x0018 (FullSize[0x0250] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0571 - 0x0000 // Minimum to subtract -> (0010)
class AAmbientSound : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0571, class UAudioComponent*,                                                AudioComponent);                                           // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AmbientSound");
		return ptr;
	}


	void Stop();
	void Play(float StartTime);
	void FadeOut(float FadeoutDuration, float FadeVolumeLevel);
	void FadeIn(float FadeInDuration, float FadeVolumeLevel);
	void AdjustVolume(float AdjustVolumeDuration, float AdjustVolumeLevel);
};

// Class Engine.AnimationSettings
// 0x0046 (FullSize[0x006E] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0572 - 0x0000 // Minimum to subtract -> (0010)
class UAnimationSettings : public UDeveloperSettings
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0572, int,                                                                   CompressCommandletVersion);                                // 0x0038(0x0004)  (Edit, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0572, TArray<struct FString>,                                                KeyEndEffectorsMatchNameArray);                            // 0x0040(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0572, class UClass*,                                                         DefaultCompressionAlgorithm);                              // 0x0050(0x0008)  (Edit, ZeroConstructor, Config, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0572, TEnumAsByte<EAnimationCompressionFormat>,                              RotationCompressionFormat);                                // 0x0058(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0031 PADDING_0572, TEnumAsByte<EAnimationCompressionFormat>,                              TranslationCompressionFormat);                             // 0x0059(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0572, float,                                                                 MaxCurveError);                                            // 0x005C(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0572, float,                                                                 AlternativeCompressionThreshold);                          // 0x0060(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_0572, bool,                                                                  ForceRecompression);                                       // 0x0064(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003D PADDING_0572, bool,                                                                  bOnlyCheckForMissingSkeletalMeshes);                       // 0x0065(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003E PADDING_0572, bool,                                                                  bForceBelowThreshold);                                     // 0x0066(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003F PADDING_0572, bool,                                                                  bFirstRecompressUsingCurrentOrDefault);                    // 0x0067(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0572, bool,                                                                  bRaiseMaxErrorToExisting);                                 // 0x0068(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0041 PADDING_0572, bool,                                                                  bTryExhaustiveSearch);                                     // 0x0069(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0042 PADDING_0572, bool,                                                                  bEnableSegmenting);                                        // 0x006A(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_0572, bool,                                                                  bEnablePerformanceLog);                                    // 0x006B(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0572, bool,                                                                  bStripAnimationDataOnDedicatedServer);                     // 0x006C(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0045 PADDING_0572, bool,                                                                  bTickAnimationOnSkeletalMeshInit);                         // 0x006D(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimationSettings");
		return ptr;
	}


};

// Class Engine.AnimBlueprint
// 0x0029 (FullSize[0x00FA] - InheritedSize[0x00D1])
// LastOffsetWithSize(0x00D1)
#define PADDING_0573 - 0x0000 // Minimum to subtract -> (000F)
class UAnimBlueprint : public UBlueprint
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x000F PADDING_0573, class USkeleton*,                                                      TargetSkeleton);                                           // 0x00E0(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_0573, TArray<struct FAnimGroupInfo>,                                         Groups);                                                   // 0x00E8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_0573, bool,                                                                  bUseMultiThreadedAnimationUpdate);                         // 0x00F8(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0573, bool,                                                                  bWarnAboutBlueprintUsage);                                 // 0x00F9(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimBlueprint");
		return ptr;
	}


};

// Class Engine.AnimBlueprintGeneratedClass
// 0x0118 (FullSize[0x03C0] - InheritedSize[0x02A8])
// LastOffsetWithSize(0x02A8)
#define PADDING_0574 - 0x0000 // Minimum to subtract -> (0040)
class UAnimBlueprintGeneratedClass : public UBlueprintGeneratedClass
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0040 PADDING_0574, TArray<struct FBakedAnimationStateMachine>,                            BakedStateMachines);                                       // 0x02E8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0574, class USkeleton*,                                                      TargetSkeleton);                                           // 0x02F8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0574, TArray<struct FAnimNotifyEvent>,                                       AnimNotifies);                                             // 0x0300(0x0010)  (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0574, TMap<struct FName COMMA struct FCachedPoseIndices>,                    OrderedSavedPoseIndicesMap);                               // 0x0310(0x0050)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F8 PADDING_0574, TArray<struct FName>,                                                  SyncGroupNames);                                           // 0x03A0(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0108 PADDING_0574, TArray<struct FExposedValueHandler>,                                   EvaluateGraphExposedInputs);                               // 0x03B0(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimBlueprintGeneratedClass");
		return ptr;
	}


};

// Class Engine.AnimClassData
// 0x00E0 (FullSize[0x0108] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0575 - 0x0000 // Minimum to subtract -> (0008)
class UAnimClassData : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0575, TArray<struct FBakedAnimationStateMachine>,                            BakedStateMachines);                                       // 0x0030(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0575, class USkeleton*,                                                      TargetSkeleton);                                           // 0x0040(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0575, TArray<struct FAnimNotifyEvent>,                                       AnimNotifies);                                             // 0x0048(0x0010)  (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0575, TMap<struct FName COMMA struct FCachedPoseIndices>,                    OrderedSavedPoseIndicesMap);                               // 0x0058(0x0050)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0575, TArray<struct FAnimBlueprintFunction>,                                 AnimBlueprintFunctions);                                   // 0x00A8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_0575, TArray<class UStructProperty*>,                                        AnimNodeProperties);                                       // 0x00B8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0575, TArray<class UStructProperty*>,                                        SubInstanceNodeProperties);                                // 0x00C8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_0575, TArray<class UStructProperty*>,                                        LayerNodeProperties);                                      // 0x00D8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_0575, TArray<struct FName>,                                                  SyncGroupNames);                                           // 0x00E8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_0575, TArray<struct FExposedValueHandler>,                                   EvaluateGraphExposedInputs);                               // 0x00F8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimClassData");
		return ptr;
	}


};

// Class Engine.AnimClassInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAnimClassInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimClassInterface");
		return ptr;
	}


};

// Class Engine.AnimSequenceBase
// 0x0028 (FullSize[0x00A8] - InheritedSize[0x0080])
// LastOffsetWithSize(0x0080)
#define PADDING_0577 - 0x0000 // Minimum to subtract -> (0000)
class UAnimSequenceBase : public UAnimationAsset
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0577, TArray<struct FAnimNotifyEvent>,                                       Notifies);                                                 // 0x0080(0x0010)  (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0577, float,                                                                 SequenceLength);                                           // 0x0090(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0577, float,                                                                 RateScale);                                                // 0x0094(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0577, struct FRawCurveTracks,                                                RawCurveData);                                             // 0x0098(0x0010)  (NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimSequenceBase");
		return ptr;
	}


	float GetPlayLength();
};

// Class Engine.AnimCompositeBase
// 0x0000 (FullSize[0x00A8] - InheritedSize[0x00A8])
// LastOffsetWithSize(0x00A8)
class UAnimCompositeBase : public UAnimSequenceBase
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimCompositeBase");
		return ptr;
	}


};

// Class Engine.AnimComposite
// 0x0010 (FullSize[0x00B8] - InheritedSize[0x00A8])
// LastOffsetWithSize(0x00A8)
#define PADDING_0579 - 0x0000 // Minimum to subtract -> (0000)
class UAnimComposite : public UAnimCompositeBase
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0579, struct FAnimTrack,                                                     AnimationTrack);                                           // 0x00A8(0x0010)  (NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimComposite");
		return ptr;
	}


};

// Class Engine.AnimCompress
// 0x0024 (FullSize[0x004C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_057A - 0x0000 // Minimum to subtract -> (0000)
class UAnimCompress : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_057A, struct FString,                                                        Description);                                              // 0x0028(0x0010)  (Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_057A, unsigned char,                                                         bNeedsSkeleton);                                           // 0x0038(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_057A, unsigned char,                                                         bEnableSegmenting);                                        // 0x0038(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_057A, uint32_t,                                                              IdealNumFramesPerSegment);                                 // 0x003C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_057A, uint32_t,                                                              MaxNumFramesPerSegment);                                   // 0x0040(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_057A, TEnumAsByte<EAnimationCompressionFormat>,                              TranslationCompressionFormat);                             // 0x0044(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001D PADDING_057A, TEnumAsByte<EAnimationCompressionFormat>,                              RotationCompressionFormat);                                // 0x0045(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001E PADDING_057A, TEnumAsByte<EAnimationCompressionFormat>,                              ScaleCompressionFormat);                                   // 0x0046(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_057A, float,                                                                 MaxCurveError);                                            // 0x0048(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimCompress");
		return ptr;
	}


};

// Class Engine.AnimCompress_Automatic
// 0x0009 (FullSize[0x0055] - InheritedSize[0x004C])
// LastOffsetWithSize(0x004C)
#define PADDING_057B - 0x0000 // Minimum to subtract -> (0004)
class UAnimCompress_Automatic : public UAnimCompress
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_057B, float,                                                                 MaxEndEffectorError);                                      // 0x0050(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_057B, unsigned char,                                                         bRunCurrentDefaultCompressor);                             // 0x0054(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_057B, unsigned char,                                                         bAutoReplaceIfExistingErrorTooGreat);                      // 0x0054(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_057B, unsigned char,                                                         bRaiseMaxErrorToExisting);                                 // 0x0054(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_057B, unsigned char,                                                         bTryExhaustiveSearch);                                     // 0x0054(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimCompress_Automatic");
		return ptr;
	}


};

// Class Engine.AnimCompress_BitwiseCompressOnly
// 0x0004 (FullSize[0x0050] - InheritedSize[0x004C])
// LastOffsetWithSize(0x004C)
class UAnimCompress_BitwiseCompressOnly : public UAnimCompress
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimCompress_BitwiseCompressOnly");
		return ptr;
	}


};

// Class Engine.AnimCompress_LeastDestructive
// 0x0004 (FullSize[0x0050] - InheritedSize[0x004C])
// LastOffsetWithSize(0x004C)
class UAnimCompress_LeastDestructive : public UAnimCompress
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimCompress_LeastDestructive");
		return ptr;
	}


};

// Class Engine.AnimCompress_RemoveLinearKeys
// 0x0021 (FullSize[0x006D] - InheritedSize[0x004C])
// LastOffsetWithSize(0x004C)
#define PADDING_057E - 0x0000 // Minimum to subtract -> (0004)
class UAnimCompress_RemoveLinearKeys : public UAnimCompress
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_057E, float,                                                                 MaxPosDiff);                                               // 0x0050(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_057E, float,                                                                 MaxAngleDiff);                                             // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_057E, float,                                                                 MaxScaleDiff);                                             // 0x0058(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_057E, float,                                                                 MaxEffectorDiff);                                          // 0x005C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_057E, float,                                                                 MinEffectorDiff);                                          // 0x0060(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_057E, float,                                                                 EffectorDiffSocket);                                       // 0x0064(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_057E, float,                                                                 ParentKeyScale);                                           // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_057E, unsigned char,                                                         bRetarget);                                                // 0x006C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_057E, unsigned char,                                                         bActuallyFilterLinearKeys);                                // 0x006C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_057E, unsigned char,                                                         bOptimizeForForwardPlayback);                              // 0x006C(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_057E, unsigned char,                                                         bUseDecompression);                                        // 0x006C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_057E, unsigned char,                                                         bUseMultithreading);                                       // 0x006C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimCompress_RemoveLinearKeys");
		return ptr;
	}


};

// Class Engine.AnimCompress_PerTrackCompression
// 0x0077 (FullSize[0x00E4] - InheritedSize[0x006D])
// LastOffsetWithSize(0x006D)
#define PADDING_057F - 0x0000 // Minimum to subtract -> (0003)
class UAnimCompress_PerTrackCompression : public UAnimCompress_RemoveLinearKeys
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_057F, float,                                                                 MaxZeroingThreshold);                                      // 0x0070(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_057F, float,                                                                 MaxPosDiffBitwise);                                        // 0x0074(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_057F, float,                                                                 MaxAngleDiffBitwise);                                      // 0x0078(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_057F, float,                                                                 MaxScaleDiffBitwise);                                      // 0x007C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_057F, TArray<TEnumAsByte<EAnimationCompressionFormat>>,                      AllowedRotationFormats);                                   // 0x0080(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_057F, TArray<TEnumAsByte<EAnimationCompressionFormat>>,                      AllowedTranslationFormats);                                // 0x0090(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_057F, TArray<TEnumAsByte<EAnimationCompressionFormat>>,                      AllowedScaleFormats);                                      // 0x00A0(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_057F, unsigned char,                                                         bResampleAnimation);                                       // 0x00B0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_057F, float,                                                                 ResampledFramerate);                                       // 0x00B4(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004B PADDING_057F, int,                                                                   MinKeysForResampling);                                     // 0x00B8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004F PADDING_057F, unsigned char,                                                         bUseAdaptiveError);                                        // 0x00BC(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004F PADDING_057F, unsigned char,                                                         bUseOverrideForEndEffectors);                              // 0x00BC(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_057F, int,                                                                   TrackHeightBias);                                          // 0x00C0(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_057F, float,                                                                 ParentingDivisor);                                         // 0x00C4(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005B PADDING_057F, float,                                                                 ParentingDivisorExponent);                                 // 0x00C8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005F PADDING_057F, unsigned char,                                                         bUseAdaptiveError2);                                       // 0x00CC(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0063 PADDING_057F, float,                                                                 RotationErrorSourceRatio);                                 // 0x00D0(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0067 PADDING_057F, float,                                                                 TranslationErrorSourceRatio);                              // 0x00D4(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006B PADDING_057F, float,                                                                 ScaleErrorSourceRatio);                                    // 0x00D8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006F PADDING_057F, float,                                                                 MaxErrorPerTrackRatio);                                    // 0x00DC(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0073 PADDING_057F, float,                                                                 PerturbationProbeSize);                                    // 0x00E0(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimCompress_PerTrackCompression");
		return ptr;
	}


};

// Class Engine.AnimCompress_RemoveEverySecondKey
// 0x0009 (FullSize[0x0055] - InheritedSize[0x004C])
// LastOffsetWithSize(0x004C)
#define PADDING_0580 - 0x0000 // Minimum to subtract -> (0004)
class UAnimCompress_RemoveEverySecondKey : public UAnimCompress
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_0580, int,                                                                   MinKeys);                                                  // 0x0050(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0580, unsigned char,                                                         bStartAtSecondKey);                                        // 0x0054(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimCompress_RemoveEverySecondKey");
		return ptr;
	}


};

// Class Engine.AnimCompress_RemoveTrivialKeys
// 0x0010 (FullSize[0x005C] - InheritedSize[0x004C])
// LastOffsetWithSize(0x004C)
#define PADDING_0581 - 0x0000 // Minimum to subtract -> (0004)
class UAnimCompress_RemoveTrivialKeys : public UAnimCompress
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_0581, float,                                                                 MaxPosDiff);                                               // 0x0050(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0581, float,                                                                 MaxAngleDiff);                                             // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0581, float,                                                                 MaxScaleDiff);                                             // 0x0058(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimCompress_RemoveTrivialKeys");
		return ptr;
	}


};

// Class Engine.AnimCurveCompressionCodec
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAnimCurveCompressionCodec : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimCurveCompressionCodec");
		return ptr;
	}


};

// Class Engine.AnimCurveCompressionCodec_CompressedRichCurve
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAnimCurveCompressionCodec_CompressedRichCurve : public UAnimCurveCompressionCodec
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimCurveCompressionCodec_CompressedRichCurve");
		return ptr;
	}


};

// Class Engine.AnimCurveCompressionCodec_UniformlySampled
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAnimCurveCompressionCodec_UniformlySampled : public UAnimCurveCompressionCodec
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimCurveCompressionCodec_UniformlySampled");
		return ptr;
	}


};

// Class Engine.AnimCurveCompressionSettings
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0585 - 0x0000 // Minimum to subtract -> (0000)
class UAnimCurveCompressionSettings : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0585, class UAnimCurveCompressionCodec*,                                     Codec);                                                    // 0x0028(0x0008)  (Edit, ExportObject, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimCurveCompressionSettings");
		return ptr;
	}


};

// Class Engine.AnimLayerInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAnimLayerInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimLayerInterface");
		return ptr;
	}


};

// Class Engine.AnimMetaData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAnimMetaData : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimMetaData");
		return ptr;
	}


};

// Class Engine.AnimMontage
// 0x0128 (FullSize[0x01D0] - InheritedSize[0x00A8])
// LastOffsetWithSize(0x00A8)
#define PADDING_0588 - 0x0000 // Minimum to subtract -> (0000)
class UAnimMontage : public UAnimCompositeBase
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0588, struct FAlphaBlend,                                                    BlendIn);                                                  // 0x00A8(0x0030)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0588, float,                                                                 BlendInTime);                                              // 0x00D8(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0588, struct FAlphaBlend,                                                    BlendOut);                                                 // 0x00E0(0x0030)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0588, float,                                                                 blendOutTime);                                             // 0x0110(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_0588, float,                                                                 BlendOutTriggerTime);                                      // 0x0114(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0588, struct FName,                                                          SyncGroup);                                                // 0x0118(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0588, int,                                                                   SyncSlotIndex);                                            // 0x0120(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0588, struct FMarkerSyncData,                                                MarkerData);                                               // 0x0128(0x0020)  (NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0588, TArray<struct FCompositeSection>,                                      CompositeSections);                                        // 0x0148(0x0010)  (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_0588, TArray<struct FSlotAnimationTrack>,                                    SlotAnimTracks);                                           // 0x0158(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_0588, TArray<struct FBranchingPoint>,                                        BranchingPoints);                                          // 0x0168(0x0010)  (ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_0588, bool,                                                                  bEnableRootMotionTranslation);                             // 0x0178(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D1 PADDING_0588, bool,                                                                  bEnableRootMotionRotation);                                // 0x0179(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D2 PADDING_0588, bool,                                                                  bEnableAutoBlendOut);                                      // 0x017A(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D3 PADDING_0588, TEnumAsByte<ERootMotionRootLock>,                                      RootMotionRootLock);                                       // 0x017B(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D8 PADDING_0588, TArray<struct FBranchingPointMarker>,                                  BranchingPointMarkers);                                    // 0x0180(0x0010)  (ZeroConstructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00E8 PADDING_0588, TArray<int>,                                                           BranchingPointStateNotifyIndices);                         // 0x0190(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F8 PADDING_0588, struct FTimeStretchCurve,                                              TimeStretchCurve);                                         // 0x01A0(0x0028)  (Edit, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0120 PADDING_0588, struct FName,                                                          TimeStretchCurveName);                                     // 0x01C8(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimMontage");
		return ptr;
	}


	float GetDefaultBlendOutTime();
};

// Class Engine.AnimNotify_PauseClothingSimulation
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAnimNotify_PauseClothingSimulation : public UAnimNotify
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimNotify_PauseClothingSimulation");
		return ptr;
	}


};

// Class Engine.AnimNotify_PlayParticleEffect
// 0x0064 (FullSize[0x008C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_058A - 0x0000 // Minimum to subtract -> (0010)
class UAnimNotify_PlayParticleEffect : public UAnimNotify
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_058A, class UParticleSystem*,                                                PSTemplate);                                               // 0x0038(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_058A, struct FVector,                                                        LocationOffset);                                           // 0x0040(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_058A, struct FRotator,                                                       RotationOffset);                                           // 0x004C(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_058A, struct FVector,                                                        Scale);                                                    // 0x0058(0x000C)  (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_058A, unsigned char,                                                         Attached);                                                 // 0x0080(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005C PADDING_058A, struct FName,                                                          SocketName);                                               // 0x0084(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimNotify_PlayParticleEffect");
		return ptr;
	}


};

// Class Engine.AnimNotify_PlaySound
// 0x002C (FullSize[0x0054] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_058B - 0x0000 // Minimum to subtract -> (0010)
class UAnimNotify_PlaySound : public UAnimNotify
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_058B, class USoundBase*,                                                     Sound);                                                    // 0x0038(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_058B, float,                                                                 VolumeMultiplier);                                         // 0x0040(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_058B, float,                                                                 PitchMultiplier);                                          // 0x0044(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_058B, unsigned char,                                                         bFollow);                                                  // 0x0048(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_058B, struct FName,                                                          AttachName);                                               // 0x004C(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimNotify_PlaySound");
		return ptr;
	}


};

// Class Engine.AnimNotify_ResetClothingSimulation
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAnimNotify_ResetClothingSimulation : public UAnimNotify
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimNotify_ResetClothingSimulation");
		return ptr;
	}


};

// Class Engine.AnimNotify_ResetDynamics
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAnimNotify_ResetDynamics : public UAnimNotify
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimNotify_ResetDynamics");
		return ptr;
	}


};

// Class Engine.AnimNotify_ResumeClothingSimulation
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAnimNotify_ResumeClothingSimulation : public UAnimNotify
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimNotify_ResumeClothingSimulation");
		return ptr;
	}


};

// Class Engine.AnimNotifyState_DisableRootMotion
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAnimNotifyState_DisableRootMotion : public UAnimNotifyState
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimNotifyState_DisableRootMotion");
		return ptr;
	}


};

// Class Engine.AnimNotifyState_TimedParticleEffect
// 0x0031 (FullSize[0x0059] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0590 - 0x0000 // Minimum to subtract -> (0008)
class UAnimNotifyState_TimedParticleEffect : public UAnimNotifyState
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0590, class UParticleSystem*,                                                PSTemplate);                                               // 0x0030(0x0008)  (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0590, struct FName,                                                          SocketName);                                               // 0x0038(0x0008)  (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0590, struct FVector,                                                        LocationOffset);                                           // 0x0040(0x000C)  (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0590, struct FRotator,                                                       RotationOffset);                                           // 0x004C(0x000C)  (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0590, bool,                                                                  bDestroyAtEnd);                                            // 0x0058(0x0001)  (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimNotifyState_TimedParticleEffect");
		return ptr;
	}


};

// Class Engine.AnimNotifyState_Trail
// 0x002D (FullSize[0x0055] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0591 - 0x0000 // Minimum to subtract -> (0008)
class UAnimNotifyState_Trail : public UAnimNotifyState
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0591, class UParticleSystem*,                                                PSTemplate);                                               // 0x0030(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0591, struct FName,                                                          FirstSocketName);                                          // 0x0038(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0591, struct FName,                                                          SecondSocketName);                                         // 0x0040(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0591, TEnumAsByte<ETrailWidthMode>,                                          WidthScaleMode);                                           // 0x0048(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0591, struct FName,                                                          WidthScaleCurve);                                          // 0x004C(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0591, unsigned char,                                                         bRecycleSpawnedSystems);                                   // 0x0054(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimNotifyState_Trail");
		return ptr;
	}


	class UParticleSystem* OverridePSTemplate(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
};

// Class Engine.AnimSequence
// 0x0138 (FullSize[0x01E0] - InheritedSize[0x00A8])
// LastOffsetWithSize(0x00A8)
#define PADDING_0592 - 0x0000 // Minimum to subtract -> (0000)
class UAnimSequence : public UAnimSequenceBase
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0592, int,                                                                   NumFrames);                                                // 0x00A8(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0592, TArray<struct FTrackToSkeletonMap>,                                    TrackToSkeletonMapTable);                                  // 0x00B0(0x0010)  (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0592, class UAnimCurveCompressionSettings*,                                  CurveCompressionSettings);                                 // 0x00D0(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_0592, TEnumAsByte<EAdditiveAnimationType>,                                   AdditiveAnimType);                                         // 0x01A8(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0101 PADDING_0592, TEnumAsByte<EAdditiveBasePoseType>,                                    RefPoseType);                                              // 0x01A9(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0108 PADDING_0592, class UAnimSequence*,                                                  RefPoseSeq);                                               // 0x01B0(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0110 PADDING_0592, int,                                                                   RefFrameIndex);                                            // 0x01B8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0114 PADDING_0592, struct FName,                                                          RetargetSource);                                           // 0x01BC(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x011C PADDING_0592, EAnimInterpolationType,                                                Interpolation);                                            // 0x01C4(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x011D PADDING_0592, bool,                                                                  bEnableRootMotion);                                        // 0x01C5(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x011E PADDING_0592, TEnumAsByte<ERootMotionRootLock>,                                      RootMotionRootLock);                                       // 0x01C6(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x011F PADDING_0592, bool,                                                                  bForceRootLock);                                           // 0x01C7(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0120 PADDING_0592, bool,                                                                  bUseNormalizedRootMotionScale);                            // 0x01C8(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0121 PADDING_0592, bool,                                                                  bRootMotionSettingsCopiedFromMontage);                     // 0x01C9(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0128 PADDING_0592, TArray<struct FAnimSyncMarker>,                                        AuthoredSyncMarkers);                                      // 0x01D0(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimSequence");
		return ptr;
	}


};

// Class Engine.AnimSet
// 0x0078 (FullSize[0x00A0] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0593 - 0x0000 // Minimum to subtract -> (0000)
class UAnimSet : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0593, unsigned char,                                                         bAnimRotationOnly);                                        // 0x0028(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0593, TArray<struct FName>,                                                  TrackBoneNames);                                           // 0x0030(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0593, TArray<struct FAnimSetMeshLinkup>,                                     LinkupCache);                                              // 0x0040(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0593, TArray<unsigned char>,                                                 BoneUseAnimTranslation);                                   // 0x0050(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0593, TArray<unsigned char>,                                                 ForceUseMeshTranslation);                                  // 0x0060(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0593, TArray<struct FName>,                                                  UseTranslationBoneNames);                                  // 0x0070(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0593, TArray<struct FName>,                                                  ForceMeshTranslationBoneNames);                            // 0x0080(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0593, struct FName,                                                          PreviewSkelMeshName);                                      // 0x0090(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0593, struct FName,                                                          BestRatioSkelMeshName);                                    // 0x0098(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimSet");
		return ptr;
	}


};

// Class Engine.AnimSingleNodeInstance
// 0x0100 (FullSize[0x0280] - InheritedSize[0x0180])
// LastOffsetWithSize(0x0180)
#define PADDING_0594 - 0x0000 // Minimum to subtract -> (00E8)
class UAnimSingleNodeInstance : public UAnimInstance
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x00E8 PADDING_0594, class UAnimationAsset*,                                                CurrentAsset);                                             // 0x0268(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F0 PADDING_0594, struct FScriptDelegate,                                                PostEvaluateAnimEvent);                                    // 0x0270(0x0010)  (ZeroConstructor, Transient, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimSingleNodeInstance");
		return ptr;
	}


	void StopAnim();
	void SetReverse(bool bInReverse);
	void SetPreviewCurveOverride(const struct FName& PoseName, float Value, bool bRemoveIfZero);
	void SetPositionWithPreviousTime(float InPosition, float InPreviousTime, bool bFireNotifies);
	void SetPosition(float InPosition, bool bFireNotifies);
	void SetPlayRate(float InPlayRate);
	void SetPlaying(bool bIsPlaying);
	void SetLooping(bool bIsLooping);
	void SetBlendSpaceInput(const struct FVector& InBlendInput);
	void SetAnimationAsset(class UAnimationAsset* NewAsset, bool bIsLooping, float InPlayRate);
	void PlayAnim(bool bIsLooping, float InPlayRate, float InStartPosition);
	float GetLength();
	class UAnimationAsset* GetAnimationAsset();
};

// Class Engine.AnimStateMachineTypes
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAnimStateMachineTypes : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimStateMachineTypes");
		return ptr;
	}


};

// Class Engine.AnimStreamable
// 0x002C (FullSize[0x00D4] - InheritedSize[0x00A8])
// LastOffsetWithSize(0x00A8)
#define PADDING_0596 - 0x0000 // Minimum to subtract -> (0000)
class UAnimStreamable : public UAnimSequenceBase
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0596, int,                                                                   NumFrames);                                                // 0x00A8(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0596, EAnimInterpolationType,                                                Interpolation);                                            // 0x00AC(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0596, struct FName,                                                          RetargetSource);                                           // 0x00B0(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0596, class UAnimCurveCompressionSettings*,                                  CurveCompressionSettings);                                 // 0x00C8(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0596, bool,                                                                  bEnableRootMotion);                                        // 0x00D0(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0029 PADDING_0596, TEnumAsByte<ERootMotionRootLock>,                                      RootMotionRootLock);                                       // 0x00D1(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002A PADDING_0596, bool,                                                                  bForceRootLock);                                           // 0x00D2(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002B PADDING_0596, bool,                                                                  bUseNormalizedRootMotionScale);                            // 0x00D3(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AnimStreamable");
		return ptr;
	}


};

// Class Engine.ApplicationLifecycleComponent
// 0x00A0 (FullSize[0x0168] - InheritedSize[0x00C8])
// LastOffsetWithSize(0x00C8)
#define PADDING_0597 - 0x0000 // Minimum to subtract -> (0010)
class UApplicationLifecycleComponent : public UActorComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0597, struct FScriptMulticastDelegate,                                       ApplicationWillDeactivateDelegate);                        // 0x00D8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0597, struct FScriptMulticastDelegate,                                       ApplicationHasReactivatedDelegate);                        // 0x00E8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0597, struct FScriptMulticastDelegate,                                       ApplicationWillEnterBackgroundDelegate);                   // 0x00F8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0597, struct FScriptMulticastDelegate,                                       ApplicationHasEnteredForegroundDelegate);                  // 0x0108(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0597, struct FScriptMulticastDelegate,                                       ApplicationWillTerminateDelegate);                         // 0x0118(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0597, struct FScriptMulticastDelegate,                                       ApplicationShouldUnloadResourcesDelegate);                 // 0x0128(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0597, struct FScriptMulticastDelegate,                                       ApplicationReceivedStartupArgumentsDelegate);              // 0x0138(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0597, struct FScriptMulticastDelegate,                                       OnTemperatureChangeDelegate);                              // 0x0148(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_0597, struct FScriptMulticastDelegate,                                       OnLowPowerModeDelegate);                                   // 0x0158(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ApplicationLifecycleComponent");
		return ptr;
	}


};

// Class Engine.ArrowComponent
// 0x0014 (FullSize[0x0419] - InheritedSize[0x0405])
// LastOffsetWithSize(0x0408)
#define PADDING_0598 - 0x0000 // Minimum to subtract -> (0004)
class UArrowComponent : public UPrimitiveComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_0598, float,                                                                 ArrowSize);                                                // 0x040C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0598, bool,                                                                  bIsScreenSizeScaled);                                      // 0x0410(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0598, float,                                                                 ScreenSize);                                               // 0x0414(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0598, unsigned char,                                                         bTreatAsASprite);                                          // 0x0418(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ArrowComponent");
		return ptr;
	}


	void SetArrowColor(const struct FLinearColor& NewColor);
};

// Class Engine.AssetExportTask
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0599 - 0x0000 // Minimum to subtract -> (0000)
class UAssetExportTask : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0599, class UObject*,                                                        Object);                                                   // 0x0028(0x0008)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0599, class UExporter*,                                                      Exporter);                                                 // 0x0030(0x0008)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0599, struct FString,                                                        Filename);                                                 // 0x0038(0x0010)  (BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0599, bool,                                                                  bSelected);                                                // 0x0048(0x0001)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0021 PADDING_0599, bool,                                                                  bReplaceIdentical);                                        // 0x0049(0x0001)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0022 PADDING_0599, bool,                                                                  bPrompt);                                                  // 0x004A(0x0001)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_0599, bool,                                                                  bAutomated);                                               // 0x004B(0x0001)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0599, bool,                                                                  bUseFileArchive);                                          // 0x004C(0x0001)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0025 PADDING_0599, bool,                                                                  bWriteEmptyFiles);                                         // 0x004D(0x0001)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0599, TArray<class UObject*>,                                                IgnoreObjectList);                                         // 0x0050(0x0010)  (BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0599, class UObject*,                                                        Options);                                                  // 0x0060(0x0008)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0599, TArray<struct FString>,                                                Errors);                                                   // 0x0068(0x0010)  (BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AssetExportTask");
		return ptr;
	}


};

// Class Engine.AssetManagerSettings
// 0x0088 (FullSize[0x00B0] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_059A - 0x0000 // Minimum to subtract -> (0010)
class UAssetManagerSettings : public UDeveloperSettings
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_059A, TArray<struct FPrimaryAssetTypeInfo>,                                  PrimaryAssetTypesToScan);                                  // 0x0038(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_059A, TArray<struct FDirectoryPath>,                                         DirectoriesToExclude);                                     // 0x0048(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_059A, TArray<struct FPrimaryAssetRulesOverride>,                             PrimaryAssetRules);                                        // 0x0058(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_059A, TArray<struct FPrimaryAssetRulesCustomOverride>,                       CustomPrimaryAssetRules);                                  // 0x0068(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_059A, bool,                                                                  bOnlyCookProductionAssets);                                // 0x0078(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0051 PADDING_059A, bool,                                                                  bShouldManagerDetermineTypeAndName);                       // 0x0079(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0052 PADDING_059A, bool,                                                                  bShouldGuessTypeAndNameInEditor);                          // 0x007A(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_059A, bool,                                                                  bShouldAcquireMissingChunksOnLoad);                        // 0x007B(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_059A, TArray<struct FAssetManagerRedirect>,                                  PrimaryAssetIdRedirects);                                  // 0x0080(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_059A, TArray<struct FAssetManagerRedirect>,                                  PrimaryAssetTypeRedirects);                                // 0x0090(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_059A, TArray<struct FAssetManagerRedirect>,                                  AssetPathRedirects);                                       // 0x00A0(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AssetManagerSettings");
		return ptr;
	}


};

// Class Engine.AssetMappingTable
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_059B - 0x0000 // Minimum to subtract -> (0000)
class UAssetMappingTable : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_059B, TArray<struct FAssetMapping>,                                          MappedAssets);                                             // 0x0028(0x0010)  (Edit, EditFixedSize, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AssetMappingTable");
		return ptr;
	}


};

// Class Engine.AsyncActionHandleSaveGame
// 0x0040 (FullSize[0x0068] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_059C - 0x0000 // Minimum to subtract -> (0008)
class UAsyncActionHandleSaveGame : public UBlueprintAsyncActionBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_059C, struct FScriptMulticastDelegate,                                       Completed);                                                // 0x0030(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_059C, class USaveGame*,                                                      SaveGameObject);                                           // 0x0060(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AsyncActionHandleSaveGame");
		return ptr;
	}


	static class UAsyncActionHandleSaveGame* STATIC_AsyncSaveGameToSlot(class UObject* WorldContextObject, class USaveGame* SaveGameObject, const struct FString& SlotName, int UserIndex);
	static class UAsyncActionHandleSaveGame* STATIC_AsyncLoadGameFromSlot(class UObject* WorldContextObject, const struct FString& SlotName, int UserIndex);
};

// Class Engine.AsyncActionLoadPrimaryAssetBase
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAsyncActionLoadPrimaryAssetBase : public UBlueprintAsyncActionBase
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AsyncActionLoadPrimaryAssetBase");
		return ptr;
	}


};

// Class Engine.AsyncActionLoadPrimaryAsset
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
// LastOffsetWithSize(0x0028)
#define PADDING_059E - 0x0000 // Minimum to subtract -> (0050)
class UAsyncActionLoadPrimaryAsset : public UAsyncActionLoadPrimaryAssetBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0050 PADDING_059E, struct FScriptMulticastDelegate,                                       Completed);                                                // 0x0078(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AsyncActionLoadPrimaryAsset");
		return ptr;
	}


	static class UAsyncActionLoadPrimaryAsset* STATIC_AsyncLoadPrimaryAsset(class UObject* WorldContextObject, const struct FPrimaryAssetId& PrimaryAsset, TArray<struct FName> LoadBundles);
};

// Class Engine.AsyncActionLoadPrimaryAssetClass
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
// LastOffsetWithSize(0x0028)
#define PADDING_059F - 0x0000 // Minimum to subtract -> (0050)
class UAsyncActionLoadPrimaryAssetClass : public UAsyncActionLoadPrimaryAssetBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0050 PADDING_059F, struct FScriptMulticastDelegate,                                       Completed);                                                // 0x0078(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AsyncActionLoadPrimaryAssetClass");
		return ptr;
	}


	static class UAsyncActionLoadPrimaryAssetClass* STATIC_AsyncLoadPrimaryAssetClass(class UObject* WorldContextObject, const struct FPrimaryAssetId& PrimaryAsset, TArray<struct FName> LoadBundles);
};

// Class Engine.AsyncActionLoadPrimaryAssetList
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
// LastOffsetWithSize(0x0028)
#define PADDING_05A0 - 0x0000 // Minimum to subtract -> (0050)
class UAsyncActionLoadPrimaryAssetList : public UAsyncActionLoadPrimaryAssetBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0050 PADDING_05A0, struct FScriptMulticastDelegate,                                       Completed);                                                // 0x0078(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AsyncActionLoadPrimaryAssetList");
		return ptr;
	}


	static class UAsyncActionLoadPrimaryAssetList* STATIC_AsyncLoadPrimaryAssetList(class UObject* WorldContextObject, TArray<struct FPrimaryAssetId> PrimaryAssetList, TArray<struct FName> LoadBundles);
};

// Class Engine.AsyncActionLoadPrimaryAssetClassList
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
// LastOffsetWithSize(0x0028)
#define PADDING_05A1 - 0x0000 // Minimum to subtract -> (0050)
class UAsyncActionLoadPrimaryAssetClassList : public UAsyncActionLoadPrimaryAssetBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0050 PADDING_05A1, struct FScriptMulticastDelegate,                                       Completed);                                                // 0x0078(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AsyncActionLoadPrimaryAssetClassList");
		return ptr;
	}


	static class UAsyncActionLoadPrimaryAssetClassList* STATIC_AsyncLoadPrimaryAssetClassList(class UObject* WorldContextObject, TArray<struct FPrimaryAssetId> PrimaryAssetList, TArray<struct FName> LoadBundles);
};

// Class Engine.AsyncActionChangePrimaryAssetBundles
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
// LastOffsetWithSize(0x0028)
#define PADDING_05A2 - 0x0000 // Minimum to subtract -> (0050)
class UAsyncActionChangePrimaryAssetBundles : public UAsyncActionLoadPrimaryAssetBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0050 PADDING_05A2, struct FScriptMulticastDelegate,                                       Completed);                                                // 0x0078(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AsyncActionChangePrimaryAssetBundles");
		return ptr;
	}


	static class UAsyncActionChangePrimaryAssetBundles* STATIC_AsyncChangeBundleStateForPrimaryAssetList(class UObject* WorldContextObject, TArray<struct FPrimaryAssetId> PrimaryAssetList, TArray<struct FName> AddBundles, TArray<struct FName> RemoveBundles);
	static class UAsyncActionChangePrimaryAssetBundles* STATIC_AsyncChangeBundleStateForMatchingPrimaryAssets(class UObject* WorldContextObject, TArray<struct FName> NewBundles, TArray<struct FName> OldBundles);
};

// Class Engine.AtmosphericFog
// 0x0008 (FullSize[0x0250] - InheritedSize[0x0248])
// LastOffsetWithSize(0x0238)
#define PADDING_05A3 - 0x0000 // Minimum to subtract -> (0010)
class AAtmosphericFog : public AInfo
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_05A3, class UAtmosphericFogComponent*,                                       AtmosphericFogComponent);                                  // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AtmosphericFog");
		return ptr;
	}


};

// Class Engine.AtmosphericFogComponent
// 0x0108 (FullSize[0x0288] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_05A4 - 0x0000 // Minimum to subtract -> (008D)
class UAtmosphericFogComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x008D PADDING_05A4, float,                                                                 FogMultiplier);                                            // 0x021C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0091 PADDING_05A4, float,                                                                 DensityMultiplier);                                        // 0x0220(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0095 PADDING_05A4, float,                                                                 DensityOffset);                                            // 0x0224(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0099 PADDING_05A4, float,                                                                 DistanceScale);                                            // 0x0228(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009D PADDING_05A4, float,                                                                 AltitudeScale);                                            // 0x022C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A1 PADDING_05A4, float,                                                                 DistanceOffset);                                           // 0x0230(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_05A4, float,                                                                 GroundOffset);                                             // 0x0234(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A9 PADDING_05A4, float,                                                                 StartDistance);                                            // 0x0238(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_05A4, float,                                                                 SunDiscScale);                                             // 0x023C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B1 PADDING_05A4, float,                                                                 DefaultBrightness);                                        // 0x0240(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B5 PADDING_05A4, struct FColor,                                                         DefaultLightColor);                                        // 0x0244(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B9 PADDING_05A4, unsigned char,                                                         bDisableSunDisk);                                          // 0x0248(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B9 PADDING_05A4, unsigned char,                                                         bAtmosphereAffectsSunIlluminance);                         // 0x0248(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B9 PADDING_05A4, unsigned char,                                                         bDisableGroundScattering);                                 // 0x0248(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BD PADDING_05A4, struct FAtmospherePrecomputeParameters,                                PrecomputeParams);                                         // 0x024C(0x002C)  (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00E9 PADDING_05A4, class UTexture2D*,                                                     TransmittanceTexture);                                     // 0x0278(0x0008)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F1 PADDING_05A4, class UTexture2D*,                                                     IrradianceTexture);                                        // 0x0280(0x0008)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AtmosphericFogComponent");
		return ptr;
	}


	void StartPrecompute();
	void SetSunMultiplier(float NewSunMultiplier);
	void SetStartDistance(float NewStartDistance);
	void SetPrecomputeParams(float DensityHeight, int MaxScatteringOrder, int InscatterAltitudeSampleNum);
	void SetFogMultiplier(float NewFogMultiplier);
	void SetDistanceScale(float NewDistanceScale);
	void SetDistanceOffset(float NewDistanceOffset);
	void SetDensityOffset(float NewDensityOffset);
	void SetDensityMultiplier(float NewDensityMultiplier);
	void SetDefaultLightColor(const struct FLinearColor& NewLightColor);
	void SetDefaultBrightness(float NewBrightness);
	void SetAltitudeScale(float NewAltitudeScale);
	void DisableSunDisk(bool NewSunDisk);
	void DisableGroundScattering(bool NewGroundScattering);
};

// Class Engine.AudioSettings
// 0x00D5 (FullSize[0x00FD] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05A5 - 0x0000 // Minimum to subtract -> (0010)
class UAudioSettings : public UDeveloperSettings
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_05A5, struct FSoftObjectPath,                                                DefaultSoundClassName);                                    // 0x0038(0x0018)  (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_05A5, struct FSoftObjectPath,                                                DefaultMediaSoundClassName);                               // 0x0050(0x0018)  (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_05A5, struct FSoftObjectPath,                                                DefaultSoundConcurrencyName);                              // 0x0068(0x0018)  (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_05A5, struct FSoftObjectPath,                                                DefaultBaseSoundMix);                                      // 0x0080(0x0018)  (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_05A5, struct FSoftObjectPath,                                                VoiPSoundClass);                                           // 0x0098(0x0018)  (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_05A5, EVoiceSampleRate,                                                      VoiPSampleRate);                                           // 0x00B0(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008C PADDING_05A5, float,                                                                 VoipBufferingDelay);                                       // 0x00B4(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_05A5, float,                                                                 DefaultReverbSendLevel);                                   // 0x00B8(0x0004)  (ZeroConstructor, Config, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_05A5, unsigned char,                                                         bEnableLegacyReverb);                                      // 0x00BC(0x0001) BIT_FIELD (Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_05A5, int,                                                                   MaximumConcurrentStreams);                                 // 0x00C0(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009C PADDING_05A5, float,                                                                 GlobalMinPitchScale);                                      // 0x00C4(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_05A5, float,                                                                 GlobalMaxPitchScale);                                      // 0x00C8(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_05A5, TArray<struct FAudioQualitySettings>,                                  QualityLevels);                                            // 0x00D0(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_05A5, unsigned char,                                                         bAllowPlayWhenSilent);                                     // 0x00E0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_05A5, unsigned char,                                                         bDisableMasterEQ);                                         // 0x00E0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_05A5, unsigned char,                                                         bAllowCenterChannel3DPanning);                             // 0x00E0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BC PADDING_05A5, uint32_t,                                                              NumStoppingSources);                                       // 0x00E4(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_05A5, EPanningMethod,                                                        PanningMethod);                                            // 0x00E8(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C1 PADDING_05A5, EMonoChannelUpmixMethod,                                               MonoChannelUpmixMethod);                                   // 0x00E9(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C8 PADDING_05A5, struct FString,                                                        DialogueFilenameFormat);                                   // 0x00F0(0x0010)  (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AudioSettings");
		return ptr;
	}


};

// Class Engine.AutomationTestSettings
// 0x0300 (FullSize[0x0328] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05A6 - 0x0000 // Minimum to subtract -> (0000)
class UAutomationTestSettings : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05A6, TArray<struct FString>,                                                EngineTestModules);                                        // 0x0028(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05A6, TArray<struct FString>,                                                EditorTestModules);                                        // 0x0038(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_05A6, struct FSoftObjectPath,                                                AutomationTestmap);                                        // 0x0048(0x0018)  (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_05A6, TArray<struct FEditorMapPerformanceTestDefinition>,                    EditorPerformanceTestMaps);                                // 0x0060(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_05A6, TArray<struct FSoftObjectPath>,                                        AssetsToOpen);                                             // 0x0070(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_05A6, struct FBuildPromotionTestSettings,                                    BuildPromotionTest);                                       // 0x0080(0x01F0)  (Edit, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0248 PADDING_05A6, struct FMaterialEditorPromotionSettings,                               MaterialEditorPromotionTest);                              // 0x0270(0x0030)  (Edit, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0278 PADDING_05A6, struct FParticleEditorPromotionSettings,                               ParticleEditorPromotionTest);                              // 0x02A0(0x0010)  (Edit, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0288 PADDING_05A6, struct FBlueprintEditorPromotionSettings,                              BlueprintEditorPromotionTest);                             // 0x02B0(0x0030)  (Edit, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02B8 PADDING_05A6, TArray<struct FString>,                                                TestLevelFolders);                                         // 0x02E0(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02C8 PADDING_05A6, TArray<struct FExternalToolDefinition>,                                ExternalTools);                                            // 0x02F0(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02D8 PADDING_05A6, TArray<struct FEditorImportExportTestDefinition>,                      ImportExportTestDefinitions);                              // 0x0300(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02E8 PADDING_05A6, TArray<struct FLaunchOnTestSettings>,                                  LaunchOnSettings);                                         // 0x0310(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02F8 PADDING_05A6, struct FIntPoint,                                                      DefaultScreenshotResolution);                              // 0x0320(0x0008)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AutomationTestSettings");
		return ptr;
	}


};

// Class Engine.AvoidanceManager
// 0x0024 (FullSize[0x004C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05A7 - 0x0000 // Minimum to subtract -> (0008)
class UAvoidanceManager : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_05A7, float,                                                                 DefaultTimeToLive);                                        // 0x0030(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05A7, float,                                                                 LockTimeAfterAvoid);                                       // 0x0034(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05A7, float,                                                                 LockTimeAfterClean);                                       // 0x0038(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05A7, float,                                                                 DeltaTimeToPredict);                                       // 0x003C(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_05A7, float,                                                                 ArtificialRadiusExpansion);                                // 0x0040(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_05A7, float,                                                                 TestHeightDifference);                                     // 0x0044(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_05A7, float,                                                                 HeightCheckMargin);                                        // 0x0048(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AvoidanceManager");
		return ptr;
	}


	bool RegisterMovementComponent(class UMovementComponent* MovementComp, float AvoidanceWeight);
	int GetObjectCount();
	int GetNewAvoidanceUID();
	struct FVector GetAvoidanceVelocityForComponent(class UMovementComponent* MovementComp);
};

// Class Engine.BillboardComponent
// 0x0023 (FullSize[0x0428] - InheritedSize[0x0405])
// LastOffsetWithSize(0x0408)
#define PADDING_05A8 - 0x0000 // Minimum to subtract -> (0000)
class UBillboardComponent : public UPrimitiveComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05A8, class UTexture2D*,                                                     Sprite);                                                   // 0x0408(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_05A8, unsigned char,                                                         bIsScreenSizeScaled);                                      // 0x0410(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05A8, float,                                                                 ScreenSize);                                               // 0x0414(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05A8, float,                                                                 U);                                                        // 0x0418(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05A8, float,                                                                 UL);                                                       // 0x041C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_05A8, float,                                                                 V);                                                        // 0x0420(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_05A8, float,                                                                 VL);                                                       // 0x0424(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BillboardComponent");
		return ptr;
	}


	void SetUV(int NewU, int NewUL, int NewV, int NewVL);
	void SetSpriteAndUV(class UTexture2D* NewSprite, int NewU, int NewUL, int NewV, int NewVL);
	void SetSprite(class UTexture2D* NewSprite);
};

// Class Engine.BlendableInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UBlendableInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BlendableInterface");
		return ptr;
	}


};

// Class Engine.Skeleton
// 0x0338 (FullSize[0x0360] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05AA - 0x0000 // Minimum to subtract -> (0010)
class USkeleton : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_05AA, TArray<struct FBoneNode>,                                              BoneTree);                                                 // 0x0038(0x0010)  (Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0020 PADDING_05AA, TArray<struct FTransform>,                                             RefLocalPoses);                                            // 0x0048(0x0010)  (ZeroConstructor, Deprecated, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0148 PADDING_05AA, struct FGuid,                                                          VirtualBoneGuid);                                          // 0x0170(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0158 PADDING_05AA, TArray<struct FVirtualBone>,                                           VirtualBones);                                             // 0x0180(0x0010)  (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0168 PADDING_05AA, TArray<class USkeletalMeshSocket*>,                                    Sockets);                                                  // 0x0190(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01C8 PADDING_05AA, struct FSmartNameContainer,                                            SmartNames);                                               // 0x01F0(0x0050)  (Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0240 PADDING_05AA, TArray<class UBlendProfile*>,                                          BlendProfiles);                                            // 0x0268(0x0010)  (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0250 PADDING_05AA, TArray<struct FAnimSlotGroup>,                                         SlotGroups);                                               // 0x0278(0x0010)  (ZeroConstructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0328 PADDING_05AA, TArray<class UAssetUserData*>,                                         AssetUserData);                                            // 0x0350(0x0010)  (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Skeleton");
		return ptr;
	}


};

// Class Engine.BlendProfile
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05AB - 0x0000 // Minimum to subtract -> (0008)
class UBlendProfile : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_05AB, class USkeleton*,                                                      OwningSkeleton);                                           // 0x0030(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05AB, TArray<struct FBlendProfileBoneEntry>,                                 ProfileEntries);                                           // 0x0038(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BlendProfile");
		return ptr;
	}


};

// Class Engine.BlockingVolume
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
class ABlockingVolume : public AVolume
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BlockingVolume");
		return ptr;
	}


};

// Class Engine.BlueprintMapLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UBlueprintMapLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BlueprintMapLibrary");
		return ptr;
	}


	static void STATIC_SetMapPropertyByName(class UObject* Object, const struct FName& PropertyName, TMap<int, int> Value);
	static void STATIC_Map_Values(TMap<int, int> TargetMap, TArray<int>* Values);
	static bool STATIC_Map_Remove(TMap<int, int> TargetMap, int Key);
	static int STATIC_Map_Length(TMap<int, int> TargetMap);
	static void STATIC_Map_Keys(TMap<int, int> TargetMap, TArray<int>* Keys);
	static bool STATIC_Map_Find(TMap<int, int> TargetMap, int Key, int* Value);
	static bool STATIC_Map_Contains(TMap<int, int> TargetMap, int Key);
	static void STATIC_Map_Clear(TMap<int, int> TargetMap);
	static void STATIC_Map_Add(TMap<int, int> TargetMap, int Key, int Value);
};

// Class Engine.BlueprintPathsLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UBlueprintPathsLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BlueprintPathsLibrary");
		return ptr;
	}


	static struct FString STATIC_VideoCaptureDir();
	static void STATIC_ValidatePath(const struct FString& InPath, bool* bDidSucceed, struct FText* OutReason);
	static void STATIC_Split(const struct FString& InPath, struct FString* PathPart, struct FString* FilenamePart, struct FString* ExtensionPart);
	static struct FString STATIC_SourceConfigDir();
	static bool STATIC_ShouldSaveToUserDir();
	static struct FString STATIC_ShaderWorkingDir();
	static void STATIC_SetProjectFilePath(const struct FString& NewGameProjectFilePath);
	static struct FString STATIC_SetExtension(const struct FString& InPath, const struct FString& InNewExtension);
	static struct FString STATIC_ScreenShotDir();
	static struct FString STATIC_SandboxesDir();
	static struct FString STATIC_RootDir();
	static void STATIC_RemoveDuplicateSlashes(const struct FString& InPath, struct FString* OutPath);
	static struct FString STATIC_ProjectUserDir();
	static struct FString STATIC_ProjectSavedDir();
	static struct FString STATIC_ProjectPluginsDir();
	static struct FString STATIC_ProjectPersistentDownloadDir();
	static struct FString STATIC_ProjectModsDir();
	static struct FString STATIC_ProjectLogDir();
	static struct FString STATIC_ProjectIntermediateDir();
	static struct FString STATIC_ProjectDir();
	static struct FString STATIC_ProjectContentDir();
	static struct FString STATIC_ProjectConfigDir();
	static struct FString STATIC_ProfilingDir();
	static void STATIC_NormalizeFilename(const struct FString& InPath, struct FString* OutPath);
	static void STATIC_NormalizeDirectoryName(const struct FString& InPath, struct FString* OutPath);
	static struct FString STATIC_MakeValidFileName(const struct FString& inString, const struct FString& InReplacementChar);
	static void STATIC_MakeStandardFilename(const struct FString& InPath, struct FString* OutPath);
	static void STATIC_MakePlatformFilename(const struct FString& InPath, struct FString* OutPath);
	static bool STATIC_MakePathRelativeTo(const struct FString& InPath, const struct FString& InRelativeTo, struct FString* OutPath);
	static struct FString STATIC_LaunchDir();
	static bool STATIC_IsSamePath(const struct FString& PathA, const struct FString& PathB);
	static bool STATIC_IsRestrictedPath(const struct FString& InPath);
	static bool STATIC_IsRelative(const struct FString& InPath);
	static bool STATIC_IsProjectFilePathSet();
	static bool STATIC_IsDrive(const struct FString& InPath);
	static bool STATIC_HasProjectPersistentDownloadDir();
	static TArray<struct FString> STATIC_GetToolTipLocalizationPaths();
	static TArray<struct FString> STATIC_GetRestrictedFolderNames();
	static struct FString STATIC_GetRelativePathToRoot();
	static TArray<struct FString> STATIC_GetPropertyNameLocalizationPaths();
	static struct FString STATIC_GetProjectFilePath();
	static struct FString STATIC_GetPath(const struct FString& InPath);
	static struct FString STATIC_GetInvalidFileSystemChars();
	static TArray<struct FString> STATIC_GetGameLocalizationPaths();
	static struct FString STATIC_GetExtension(const struct FString& InPath, bool bIncludeDot);
	static TArray<struct FString> STATIC_GetEngineLocalizationPaths();
	static TArray<struct FString> STATIC_GetEditorLocalizationPaths();
	static struct FString STATIC_GetCleanFilename(const struct FString& InPath);
	static struct FString STATIC_GetBaseFilename(const struct FString& InPath, bool bRemovePath);
	static struct FString STATIC_GeneratedConfigDir();
	static struct FString STATIC_GameUserDeveloperDir();
	static struct FString STATIC_GameSourceDir();
	static struct FString STATIC_GameDevelopersDir();
	static struct FString STATIC_GameAgnosticSavedDir();
	static bool STATIC_FileExists(const struct FString& InPath);
	static struct FString STATIC_FeaturePackDir();
	static struct FString STATIC_EnterprisePluginsDir();
	static struct FString STATIC_EnterpriseFeaturePackDir();
	static struct FString STATIC_EnterpriseDir();
	static struct FString STATIC_EngineVersionAgnosticUserDir();
	static struct FString STATIC_EngineUserDir();
	static struct FString STATIC_EngineSourceDir();
	static struct FString STATIC_EngineSavedDir();
	static struct FString STATIC_EnginePluginsDir();
	static struct FString STATIC_EngineIntermediateDir();
	static struct FString STATIC_EngineDir();
	static struct FString STATIC_EngineContentDir();
	static struct FString STATIC_EngineConfigDir();
	static bool STATIC_DirectoryExists(const struct FString& InPath);
	static struct FString STATIC_DiffDir();
	static struct FString STATIC_CreateTempFilename(const struct FString& Path, const struct FString& Prefix, const struct FString& Extension);
	static struct FString STATIC_ConvertToSandboxPath(const struct FString& InPath, const struct FString& InSandboxName);
	static struct FString STATIC_ConvertRelativePathToFull(const struct FString& InPath, const struct FString& InBasePath);
	static struct FString STATIC_ConvertFromSandboxPath(const struct FString& InPath, const struct FString& InSandboxName);
	static struct FString STATIC_Combine(TArray<struct FString> InPaths);
	static bool STATIC_CollapseRelativeDirectories(const struct FString& InPath, struct FString* OutPath);
	static struct FString STATIC_CloudDir();
	static struct FString STATIC_ChangeExtension(const struct FString& InPath, const struct FString& InNewExtension);
	static struct FString STATIC_BugItDir();
	static struct FString STATIC_AutomationTransientDir();
	static struct FString STATIC_AutomationLogDir();
	static struct FString STATIC_AutomationDir();
};

// Class Engine.PlatformGameInstance
// 0x01D8 (FullSize[0x0238] - InheritedSize[0x0060])
// LastOffsetWithSize(0x0060)
#define PADDING_05AF - 0x0000 // Minimum to subtract -> (0108)
class UPlatformGameInstance : public UGameInstance
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0108 PADDING_05AF, struct FScriptMulticastDelegate,                                       ApplicationWillDeactivateDelegate);                        // 0x0168(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0118 PADDING_05AF, struct FScriptMulticastDelegate,                                       ApplicationHasReactivatedDelegate);                        // 0x0178(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0128 PADDING_05AF, struct FScriptMulticastDelegate,                                       ApplicationWillEnterBackgroundDelegate);                   // 0x0188(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0138 PADDING_05AF, struct FScriptMulticastDelegate,                                       ApplicationHasEnteredForegroundDelegate);                  // 0x0198(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0148 PADDING_05AF, struct FScriptMulticastDelegate,                                       ApplicationWillTerminateDelegate);                         // 0x01A8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0158 PADDING_05AF, struct FScriptMulticastDelegate,                                       ApplicationShouldUnloadResourcesDelegate);                 // 0x01B8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0168 PADDING_05AF, struct FScriptMulticastDelegate,                                       ApplicationReceivedStartupArgumentsDelegate);              // 0x01C8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0178 PADDING_05AF, struct FScriptMulticastDelegate,                                       ApplicationRegisteredForRemoteNotificationsDelegate);      // 0x01D8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0188 PADDING_05AF, struct FScriptMulticastDelegate,                                       ApplicationRegisteredForUserNotificationsDelegate);        // 0x01E8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0198 PADDING_05AF, struct FScriptMulticastDelegate,                                       ApplicationFailedToRegisterForRemoteNotificationsDelegate); // 0x01F8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01A8 PADDING_05AF, struct FScriptMulticastDelegate,                                       ApplicationReceivedRemoteNotificationDelegate);            // 0x0208(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01B8 PADDING_05AF, struct FScriptMulticastDelegate,                                       ApplicationReceivedLocalNotificationDelegate);             // 0x0218(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01C8 PADDING_05AF, struct FScriptMulticastDelegate,                                       ApplicationReceivedScreenOrientationChangedNotificationDelegate); // 0x0228(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PlatformGameInstance");
		return ptr;
	}


};

// Class Engine.BlueprintPlatformLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UBlueprintPlatformLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BlueprintPlatformLibrary");
		return ptr;
	}


	static int STATIC_ScheduleLocalNotificationFromNow(int inSecondsFromNow, const struct FText& Title, const struct FText& Body, const struct FText& Action, const struct FString& ActivationEvent);
	static void STATIC_ScheduleLocalNotificationBadgeFromNow(int inSecondsFromNow, const struct FString& ActivationEvent);
	static int STATIC_ScheduleLocalNotificationBadgeAtTime(const struct FDateTime& FireDateTime, bool LocalTime, const struct FString& ActivationEvent);
	static int STATIC_ScheduleLocalNotificationAtTime(const struct FDateTime& FireDateTime, bool LocalTime, const struct FText& Title, const struct FText& Body, const struct FText& Action, const struct FString& ActivationEvent);
	static void STATIC_GetLaunchNotification(bool* NotificationLaunchedApp, struct FString* ActivationEvent, int* FireDate);
	static TEnumAsByte<EScreenOrientation> STATIC_GetDeviceOrientation();
	static void STATIC_ClearAllLocalNotifications();
	static void STATIC_CancelLocalNotificationById(int NotificationId);
	static void STATIC_CancelLocalNotification(const struct FString& ActivationEvent);
};

// Class Engine.BlueprintSetLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UBlueprintSetLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BlueprintSetLibrary");
		return ptr;
	}


	static void STATIC_SetSetPropertyByName(class UObject* Object, const struct FName& PropertyName);
	static void STATIC_Set_Union();
	static void STATIC_Set_ToArray(TArray<int>* Result);
	static void STATIC_Set_RemoveItems(TArray<int> Items);
	static bool STATIC_Set_Remove(int Item);
	static int STATIC_Set_Length();
	static void STATIC_Set_Intersection();
	static void STATIC_Set_Difference();
	static bool STATIC_Set_Contains(int ItemToFind);
	static void STATIC_Set_Clear();
	static void STATIC_Set_AddItems(TArray<int> NewItems);
	static void STATIC_Set_Add(int NewItem);
};

// Class Engine.BodySetup
// 0x020C (FullSize[0x0234] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05B2 - 0x0000 // Minimum to subtract -> (0000)
class UBodySetup : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05B2, struct FKAggregateGeom,                                                AggGeom);                                                  // 0x0028(0x0058)  (Edit, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_05B2, struct FName,                                                          BoneName);                                                 // 0x0080(0x0008)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_05B2, TEnumAsByte<EPhysicsType>,                                             PhysicsType);                                              // 0x0088(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0061 PADDING_05B2, unsigned char,                                                         bAlwaysFullAnimWeight);                                    // 0x0089(0x0001) BIT_FIELD (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0061 PADDING_05B2, unsigned char,                                                         bConsiderForBounds);                                       // 0x0089(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0061 PADDING_05B2, unsigned char,                                                         bMeshCollideAll);                                          // 0x0089(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0061 PADDING_05B2, unsigned char,                                                         bDoubleSidedGeometry);                                     // 0x0089(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0061 PADDING_05B2, unsigned char,                                                         bGenerateNonMirroredCollision);                            // 0x0089(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0061 PADDING_05B2, unsigned char,                                                         bSharedCookedData);                                        // 0x0089(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0061 PADDING_05B2, unsigned char,                                                         bGenerateMirroredCollision);                               // 0x0089(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0063 PADDING_05B2, TEnumAsByte<EBodyCollisionResponse>,                                   CollisionReponse);                                         // 0x008B(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0064 PADDING_05B2, TEnumAsByte<ECollisionTraceFlag>,                                      CollisionTraceFlag);                                       // 0x008C(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_05B2, class UPhysicalMaterial*,                                              PhysMaterial);                                             // 0x0090(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_05B2, struct FWalkableSlopeOverride,                                         WalkableSlopeOverride);                                    // 0x0098(0x0010)  (Edit, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E8 PADDING_05B2, struct FBodyInstance,                                                  DefaultInstance);                                          // 0x0110(0x0110)  (Edit, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0200 PADDING_05B2, struct FVector,                                                        BuildScale3D);                                             // 0x0228(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BodySetup");
		return ptr;
	}


};

// Class Engine.BoneMaskFilter
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05B3 - 0x0000 // Minimum to subtract -> (0000)
class UBoneMaskFilter : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05B3, TArray<struct FInputBlendPose>,                                        BlendPoses);                                               // 0x0028(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BoneMaskFilter");
		return ptr;
	}


};

// Class Engine.BookmarkBase
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UBookmarkBase : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BookmarkBase");
		return ptr;
	}


};

// Class Engine.BookMark
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05B5 - 0x0000 // Minimum to subtract -> (0000)
class UBookMark : public UBookmarkBase
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05B5, struct FVector,                                                        Location);                                                 // 0x0028(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05B5, struct FRotator,                                                       Rotation);                                                 // 0x0034(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_05B5, TArray<struct FString>,                                                HiddenLevels);                                             // 0x0040(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BookMark");
		return ptr;
	}


};

// Class Engine.BookMark2D
// 0x000C (FullSize[0x0034] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05B6 - 0x0000 // Minimum to subtract -> (0000)
class UBookMark2D : public UBookmarkBase
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05B6, float,                                                                 Zoom2D);                                                   // 0x0028(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_05B6, struct FIntPoint,                                                      Location);                                                 // 0x002C(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BookMark2D");
		return ptr;
	}


};

// Class Engine.ReflectionCapture
// 0x0018 (FullSize[0x0250] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_05B7 - 0x0000 // Minimum to subtract -> (0010)
class AReflectionCapture : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_05B7, class UReflectionCaptureComponent*,                                    CaptureComponent);                                         // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ReflectionCapture");
		return ptr;
	}


};

// Class Engine.BoxReflectionCapture
// 0x0000 (FullSize[0x0250] - InheritedSize[0x0250])
// LastOffsetWithSize(0x0250)
class ABoxReflectionCapture : public AReflectionCapture
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BoxReflectionCapture");
		return ptr;
	}


};

// Class Engine.ReflectionCaptureComponent
// 0x00D4 (FullSize[0x0254] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_05B9 - 0x0000 // Minimum to subtract -> (0089)
class UReflectionCaptureComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0089 PADDING_05B9, class UBillboardComponent*,                                            CaptureOffsetComponent);                                   // 0x0218(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0091 PADDING_05B9, EReflectionSourceType,                                                 ReflectionSourceType);                                     // 0x0220(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0099 PADDING_05B9, class UTextureCube*,                                                   Cubemap);                                                  // 0x0228(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A1 PADDING_05B9, float,                                                                 SourceCubemapAngle);                                       // 0x0230(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_05B9, float,                                                                 Brightness);                                               // 0x0234(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A9 PADDING_05B9, struct FVector,                                                        CaptureOffset);                                            // 0x0238(0x000C)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B5 PADDING_05B9, struct FGuid,                                                          MapBuildDataId);                                           // 0x0244(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ReflectionCaptureComponent");
		return ptr;
	}


};

// Class Engine.BoxReflectionCaptureComponent
// 0x0054 (FullSize[0x02A8] - InheritedSize[0x0254])
// LastOffsetWithSize(0x0254)
#define PADDING_05BA - 0x0000 // Minimum to subtract -> (003C)
class UBoxReflectionCaptureComponent : public UReflectionCaptureComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x003C PADDING_05BA, float,                                                                 BoxTransitionDistance);                                    // 0x0290(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_05BA, class UBoxComponent*,                                                  PreviewInfluenceBox);                                      // 0x0298(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004C PADDING_05BA, class UBoxComponent*,                                                  PreviewCaptureBox);                                        // 0x02A0(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BoxReflectionCaptureComponent");
		return ptr;
	}


};

// Class Engine.Breakpoint
// 0x0011 (FullSize[0x0039] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05BB - 0x0000 // Minimum to subtract -> (0000)
class UBreakpoint : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05BB, unsigned char,                                                         bEnabled);                                                 // 0x0028(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0008 PADDING_05BB, class UEdGraphNode*,                                                   Node);                                                     // 0x0030(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05BB, unsigned char,                                                         bStepOnce);                                                // 0x0038(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05BB, unsigned char,                                                         bStepOnce_WasPreviouslyDisabled);                          // 0x0038(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05BB, unsigned char,                                                         bStepOnce_RemoveAfterHit);                                 // 0x0038(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Breakpoint");
		return ptr;
	}


};

// Class Engine.BrushBuilder
// 0x0051 (FullSize[0x0079] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05BC - 0x0000 // Minimum to subtract -> (0000)
class UBrushBuilder : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05BC, struct FString,                                                        BitmapFilename);                                           // 0x0028(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05BC, struct FString,                                                        Tooltip);                                                  // 0x0038(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_05BC, unsigned char,                                                         NotifyBadParams);                                          // 0x0048(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_05BC, TArray<struct FVector>,                                                Vertices);                                                 // 0x0050(0x0010)  (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0038 PADDING_05BC, TArray<struct FBuilderPoly>,                                           Polys);                                                    // 0x0060(0x0010)  (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0048 PADDING_05BC, struct FName,                                                          Layer);                                                    // 0x0070(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0050 PADDING_05BC, unsigned char,                                                         MergeCoplanars);                                           // 0x0078(0x0001) BIT_FIELD (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BrushBuilder");
		return ptr;
	}


};

// Class Engine.BrushComponent
// 0x0013 (FullSize[0x0418] - InheritedSize[0x0405])
// LastOffsetWithSize(0x0408)
#define PADDING_05BD - 0x0000 // Minimum to subtract -> (0000)
class UBrushComponent : public UPrimitiveComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05BD, class UModel*,                                                         Brush);                                                    // 0x0408(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_05BD, class UBodySetup*,                                                     BrushBodySetup);                                           // 0x0410(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BrushComponent");
		return ptr;
	}


};

// Class Engine.BrushShape
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
class ABrushShape : public ABrush
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.BrushShape");
		return ptr;
	}


};

// Class Engine.ButtonStyleAsset
// 0x0278 (FullSize[0x02A0] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05BF - 0x0000 // Minimum to subtract -> (0000)
class UButtonStyleAsset : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05BF, struct FButtonStyle,                                                   ButtonStyle);                                              // 0x0028(0x0278)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ButtonStyleAsset");
		return ptr;
	}


};

// Class Engine.CameraAnim
// 0x056C (FullSize[0x0594] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05C0 - 0x0000 // Minimum to subtract -> (0000)
class UCameraAnim : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05C0, class UInterpGroup*,                                                   CameraInterpGroup);                                        // 0x0028(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_05C0, float,                                                                 AnimLength);                                               // 0x0030(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05C0, struct FBox,                                                           BoundingBox);                                              // 0x0034(0x001C)  (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_05C0, unsigned char,                                                         bRelativeToInitialTransform);                              // 0x0050(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_05C0, unsigned char,                                                         bRelativeToInitialFOV);                                    // 0x0050(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_05C0, float,                                                                 BaseFOV);                                                  // 0x0054(0x0004)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_05C0, struct FPostProcessSettings,                                           BasePostProcessSettings);                                  // 0x0060(0x0530)  (NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0568 PADDING_05C0, float,                                                                 BasePostProcessBlendWeight);                               // 0x0590(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CameraAnim");
		return ptr;
	}


};

// Class Engine.CameraAnimInst
// 0x0051 (FullSize[0x0079] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05C1 - 0x0000 // Minimum to subtract -> (0000)
class UCameraAnimInst : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05C1, class UCameraAnim*,                                                    CamAnim);                                                  // 0x0028(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_05C1, class UInterpGroupInst*,                                               InterpGroupInst);                                          // 0x0030(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0028 PADDING_05C1, float,                                                                 PlayRate);                                                 // 0x0050(0x0004)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_05C1, class UInterpTrackMove*,                                               MoveTrack);                                                // 0x0068(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_05C1, class UInterpTrackInstMove*,                                           MoveInst);                                                 // 0x0070(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_05C1, TEnumAsByte<ECameraAnimPlaySpace>,                                     PlaySpace);                                                // 0x0078(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CameraAnimInst");
		return ptr;
	}


	void Stop(bool bImmediate);
	void SetScale(float NewDuration);
	void SetDuration(float NewDuration);
};

// Class Engine.CameraBlockingVolume
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
class ACameraBlockingVolume : public AVolume
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CameraBlockingVolume");
		return ptr;
	}


};

// Class Engine.CameraModifier
// 0x001C (FullSize[0x0044] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05C3 - 0x0000 // Minimum to subtract -> (0000)
class UCameraModifier : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05C3, unsigned char,                                                         bDebug);                                                   // 0x0028(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_000(0x0000 PADDING_05C3, unsigned char,                                                         bExclusive);                                               // 0x0028(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_05C3, unsigned char,                                                         Priority);                                                 // 0x002C(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_05C3, class APlayerCameraManager*,                                           CameraOwner);                                              // 0x0030(0x0008)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05C3, float,                                                                 AlphaInTime);                                              // 0x0038(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05C3, float,                                                                 AlphaOutTime);                                             // 0x003C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0018 PADDING_05C3, float,                                                                 Alpha);                                                    // 0x0040(0x0004)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CameraModifier");
		return ptr;
	}


	bool IsDisabled();
	class AActor* GetViewTarget();
	void EnableModifier();
	void DisableModifier(bool bImmediate);
	void BlueprintModifyPostProcess(float DeltaTime, float* PostProcessBlendWeight, struct FPostProcessSettings* PostProcessSettings);
	void BlueprintModifyCamera(float DeltaTime, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, float FOV, struct FVector* NewViewLocation, struct FRotator* NewViewRotation, float* NewFOV);
};

// Class Engine.CameraModifier_CameraShake
// 0x0068 (FullSize[0x00AC] - InheritedSize[0x0044])
// LastOffsetWithSize(0x0044)
#define PADDING_05C4 - 0x0000 // Minimum to subtract -> (0004)
class UCameraModifier_CameraShake : public UCameraModifier
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_05C4, TArray<class UCameraShake*>,                                           ActiveShakes);                                             // 0x0048(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05C4, TMap<class UClass* COMMA struct FPooledCameraShakes>,                  ExpiredPooledShakesMap);                                   // 0x0058(0x0050)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0064 PADDING_05C4, float,                                                                 SplitScreenShakeScale);                                    // 0x00A8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CameraModifier_CameraShake");
		return ptr;
	}


};

// Class Engine.CameraShake
// 0x0130 (FullSize[0x0158] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05C5 - 0x0000 // Minimum to subtract -> (0000)
class UCameraShake : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05C5, unsigned char,                                                         bSingleInstance);                                          // 0x0028(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_05C5, float,                                                                 OscillationDuration);                                      // 0x002C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_05C5, float,                                                                 OscillationBlendInTime);                                   // 0x0030(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05C5, float,                                                                 OscillationBlendOutTime);                                  // 0x0034(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05C5, struct FROscillator,                                                   RotOscillation);                                           // 0x0038(0x0024)  (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_05C5, struct FVOscillator,                                                   LocOscillation);                                           // 0x005C(0x0024)  (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_05C5, struct FFOscillator,                                                   FOVOscillation);                                           // 0x0080(0x000C)  (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0064 PADDING_05C5, float,                                                                 AnimPlayRate);                                             // 0x008C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_05C5, float,                                                                 AnimScale);                                                // 0x0090(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_05C5, float,                                                                 AnimBlendInTime);                                          // 0x0094(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_05C5, float,                                                                 AnimBlendOutTime);                                         // 0x0098(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_05C5, float,                                                                 RandomAnimSegmentDuration);                                // 0x009C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_05C5, class UCameraAnim*,                                                    Anim);                                                     // 0x00A0(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_05C5, unsigned char,                                                         bRandomAnimSegment);                                       // 0x00A8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_05C5, class APlayerCameraManager*,                                           CameraOwner);                                              // 0x00C0(0x0008)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0120 PADDING_05C5, float,                                                                 ShakeScale);                                               // 0x0148(0x0004)  (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0124 PADDING_05C5, float,                                                                 OscillatorTimeRemaining);                                  // 0x014C(0x0004)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0128 PADDING_05C5, class UCameraAnimInst*,                                                AnimInst);                                                 // 0x0150(0x0008)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CameraShake");
		return ptr;
	}


	void ReceiveStopShake(bool bImmediately);
	void ReceivePlayShake(float Scale);
	bool ReceiveIsFinished();
	void BlueprintUpdateCameraShake(float DeltaTime, float Alpha, const struct FMinimalViewInfo& POV, struct FMinimalViewInfo* ModifiedPOV);
};

// Class Engine.Canvas
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05C6 - 0x0000 // Minimum to subtract -> (0000)
class UCanvas : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05C6, float,                                                                 OrgX);                                                     // 0x0028(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_05C6, float,                                                                 OrgY);                                                     // 0x002C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_05C6, float,                                                                 ClipX);                                                    // 0x0030(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05C6, float,                                                                 ClipY);                                                    // 0x0034(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05C6, struct FColor,                                                         DrawColor);                                                // 0x0038(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05C6, unsigned char,                                                         bCenterX);                                                 // 0x003C(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05C6, unsigned char,                                                         bCenterY);                                                 // 0x003C(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05C6, unsigned char,                                                         bNoSmooth);                                                // 0x003C(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_05C6, int,                                                                   SizeX);                                                    // 0x0040(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_05C6, int,                                                                   SizeY);                                                    // 0x0044(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_05C6, struct FPlane,                                                         ColorModulate);                                            // 0x0050(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_05C6, class UTexture2D*,                                                     DefaultTexture);                                           // 0x0060(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_05C6, class UTexture2D*,                                                     GradientTexture0);                                         // 0x0068(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_05C6, class UReporterGraph*,                                                 ReporterGraph);                                            // 0x0070(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Canvas");
		return ptr;
	}


	struct FVector2D K2_TextSize(class UFont* RenderFont, const struct FString& RenderText, const struct FVector2D& Scale);
	struct FVector2D K2_StrLen(class UFont* RenderFont, const struct FString& RenderText);
	struct FVector K2_Project(const struct FVector& WorldLocation);
	void K2_DrawTriangle(class UTexture* RenderTexture, TArray<struct FCanvasUVTri> Triangles);
	void K2_DrawTexture(class UTexture* RenderTexture, const struct FVector2D& ScreenPosition, const struct FVector2D& ScreenSize, const struct FVector2D& CoordinatePosition, const struct FVector2D& CoordinateSize, const struct FLinearColor& RenderColor, TEnumAsByte<EBlendMode> BlendMode, float Rotation, const struct FVector2D& PivotPoint);
	void K2_DrawText(class UFont* RenderFont, const struct FString& RenderText, const struct FVector2D& ScreenPosition, const struct FVector2D& Scale, const struct FLinearColor& RenderColor, float Kerning, const struct FLinearColor& ShadowColor, const struct FVector2D& ShadowOffset, bool bCentreX, bool bCentreY, bool bOutlined, const struct FLinearColor& OutlineColor);
	void K2_DrawPolygon(class UTexture* RenderTexture, const struct FVector2D& ScreenPosition, const struct FVector2D& Radius, int NumberOfSides, const struct FLinearColor& RenderColor);
	void K2_DrawMaterialTriangle(class UMaterialInterface* RenderMaterial, TArray<struct FCanvasUVTri> Triangles);
	void K2_DrawMaterial(class UMaterialInterface* RenderMaterial, const struct FVector2D& ScreenPosition, const struct FVector2D& ScreenSize, const struct FVector2D& CoordinatePosition, const struct FVector2D& CoordinateSize, float Rotation, const struct FVector2D& PivotPoint);
	void K2_DrawLine(const struct FVector2D& ScreenPositionA, const struct FVector2D& ScreenPositionB, float Thickness, const struct FLinearColor& RenderColor);
	void K2_DrawBox(const struct FVector2D& ScreenPosition, const struct FVector2D& ScreenSize, float Thickness, const struct FLinearColor& RenderColor);
	void K2_DrawBorder(class UTexture* BorderTexture, class UTexture* BackgroundTexture, class UTexture* LeftBorderTexture, class UTexture* RightBorderTexture, class UTexture* TopBorderTexture, class UTexture* BottomBorderTexture, const struct FVector2D& ScreenPosition, const struct FVector2D& ScreenSize, const struct FVector2D& CoordinatePosition, const struct FVector2D& CoordinateSize, const struct FLinearColor& RenderColor, const struct FVector2D& BorderScale, const struct FVector2D& BackgroundScale, float Rotation, const struct FVector2D& PivotPoint, const struct FVector2D& CornerSize);
	void K2_Deproject(const struct FVector2D& ScreenPosition, struct FVector* WorldOrigin, struct FVector* WorldDirection);
};

// Class Engine.TextureRenderTarget
// 0x005C (FullSize[0x00D4] - InheritedSize[0x0078])
// LastOffsetWithSize(0x0078)
#define PADDING_05C7 - 0x0000 // Minimum to subtract -> (0058)
class UTextureRenderTarget : public UTexture
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0058 PADDING_05C7, float,                                                                 TargetGamma);                                              // 0x00D0(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TextureRenderTarget");
		return ptr;
	}


};

// Class Engine.TextureRenderTarget2D
// 0x0025 (FullSize[0x00F9] - InheritedSize[0x00D4])
// LastOffsetWithSize(0x00D4)
#define PADDING_05C8 - 0x0000 // Minimum to subtract -> (0004)
class UTextureRenderTarget2D : public UTextureRenderTarget
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_05C8, int,                                                                   SizeX);                                                    // 0x00D8(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_05C8, int,                                                                   SizeY);                                                    // 0x00DC(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05C8, struct FLinearColor,                                                   ClearColor);                                               // 0x00E0(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_05C8, TEnumAsByte<ETextureAddress>,                                          AddressX);                                                 // 0x00F0(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001D PADDING_05C8, TEnumAsByte<ETextureAddress>,                                          AddressY);                                                 // 0x00F1(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001E PADDING_05C8, unsigned char,                                                         bForceLinearGamma);                                        // 0x00F2(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001E PADDING_05C8, unsigned char,                                                         bHDR);                                                     // 0x00F2(0x0001) BIT_FIELD (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001E PADDING_05C8, unsigned char,                                                         bGPUSharedFlag);                                           // 0x00F2(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_05C8, TEnumAsByte<ETextureRenderTargetFormat>,                               RenderTargetFormat);                                       // 0x00F3(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_05C8, unsigned char,                                                         bAutoGenerateMips);                                        // 0x00F4(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0021 PADDING_05C8, TEnumAsByte<ETextureFilter>,                                           MipsSamplerFilter);                                        // 0x00F5(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0022 PADDING_05C8, TEnumAsByte<ETextureAddress>,                                          MipsAddressU);                                             // 0x00F6(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_05C8, TEnumAsByte<ETextureAddress>,                                          MipsAddressV);                                             // 0x00F7(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_05C8, TEnumAsByte<EPixelFormat>,                                             OverrideFormat);                                           // 0x00F8(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TextureRenderTarget2D");
		return ptr;
	}


};

// Class Engine.CanvasRenderTarget2D
// 0x0020 (FullSize[0x0119] - InheritedSize[0x00F9])
// LastOffsetWithSize(0x00F9)
#define PADDING_05C9 - 0x0000 // Minimum to subtract -> (0007)
class UCanvasRenderTarget2D : public UTextureRenderTarget2D
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_05C9, struct FScriptMulticastDelegate,                                       OnCanvasRenderTargetUpdate);                               // 0x0100(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_05C9, TWeakObjectPtr<class UWorld>,                                          World);                                                    // 0x0110(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x001F PADDING_05C9, bool,                                                                  bShouldClearRenderTargetOnReceiveUpdate);                  // 0x0118(0x0001)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CanvasRenderTarget2D");
		return ptr;
	}


	void UpdateResource();
	void ReceiveUpdate(class UCanvas* Canvas, int Width, int Height);
	void GetSize(int* Width, int* Height);
	static class UCanvasRenderTarget2D* STATIC_CreateCanvasRenderTarget2D(class UObject* WorldContextObject, class UClass* CanvasRenderTarget2DClass, int Width, int Height);
};

// Class Engine.CapsuleComponent
// 0x0008 (FullSize[0x0428] - InheritedSize[0x0420])
// LastOffsetWithSize(0x0420)
#define PADDING_05CA - 0x0000 // Minimum to subtract -> (0000)
class UCapsuleComponent : public UShapeComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05CA, float,                                                                 CapsuleHalfHeight);                                        // 0x0420(0x0004)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0004 PADDING_05CA, float,                                                                 CapsuleRadius);                                            // 0x0424(0x0004)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CapsuleComponent");
		return ptr;
	}


	void SetCapsuleSize(float InRadius, float InHalfHeight, bool bUpdateOverlaps);
	void SetCapsuleRadius(float Radius, bool bUpdateOverlaps);
	void SetCapsuleHalfHeight(float HalfHeight, bool bUpdateOverlaps);
	void GetUnscaledCapsuleSize_WithoutHemisphere(float* OutRadius, float* OutHalfHeightWithoutHemisphere);
	void GetUnscaledCapsuleSize(float* OutRadius, float* OutHalfHeight);
	float GetUnscaledCapsuleRadius();
	float GetUnscaledCapsuleHalfHeight_WithoutHemisphere();
	float GetUnscaledCapsuleHalfHeight();
	float GetShapeScale();
	void GetScaledCapsuleSize_WithoutHemisphere(float* OutRadius, float* OutHalfHeightWithoutHemisphere);
	void GetScaledCapsuleSize(float* OutRadius, float* OutHalfHeight);
	float GetScaledCapsuleRadius();
	float GetScaledCapsuleHalfHeight_WithoutHemisphere();
	float GetScaledCapsuleHalfHeight();
};

// Class Engine.ChaosPhysicalMaterial
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05CB - 0x0000 // Minimum to subtract -> (0000)
class UChaosPhysicalMaterial : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05CB, float,                                                                 Friction);                                                 // 0x0028(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_05CB, float,                                                                 Restitution);                                              // 0x002C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_05CB, float,                                                                 SleepingLinearVelocityThreshold);                          // 0x0030(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05CB, float,                                                                 SleepingAngularVelocityThreshold);                         // 0x0034(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ChaosPhysicalMaterial");
		return ptr;
	}


};

// Class Engine.CheckBoxStyleAsset
// 0x0580 (FullSize[0x05A8] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05CC - 0x0000 // Minimum to subtract -> (0000)
class UCheckBoxStyleAsset : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05CC, struct FCheckBoxStyle,                                                 CheckBoxStyle);                                            // 0x0028(0x0580)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CheckBoxStyleAsset");
		return ptr;
	}


};

// Class Engine.ChildConnection
// 0x04E0 (FullSize[0x19A8] - InheritedSize[0x14C8])
// LastOffsetWithSize(0x14C8)
#define PADDING_05CD - 0x0000 // Minimum to subtract -> (04D8)
class UChildConnection : public UNetConnection
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x04D8 PADDING_05CD, class UNetConnection*,                                                 Parent);                                                   // 0x19A0(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ChildConnection");
		return ptr;
	}


};

// Class Engine.PlatformInterfaceBase
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05CE - 0x0000 // Minimum to subtract -> (0000)
class UPlatformInterfaceBase : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05CE, TArray<struct FDelegateArray>,                                         AllDelegates);                                             // 0x0028(0x0010)  (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PlatformInterfaceBase");
		return ptr;
	}


};

// Class Engine.CloudStorageBase
// 0x0011 (FullSize[0x0049] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_05CF - 0x0000 // Minimum to subtract -> (0000)
class UCloudStorageBase : public UPlatformInterfaceBase
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05CF, TArray<struct FString>,                                                LocalCloudFiles);                                          // 0x0038(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05CF, unsigned char,                                                         bSuppressDelegateCalls);                                   // 0x0048(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CloudStorageBase");
		return ptr;
	}


};

// Class Engine.CollisionProfile
// 0x0060 (FullSize[0x0088] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05D0 - 0x0000 // Minimum to subtract -> (0010)
class UCollisionProfile : public UDeveloperSettings
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_05D0, TArray<struct FCollisionResponseTemplate>,                             Profiles);                                                 // 0x0038(0x0010)  (ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0020 PADDING_05D0, TArray<struct FCustomChannelSetup>,                                    DefaultChannelResponses);                                  // 0x0048(0x0010)  (ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0030 PADDING_05D0, TArray<struct FCustomProfile>,                                         EditProfiles);                                             // 0x0058(0x0010)  (ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0040 PADDING_05D0, TArray<struct FRedirector>,                                            ProfileRedirects);                                         // 0x0068(0x0010)  (ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0050 PADDING_05D0, TArray<struct FRedirector>,                                            CollisionChannelRedirects);                                // 0x0078(0x0010)  (ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CollisionProfile");
		return ptr;
	}


};

// Class Engine.Commandlet
// 0x0051 (FullSize[0x0079] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05D1 - 0x0000 // Minimum to subtract -> (0000)
class UCommandlet : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05D1, struct FString,                                                        HelpDescription);                                          // 0x0028(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05D1, struct FString,                                                        HelpUsage);                                                // 0x0038(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_05D1, struct FString,                                                        HelpWebLink);                                              // 0x0048(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_05D1, TArray<struct FString>,                                                HelpParamNames);                                           // 0x0058(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_05D1, TArray<struct FString>,                                                HelpParamDescriptions);                                    // 0x0068(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_05D1, unsigned char,                                                         IsServer);                                                 // 0x0078(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_05D1, unsigned char,                                                         IsClient);                                                 // 0x0078(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_05D1, unsigned char,                                                         IsEditor);                                                 // 0x0078(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_05D1, unsigned char,                                                         LogToConsole);                                             // 0x0078(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_05D1, unsigned char,                                                         ShowErrorCount);                                           // 0x0078(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_05D1, unsigned char,                                                         ShowProgress);                                             // 0x0078(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Commandlet");
		return ptr;
	}


};

// Class Engine.ComponentDelegateBinding
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05D2 - 0x0000 // Minimum to subtract -> (0000)
class UComponentDelegateBinding : public UDynamicBlueprintBinding
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05D2, TArray<struct FBlueprintComponentDelegateBinding>,                     ComponentDelegateBindings);                                // 0x0028(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ComponentDelegateBinding");
		return ptr;
	}


};

// Class Engine.CurveTable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UCurveTable : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CurveTable");
		return ptr;
	}


};

// Class Engine.CompositeCurveTable
// 0x00A0 (FullSize[0x00C8] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05D4 - 0x0000 // Minimum to subtract -> (0078)
class UCompositeCurveTable : public UCurveTable
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0078 PADDING_05D4, TArray<class UCurveTable*>,                                            ParentTables);                                             // 0x00A0(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_05D4, TArray<class UCurveTable*>,                                            OldParentTables);                                          // 0x00B8(0x0010)  (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CompositeCurveTable");
		return ptr;
	}


};

// Class Engine.DataTable
// 0x0070 (FullSize[0x0098] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05D5 - 0x0000 // Minimum to subtract -> (0000)
class UDataTable : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05D5, class UScriptStruct*,                                                  RowStruct);                                                // 0x0028(0x0008)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_05D5, unsigned char,                                                         bStripFromClientBuilds);                                   // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_05D5, unsigned char,                                                         bIgnoreExtraFields);                                       // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_05D5, unsigned char,                                                         bIgnoreMissingFields);                                     // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_05D5, struct FString,                                                        ImportKeyField);                                           // 0x0088(0x0010)  (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DataTable");
		return ptr;
	}


};

// Class Engine.CompositeDataTable
// 0x0040 (FullSize[0x00D8] - InheritedSize[0x0098])
// LastOffsetWithSize(0x0098)
#define PADDING_05D6 - 0x0000 // Minimum to subtract -> (0018)
class UCompositeDataTable : public UDataTable
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0018 PADDING_05D6, TArray<class UDataTable*>,                                             ParentTables);                                             // 0x00B0(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_05D6, TArray<class UDataTable*>,                                             OldParentTables);                                          // 0x00C8(0x0010)  (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CompositeDataTable");
		return ptr;
	}


};

// Class Engine.ControlChannel
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
// LastOffsetWithSize(0x0030)
class UControlChannel : public UChannel
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ControlChannel");
		return ptr;
	}


};

// Class Engine.ControlRigInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UControlRigInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ControlRigInterface");
		return ptr;
	}


};

// Class Engine.StreamingSettings
// 0x0041 (FullSize[0x0069] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05D9 - 0x0000 // Minimum to subtract -> (0010)
class UStreamingSettings : public UDeveloperSettings
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_05D9, unsigned char,                                                         AsyncLoadingThreadEnabled);                                // 0x0038(0x0001) BIT_FIELD (Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05D9, unsigned char,                                                         WarnIfTimeLimitExceeded);                                  // 0x0038(0x0001) BIT_FIELD (Edit, Config, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05D9, float,                                                                 TimeLimitExceededMultiplier);                              // 0x003C(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0018 PADDING_05D9, float,                                                                 TimeLimitExceededMinTime);                                 // 0x0040(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x001C PADDING_05D9, int,                                                                   MinBulkDataSizeForAsyncLoading);                           // 0x0044(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0020 PADDING_05D9, unsigned char,                                                         UseBackgroundLevelStreaming);                              // 0x0048(0x0001) BIT_FIELD (Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0020 PADDING_05D9, unsigned char,                                                         AsyncLoadingUseFullTimeLimit);                             // 0x0048(0x0001) BIT_FIELD (Edit, Config, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0024 PADDING_05D9, float,                                                                 AsyncLoadingTimeLimit);                                    // 0x004C(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0028 PADDING_05D9, float,                                                                 PriorityAsyncLoadingExtraTime);                            // 0x0050(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x002C PADDING_05D9, float,                                                                 LevelStreamingActorsUpdateTimeLimit);                      // 0x0054(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0030 PADDING_05D9, float,                                                                 PriorityLevelStreamingActorsUpdateExtraTime);              // 0x0058(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0034 PADDING_05D9, int,                                                                   LevelStreamingComponentsRegistrationGranularity);          // 0x005C(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0038 PADDING_05D9, float,                                                                 LevelStreamingUnregisterComponentsTimeLimit);              // 0x0060(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x003C PADDING_05D9, int,                                                                   LevelStreamingComponentsUnregistrationGranularity);        // 0x0064(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0040 PADDING_05D9, unsigned char,                                                         EventDrivenLoaderEnabled);                                 // 0x0068(0x0001) BIT_FIELD (Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.StreamingSettings");
		return ptr;
	}


};

// Class Engine.GarbageCollectionSettings
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05DA - 0x0000 // Minimum to subtract -> (0010)
class UGarbageCollectionSettings : public UDeveloperSettings
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_05DA, float,                                                                 TimeBetweenPurgingPendingKillObjects);                     // 0x0038(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05DA, unsigned char,                                                         FlushStreamingOnGC);                                       // 0x003C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05DA, unsigned char,                                                         AllowParallelGC);                                          // 0x003C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05DA, unsigned char,                                                         IncrementalBeginDestroyEnabled);                           // 0x003C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05DA, unsigned char,                                                         MultithreadedDestructionEnabled);                          // 0x003C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05DA, unsigned char,                                                         CreateGCClusters);                                         // 0x003C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05DA, unsigned char,                                                         ActorClusteringEnabled);                                   // 0x003C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05DA, unsigned char,                                                         BlueprintClusteringEnabled);                               // 0x003C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05DA, unsigned char,                                                         UseDisregardForGCOnDedicatedServers);                      // 0x003C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0018 PADDING_05DA, int,                                                                   MinGCClusterSize);                                         // 0x0040(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x001C PADDING_05DA, int,                                                                   NumRetriesBeforeForcingGC);                                // 0x0044(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0020 PADDING_05DA, int,                                                                   MaxObjectsNotConsideredByGC);                              // 0x0048(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0024 PADDING_05DA, int,                                                                   SizeOfPermanentObjectPool);                                // 0x004C(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0028 PADDING_05DA, int,                                                                   MaxObjectsInGame);                                         // 0x0050(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x002C PADDING_05DA, int,                                                                   MaxObjectsInEditor);                                       // 0x0054(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.GarbageCollectionSettings");
		return ptr;
	}


};

// Class Engine.CullDistanceVolume
// 0x0011 (FullSize[0x0291] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
#define PADDING_05DB - 0x0000 // Minimum to subtract -> (0000)
class ACullDistanceVolume : public AVolume
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05DB, TArray<struct FCullDistanceSizePair>,                                  CullDistances);                                            // 0x0280(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05DB, unsigned char,                                                         bEnabled);                                                 // 0x0290(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CullDistanceVolume");
		return ptr;
	}


};

// Class Engine.CurveBase
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UCurveBase : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CurveBase");
		return ptr;
	}


	void GetValueRange(float* MinValue, float* MaxValue);
	void GetTimeRange(float* MinTime, float* MaxTime);
};

// Class Engine.CurveEdPresetCurve
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UCurveEdPresetCurve : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CurveEdPresetCurve");
		return ptr;
	}


};

// Class Engine.CurveFloat
// 0x0089 (FullSize[0x00B1] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05DE - 0x0000 // Minimum to subtract -> (0008)
class UCurveFloat : public UCurveBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_05DE, struct FRichCurve,                                                     FloatCurve);                                               // 0x0030(0x0080)  (NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_05DE, bool,                                                                  bIsEventCurve);                                            // 0x00B0(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CurveFloat");
		return ptr;
	}


	float GetFloatValue(float InTime);
};

// Class Engine.CurveLinearColor
// 0x0224 (FullSize[0x024C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05DF - 0x0000 // Minimum to subtract -> (0008)
class UCurveLinearColor : public UCurveBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_05DF, struct FRichCurve,                                                     FloatCurves[0x4]);                                         // 0x0030(0x0080)  (NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0208 PADDING_05DF, float,                                                                 AdjustHue);                                                // 0x0230(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x020C PADDING_05DF, float,                                                                 AdjustSaturation);                                         // 0x0234(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0210 PADDING_05DF, float,                                                                 AdjustBrightness);                                         // 0x0238(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0214 PADDING_05DF, float,                                                                 AdjustBrightnessCurve);                                    // 0x023C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0218 PADDING_05DF, float,                                                                 AdjustVibrance);                                           // 0x0240(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x021C PADDING_05DF, float,                                                                 AdjustMinAlpha);                                           // 0x0244(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0220 PADDING_05DF, float,                                                                 AdjustMaxAlpha);                                           // 0x0248(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CurveLinearColor");
		return ptr;
	}


	struct FLinearColor GetLinearColorValue(float InTime);
	struct FLinearColor GetClampedLinearColorValue(float InTime);
};

// Class Engine.Texture2D
// 0x006C (FullSize[0x00E4] - InheritedSize[0x0078])
// LastOffsetWithSize(0x0078)
#define PADDING_05E0 - 0x0000 // Minimum to subtract -> (0058)
class UTexture2D : public UTexture
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0058 PADDING_05E0, int,                                                                   LevelIndex);                                               // 0x00D0(0x0004)  (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005C PADDING_05E0, int,                                                                   FirstResourceMemMip);                                      // 0x00D4(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_05E0, unsigned char,                                                         bTemporarilyDisableStreaming);                             // 0x00D8(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0061 PADDING_05E0, TEnumAsByte<ETextureAddress>,                                          AddressX);                                                 // 0x00D9(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0062 PADDING_05E0, TEnumAsByte<ETextureAddress>,                                          AddressY);                                                 // 0x00DA(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0064 PADDING_05E0, struct FIntPoint,                                                      ImportedSize);                                             // 0x00DC(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Texture2D");
		return ptr;
	}


	int Blueprint_GetSizeY();
	int Blueprint_GetSizeX();
};

// Class Engine.CurveLinearColorAtlas
// 0x0034 (FullSize[0x0118] - InheritedSize[0x00E4])
// LastOffsetWithSize(0x00E4)
#define PADDING_05E1 - 0x0000 // Minimum to subtract -> (001C)
class UCurveLinearColorAtlas : public UTexture2D
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x001C PADDING_05E1, uint32_t,                                                              TextureSize);                                              // 0x0100(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_05E1, uint32_t,                                                              GradientPixelSize);                                        // 0x0104(0x0004)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_05E1, TArray<class UCurveLinearColor*>,                                      GradientCurves);                                           // 0x0108(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CurveLinearColorAtlas");
		return ptr;
	}


	bool GetCurvePosition(class UCurveLinearColor* InCurve, float* Position);
};

// Class Engine.CurveSourceInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UCurveSourceInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CurveSourceInterface");
		return ptr;
	}


	float GetCurveValue(const struct FName& CurveName);
	void GetCurves(TArray<struct FNamedCurveValue>* OutValues);
	struct FName GetBindingName();
};

// Class Engine.CurveVector
// 0x0188 (FullSize[0x01B0] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05E3 - 0x0000 // Minimum to subtract -> (0008)
class UCurveVector : public UCurveBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_05E3, struct FRichCurve,                                                     FloatCurves[0x3]);                                         // 0x0030(0x0080)  (NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.CurveVector");
		return ptr;
	}


	struct FVector GetVectorValue(float InTime);
};

// Class Engine.DataTableFunctionLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UDataTableFunctionLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DataTableFunctionLibrary");
		return ptr;
	}


	static void STATIC_GetDataTableRowNames(class UDataTable* table, TArray<struct FName>* OutRowNames);
	static bool STATIC_GetDataTableRowFromName(class UDataTable* table, const struct FName& RowName, struct FTableRowBase* OutRow);
	static TArray<struct FString> STATIC_GetDataTableColumnAsString(class UDataTable* DataTable, const struct FName& PropertyName);
	static void STATIC_EvaluateCurveTableRow(class UCurveTable* CurveTable, const struct FName& RowName, float InXY, TEnumAsByte<EEvaluateCurveTableResult>* OutResult, float* OutXY, const struct FString& ContextString);
	static bool STATIC_DoesDataTableRowExist(class UDataTable* table, const struct FName& RowName);
};

// Class Engine.DebugCameraController
// 0x00D4 (FullSize[0x0660] - InheritedSize[0x058C])
// LastOffsetWithSize(0x058C)
#define PADDING_05E5 - 0x0000 // Minimum to subtract -> (000C)
class ADebugCameraController : public APlayerController
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x000C PADDING_05E5, unsigned char,                                                         bShowSelectedInfo);                                        // 0x0598(0x0001) BIT_FIELD (Config, GlobalConfig, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05E5, unsigned char,                                                         bIsFrozenRendering);                                       // 0x0598(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05E5, unsigned char,                                                         bIsOrbitingSelectedActor);                                 // 0x0598(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05E5, unsigned char,                                                         bOrbitPivotUseCenter);                                     // 0x0598(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05E5, unsigned char,                                                         bEnableBufferVisualization);                               // 0x0598(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05E5, unsigned char,                                                         bEnableBufferVisualizationFullMode);                       // 0x0598(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05E5, unsigned char,                                                         bIsBufferVisualizationInputSetup);                         // 0x0598(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05E5, unsigned char,                                                         bLastDisplayEnabled);                                      // 0x0598(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05E5, class UDrawFrustumComponent*,                                          DrawFrustum);                                              // 0x05A0(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_05E5, class AActor*,                                                         SelectedActor);                                            // 0x05A8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_05E5, class UPrimitiveComponent*,                                            SelectedComponent);                                        // 0x05B0(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_05E5, struct FHitResult,                                                     SelectedHitPoint);                                         // 0x05B8(0x0088)  (IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B4 PADDING_05E5, class APlayerController*,                                              OriginalControllerRef);                                    // 0x0640(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BC PADDING_05E5, class UPlayer*,                                                        OriginalPlayer);                                           // 0x0648(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C4 PADDING_05E5, float,                                                                 SpeedScale);                                               // 0x0650(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C8 PADDING_05E5, float,                                                                 InitialMaxSpeed);                                          // 0x0654(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00CC PADDING_05E5, float,                                                                 InitialAccel);                                             // 0x0658(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_05E5, float,                                                                 InitialDecel);                                             // 0x065C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DebugCameraController");
		return ptr;
	}


	void ToggleDisplay();
	void ShowDebugSelectedInfo();
	void SetPawnMovementSpeedScale(float NewSpeedScale);
	void ReceiveOnDeactivate(class APlayerController* RestoredPC);
	void ReceiveOnActorSelected(class AActor* NewSelectedActor, const struct FVector& SelectHitLocation, const struct FVector& SelectHitNormal, const struct FHitResult& Hit);
	void ReceiveOnActivate(class APlayerController* OriginalPC);
	class AActor* GetSelectedActor();
};

// Class Engine.DebugCameraControllerSettings
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05E6 - 0x0000 // Minimum to subtract -> (0010)
class UDebugCameraControllerSettings : public UDeveloperSettings
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_05E6, TArray<struct FDebugCameraControllerSettingsViewModeIndex>,            CycleViewModes);                                           // 0x0038(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DebugCameraControllerSettings");
		return ptr;
	}


};

// Class Engine.DebugCameraHUD
// 0x0070 (FullSize[0x0338] - InheritedSize[0x02C8])
// LastOffsetWithSize(0x02C8)
class ADebugCameraHUD : public AHUD
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DebugCameraHUD");
		return ptr;
	}


};

// Class Engine.DebugDrawService
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UDebugDrawService : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DebugDrawService");
		return ptr;
	}


};

// Class Engine.DecalActor
// 0x0018 (FullSize[0x0250] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_05E9 - 0x0000 // Minimum to subtract -> (0010)
class ADecalActor : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_05E9, class UDecalComponent*,                                                Decal);                                                    // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DecalActor");
		return ptr;
	}


	void SetDecalMaterial(class UMaterialInterface* NewDecalMaterial);
	class UMaterialInterface* GetDecalMaterial();
	class UMaterialInstanceDynamic* CreateDynamicMaterialInstance();
};

// Class Engine.DecalComponent
// 0x00C8 (FullSize[0x0248] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_05EA - 0x0000 // Minimum to subtract -> (0089)
class UDecalComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0089 PADDING_05EA, class UMaterialInterface*,                                             DecalMaterial);                                            // 0x0218(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0091 PADDING_05EA, int,                                                                   SortOrder);                                                // 0x0220(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0095 PADDING_05EA, float,                                                                 FadeScreenSize);                                           // 0x0224(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0099 PADDING_05EA, float,                                                                 FadeStartDelay);                                           // 0x0228(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009D PADDING_05EA, float,                                                                 FadeDuration);                                             // 0x022C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A1 PADDING_05EA, float,                                                                 FadeInDuration);                                           // 0x0230(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_05EA, float,                                                                 FadeInStartDelay);                                         // 0x0234(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A9 PADDING_05EA, unsigned char,                                                         bDestroyOwnerAfterFade);                                   // 0x0238(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_05EA, struct FVector,                                                        DecalSize);                                                // 0x023C(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DecalComponent");
		return ptr;
	}


	void SetSortOrder(int Value);
	void SetFadeScreenSize(float NewFadeScreenSize);
	void SetFadeOut(float StartDelay, float Duration, bool DestroyOwnerAfterFade);
	void SetFadeIn(float StartDelay, float Duaration);
	void SetDecalMaterial(class UMaterialInterface* NewDecalMaterial);
	float GetFadeStartDelay();
	float GetFadeInStartDelay();
	float GetFadeInDuration();
	float GetFadeDuration();
	class UMaterialInterface* GetDecalMaterial();
	class UMaterialInstanceDynamic* CreateDynamicMaterialInstance();
};

// Class Engine.DefaultPhysicsVolume
// 0x0003 (FullSize[0x0290] - InheritedSize[0x028D])
// LastOffsetWithSize(0x028D)
class ADefaultPhysicsVolume : public APhysicsVolume
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DefaultPhysicsVolume");
		return ptr;
	}


};

// Class Engine.DemoNetConnection
// 0x04D8 (FullSize[0x19A0] - InheritedSize[0x14C8])
// LastOffsetWithSize(0x14C8)
class UDemoNetConnection : public UNetConnection
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DemoNetConnection");
		return ptr;
	}


};

// Class Engine.DemoNetDriver
// 0x0578 (FullSize[0x0CA0] - InheritedSize[0x0728])
// LastOffsetWithSize(0x0728)
#define PADDING_05ED - 0x0000 // Minimum to subtract -> (0118)
class UDemoNetDriver : public UNetDriver
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0118 PADDING_05ED, TMap<struct FString COMMA struct FRollbackNetStartupActorInfo>,        RollbackNetStartupActors);                                 // 0x0840(0x0050)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x051C PADDING_05ED, float,                                                                 CheckpointSaveMaxMSPerFrame);                              // 0x0C44(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0550 PADDING_05ED, TArray<struct FMulticastRecordOptions>,                                MulticastRecordOptions);                                   // 0x0C78(0x0010)  (ZeroConstructor, Config, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0560 PADDING_05ED, bool,                                                                  bIsLocalReplay);                                           // 0x0C88(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0568 PADDING_05ED, TArray<class APlayerController*>,                                      SpectatorControllers);                                     // 0x0C90(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DemoNetDriver");
		return ptr;
	}


};

// Class Engine.PendingNetGame
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05EE - 0x0000 // Minimum to subtract -> (0008)
class UPendingNetGame : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_05EE, class UNetDriver*,                                                     NetDriver);                                                // 0x0030(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05EE, class UDemoNetDriver*,                                                 DemoNetDriver);                                            // 0x0038(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PendingNetGame");
		return ptr;
	}


};

// Class Engine.DemoPendingNetGame
// 0x0080 (FullSize[0x00C0] - InheritedSize[0x0040])
// LastOffsetWithSize(0x0040)
class UDemoPendingNetGame : public UPendingNetGame
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DemoPendingNetGame");
		return ptr;
	}


};

// Class Engine.DestructibleInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UDestructibleInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DestructibleInterface");
		return ptr;
	}


};

// Class Engine.TextureLODSettings
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05F1 - 0x0000 // Minimum to subtract -> (0000)
class UTextureLODSettings : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05F1, TArray<struct FTextureLODGroup>,                                       TextureLODGroups);                                         // 0x0028(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TextureLODSettings");
		return ptr;
	}


};

// Class Engine.DeviceProfile
// 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_05F2 - 0x0000 // Minimum to subtract -> (0000)
class UDeviceProfile : public UTextureLODSettings
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05F2, struct FString,                                                        DeviceType);                                               // 0x0038(0x0010)  (Edit, ZeroConstructor, Config, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05F2, struct FString,                                                        BaseProfileName);                                          // 0x0048(0x0010)  (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_05F2, class UObject*,                                                        Parent);                                                   // 0x0058(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_05F2, TArray<struct FString>,                                                CVars);                                                    // 0x0078(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DeviceProfile");
		return ptr;
	}


};

// Class Engine.DeviceProfileManager
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05F3 - 0x0000 // Minimum to subtract -> (0000)
class UDeviceProfileManager : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05F3, TArray<class UObject*>,                                                Profiles);                                                 // 0x0028(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DeviceProfileManager");
		return ptr;
	}


};

// Class Engine.DialogueSoundWaveProxy
// 0x0050 (FullSize[0x0110] - InheritedSize[0x00C0])
// LastOffsetWithSize(0x0110)
class UDialogueSoundWaveProxy : public USoundBase
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DialogueSoundWaveProxy");
		return ptr;
	}


};

// Class Engine.DialogueVoice
// 0x0014 (FullSize[0x003C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05F5 - 0x0000 // Minimum to subtract -> (0000)
class UDialogueVoice : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05F5, TEnumAsByte<EGrammaticalGender>,                                       Gender);                                                   // 0x0028(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0001 PADDING_05F5, TEnumAsByte<EGrammaticalNumber>,                                       Plurality);                                                // 0x0029(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_05F5, struct FGuid,                                                          LocalizationGUID);                                         // 0x002C(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DialogueVoice");
		return ptr;
	}


};

// Class Engine.DialogueWave
// 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05F6 - 0x0000 // Minimum to subtract -> (0000)
class UDialogueWave : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_05F6, unsigned char,                                                         bMature);                                                  // 0x0028(0x0001) BIT_FIELD (Edit, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_000(0x0000 PADDING_05F6, unsigned char,                                                         bOverride_SubtitleOverride);                               // 0x0028(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_05F6, struct FString,                                                        SpokenText);                                               // 0x0030(0x0010)  (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_05F6, struct FString,                                                        SubtitleOverride);                                         // 0x0040(0x0010)  (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_05F6, TArray<struct FDialogueContextMapping>,                                ContextMappings);                                          // 0x0050(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_05F6, struct FGuid,                                                          LocalizationGUID);                                         // 0x0060(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DialogueWave");
		return ptr;
	}


};

// Class Engine.Light
// 0x0019 (FullSize[0x0251] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_05F7 - 0x0000 // Minimum to subtract -> (0010)
class ALight : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_05F7, class ULightComponent*,                                                LightComponent);                                           // 0x0248(0x0008)  (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0018 PADDING_05F7, unsigned char,                                                         bEnabled);                                                 // 0x0250(0x0001) BIT_FIELD (Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Light");
		return ptr;
	}


	void ToggleEnabled();
	void SetLightFunctionScale(const struct FVector& NewLightFunctionScale);
	void SetLightFunctionMaterial(class UMaterialInterface* NewLightFunctionMaterial);
	void SetLightFunctionFadeDistance(float NewLightFunctionFadeDistance);
	void SetLightColor(const struct FLinearColor& NewLightColor);
	void SetEnabled(bool bSetEnabled);
	void SetCastShadows(bool bNewValue);
	void SetBrightness(float NewBrightness);
	void SetAffectTranslucentLighting(bool bNewValue);
	void OnRep_bEnabled();
	bool IsEnabled();
	struct FLinearColor GetLightColor();
	float GetBrightness();
};

// Class Engine.DirectionalLight
// 0x0007 (FullSize[0x0258] - InheritedSize[0x0251])
// LastOffsetWithSize(0x0251)
class ADirectionalLight : public ALight
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DirectionalLight");
		return ptr;
	}


};

// Class Engine.LightComponentBase
// 0x00C4 (FullSize[0x0244] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_05F9 - 0x0000 // Minimum to subtract -> (0089)
class ULightComponentBase : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0089 PADDING_05F9, struct FGuid,                                                          LightGuid);                                                // 0x0218(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0099 PADDING_05F9, float,                                                                 Brightness);                                               // 0x0228(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009D PADDING_05F9, float,                                                                 Intensity);                                                // 0x022C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A1 PADDING_05F9, struct FColor,                                                         LightColor);                                               // 0x0230(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_05F9, unsigned char,                                                         bAffectsWorld);                                            // 0x0234(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_05F9, unsigned char,                                                         CastShadows);                                              // 0x0234(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_05F9, unsigned char,                                                         CastStaticShadows);                                        // 0x0234(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_05F9, unsigned char,                                                         CastDynamicShadows);                                       // 0x0234(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_05F9, unsigned char,                                                         bAffectTranslucentLighting);                               // 0x0234(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_05F9, unsigned char,                                                         bTransmission);                                            // 0x0234(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_05F9, unsigned char,                                                         bCastVolumetricShadow);                                    // 0x0234(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_05F9, unsigned char,                                                         bCastRaytracedShadow);                                     // 0x0234(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A6 PADDING_05F9, unsigned char,                                                         bAffectReflection);                                        // 0x0235(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A6 PADDING_05F9, unsigned char,                                                         bAffectGlobalIllumination);                                // 0x0235(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A9 PADDING_05F9, float,                                                                 IndirectLightingIntensity);                                // 0x0238(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_05F9, float,                                                                 VolumetricScatteringIntensity);                            // 0x023C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B1 PADDING_05F9, int,                                                                   SamplesPerPixel);                                          // 0x0240(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LightComponentBase");
		return ptr;
	}


	void SetSamplesPerPixel(int NewValue);
	void SetCastVolumetricShadow(bool bNewValue);
	void SetCastShadows(bool bNewValue);
	void SetCastRaytracedShadow(bool bNewValue);
	void SetAffectReflection(bool bNewValue);
	void SetAffectGlobalIllumination(bool bNewValue);
	struct FLinearColor GetLightColor();
};

// Class Engine.LightComponent
// 0x008C (FullSize[0x02D0] - InheritedSize[0x0244])
// LastOffsetWithSize(0x0244)
#define PADDING_05FA - 0x0000 // Minimum to subtract -> (0008)
class ULightComponent : public ULightComponentBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_05FA, float,                                                                 MaxDrawDistance);                                          // 0x024C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_05FA, float,                                                                 MaxDistanceFadeRange);                                     // 0x0250(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_05FA, unsigned char,                                                         bUseTemperature);                                          // 0x0254(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_05FA, int,                                                                   ShadowMapChannel);                                         // 0x0258(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_05FA, float,                                                                 MinRoughness);                                             // 0x0260(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_05FA, float,                                                                 SpecularScale);                                            // 0x0264(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_05FA, float,                                                                 ShadowResolutionScale);                                    // 0x0268(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_05FA, float,                                                                 ShadowBias);                                               // 0x026C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_05FA, float,                                                                 ShadowSlopeBias);                                          // 0x0270(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_05FA, float,                                                                 ShadowSharpen);                                            // 0x0274(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_05FA, float,                                                                 ContactShadowLength);                                      // 0x0278(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_05FA, unsigned char,                                                         ContactShadowLengthInWS);                                  // 0x027C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_05FA, unsigned char,                                                         InverseSquaredFalloff);                                    // 0x027C(0x0001) BIT_FIELD (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_05FA, unsigned char,                                                         CastTranslucentShadows);                                   // 0x027C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_05FA, unsigned char,                                                         bCastShadowsFromCinematicObjectsOnly);                     // 0x027C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_05FA, unsigned char,                                                         bAffectDynamicIndirectLighting);                           // 0x027C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_05FA, unsigned char,                                                         bForceCachedShadowsForMovablePrimitives);                  // 0x027C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_05FA, struct FLightingChannels,                                              LightingChannels);                                         // 0x0280(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_05FA, class UMaterialInterface*,                                             LightFunctionMaterial);                                    // 0x0288(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004C PADDING_05FA, struct FVector,                                                        LightFunctionScale);                                       // 0x0290(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005C PADDING_05FA, class UTextureLightProfile*,                                           IESTexture);                                               // 0x02A0(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0064 PADDING_05FA, unsigned char,                                                         bUseIESBrightness);                                        // 0x02A8(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_05FA, float,                                                                 IESBrightnessScale);                                       // 0x02AC(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_05FA, float,                                                                 LightFunctionFadeDistance);                                // 0x02B0(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_05FA, float,                                                                 DisabledBrightness);                                       // 0x02B4(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_05FA, unsigned char,                                                         bEnableLightShaftBloom);                                   // 0x02B8(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_05FA, float,                                                                 BloomScale);                                               // 0x02BC(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007C PADDING_05FA, float,                                                                 BloomThreshold);                                           // 0x02C0(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_05FA, struct FColor,                                                         BloomTint);                                                // 0x02C4(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0084 PADDING_05FA, bool,                                                                  bUseRayTracedDistanceFieldShadows);                        // 0x02C8(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_05FA, float,                                                                 RayStartOffsetDepthScale);                                 // 0x02CC(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LightComponent");
		return ptr;
	}


	void SetVolumetricScatteringIntensity(float NewIntensity);
	void SetUseIESBrightness(bool bNewValue);
	void SetTransmission(bool bNewValue);
	void SetTemperature(float NewTemperature);
	void SetSpecularScale(float NewValue);
	void SetShadowSlopeBias(float NewValue);
	void SetShadowBias(float NewValue);
	void SetLightFunctionScale(const struct FVector& NewLightFunctionScale);
	void SetLightFunctionMaterial(class UMaterialInterface* NewLightFunctionMaterial);
	void SetLightFunctionFadeDistance(float NewLightFunctionFadeDistance);
	void SetLightFunctionDisabledBrightness(float NewValue);
	void SetLightColor(const struct FLinearColor& NewLightColor, bool bSRGB);
	void SetIntensity(float NewIntensity);
	void SetIndirectLightingIntensity(float NewIntensity);
	void SetIESTexture(class UTextureLightProfile* NewValue);
	void SetIESBrightnessScale(float NewValue);
	void SetForceCachedShadowsForMovablePrimitives(bool bNewValue);
	void SetEnableLightShaftBloom(bool bNewValue);
	void SetBloomTint(const struct FColor& NewValue);
	void SetBloomThreshold(float NewValue);
	void SetBloomScale(float NewValue);
	void SetAffectTranslucentLighting(bool bNewValue);
	void SetAffectDynamicIndirectLighting(bool bNewValue);
};

// Class Engine.DirectionalLightComponent
// 0x00F5 (FullSize[0x03C5] - InheritedSize[0x02D0])
// LastOffsetWithSize(0x02D0)
#define PADDING_05FB - 0x0000 // Minimum to subtract -> (0090)
class UDirectionalLightComponent : public ULightComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0090 PADDING_05FB, float,                                                                 OcclusionMaskDarkness);                                    // 0x0360(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_05FB, float,                                                                 OcclusionDepthRange);                                      // 0x0364(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_05FB, struct FVector,                                                        LightShaftOverrideDirection);                              // 0x0368(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_05FB, float,                                                                 WholeSceneDynamicShadowRadius);                            // 0x0374(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_05FB, float,                                                                 DynamicShadowDistanceMovableLight);                        // 0x0378(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_05FB, float,                                                                 DynamicShadowDistanceStationaryLight);                     // 0x037C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_05FB, int,                                                                   DynamicShadowCascades);                                    // 0x0380(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B4 PADDING_05FB, float,                                                                 CascadeDistributionExponent);                              // 0x0384(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_05FB, float,                                                                 CascadeTransitionFraction);                                // 0x0388(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BC PADDING_05FB, float,                                                                 ShadowDistanceFadeoutFraction);                            // 0x038C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_05FB, unsigned char,                                                         bUseInsetShadowsForMovableObjects);                        // 0x0390(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C4 PADDING_05FB, int,                                                                   FarShadowCascadeCount);                                    // 0x0394(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C8 PADDING_05FB, float,                                                                 FarShadowDistance);                                        // 0x0398(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00CC PADDING_05FB, float,                                                                 DistanceFieldShadowDistance);                              // 0x039C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_05FB, float,                                                                 LightSourceAngle);                                         // 0x03A0(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D4 PADDING_05FB, float,                                                                 LightSourceSoftAngle);                                     // 0x03A4(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D8 PADDING_05FB, float,                                                                 TraceDistance);                                            // 0x03A8(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00DC PADDING_05FB, struct FLightmassDirectionalLightSettings,                             LightmassSettings);                                        // 0x03AC(0x0010)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00EC PADDING_05FB, unsigned char,                                                         bCastModulatedShadows);                                    // 0x03BC(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F0 PADDING_05FB, struct FColor,                                                         ModulatedShadowColor);                                     // 0x03C0(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F4 PADDING_05FB, unsigned char,                                                         bUsedAsAtmosphereSunLight);                                // 0x03C4(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DirectionalLightComponent");
		return ptr;
	}


	void SetShadowDistanceFadeoutFraction(float NewValue);
	void SetOcclusionMaskDarkness(float NewValue);
	void SetLightShaftOverrideDirection(const struct FVector& NewValue);
	void SetEnableLightShaftOcclusion(bool bNewValue);
	void SetDynamicShadowDistanceStationaryLight(float NewValue);
	void SetDynamicShadowDistanceMovableLight(float NewValue);
	void SetDynamicShadowCascades(int NewValue);
	void SetCascadeTransitionFraction(float NewValue);
	void SetCascadeDistributionExponent(float NewValue);
};

// Class Engine.Distribution
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UDistribution : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Distribution");
		return ptr;
	}


};

// Class Engine.DistributionFloat
// 0x0009 (FullSize[0x0031] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_05FD - 0x0000 // Minimum to subtract -> (0008)
class UDistributionFloat : public UDistribution
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_05FD, unsigned char,                                                         bCanBeBaked);                                              // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_05FD, unsigned char,                                                         bBakedDataSuccesfully);                                    // 0x0030(0x0001) BIT_FIELD (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DistributionFloat");
		return ptr;
	}


};

// Class Engine.DistributionFloatConstant
// 0x000B (FullSize[0x003C] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_05FE - 0x0000 // Minimum to subtract -> (0007)
class UDistributionFloatConstant : public UDistributionFloat
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_05FE, float,                                                                 Constant);                                                 // 0x0038(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DistributionFloatConstant");
		return ptr;
	}


};

// Class Engine.DistributionFloatConstantCurve
// 0x001F (FullSize[0x0050] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_05FF - 0x0000 // Minimum to subtract -> (0007)
class UDistributionFloatConstantCurve : public UDistributionFloat
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_05FF, struct FInterpCurveFloat,                                              ConstantCurve);                                            // 0x0038(0x0018)  (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DistributionFloatConstantCurve");
		return ptr;
	}


};

// Class Engine.DistributionFloatParameterBase
// 0x001D (FullSize[0x0059] - InheritedSize[0x003C])
// LastOffsetWithSize(0x003C)
#define PADDING_0600 - 0x0000 // Minimum to subtract -> (0004)
class UDistributionFloatParameterBase : public UDistributionFloatConstant
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_0600, struct FName,                                                          ParameterName);                                            // 0x0040(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0600, float,                                                                 MinInput);                                                 // 0x0048(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0600, float,                                                                 MaxInput);                                                 // 0x004C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0600, float,                                                                 MinOutput);                                                // 0x0050(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0600, float,                                                                 MaxOutput);                                                // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0600, TEnumAsByte<EDistributionParamMode>,                                   ParamMode);                                                // 0x0058(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DistributionFloatParameterBase");
		return ptr;
	}


};

// Class Engine.DistributionFloatParticleParameter
// 0x0007 (FullSize[0x0060] - InheritedSize[0x0059])
// LastOffsetWithSize(0x0059)
class UDistributionFloatParticleParameter : public UDistributionFloatParameterBase
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DistributionFloatParticleParameter");
		return ptr;
	}


};

// Class Engine.DistributionFloatUniform
// 0x000F (FullSize[0x0040] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_0602 - 0x0000 // Minimum to subtract -> (0007)
class UDistributionFloatUniform : public UDistributionFloat
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0602, float,                                                                 Min);                                                      // 0x0038(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_0602, float,                                                                 Max);                                                      // 0x003C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DistributionFloatUniform");
		return ptr;
	}


};

// Class Engine.DistributionFloatUniformCurve
// 0x001F (FullSize[0x0050] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_0603 - 0x0000 // Minimum to subtract -> (0007)
class UDistributionFloatUniformCurve : public UDistributionFloat
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0603, struct FInterpCurveVector2D,                                           ConstantCurve);                                            // 0x0038(0x0018)  (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DistributionFloatUniformCurve");
		return ptr;
	}


};

// Class Engine.DistributionVector
// 0x0009 (FullSize[0x0031] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0604 - 0x0000 // Minimum to subtract -> (0008)
class UDistributionVector : public UDistribution
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0604, unsigned char,                                                         bCanBeBaked);                                              // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0604, unsigned char,                                                         bIsDirty);                                                 // 0x0030(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0604, unsigned char,                                                         bBakedDataSuccesfully);                                    // 0x0030(0x0001) BIT_FIELD (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DistributionVector");
		return ptr;
	}


};

// Class Engine.DistributionVectorConstant
// 0x0018 (FullSize[0x0049] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_0605 - 0x0000 // Minimum to subtract -> (0007)
class UDistributionVectorConstant : public UDistributionVector
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0605, struct FVector,                                                        Constant);                                                 // 0x0038(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_0605, unsigned char,                                                         bLockAxes);                                                // 0x0044(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_0605, TEnumAsByte<EDistributionVectorLockFlags>,                             LockedAxes);                                               // 0x0048(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DistributionVectorConstant");
		return ptr;
	}


};

// Class Engine.DistributionVectorConstantCurve
// 0x0024 (FullSize[0x0055] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_0606 - 0x0000 // Minimum to subtract -> (0007)
class UDistributionVectorConstantCurve : public UDistributionVector
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0606, struct FInterpCurveVector,                                             ConstantCurve);                                            // 0x0038(0x0018)  (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_0606, unsigned char,                                                         bLockAxes);                                                // 0x0050(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_0606, TEnumAsByte<EDistributionVectorLockFlags>,                             LockedAxes);                                               // 0x0054(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DistributionVectorConstantCurve");
		return ptr;
	}


};

// Class Engine.DistributionVectorParameterBase
// 0x0042 (FullSize[0x008B] - InheritedSize[0x0049])
// LastOffsetWithSize(0x0049)
#define PADDING_0607 - 0x0000 // Minimum to subtract -> (0007)
class UDistributionVectorParameterBase : public UDistributionVectorConstant
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0607, struct FName,                                                          ParameterName);                                            // 0x0050(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_0607, struct FVector,                                                        MinInput);                                                 // 0x0058(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0607, struct FVector,                                                        MaxInput);                                                 // 0x0064(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_0607, struct FVector,                                                        MinOutput);                                                // 0x0070(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_0607, struct FVector,                                                        MaxOutput);                                                // 0x007C(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003F PADDING_0607, TEnumAsByte<EDistributionParamMode>,                                   ParamModes[0x3]);                                          // 0x0088(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DistributionVectorParameterBase");
		return ptr;
	}


};

// Class Engine.DistributionVectorParticleParameter
// 0x0005 (FullSize[0x0090] - InheritedSize[0x008B])
// LastOffsetWithSize(0x0089)
class UDistributionVectorParticleParameter : public UDistributionVectorParameterBase
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DistributionVectorParticleParameter");
		return ptr;
	}


};

// Class Engine.DistributionVectorUniform
// 0x0028 (FullSize[0x0059] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_0609 - 0x0000 // Minimum to subtract -> (0007)
class UDistributionVectorUniform : public UDistributionVector
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0609, struct FVector,                                                        Max);                                                      // 0x0038(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_0609, struct FVector,                                                        Min);                                                      // 0x0044(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_0609, unsigned char,                                                         bLockAxes);                                                // 0x0050(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_0609, TEnumAsByte<EDistributionVectorLockFlags>,                             LockedAxes);                                               // 0x0054(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0609, TEnumAsByte<EDistributionVectorMirrorFlags>,                           MirrorFlags[0x3]);                                         // 0x0055(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_0609, unsigned char,                                                         bUseExtremes);                                             // 0x0058(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DistributionVectorUniform");
		return ptr;
	}


};

// Class Engine.DistributionVectorUniformCurve
// 0x002C (FullSize[0x005D] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_060A - 0x0000 // Minimum to subtract -> (0007)
class UDistributionVectorUniformCurve : public UDistributionVector
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_060A, struct FInterpCurveTwoVectors,                                         ConstantCurve);                                            // 0x0038(0x0018)  (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_060A, unsigned char,                                                         bLockAxes1);                                               // 0x0050(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_060A, unsigned char,                                                         bLockAxes2);                                               // 0x0050(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_060A, TEnumAsByte<EDistributionVectorLockFlags>,                             LockedAxes[0x2]);                                          // 0x0054(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0025 PADDING_060A, TEnumAsByte<EDistributionVectorMirrorFlags>,                           MirrorFlags[0x3]);                                         // 0x0056(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002B PADDING_060A, unsigned char,                                                         bUseExtremes);                                             // 0x005C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DistributionVectorUniformCurve");
		return ptr;
	}


};

// Class Engine.DocumentationActor
// 0x0010 (FullSize[0x0248] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
class ADocumentationActor : public AActor
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DocumentationActor");
		return ptr;
	}


};

// Class Engine.DrawFrustumComponent
// 0x0023 (FullSize[0x0428] - InheritedSize[0x0405])
// LastOffsetWithSize(0x0408)
#define PADDING_060C - 0x0000 // Minimum to subtract -> (0004)
class UDrawFrustumComponent : public UPrimitiveComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_060C, float,                                                                 FrustumAngle);                                             // 0x040C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_060C, float,                                                                 FrustumAspectRatio);                                       // 0x0410(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_060C, float,                                                                 FrustumStartDist);                                         // 0x0414(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_060C, float,                                                                 FrustumEndDist);                                           // 0x0418(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_060C, class UTexture*,                                                       Texture);                                                  // 0x0420(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DrawFrustumComponent");
		return ptr;
	}


};

// Class Engine.SphereComponent
// 0x0004 (FullSize[0x0424] - InheritedSize[0x0420])
// LastOffsetWithSize(0x0420)
#define PADDING_060D - 0x0000 // Minimum to subtract -> (0000)
class USphereComponent : public UShapeComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_060D, float,                                                                 SphereRadius);                                             // 0x0420(0x0004)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SphereComponent");
		return ptr;
	}


	void SetSphereRadius(float InSphereRadius, bool bUpdateOverlaps);
	float GetUnscaledSphereRadius();
	float GetShapeScale();
	float GetScaledSphereRadius();
};

// Class Engine.DrawSphereComponent
// 0x000C (FullSize[0x0430] - InheritedSize[0x0424])
// LastOffsetWithSize(0x0424)
class UDrawSphereComponent : public USphereComponent
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DrawSphereComponent");
		return ptr;
	}


};

// Class Engine.EdGraph
// 0x0019 (FullSize[0x0041] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_060F - 0x0000 // Minimum to subtract -> (0000)
class UEdGraph : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_060F, class UClass*,                                                         Schema);                                                   // 0x0028(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_060F, TArray<class UEdGraphNode*>,                                           Nodes);                                                    // 0x0030(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_060F, unsigned char,                                                         bEditable);                                                // 0x0040(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_060F, unsigned char,                                                         bAllowDeletion);                                           // 0x0040(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_060F, unsigned char,                                                         bAllowRenaming);                                           // 0x0040(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.EdGraph");
		return ptr;
	}


};

// Class Engine.EdGraphNode
// 0x0070 (FullSize[0x0098] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0610 - 0x0000 // Minimum to subtract -> (0010)
class UEdGraphNode : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0610, TArray<class UEdGraphPin_Deprecated*>,                                 DeprecatedPins);                                           // 0x0038(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0610, int,                                                                   NodePosX);                                                 // 0x0048(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0610, int,                                                                   NodePosY);                                                 // 0x004C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0610, int,                                                                   NodeWidth);                                                // 0x0050(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0610, int,                                                                   NodeHeight);                                               // 0x0054(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0610, TEnumAsByte<ENodeAdvancedPins>,                                        AdvancedPinDisplay);                                       // 0x0058(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0031 PADDING_0610, ENodeEnabledState,                                                     EnabledState);                                             // 0x0059(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0033 PADDING_0610, unsigned char,                                                         bDisplayAsDisabled);                                       // 0x005B(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0033 PADDING_0610, unsigned char,                                                         bUserSetEnabledState);                                     // 0x005B(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0033 PADDING_0610, unsigned char,                                                         bIsNodeEnabled);                                           // 0x005B(0x0001) BIT_FIELD (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0033 PADDING_0610, unsigned char,                                                         bHasCompilerMessage);                                      // 0x005B(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0610, struct FString,                                                        NodeComment);                                              // 0x0060(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0610, int,                                                                   ErrorType);                                                // 0x0070(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0610, struct FString,                                                        ErrorMsg);                                                 // 0x0078(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0610, struct FGuid,                                                          NodeGuid);                                                 // 0x0088(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.EdGraphNode");
		return ptr;
	}


};

// Class Engine.EdGraphNode_Documentation
// 0x0020 (FullSize[0x00B8] - InheritedSize[0x0098])
// LastOffsetWithSize(0x0098)
#define PADDING_0611 - 0x0000 // Minimum to subtract -> (0000)
class UEdGraphNode_Documentation : public UEdGraphNode
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0611, struct FString,                                                        Link);                                                     // 0x0098(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0611, struct FString,                                                        Excerpt);                                                  // 0x00A8(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.EdGraphNode_Documentation");
		return ptr;
	}


};

// Class Engine.EdGraphPin_Deprecated
// 0x00F0 (FullSize[0x0118] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0612 - 0x0000 // Minimum to subtract -> (0000)
class UEdGraphPin_Deprecated : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0612, struct FString,                                                        PinName);                                                  // 0x0028(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0612, struct FString,                                                        PinToolTip);                                               // 0x0038(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0612, TEnumAsByte<EEdGraphPinDirection>,                                     Direction);                                                // 0x0048(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0612, struct FEdGraphPinType,                                                PinType);                                                  // 0x0050(0x0058)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0612, struct FString,                                                        DefaultValue);                                             // 0x00A8(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_0612, struct FString,                                                        AutogeneratedDefaultValue);                                // 0x00B8(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0612, class UObject*,                                                        DefaultObject);                                            // 0x00C8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0612, struct FText,                                                          DefaultTextValue);                                         // 0x00D0(0x0018)  (NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_0612, TArray<class UEdGraphPin_Deprecated*>,                                 LinkedTo);                                                 // 0x00E8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_0612, TArray<class UEdGraphPin_Deprecated*>,                                 SubPins);                                                  // 0x00F8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E0 PADDING_0612, class UEdGraphPin_Deprecated*,                                         ParentPin);                                                // 0x0108(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E8 PADDING_0612, class UEdGraphPin_Deprecated*,                                         ReferencePassThroughConnection);                           // 0x0110(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.EdGraphPin_Deprecated");
		return ptr;
	}


};

// Class Engine.EdGraphSchema
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UEdGraphSchema : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.EdGraphSchema");
		return ptr;
	}


};

// Class Engine.Emitter
// 0x0060 (FullSize[0x0298] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0614 - 0x0000 // Minimum to subtract -> (0010)
class AEmitter : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0614, class UParticleSystemComponent*,                                       ParticleSystemComponent);                                  // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0614, unsigned char,                                                         bDestroyOnSystemFinish);                                   // 0x0250(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0614, unsigned char,                                                         bPostUpdateTickGroup);                                     // 0x0250(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0614, unsigned char,                                                         bCurrentlyActive);                                         // 0x0250(0x0001) BIT_FIELD (Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0614, struct FScriptMulticastDelegate,                                       OnParticleSpawn);                                          // 0x0258(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0614, struct FScriptMulticastDelegate,                                       OnParticleBurst);                                          // 0x0268(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0614, struct FScriptMulticastDelegate,                                       OnParticleDeath);                                          // 0x0278(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0614, struct FScriptMulticastDelegate,                                       OnParticleCollide);                                        // 0x0288(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Emitter");
		return ptr;
	}


	void ToggleActive();
	void SetVectorParameter(const struct FName& ParameterName, const struct FVector& Param);
	void SetTemplate(class UParticleSystem* NewTemplate);
	void SetMaterialParameter(const struct FName& ParameterName, class UMaterialInterface* Param);
	void SetFloatParameter(const struct FName& ParameterName, float Param);
	void SetColorParameter(const struct FName& ParameterName, const struct FLinearColor& Param);
	void SetActorParameter(const struct FName& ParameterName, class AActor* Param);
	void OnRep_bCurrentlyActive();
	void OnParticleSystemFinished(class UParticleSystemComponent* FinishedComponent);
	bool IsActive();
	void Deactivate();
	void Activate();
};

// Class Engine.EmitterCameraLensEffectBase
// 0x0064 (FullSize[0x02FC] - InheritedSize[0x0298])
// LastOffsetWithSize(0x0298)
#define PADDING_0615 - 0x0000 // Minimum to subtract -> (0000)
class AEmitterCameraLensEffectBase : public AEmitter
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0615, class UParticleSystem*,                                                PS_CameraEffect);                                          // 0x0298(0x0008)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0615, class UParticleSystem*,                                                PS_CameraEffectNonExtremeContent);                         // 0x02A0(0x0008)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0615, class APlayerCameraManager*,                                           BaseCamera);                                               // 0x02A8(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0615, struct FTransform,                                                     RelativeTransform);                                        // 0x02B0(0x0030)  (Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0615, float,                                                                 BaseFOV);                                                  // 0x02E0(0x0004)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004C PADDING_0615, unsigned char,                                                         bAllowMultipleInstances);                                  // 0x02E4(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004C PADDING_0615, unsigned char,                                                         bResetWhenRetriggered);                                    // 0x02E4(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0615, TArray<class UClass*>,                                                 EmittersToTreatAsSame);                                    // 0x02E8(0x0010)  (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0615, float,                                                                 DistFromCamera);                                           // 0x02F8(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.EmitterCameraLensEffectBase");
		return ptr;
	}


};

// Class Engine.EngineBaseTypes
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UEngineBaseTypes : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.EngineBaseTypes");
		return ptr;
	}


};

// Class Engine.EngineHandlerComponentFactory
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UEngineHandlerComponentFactory : public UHandlerComponentFactory
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.EngineHandlerComponentFactory");
		return ptr;
	}


};

// Class Engine.LocalMessage
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class ULocalMessage : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LocalMessage");
		return ptr;
	}


};

// Class Engine.EngineMessage
// 0x0080 (FullSize[0x00A8] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0619 - 0x0000 // Minimum to subtract -> (0000)
class UEngineMessage : public ULocalMessage
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0619, struct FString,                                                        FailedPlaceMessage);                                       // 0x0028(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0619, struct FString,                                                        MaxedOutMessage);                                          // 0x0038(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0619, struct FString,                                                        EnteredMessage);                                           // 0x0048(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0619, struct FString,                                                        LeftMessage);                                              // 0x0058(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0619, struct FString,                                                        GlobalNameChange);                                         // 0x0068(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0619, struct FString,                                                        SpecEnteredMessage);                                       // 0x0078(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0619, struct FString,                                                        NewPlayerMessage);                                         // 0x0088(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0619, struct FString,                                                        NewSpecMessage);                                           // 0x0098(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.EngineMessage");
		return ptr;
	}


};

// Class Engine.DynamicSubsystem
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UDynamicSubsystem : public USubsystem
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.DynamicSubsystem");
		return ptr;
	}


};

// Class Engine.EngineSubsystem
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
// LastOffsetWithSize(0x0028)
class UEngineSubsystem : public UDynamicSubsystem
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.EngineSubsystem");
		return ptr;
	}


};

// Class Engine.EngineTypes
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UEngineTypes : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.EngineTypes");
		return ptr;
	}


};

// Class Engine.ExponentialHeightFog
// 0x0009 (FullSize[0x0251] - InheritedSize[0x0248])
// LastOffsetWithSize(0x0238)
#define PADDING_061D - 0x0000 // Minimum to subtract -> (0010)
class AExponentialHeightFog : public AInfo
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_061D, class UExponentialHeightFogComponent*,                                 Component);                                                // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0018 PADDING_061D, unsigned char,                                                         bEnabled);                                                 // 0x0250(0x0001) BIT_FIELD (Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ExponentialHeightFog");
		return ptr;
	}


	void OnRep_bEnabled();
};

// Class Engine.ExponentialHeightFogComponent
// 0x0131 (FullSize[0x02B1] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_061E - 0x0000 // Minimum to subtract -> (008D)
class UExponentialHeightFogComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x008D PADDING_061E, float,                                                                 FogHeightFalloff);                                         // 0x021C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0091 PADDING_061E, struct FExponentialHeightFogData,                                      SecondFogData);                                            // 0x0220(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009D PADDING_061E, struct FLinearColor,                                                   FogInscatteringColor);                                     // 0x022C(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B1 PADDING_061E, class UTextureCube*,                                                   InscatteringColorCubemap);                                 // 0x0240(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B9 PADDING_061E, float,                                                                 InscatteringColorCubemapAngle);                            // 0x0248(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BD PADDING_061E, struct FLinearColor,                                                   InscatteringTextureTint);                                  // 0x024C(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00CD PADDING_061E, float,                                                                 FullyDirectionalInscatteringColorDistance);                // 0x025C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D1 PADDING_061E, float,                                                                 NonDirectionalInscatteringColorDistance);                  // 0x0260(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D5 PADDING_061E, float,                                                                 DirectionalInscatteringExponent);                          // 0x0264(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D9 PADDING_061E, float,                                                                 DirectionalInscatteringStartDistance);                     // 0x0268(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00DD PADDING_061E, struct FLinearColor,                                                   DirectionalInscatteringColor);                             // 0x026C(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00ED PADDING_061E, float,                                                                 FogMaxOpacity);                                            // 0x027C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F1 PADDING_061E, float,                                                                 StartDistance);                                            // 0x0280(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F5 PADDING_061E, float,                                                                 FogCutoffDistance);                                        // 0x0284(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F9 PADDING_061E, bool,                                                                  bEnableVolumetricFog);                                     // 0x0288(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FD PADDING_061E, float,                                                                 VolumetricFogScatteringDistribution);                      // 0x028C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0101 PADDING_061E, struct FColor,                                                         VolumetricFogAlbedo);                                      // 0x0290(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0105 PADDING_061E, struct FLinearColor,                                                   VolumetricFogEmissive);                                    // 0x0294(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0115 PADDING_061E, float,                                                                 VolumetricFogExtinctionScale);                             // 0x02A4(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0119 PADDING_061E, float,                                                                 VolumetricFogDistance);                                    // 0x02A8(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x011D PADDING_061E, float,                                                                 VolumetricFogStaticLightingScatteringIntensity);           // 0x02AC(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0121 PADDING_061E, bool,                                                                  bOverrideLightColorsWithFogInscatteringColors);            // 0x02B0(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ExponentialHeightFogComponent");
		return ptr;
	}


	void SetVolumetricFogScatteringDistribution(float NewValue);
	void SetVolumetricFogExtinctionScale(float NewValue);
	void SetVolumetricFogEmissive(const struct FLinearColor& NewValue);
	void SetVolumetricFogDistance(float NewValue);
	void SetVolumetricFogAlbedo(const struct FColor& NewValue);
	void SetVolumetricFog(bool bNewValue);
	void SetStartDistance(float Value);
	void SetNonDirectionalInscatteringColorDistance(float Value);
	void SetInscatteringTextureTint(const struct FLinearColor& Value);
	void SetInscatteringColorCubemapAngle(float Value);
	void SetInscatteringColorCubemap(class UTextureCube* Value);
	void SetFullyDirectionalInscatteringColorDistance(float Value);
	void SetFogMaxOpacity(float Value);
	void SetFogInscatteringColor(const struct FLinearColor& Value);
	void SetFogHeightFalloff(float Value);
	void SetFogDensity(float Value);
	void SetFogCutoffDistance(float Value);
	void SetDirectionalInscatteringStartDistance(float Value);
	void SetDirectionalInscatteringExponent(float Value);
	void SetDirectionalInscatteringColor(const struct FLinearColor& Value);
};

// Class Engine.FloatingPawnMovement
// 0x0011 (FullSize[0x0171] - InheritedSize[0x0160])
// LastOffsetWithSize(0x0160)
#define PADDING_061F - 0x0000 // Minimum to subtract -> (0000)
class UFloatingPawnMovement : public UPawnMovementComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_061F, float,                                                                 MaxSpeed);                                                 // 0x0160(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_061F, float,                                                                 Acceleration);                                             // 0x0164(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_061F, float,                                                                 Deceleration);                                             // 0x0168(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_061F, float,                                                                 TurningBoost);                                             // 0x016C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_061F, unsigned char,                                                         bPositionCorrected);                                       // 0x0170(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.FloatingPawnMovement");
		return ptr;
	}


};

// Class Engine.Font
// 0x0158 (FullSize[0x0180] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0620 - 0x0000 // Minimum to subtract -> (0008)
class UFont : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0620, EFontCacheType,                                                        FontCacheType);                                            // 0x0030(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0620, TArray<struct FFontCharacter>,                                         Characters);                                               // 0x0038(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0620, TArray<class UTexture2D*>,                                             Textures);                                                 // 0x0048(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0620, int,                                                                   IsRemapped);                                               // 0x0058(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0620, float,                                                                 EmScale);                                                  // 0x005C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0620, float,                                                                 Ascent);                                                   // 0x0060(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_0620, float,                                                                 Descent);                                                  // 0x0064(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0620, float,                                                                 Leading);                                                  // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0620, int,                                                                   Kerning);                                                  // 0x006C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0620, struct FFontImportOptionsData,                                         ImportOptions);                                            // 0x0070(0x00B0)  (Edit, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F8 PADDING_0620, int,                                                                   NumCharacters);                                            // 0x0120(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_0620, TArray<int>,                                                           MaxCharHeight);                                            // 0x0128(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0110 PADDING_0620, float,                                                                 ScalingFactor);                                            // 0x0138(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0114 PADDING_0620, int,                                                                   LegacyFontSize);                                           // 0x013C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0118 PADDING_0620, struct FName,                                                          LegacyFontName);                                           // 0x0140(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0120 PADDING_0620, struct FCompositeFont,                                                 CompositeFont);                                            // 0x0148(0x0038)  (NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Font");
		return ptr;
	}


};

// Class Engine.FontFace
// 0x001B (FullSize[0x0043] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0621 - 0x0000 // Minimum to subtract -> (0008)
class UFontFace : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0621, struct FString,                                                        SourceFilename);                                           // 0x0030(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0621, EFontHinting,                                                          Hinting);                                                  // 0x0040(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0019 PADDING_0621, EFontLoadingPolicy,                                                    LoadingPolicy);                                            // 0x0041(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001A PADDING_0621, EFontLayoutMethod,                                                     LayoutMethod);                                             // 0x0042(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.FontFace");
		return ptr;
	}


};

// Class Engine.FontImportOptions
// 0x00B0 (FullSize[0x00D8] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0622 - 0x0000 // Minimum to subtract -> (0000)
class UFontImportOptions : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0622, struct FFontImportOptionsData,                                         Data);                                                     // 0x0028(0x00B0)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.FontImportOptions");
		return ptr;
	}


};

// Class Engine.ForceFeedbackAttenuation
// 0x00B0 (FullSize[0x00D8] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0623 - 0x0000 // Minimum to subtract -> (0000)
class UForceFeedbackAttenuation : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0623, struct FForceFeedbackAttenuationSettings,                              Attenuation);                                              // 0x0028(0x00B0)  (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ForceFeedbackAttenuation");
		return ptr;
	}


};

// Class Engine.ForceFeedbackComponent
// 0x0170 (FullSize[0x02F0] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_0624 - 0x0000 // Minimum to subtract -> (0089)
class UForceFeedbackComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0089 PADDING_0624, class UForceFeedbackEffect*,                                           ForceFeedbackEffect);                                      // 0x0218(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0091 PADDING_0624, unsigned char,                                                         bAutoDestroy);                                             // 0x0220(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0091 PADDING_0624, unsigned char,                                                         bStopWhenOwnerDestroyed);                                  // 0x0220(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0091 PADDING_0624, unsigned char,                                                         bLooping);                                                 // 0x0220(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0091 PADDING_0624, unsigned char,                                                         bIgnoreTimeDilation);                                      // 0x0220(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0091 PADDING_0624, unsigned char,                                                         bOverrideAttenuation);                                     // 0x0220(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0095 PADDING_0624, float,                                                                 IntensityMultiplier);                                      // 0x0224(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0099 PADDING_0624, class UForceFeedbackAttenuation*,                                      AttenuationSettings);                                      // 0x0228(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A1 PADDING_0624, struct FForceFeedbackAttenuationSettings,                              AttenuationOverrides);                                     // 0x0230(0x00B0)  (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0151 PADDING_0624, struct FScriptMulticastDelegate,                                       OnForceFeedbackFinished);                                  // 0x02E0(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ForceFeedbackComponent");
		return ptr;
	}


	void Stop();
	void SetIntensityMultiplier(float NewIntensityMultiplier);
	void SetForceFeedbackEffect(class UForceFeedbackEffect* NewForceFeedbackEffect);
	void Play(float StartTime);
	bool BP_GetAttenuationSettingsToApply(struct FForceFeedbackAttenuationSettings* OutAttenuationSettings);
	void AdjustAttenuation(const struct FForceFeedbackAttenuationSettings& InAttenuationSettings);
};

// Class Engine.ForceFeedbackEffect
// 0x0014 (FullSize[0x003C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0625 - 0x0000 // Minimum to subtract -> (0000)
class UForceFeedbackEffect : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0625, TArray<struct FForceFeedbackChannelDetails>,                           ChannelDetails);                                           // 0x0028(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0625, float,                                                                 Duration);                                                 // 0x0038(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ForceFeedbackEffect");
		return ptr;
	}


};

// Class Engine.GameNetworkManager
// 0x00A2 (FullSize[0x02EA] - InheritedSize[0x0248])
// LastOffsetWithSize(0x0238)
#define PADDING_0626 - 0x0000 // Minimum to subtract -> (0010)
class AGameNetworkManager : public AInfo
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0626, float,                                                                 BadPacketLossThreshold);                                   // 0x0248(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0626, float,                                                                 SeverePacketLossThreshold);                                // 0x024C(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0626, int,                                                                   BadPingThreshold);                                         // 0x0250(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0626, int,                                                                   SeverePingThreshold);                                      // 0x0254(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0626, int,                                                                   AdjustedNetSpeed);                                         // 0x0258(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0626, float,                                                                 LastNetSpeedUpdateTime);                                   // 0x025C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0626, int,                                                                   TotalNetBandwidth);                                        // 0x0260(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0626, int,                                                                   MinDynamicBandwidth);                                      // 0x0264(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0626, int,                                                                   MaxDynamicBandwidth);                                      // 0x0268(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0626, unsigned char,                                                         bIsStandbyCheckingEnabled);                                // 0x026C(0x0001) BIT_FIELD (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0626, unsigned char,                                                         bHasStandbyCheatTriggered);                                // 0x026C(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0626, float,                                                                 StandbyRxCheatTime);                                       // 0x0270(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_0626, float,                                                                 StandbyTxCheatTime);                                       // 0x0274(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0626, float,                                                                 PercentMissingForRxStandby);                               // 0x0278(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0626, float,                                                                 PercentMissingForTxStandby);                               // 0x027C(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0626, float,                                                                 PercentForBadPing);                                        // 0x0280(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004C PADDING_0626, float,                                                                 JoinInProgressStandbyWaitTime);                            // 0x0284(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0626, float,                                                                 MoveRepSize);                                              // 0x0288(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0054 PADDING_0626, float,                                                                 MAXPOSITIONERRORSQUARED);                                  // 0x028C(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0626, float,                                                                 MAXNEARZEROVELOCITYSQUARED);                               // 0x0290(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005C PADDING_0626, float,                                                                 CLIENTADJUSTUPDATECOST);                                   // 0x0294(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0626, float,                                                                 MAXCLIENTUPDATEINTERVAL);                                  // 0x0298(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0064 PADDING_0626, float,                                                                 MaxClientForcedUpdateDuration);                            // 0x029C(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0626, float,                                                                 ServerForcedUpdateHitchThreshold);                         // 0x02A0(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_0626, float,                                                                 ServerForcedUpdateHitchCooldown);                          // 0x02A4(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0626, float,                                                                 MaxMoveDeltaTime);                                         // 0x02A8(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_0626, float,                                                                 MaxClientSmoothingDeltaTime);                              // 0x02AC(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0626, float,                                                                 ClientNetSendMoveDeltaTime);                               // 0x02B0(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007C PADDING_0626, float,                                                                 ClientNetSendMoveDeltaTimeThrottled);                      // 0x02B4(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0626, float,                                                                 ClientNetSendMoveDeltaTimeStationary);                     // 0x02B8(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0084 PADDING_0626, int,                                                                   ClientNetSendMoveThrottleAtNetSpeed);                      // 0x02BC(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_0626, int,                                                                   ClientNetSendMoveThrottleOverPlayerCount);                 // 0x02C0(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008C PADDING_0626, bool,                                                                  ClientAuthorativePosition);                                // 0x02C4(0x0001)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_0626, float,                                                                 ClientErrorUpdateRateLimit);                               // 0x02C8(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_0626, float,                                                                 ClientNetCamUpdateDeltaTime);                              // 0x02CC(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_0626, float,                                                                 ClientNetCamUpdatePositionLimit);                          // 0x02D0(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009C PADDING_0626, bool,                                                                  bMovementTimeDiscrepancyDetection);                        // 0x02D4(0x0001)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009D PADDING_0626, bool,                                                                  bMovementTimeDiscrepancyResolution);                       // 0x02D5(0x0001)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0626, float,                                                                 MovementTimeDiscrepancyMaxTimeMargin);                     // 0x02D8(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_0626, float,                                                                 MovementTimeDiscrepancyMinTimeMargin);                     // 0x02DC(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0626, float,                                                                 MovementTimeDiscrepancyResolutionRate);                    // 0x02E0(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0626, float,                                                                 MovementTimeDiscrepancyDriftAllowance);                    // 0x02E4(0x0004)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_0626, bool,                                                                  bMovementTimeDiscrepancyForceCorrectionsDuringResolution); // 0x02E8(0x0001)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B1 PADDING_0626, bool,                                                                  bUseDistanceBasedRelevancy);                               // 0x02E9(0x0001)  (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.GameNetworkManager");
		return ptr;
	}


};

// Class Engine.GameplayStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UGameplayStatics : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.GameplayStatics");
		return ptr;
	}


	static void STATIC_UnloadStreamLevel(class UObject* WorldContextObject, const struct FName& LevelName, const struct FLatentActionInfo& LatentInfo, bool bShouldBlockOnUnload);
	static bool STATIC_SuggestProjectileVelocity_CustomArc(class UObject* WorldContextObject, struct FVector* OutLaunchVelocity, const struct FVector& StartPos, const struct FVector& EndPos, float OverrideGravityZ, float ArcParam);
	static class UAudioComponent* STATIC_SpawnSoundAttached(class USoundBase* Sound, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, bool bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, bool bAutoDestroy);
	static class UAudioComponent* STATIC_SpawnSoundAtLocation(class UObject* WorldContextObject, class USoundBase* Sound, const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, bool bAutoDestroy);
	static class UAudioComponent* STATIC_SpawnSound2D(class UObject* WorldContextObject, class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings, bool bPersistAcrossLevelTransition, bool bAutoDestroy);
	static class UObject* STATIC_SpawnObject(class UClass* ObjectClass, class UObject* Outer);
	static class UForceFeedbackComponent* STATIC_SpawnForceFeedbackAttached(class UForceFeedbackEffect* ForceFeedbackEffect, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, bool bStopWhenAttachedToDestroyed, bool bLooping, float IntensityMultiplier, float StartTime, class UForceFeedbackAttenuation* AttenuationSettings, bool bAutoDestroy);
	static class UForceFeedbackComponent* STATIC_SpawnForceFeedbackAtLocation(class UObject* WorldContextObject, class UForceFeedbackEffect* ForceFeedbackEffect, const struct FVector& Location, const struct FRotator& Rotation, bool bLooping, float IntensityMultiplier, float StartTime, class UForceFeedbackAttenuation* AttenuationSettings, bool bAutoDestroy);
	static class UParticleSystemComponent* STATIC_SpawnEmitterAttached(class UParticleSystem* EmitterTemplate, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, TEnumAsByte<EAttachLocation> LocationType, bool bAutoDestroy, EPSCPoolMethod PoolingMethod);
	static class UParticleSystemComponent* STATIC_SpawnEmitterAtLocation(class UObject* WorldContextObject, class UParticleSystem* EmitterTemplate, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, bool bAutoDestroy, EPSCPoolMethod PoolingMethod);
	static class UAudioComponent* STATIC_SpawnDialogueAttached(class UDialogueWave* Dialogue, const struct FDialogueContext& Context, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, bool bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, bool bAutoDestroy);
	static class UAudioComponent* STATIC_SpawnDialogueAtLocation(class UObject* WorldContextObject, class UDialogueWave* Dialogue, const struct FDialogueContext& Context, const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, bool bAutoDestroy);
	static class UAudioComponent* STATIC_SpawnDialogue2D(class UObject* WorldContextObject, class UDialogueWave* Dialogue, const struct FDialogueContext& Context, float VolumeMultiplier, float PitchMultiplier, float StartTime, bool bAutoDestroy);
	static class UDecalComponent* STATIC_SpawnDecalAttached(class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, float LifeSpan);
	static class UDecalComponent* STATIC_SpawnDecalAtLocation(class UObject* WorldContextObject, class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, const struct FVector& Location, const struct FRotator& Rotation, float LifeSpan);
	static void STATIC_SetWorldOriginLocation(class UObject* WorldContextObject, const struct FIntVector& NewLocation);
	static void STATIC_SetViewportMouseCaptureMode(class UObject* WorldContextObject, EMouseCaptureMode MouseCaptureMode);
	static void STATIC_SetSubtitlesEnabled(bool bEnabled);
	static void STATIC_SetSoundMixClassOverride(class UObject* WorldContextObject, class USoundMix* InSoundMixModifier, class USoundClass* InSoundClass, float Volume, float Pitch, float FadeInTime, bool bApplyToChildren);
	static void STATIC_SetPlayerControllerID(class APlayerController* Player, int ControllerId);
	static void STATIC_SetMaxAudioChannelsScaled(class UObject* WorldContextObject, float MaxChannelCountScale);
	static void STATIC_SetGlobalTimeDilation(class UObject* WorldContextObject, float TimeDilation);
	static void STATIC_SetGlobalPitchModulation(class UObject* WorldContextObject, float PitchModulation, float TimeSec);
	static void STATIC_SetGlobalListenerFocusParameters(class UObject* WorldContextObject, float FocusAzimuthScale, float NonFocusAzimuthScale, float FocusDistanceScale, float NonFocusDistanceScale, float FocusVolumeScale, float NonFocusVolumeScale, float FocusPriorityScale, float NonFocusPriorityScale);
	static bool STATIC_SetGamePaused(class UObject* WorldContextObject, bool bPaused);
	static void STATIC_SetEnableWorldRendering(class UObject* WorldContextObject, bool bEnable);
	static void STATIC_SetBaseSoundMix(class UObject* WorldContextObject, class USoundMix* InSoundMix);
	static bool STATIC_SaveGameToSlot(class USaveGame* SaveGameObject, const struct FString& SlotName, int UserIndex);
	static void STATIC_RemovePlayer(class APlayerController* Player, bool bDestroyPawn);
	static struct FVector STATIC_RebaseZeroOriginOntoLocal(class UObject* WorldContextObject, const struct FVector& WorldLocation);
	static struct FVector STATIC_RebaseLocalOriginOntoZero(class UObject* WorldContextObject, const struct FVector& WorldLocation);
	static void STATIC_PushSoundMixModifier(class UObject* WorldContextObject, class USoundMix* InSoundMixModifier);
	static bool STATIC_ProjectWorldToScreen(class APlayerController* Player, const struct FVector& WorldPosition, struct FVector2D* ScreenPosition, bool bPlayerViewportRelative);
	static void STATIC_PopSoundMixModifier(class UObject* WorldContextObject, class USoundMix* InSoundMixModifier);
	static void STATIC_PlayWorldCameraShake(class UObject* WorldContextObject, class UClass* Shake, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float Falloff, bool bOrientShakeTowardsEpicenter);
	static void STATIC_PlaySoundAtLocation(class UObject* WorldContextObject, class USoundBase* Sound, const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, class AActor* OwningActor);
	static void STATIC_PlaySound2D(class UObject* WorldContextObject, class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings, class AActor* OwningActor);
	static void STATIC_PlayDialogueAtLocation(class UObject* WorldContextObject, class UDialogueWave* Dialogue, const struct FDialogueContext& Context, const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings);
	static void STATIC_PlayDialogue2D(class UObject* WorldContextObject, class UDialogueWave* Dialogue, const struct FDialogueContext& Context, float VolumeMultiplier, float PitchMultiplier, float StartTime);
	static struct FString STATIC_ParseOption(const struct FString& Options, const struct FString& Key);
	static void STATIC_OpenLevel(class UObject* WorldContextObject, const struct FName& LevelName, bool bAbsolute, const struct FString& Options);
	static struct FHitResult STATIC_MakeHitResult(bool bBlockingHit, const struct FVector& TraceStart, int FaceIndex, int HitItem, const struct FName& HitBoneName, class UPrimitiveComponent* HitComponent, class AActor* HitActor, const struct FVector& TraceEnd, class UPhysicalMaterial* PhysMat, const struct FVector& Normal, const struct FVector& ImpactPoint, const struct FVector& Location, float distance, float Time, bool bInitialOverlap, const struct FVector& ImpactNormal);
	static void STATIC_LoadStreamLevel(class UObject* WorldContextObject, const struct FName& LevelName, bool bMakeVisibleAfterLoad, bool bShouldBlockOnLoad, const struct FLatentActionInfo& LatentInfo);
	static class USaveGame* STATIC_LoadGameFromSlot(const struct FString& SlotName, int UserIndex);
	static bool STATIC_IsGamePaused(class UObject* WorldContextObject);
	static bool STATIC_HasOption(const struct FString& Options, const struct FString& InKey);
	static bool STATIC_HasLaunchOption(const struct FString& OptionToCheck);
	static int STATIC_GrassOverlappingSphereCount(class UObject* WorldContextObject, class UStaticMesh* StaticMesh, const struct FVector& CenterPosition, float Radius);
	static struct FIntVector STATIC_GetWorldOriginLocation(class UObject* WorldContextObject);
	static float STATIC_GetWorldDeltaSeconds(class UObject* WorldContextObject);
	static EMouseCaptureMode STATIC_GetViewportMouseCaptureMode(class UObject* WorldContextObject);
	static float STATIC_GetUnpausedTimeSeconds(class UObject* WorldContextObject);
	static float STATIC_GetTimeSeconds(class UObject* WorldContextObject);
	static TEnumAsByte<EPhysicalSurface> STATIC_GetSurfaceType(const struct FHitResult& Hit);
	static class ULevelStreaming* STATIC_GetStreamingLevel(class UObject* WorldContextObject, const struct FName& PackageName);
	static float STATIC_GetRealTimeSeconds(class UObject* WorldContextObject);
	static class APawn* STATIC_GetPlayerPawn(class UObject* WorldContextObject, int PlayerIndex);
	static int STATIC_GetPlayerControllerID(class APlayerController* Player);
	static class APlayerController* STATIC_GetPlayerControllerFromID(class UObject* WorldContextObject, int ControllerId);
	static class APlayerController* STATIC_GetPlayerController(class UObject* WorldContextObject, int PlayerIndex);
	static class ACharacter* STATIC_GetPlayerCharacter(class UObject* WorldContextObject, int PlayerIndex);
	static class APlayerCameraManager* STATIC_GetPlayerCameraManager(class UObject* WorldContextObject, int PlayerIndex);
	static struct FString STATIC_GetPlatformName();
	static class UClass* STATIC_GetObjectClass(class UObject* Object);
	static int STATIC_GetMaxAudioChannelCount(class UObject* WorldContextObject);
	static void STATIC_GetKeyValue(const struct FString& Pair, struct FString* Key, struct FString* Value);
	static int STATIC_GetIntOption(const struct FString& Options, const struct FString& Key, int DefaultValue);
	static float STATIC_GetGlobalTimeDilation(class UObject* WorldContextObject);
	static class AGameStateBase* STATIC_GetGameState(class UObject* WorldContextObject);
	static class AGameModeBase* STATIC_GetGameMode(class UObject* WorldContextObject);
	static class UGameInstance* STATIC_GetGameInstance(class UObject* WorldContextObject);
	static bool STATIC_GetEnableWorldRendering(class UObject* WorldContextObject);
	static class UReverbEffect* STATIC_GetCurrentReverbEffect(class UObject* WorldContextObject);
	static struct FString STATIC_GetCurrentLevelName(class UObject* WorldContextObject, bool bRemovePrefixString);
	static float STATIC_GetAudioTimeSeconds(class UObject* WorldContextObject);
	static void STATIC_GetAllActorsWithTag(class UObject* WorldContextObject, const struct FName& Tag, TArray<class AActor*>* OutActors);
	static void STATIC_GetAllActorsWithInterface(class UObject* WorldContextObject, class UClass* Interface, TArray<class AActor*>* OutActors);
	static void STATIC_GetAllActorsOfClassWithTag(class UObject* WorldContextObject, class UClass* ActorClass, const struct FName& Tag, TArray<class AActor*>* OutActors);
	static void STATIC_GetAllActorsOfClass(class UObject* WorldContextObject, class UClass* ActorClass, TArray<class AActor*>* OutActors);
	static class AActor* STATIC_GetActorOfClass(class UObject* WorldContextObject, class UClass* ActorClass);
	static void STATIC_GetActorArrayBounds(TArray<class AActor*> Actors, bool bOnlyCollidingComponents, struct FVector* Center, struct FVector* BoxExtent);
	static struct FVector STATIC_GetActorArrayAverageLocation(TArray<class AActor*> Actors);
	static void STATIC_GetAccurateRealTime(class UObject* WorldContextObject, int* Seconds, float* PartialSeconds);
	static void STATIC_FlushLevelStreaming(class UObject* WorldContextObject);
	static class AActor* STATIC_FinishSpawningActor(class AActor* Actor, const struct FTransform& SpawnTransform);
	static bool STATIC_FindCollisionUV(const struct FHitResult& Hit, int UVChannel, struct FVector2D* UV);
	static void STATIC_EnableLiveStreaming(bool Enable);
	static bool STATIC_DoesSaveGameExist(const struct FString& SlotName, int UserIndex);
	static bool STATIC_DeprojectScreenToWorld(class APlayerController* Player, const struct FVector2D& ScreenPosition, struct FVector* WorldPosition, struct FVector* WorldDirection);
	static bool STATIC_DeleteGameInSlot(const struct FString& SlotName, int UserIndex);
	static void STATIC_DeactivateReverbEffect(class UObject* WorldContextObject, const struct FName& TagName);
	static class UAudioComponent* STATIC_CreateSound2D(class UObject* WorldContextObject, class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings, bool bPersistAcrossLevelTransition, bool bAutoDestroy);
	static class USaveGame* STATIC_CreateSaveGameObject(class UClass* SaveGameClass);
	static class APlayerController* STATIC_CreatePlayer(class UObject* WorldContextObject, int ControllerId, bool bSpawnPlayerController);
	static void STATIC_ClearSoundMixModifiers(class UObject* WorldContextObject);
	static void STATIC_ClearSoundMixClassOverride(class UObject* WorldContextObject, class USoundMix* InSoundMixModifier, class USoundClass* InSoundClass, float FadeOutTime);
	static void STATIC_CancelAsyncLoading();
	static void STATIC_BreakHitResult(const struct FHitResult& Hit, int* FaceIndex, int* HitItem, struct FName* HitBoneName, class UPrimitiveComponent** HitComponent, class AActor** HitActor, class UPhysicalMaterial** PhysMat, struct FVector* TraceStart, struct FVector* ImpactNormal, struct FVector* ImpactPoint, struct FVector* Location, float* distance, float* Time, bool* bInitialOverlap, bool* bBlockingHit, struct FVector* Normal, struct FVector* TraceEnd);
	static bool STATIC_BlueprintSuggestProjectileVelocity(class UObject* WorldContextObject, struct FVector* TossVelocity, const struct FVector& StartLocation, const struct FVector& EndLocation, float LaunchSpeed, float OverrideGravityZ, TEnumAsByte<ESuggestProjVelocityTraceOption> TraceOption, float CollisionRadius, bool bFavorHighArc, bool bDrawDebug);
	static bool STATIC_Blueprint_PredictProjectilePath_ByTraceChannel(class UObject* WorldContextObject, float MaxSimTime, float SimFrequency, float DrawDebugTime, TEnumAsByte<EDrawDebugTrace> DrawDebugType, TArray<class AActor*> ActorsToIgnore, bool bTraceComplex, float OverrideGravityZ, TEnumAsByte<ECollisionChannel> TraceChannel, bool bTracePath, const struct FVector& LaunchVelocity, const struct FVector& StartPos, struct FVector* OutLastTraceDestination, TArray<struct FVector>* OutPathPositions, struct FHitResult* OutHit, float ProjectileRadius);
	static bool STATIC_Blueprint_PredictProjectilePath_ByObjectType(class UObject* WorldContextObject, float MaxSimTime, float SimFrequency, float DrawDebugTime, TEnumAsByte<EDrawDebugTrace> DrawDebugType, TArray<class AActor*> ActorsToIgnore, bool bTraceComplex, float OverrideGravityZ, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTracePath, const struct FVector& LaunchVelocity, const struct FVector& StartPos, struct FVector* OutLastTraceDestination, TArray<struct FVector>* OutPathPositions, struct FHitResult* OutHit, float ProjectileRadius);
	static bool STATIC_Blueprint_PredictProjectilePath_Advanced(class UObject* WorldContextObject, const struct FPredictProjectilePathParams& PredictParams, struct FPredictProjectilePathResult* PredictResult);
	static class AActor* STATIC_BeginSpawningActorFromClass(class UObject* WorldContextObject, class UClass* ActorClass, const struct FTransform& SpawnTransform, bool bNoCollisionFail, class AActor* Owner);
	static class AActor* STATIC_BeginSpawningActorFromBlueprint(class UObject* WorldContextObject, class UBlueprint* Blueprint, const struct FTransform& SpawnTransform, bool bNoCollisionFail);
	static class AActor* STATIC_BeginDeferredActorSpawnFromClass(class UObject* WorldContextObject, class UClass* ActorClass, const struct FTransform& SpawnTransform, ESpawnActorCollisionHandlingMethod CollisionHandlingOverride, class AActor* Owner);
	static bool STATIC_AreSubtitlesEnabled();
	static bool STATIC_AreAnyListenersWithinRange(class UObject* WorldContextObject, const struct FVector& Location, float MaximumRange);
	static bool STATIC_ApplyRadialDamageWithFalloff(class UObject* WorldContextObject, float BaseDamage, float MinimumDamage, const struct FVector& Origin, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, class UClass* DamageTypeClass, TArray<class AActor*> IgnoreActors, class AActor* DamageCauser, class AController* InstigatedByController, TEnumAsByte<ECollisionChannel> DamagePreventionChannel);
	static bool STATIC_ApplyRadialDamage(class UObject* WorldContextObject, float BaseDamage, const struct FVector& Origin, float DamageRadius, class UClass* DamageTypeClass, TArray<class AActor*> IgnoreActors, class AActor* DamageCauser, class AController* InstigatedByController, bool bDoFullDamage, TEnumAsByte<ECollisionChannel> DamagePreventionChannel);
	static float STATIC_ApplyPointDamage(class AActor* DamagedActor, float BaseDamage, const struct FVector& HitFromDirection, const struct FHitResult& HitInfo, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageTypeClass);
	static float STATIC_ApplyDamage(class AActor* DamagedActor, float BaseDamage, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageTypeClass);
	static void STATIC_ActivateReverbEffect(class UObject* WorldContextObject, class UReverbEffect* ReverbEffect, const struct FName& TagName, float Priority, float Volume, float FadeTime);
};

// Class Engine.SpotLight
// 0x000F (FullSize[0x0260] - InheritedSize[0x0251])
// LastOffsetWithSize(0x0251)
#define PADDING_0628 - 0x0000 // Minimum to subtract -> (0007)
class ASpotLight : public ALight
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0628, class USpotLightComponent*,                                            SpotLightComponent);                                       // 0x0258(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SpotLight");
		return ptr;
	}


	void SetOuterConeAngle(float NewOuterConeAngle);
	void SetInnerConeAngle(float NewInnerConeAngle);
};

// Class Engine.GeneratedMeshAreaLight
// 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
// LastOffsetWithSize(0x0260)
class AGeneratedMeshAreaLight : public ASpotLight
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.GeneratedMeshAreaLight");
		return ptr;
	}


};

// Class Engine.HapticFeedbackEffect_Base
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UHapticFeedbackEffect_Base : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.HapticFeedbackEffect_Base");
		return ptr;
	}


};

// Class Engine.HapticFeedbackEffect_Buffer
// 0x0014 (FullSize[0x003C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_062B - 0x0000 // Minimum to subtract -> (0000)
class UHapticFeedbackEffect_Buffer : public UHapticFeedbackEffect_Base
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_062B, TArray<unsigned char>,                                                 Amplitudes);                                               // 0x0028(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_062B, int,                                                                   SampleRate);                                               // 0x0038(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.HapticFeedbackEffect_Buffer");
		return ptr;
	}


};

// Class Engine.HapticFeedbackEffect_Curve
// 0x0110 (FullSize[0x0138] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_062C - 0x0000 // Minimum to subtract -> (0000)
class UHapticFeedbackEffect_Curve : public UHapticFeedbackEffect_Base
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_062C, struct FHapticFeedbackDetails_Curve,                                   HapticDetails);                                            // 0x0028(0x0110)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.HapticFeedbackEffect_Curve");
		return ptr;
	}


};

// Class Engine.HapticFeedbackEffect_SoundWave
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_062D - 0x0000 // Minimum to subtract -> (0000)
class UHapticFeedbackEffect_SoundWave : public UHapticFeedbackEffect_Base
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_062D, class USoundWave*,                                                     SoundWave);                                                // 0x0028(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.HapticFeedbackEffect_SoundWave");
		return ptr;
	}


};

// Class Engine.HealthSnapshotBlueprintLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UHealthSnapshotBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.HealthSnapshotBlueprintLibrary");
		return ptr;
	}


	static void STATIC_StopPerformanceSnapshots();
	static void STATIC_StartPerformanceSnapshots();
	static void STATIC_LogPerformanceSnapshot(const struct FString& SnapshotTitle, bool bResetStats);
};

// Class Engine.HLODProxy
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_062F - 0x0000 // Minimum to subtract -> (0000)
class UHLODProxy : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_062F, TArray<struct FHLODProxyMesh>,                                         ProxyMeshes);                                              // 0x0028(0x0010)  (Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.HLODProxy");
		return ptr;
	}


};

// Class Engine.AmbisonicsSubmixSettingsBase
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UAmbisonicsSubmixSettingsBase : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.AmbisonicsSubmixSettingsBase");
		return ptr;
	}


};

// Class Engine.SpatializationPluginSourceSettingsBase
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class USpatializationPluginSourceSettingsBase : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SpatializationPluginSourceSettingsBase");
		return ptr;
	}


};

// Class Engine.OcclusionPluginSourceSettingsBase
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UOcclusionPluginSourceSettingsBase : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.OcclusionPluginSourceSettingsBase");
		return ptr;
	}


};

// Class Engine.SoundModulationPluginSourceSettingsBase
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class USoundModulationPluginSourceSettingsBase : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundModulationPluginSourceSettingsBase");
		return ptr;
	}


};

// Class Engine.ReverbPluginSourceSettingsBase
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UReverbPluginSourceSettingsBase : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ReverbPluginSourceSettingsBase");
		return ptr;
	}


};

// Class Engine.ImportanceSamplingLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UImportanceSamplingLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ImportanceSamplingLibrary");
		return ptr;
	}


	static float STATIC_RandomSobolFloat(int Index, int Dimension, float Seed);
	static struct FVector STATIC_RandomSobolCell3D(int Index, int NumCells, const struct FVector& Cell, const struct FVector& Seed);
	static struct FVector2D STATIC_RandomSobolCell2D(int Index, int NumCells, const struct FVector2D& Cell, const struct FVector2D& Seed);
	static float STATIC_NextSobolFloat(int Index, int Dimension, float PreviousValue);
	static struct FVector STATIC_NextSobolCell3D(int Index, int NumCells, const struct FVector& PreviousValue);
	static struct FVector2D STATIC_NextSobolCell2D(int Index, int NumCells, const struct FVector2D& PreviousValue);
	static struct FImportanceTexture STATIC_MakeImportanceTexture(class UTexture2D* Texture, TEnumAsByte<EImportanceWeight> WeightingFunc);
	static void STATIC_ImportanceSample(const struct FImportanceTexture& Texture, const struct FVector2D& Rand, int Samples, float Intensity, struct FVector2D* SamplePosition, struct FLinearColor* SampleColor, float* SampleIntensity, float* SampleSize);
	static void STATIC_BreakImportanceTexture(const struct FImportanceTexture& ImportanceTexture, class UTexture2D** Texture, TEnumAsByte<EImportanceWeight>* WeightingFunc);
};

// Class Engine.ImportantToggleSettingInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UImportantToggleSettingInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ImportantToggleSettingInterface");
		return ptr;
	}


};

// Class Engine.InGameAdManager
// 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_0637 - 0x0000 // Minimum to subtract -> (0000)
class UInGameAdManager : public UPlatformInterfaceBase
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0637, unsigned char,                                                         bShouldPauseWhileAdOpen);                                  // 0x0038(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0637, TArray<struct FScriptDelegate>,                                        ClickedBannerDelegates);                                   // 0x0040(0x0010)  (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0637, TArray<struct FScriptDelegate>,                                        ClosedAdDelegates);                                        // 0x0050(0x0010)  (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InGameAdManager");
		return ptr;
	}


};

// Class Engine.InheritableComponentHandler
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0638 - 0x0000 // Minimum to subtract -> (0000)
class UInheritableComponentHandler : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0638, TArray<struct FComponentOverrideRecord>,                               Records);                                                  // 0x0028(0x0010)  (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0638, TArray<class UActorComponent*>,                                        UnnecessaryComponents);                                    // 0x0038(0x0010)  (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InheritableComponentHandler");
		return ptr;
	}


};

// Class Engine.InputDelegateBinding
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UInputDelegateBinding : public UDynamicBlueprintBinding
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InputDelegateBinding");
		return ptr;
	}


};

// Class Engine.InputActionDelegateBinding
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_063A - 0x0000 // Minimum to subtract -> (0000)
class UInputActionDelegateBinding : public UInputDelegateBinding
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_063A, TArray<struct FBlueprintInputActionDelegateBinding>,                   InputActionDelegateBindings);                              // 0x0028(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InputActionDelegateBinding");
		return ptr;
	}


};

// Class Engine.InputAxisDelegateBinding
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_063B - 0x0000 // Minimum to subtract -> (0000)
class UInputAxisDelegateBinding : public UInputDelegateBinding
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_063B, TArray<struct FBlueprintInputAxisDelegateBinding>,                     InputAxisDelegateBindings);                                // 0x0028(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InputAxisDelegateBinding");
		return ptr;
	}


};

// Class Engine.InputAxisKeyDelegateBinding
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_063C - 0x0000 // Minimum to subtract -> (0000)
class UInputAxisKeyDelegateBinding : public UInputDelegateBinding
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_063C, TArray<struct FBlueprintInputAxisKeyDelegateBinding>,                  InputAxisKeyDelegateBindings);                             // 0x0028(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InputAxisKeyDelegateBinding");
		return ptr;
	}


};

// Class Engine.InputKeyDelegateBinding
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_063D - 0x0000 // Minimum to subtract -> (0000)
class UInputKeyDelegateBinding : public UInputDelegateBinding
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_063D, TArray<struct FBlueprintInputKeyDelegateBinding>,                      InputKeyDelegateBindings);                                 // 0x0028(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InputKeyDelegateBinding");
		return ptr;
	}


};

// Class Engine.InputSettings
// 0x00C8 (FullSize[0x00F0] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_063E - 0x0000 // Minimum to subtract -> (0000)
class UInputSettings : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_063E, TArray<struct FInputAxisConfigEntry>,                                  AxisConfig);                                               // 0x0028(0x0010)  (Edit, EditFixedSize, ZeroConstructor, Config, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_063E, unsigned char,                                                         bAltEnterTogglesFullscreen);                               // 0x0038(0x0001) BIT_FIELD (Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_063E, unsigned char,                                                         bF11TogglesFullscreen);                                    // 0x0038(0x0001) BIT_FIELD (Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_063E, unsigned char,                                                         bUseMouseForTouch);                                        // 0x0038(0x0001) BIT_FIELD (Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_063E, unsigned char,                                                         bEnableMouseSmoothing);                                    // 0x0038(0x0001) BIT_FIELD (Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_063E, unsigned char,                                                         bEnableFOVScaling);                                        // 0x0038(0x0001) BIT_FIELD (Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_063E, unsigned char,                                                         bCaptureMouseOnLaunch);                                    // 0x0038(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_063E, unsigned char,                                                         bDefaultViewportMouseLock);                                // 0x0038(0x0001) BIT_FIELD (Config, Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_063E, unsigned char,                                                         bAlwaysShowTouchInterface);                                // 0x0038(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0011 PADDING_063E, unsigned char,                                                         bShowConsoleOnFourFingerTap);                              // 0x0039(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0011 PADDING_063E, unsigned char,                                                         bEnableGestureRecognizer);                                 // 0x0039(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0012 PADDING_063E, bool,                                                                  bUseAutocorrect);                                          // 0x003A(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_063E, TArray<struct FString>,                                                ExcludedAutocorrectOS);                                    // 0x0040(0x0010)  (Edit, ZeroConstructor, Config, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_063E, TArray<struct FString>,                                                ExcludedAutocorrectCultures);                              // 0x0050(0x0010)  (Edit, ZeroConstructor, Config, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_063E, TArray<struct FString>,                                                ExcludedAutocorrectDeviceModels);                          // 0x0060(0x0010)  (Edit, ZeroConstructor, Config, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_063E, EMouseCaptureMode,                                                     DefaultViewportMouseCaptureMode);                          // 0x0070(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0049 PADDING_063E, EMouseLockMode,                                                        DefaultViewportMouseLockMode);                             // 0x0071(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004C PADDING_063E, float,                                                                 FOVScale);                                                 // 0x0074(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_063E, float,                                                                 DoubleClickTime);                                          // 0x0078(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_063E, TArray<struct FInputActionKeyMapping>,                                 ActionMappings);                                           // 0x0080(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0068 PADDING_063E, TArray<struct FInputAxisKeyMapping>,                                   AxisMappings);                                             // 0x0090(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0078 PADDING_063E, TArray<struct FInputActionSpeechMapping>,                              SpeechMappings);                                           // 0x00A0(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0088 PADDING_063E, struct FSoftObjectPath,                                                DefaultTouchInterface);                                    // 0x00B0(0x0018)  (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_063E, struct FKey,                                                           ConsoleKey);                                               // 0x00C8(0x0018)  (Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_063E, TArray<struct FKey>,                                                   ConsoleKeys);                                              // 0x00E0(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InputSettings");
		return ptr;
	}


	void SaveKeyMappings();
	void RemoveAxisMapping(const struct FInputAxisKeyMapping& KeyMapping, bool bForceRebuildKeymaps);
	void RemoveActionMapping(const struct FInputActionKeyMapping& KeyMapping, bool bForceRebuildKeymaps);
	static class UInputSettings* STATIC_GetInputSettings();
	void GetAxisNames(TArray<struct FName>* AxisNames);
	void GetAxisMappingByName(const struct FName& InAxisName, TArray<struct FInputAxisKeyMapping>* OutMappings);
	void GetActionNames(TArray<struct FName>* ActionNames);
	void GetActionMappingByName(const struct FName& InActionName, TArray<struct FInputActionKeyMapping>* OutMappings);
	void ForceRebuildKeymaps();
	void AddAxisMapping(const struct FInputAxisKeyMapping& KeyMapping, bool bForceRebuildKeymaps);
	void AddActionMapping(const struct FInputActionKeyMapping& KeyMapping, bool bForceRebuildKeymaps);
};

// Class Engine.InputTouchDelegateBinding
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_063F - 0x0000 // Minimum to subtract -> (0000)
class UInputTouchDelegateBinding : public UInputDelegateBinding
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_063F, TArray<struct FBlueprintInputTouchDelegateBinding>,                    InputTouchDelegateBindings);                               // 0x0028(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InputTouchDelegateBinding");
		return ptr;
	}


};

// Class Engine.InputVectorAxisDelegateBinding
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
class UInputVectorAxisDelegateBinding : public UInputAxisKeyDelegateBinding
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InputVectorAxisDelegateBinding");
		return ptr;
	}


};

// Class Engine.Interface_AssetUserData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UInterface_AssetUserData : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Interface_AssetUserData");
		return ptr;
	}


};

// Class Engine.Interface_CollisionDataProvider
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UInterface_CollisionDataProvider : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Interface_CollisionDataProvider");
		return ptr;
	}


};

// Class Engine.Interface_PostProcessVolume
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UInterface_PostProcessVolume : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Interface_PostProcessVolume");
		return ptr;
	}


};

// Class Engine.Interface_PreviewMeshProvider
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UInterface_PreviewMeshProvider : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Interface_PreviewMeshProvider");
		return ptr;
	}


};

// Class Engine.InterpCurveEdSetup
// 0x0014 (FullSize[0x003C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0645 - 0x0000 // Minimum to subtract -> (0000)
class UInterpCurveEdSetup : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0645, TArray<struct FCurveEdTab>,                                            Tabs);                                                     // 0x0028(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0645, int,                                                                   ActiveTab);                                                // 0x0038(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpCurveEdSetup");
		return ptr;
	}


};

// Class Engine.InterpData
// 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0646 - 0x0000 // Minimum to subtract -> (0000)
class UInterpData : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0646, float,                                                                 InterpLength);                                             // 0x0028(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0646, float,                                                                 PathBuildTime);                                            // 0x002C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0646, TArray<class UInterpGroup*>,                                           InterpGroups);                                             // 0x0030(0x0010)  (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0646, class UInterpCurveEdSetup*,                                            CurveEdSetup);                                             // 0x0040(0x0008)  (ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0646, float,                                                                 EdSectionStart);                                           // 0x0048(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0646, float,                                                                 EdSectionEnd);                                             // 0x004C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0646, unsigned char,                                                         bShouldBakeAndPrune);                                      // 0x0050(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0646, class UInterpGroupDirector*,                                           CachedDirectorGroup);                                      // 0x0058(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0646, TArray<struct FName>,                                                  AllEventNames);                                            // 0x0060(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpData");
		return ptr;
	}


};

// Class Engine.InterpFilter
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0647 - 0x0000 // Minimum to subtract -> (0000)
class UInterpFilter : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0647, struct FString,                                                        Caption);                                                  // 0x0028(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpFilter");
		return ptr;
	}


};

// Class Engine.InterpFilter_Classes
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
class UInterpFilter_Classes : public UInterpFilter
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpFilter_Classes");
		return ptr;
	}


};

// Class Engine.InterpFilter_Custom
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
class UInterpFilter_Custom : public UInterpFilter
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpFilter_Custom");
		return ptr;
	}


};

// Class Engine.InterpGroup
// 0x0025 (FullSize[0x004D] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_064A - 0x0000 // Minimum to subtract -> (0008)
class UInterpGroup : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_064A, TArray<class UInterpTrack*>,                                           InterpTracks);                                             // 0x0030(0x0010)  (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_064A, struct FName,                                                          GroupName);                                                // 0x0040(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_064A, struct FColor,                                                         GroupColor);                                               // 0x0048(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_064A, unsigned char,                                                         bCollapsed);                                               // 0x004C(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_064A, unsigned char,                                                         bVisible);                                                 // 0x004C(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_064A, unsigned char,                                                         bIsFolder);                                                // 0x004C(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_064A, unsigned char,                                                         bIsParented);                                              // 0x004C(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_064A, unsigned char,                                                         bIsSelected);                                              // 0x004C(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpGroup");
		return ptr;
	}


};

// Class Engine.InterpGroupCamera
// 0x000F (FullSize[0x005C] - InheritedSize[0x004D])
// LastOffsetWithSize(0x004D)
#define PADDING_064B - 0x0000 // Minimum to subtract -> (0003)
class UInterpGroupCamera : public UInterpGroup
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_064B, class UCameraAnim*,                                                    CameraAnimInst);                                           // 0x0050(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_064B, float,                                                                 CompressTolerance);                                        // 0x0058(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpGroupCamera");
		return ptr;
	}


};

// Class Engine.InterpGroupDirector
// 0x0003 (FullSize[0x0050] - InheritedSize[0x004D])
// LastOffsetWithSize(0x004D)
class UInterpGroupDirector : public UInterpGroup
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpGroupDirector");
		return ptr;
	}


};

// Class Engine.InterpGroupInst
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_064D - 0x0000 // Minimum to subtract -> (0000)
class UInterpGroupInst : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_064D, class UInterpGroup*,                                                   Group);                                                    // 0x0028(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_064D, class AActor*,                                                         GroupActor);                                               // 0x0030(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_064D, TArray<class UInterpTrackInst*>,                                       TrackInst);                                                // 0x0038(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpGroupInst");
		return ptr;
	}


};

// Class Engine.InterpGroupInstCamera
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
// LastOffsetWithSize(0x0048)
class UInterpGroupInstCamera : public UInterpGroupInst
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpGroupInstCamera");
		return ptr;
	}


};

// Class Engine.InterpGroupInstDirector
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
// LastOffsetWithSize(0x0048)
class UInterpGroupInstDirector : public UInterpGroupInst
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpGroupInstDirector");
		return ptr;
	}


};

// Class Engine.InterpToMovementComponent
// 0x007C (FullSize[0x0190] - InheritedSize[0x0114])
// LastOffsetWithSize(0x0114)
#define PADDING_0650 - 0x0000 // Minimum to subtract -> (0004)
class UInterpToMovementComponent : public UMovementComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_0650, float,                                                                 Duration);                                                 // 0x0118(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0650, unsigned char,                                                         bPauseOnImpact);                                           // 0x011C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0650, bool,                                                                  bSweep);                                                   // 0x0120(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000D PADDING_0650, ETeleportType,                                                         TeleportType);                                             // 0x0121(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000E PADDING_0650, EInterpToBehaviourType,                                                BehaviourType);                                            // 0x0122(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_0650, bool,                                                                  bCheckIfStillInWorld);                                     // 0x0123(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0650, unsigned char,                                                         bForceSubStepping);                                        // 0x0124(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0650, struct FScriptMulticastDelegate,                                       OnInterpToReverse);                                        // 0x0128(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0650, struct FScriptMulticastDelegate,                                       OnInterpToStop);                                           // 0x0138(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0650, struct FScriptMulticastDelegate,                                       OnWaitBeginDelegate);                                      // 0x0148(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0650, struct FScriptMulticastDelegate,                                       OnWaitEndDelegate);                                        // 0x0158(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0054 PADDING_0650, struct FScriptMulticastDelegate,                                       OnResetDelegate);                                          // 0x0168(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0064 PADDING_0650, float,                                                                 MaxSimulationTimeStep);                                    // 0x0178(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0650, int,                                                                   MaxSimulationIterations);                                  // 0x017C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_0650, TArray<struct FInterpControlPoint>,                                    ControlPoints);                                            // 0x0180(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpToMovementComponent");
		return ptr;
	}


	void StopSimulating(const struct FHitResult& HitResult);
	void RestartMovement(float InitialDirection);
	void OnInterpToWaitEndDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
	void OnInterpToWaitBeginDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
	void OnInterpToStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
	void OnInterpToReverseDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
	void OnInterpToResetDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
	void FinaliseControlPoints();
};

// Class Engine.InterpTrack
// 0x0041 (FullSize[0x0069] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0651 - 0x0000 // Minimum to subtract -> (0010)
class UInterpTrack : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0651, TArray<class UInterpTrack*>,                                           SubTracks);                                                // 0x0038(0x0010)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0651, class UClass*,                                                         TrackInstClass);                                           // 0x0048(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0651, TEnumAsByte<ETrackActiveCondition>,                                    ActiveCondition);                                          // 0x0050(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0651, struct FString,                                                        TrackTitle);                                               // 0x0058(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0651, unsigned char,                                                         bOnePerGroup);                                             // 0x0068(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0651, unsigned char,                                                         bDirGroupOnly);                                            // 0x0068(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0651, unsigned char,                                                         bDisableTrack);                                            // 0x0068(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0651, unsigned char,                                                         bIsSelected);                                              // 0x0068(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0651, unsigned char,                                                         bIsAnimControlTrack);                                      // 0x0068(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0651, unsigned char,                                                         bSubTrackOnly);                                            // 0x0068(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0651, unsigned char,                                                         bVisible);                                                 // 0x0068(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0651, unsigned char,                                                         bIsRecording);                                             // 0x0068(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrack");
		return ptr;
	}


};

// Class Engine.InterpTrackFloatBase
// 0x0023 (FullSize[0x008C] - InheritedSize[0x0069])
// LastOffsetWithSize(0x0069)
#define PADDING_0652 - 0x0000 // Minimum to subtract -> (0007)
class UInterpTrackFloatBase : public UInterpTrack
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0652, struct FInterpCurveFloat,                                              FloatTrack);                                               // 0x0070(0x0018)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_0652, float,                                                                 CurveTension);                                             // 0x0088(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackFloatBase");
		return ptr;
	}


};

// Class Engine.InterpTrackAnimControl
// 0x001D (FullSize[0x00A9] - InheritedSize[0x008C])
// LastOffsetWithSize(0x008C)
#define PADDING_0653 - 0x0000 // Minimum to subtract -> (0004)
class UInterpTrackAnimControl : public UInterpTrackFloatBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_0653, struct FName,                                                          SlotName);                                                 // 0x0090(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0653, TArray<struct FAnimControlTrackKey>,                                   AnimSeqs);                                                 // 0x0098(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0653, unsigned char,                                                         bSkipAnimNotifiers);                                       // 0x00A8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackAnimControl");
		return ptr;
	}


};

// Class Engine.InterpTrackVectorBase
// 0x0023 (FullSize[0x008C] - InheritedSize[0x0069])
// LastOffsetWithSize(0x0069)
#define PADDING_0654 - 0x0000 // Minimum to subtract -> (0007)
class UInterpTrackVectorBase : public UInterpTrack
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0654, struct FInterpCurveVector,                                             VectorTrack);                                              // 0x0070(0x0018)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_0654, float,                                                                 CurveTension);                                             // 0x0088(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackVectorBase");
		return ptr;
	}


};

// Class Engine.InterpTrackAudioMaster
// 0x0004 (FullSize[0x0090] - InheritedSize[0x008C])
// LastOffsetWithSize(0x008C)
class UInterpTrackAudioMaster : public UInterpTrackVectorBase
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackAudioMaster");
		return ptr;
	}


};

// Class Engine.InterpTrackBoolProp
// 0x001F (FullSize[0x0088] - InheritedSize[0x0069])
// LastOffsetWithSize(0x0069)
#define PADDING_0656 - 0x0000 // Minimum to subtract -> (0007)
class UInterpTrackBoolProp : public UInterpTrack
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0656, TArray<struct FBoolTrackKey>,                                          BoolTrack);                                                // 0x0070(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_0656, struct FName,                                                          PropertyName);                                             // 0x0080(0x0008)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackBoolProp");
		return ptr;
	}


};

// Class Engine.InterpTrackColorProp
// 0x000C (FullSize[0x0098] - InheritedSize[0x008C])
// LastOffsetWithSize(0x008C)
#define PADDING_0657 - 0x0000 // Minimum to subtract -> (0004)
class UInterpTrackColorProp : public UInterpTrackVectorBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_0657, struct FName,                                                          PropertyName);                                             // 0x0090(0x0008)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackColorProp");
		return ptr;
	}


};

// Class Engine.InterpTrackColorScale
// 0x0004 (FullSize[0x0090] - InheritedSize[0x008C])
// LastOffsetWithSize(0x008C)
class UInterpTrackColorScale : public UInterpTrackVectorBase
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackColorScale");
		return ptr;
	}


};

// Class Engine.InterpTrackDirector
// 0x0018 (FullSize[0x0081] - InheritedSize[0x0069])
// LastOffsetWithSize(0x0069)
#define PADDING_0659 - 0x0000 // Minimum to subtract -> (0007)
class UInterpTrackDirector : public UInterpTrack
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0659, TArray<struct FDirectorTrackCut>,                                      CutTrack);                                                 // 0x0070(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_0659, unsigned char,                                                         bSimulateCameraCutsOnClients);                             // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackDirector");
		return ptr;
	}


};

// Class Engine.InterpTrackEvent
// 0x0018 (FullSize[0x0081] - InheritedSize[0x0069])
// LastOffsetWithSize(0x0069)
#define PADDING_065A - 0x0000 // Minimum to subtract -> (0007)
class UInterpTrackEvent : public UInterpTrack
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_065A, TArray<struct FEventTrackKey>,                                         EventTrack);                                               // 0x0070(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_065A, unsigned char,                                                         bFireEventsWhenForwards);                                  // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_065A, unsigned char,                                                         bFireEventsWhenBackwards);                                 // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_065A, unsigned char,                                                         bFireEventsWhenJumpingForwards);                           // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_065A, unsigned char,                                                         bUseCustomEventName);                                      // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackEvent");
		return ptr;
	}


};

// Class Engine.InterpTrackFade
// 0x0018 (FullSize[0x00A4] - InheritedSize[0x008C])
// LastOffsetWithSize(0x008C)
#define PADDING_065B - 0x0000 // Minimum to subtract -> (0004)
class UInterpTrackFade : public UInterpTrackFloatBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_065B, unsigned char,                                                         bPersistFade);                                             // 0x0090(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_065B, unsigned char,                                                         bFadeAudio);                                               // 0x0090(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_065B, struct FLinearColor,                                                   FadeColor);                                                // 0x0094(0x0010)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackFade");
		return ptr;
	}


};

// Class Engine.InterpTrackFloatAnimBPParam
// 0x001C (FullSize[0x00A8] - InheritedSize[0x008C])
// LastOffsetWithSize(0x008C)
#define PADDING_065C - 0x0000 // Minimum to subtract -> (0004)
class UInterpTrackFloatAnimBPParam : public UInterpTrackFloatBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_065C, class UAnimBlueprintGeneratedClass*,                                   AnimBlueprintClass);                                       // 0x0090(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_065C, class UClass*,                                                         AnimClass);                                                // 0x0098(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_065C, struct FName,                                                          ParamName);                                                // 0x00A0(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackFloatAnimBPParam");
		return ptr;
	}


};

// Class Engine.InterpTrackFloatMaterialParam
// 0x001C (FullSize[0x00A8] - InheritedSize[0x008C])
// LastOffsetWithSize(0x008C)
#define PADDING_065D - 0x0000 // Minimum to subtract -> (0004)
class UInterpTrackFloatMaterialParam : public UInterpTrackFloatBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_065D, TArray<class UMaterialInterface*>,                                     TargetMaterials);                                          // 0x0090(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_065D, struct FName,                                                          ParamName);                                                // 0x00A0(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackFloatMaterialParam");
		return ptr;
	}


};

// Class Engine.InterpTrackFloatParticleParam
// 0x000C (FullSize[0x0098] - InheritedSize[0x008C])
// LastOffsetWithSize(0x008C)
#define PADDING_065E - 0x0000 // Minimum to subtract -> (0004)
class UInterpTrackFloatParticleParam : public UInterpTrackFloatBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_065E, struct FName,                                                          ParamName);                                                // 0x0090(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackFloatParticleParam");
		return ptr;
	}


};

// Class Engine.InterpTrackFloatProp
// 0x000C (FullSize[0x0098] - InheritedSize[0x008C])
// LastOffsetWithSize(0x008C)
#define PADDING_065F - 0x0000 // Minimum to subtract -> (0004)
class UInterpTrackFloatProp : public UInterpTrackFloatBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_065F, struct FName,                                                          PropertyName);                                             // 0x0090(0x0008)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackFloatProp");
		return ptr;
	}


};

// Class Engine.InterpTrackInst
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UInterpTrackInst : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInst");
		return ptr;
	}


};

// Class Engine.InterpTrackInstAnimControl
// 0x0004 (FullSize[0x002C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0661 - 0x0000 // Minimum to subtract -> (0000)
class UInterpTrackInstAnimControl : public UInterpTrackInst
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0661, float,                                                                 LastUpdatePosition);                                       // 0x0028(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstAnimControl");
		return ptr;
	}


};

// Class Engine.InterpTrackInstAudioMaster
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UInterpTrackInstAudioMaster : public UInterpTrackInst
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstAudioMaster");
		return ptr;
	}


};

// Class Engine.InterpTrackInstProperty
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0663 - 0x0000 // Minimum to subtract -> (0000)
class UInterpTrackInstProperty : public UInterpTrackInst
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0663, class UProperty*,                                                      InterpProperty);                                           // 0x0028(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0663, class UObject*,                                                        PropertyOuterObjectInst);                                  // 0x0030(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstProperty");
		return ptr;
	}


};

// Class Engine.InterpTrackInstBoolProp
// 0x0011 (FullSize[0x0049] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_0664 - 0x0000 // Minimum to subtract -> (0008)
class UInterpTrackInstBoolProp : public UInterpTrackInstProperty
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0664, class UBoolProperty*,                                                  BoolProperty);                                             // 0x0040(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0664, bool,                                                                  ResetBool);                                                // 0x0048(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstBoolProp");
		return ptr;
	}


};

// Class Engine.InterpTrackInstColorProp
// 0x000C (FullSize[0x0044] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_0665 - 0x0000 // Minimum to subtract -> (0008)
class UInterpTrackInstColorProp : public UInterpTrackInstProperty
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0665, struct FColor,                                                         ResetColor);                                               // 0x0040(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstColorProp");
		return ptr;
	}


};

// Class Engine.InterpTrackInstColorScale
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UInterpTrackInstColorScale : public UInterpTrackInst
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstColorScale");
		return ptr;
	}


};

// Class Engine.InterpTrackInstDirector
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0667 - 0x0000 // Minimum to subtract -> (0000)
class UInterpTrackInstDirector : public UInterpTrackInst
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0667, class AActor*,                                                         OldViewTarget);                                            // 0x0028(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstDirector");
		return ptr;
	}


};

// Class Engine.InterpTrackInstEvent
// 0x0004 (FullSize[0x002C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0668 - 0x0000 // Minimum to subtract -> (0000)
class UInterpTrackInstEvent : public UInterpTrackInst
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0668, float,                                                                 LastUpdatePosition);                                       // 0x0028(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstEvent");
		return ptr;
	}


};

// Class Engine.InterpTrackInstFade
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UInterpTrackInstFade : public UInterpTrackInst
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstFade");
		return ptr;
	}


};

// Class Engine.InterpTrackInstFloatAnimBPParam
// 0x000C (FullSize[0x0034] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_066A - 0x0000 // Minimum to subtract -> (0000)
class UInterpTrackInstFloatAnimBPParam : public UInterpTrackInst
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_066A, class UAnimInstance*,                                                  AnimScriptInstance);                                       // 0x0028(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_066A, float,                                                                 ResetFloat);                                               // 0x0030(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstFloatAnimBPParam");
		return ptr;
	}


};

// Class Engine.InterpTrackInstFloatMaterialParam
// 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_066B - 0x0000 // Minimum to subtract -> (0000)
class UInterpTrackInstFloatMaterialParam : public UInterpTrackInst
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_066B, TArray<class UMaterialInstanceDynamic*>,                               MaterialInstances);                                        // 0x0028(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_066B, TArray<float>,                                                         ResetFloats);                                              // 0x0038(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_066B, TArray<struct FPrimitiveMaterialRef>,                                  PrimitiveMaterialRefs);                                    // 0x0048(0x0010)  (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_066B, class UInterpTrackFloatMaterialParam*,                                 InstancedTrack);                                           // 0x0058(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstFloatMaterialParam");
		return ptr;
	}


};

// Class Engine.InterpTrackInstFloatParticleParam
// 0x0004 (FullSize[0x002C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_066C - 0x0000 // Minimum to subtract -> (0000)
class UInterpTrackInstFloatParticleParam : public UInterpTrackInst
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_066C, float,                                                                 ResetFloat);                                               // 0x0028(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstFloatParticleParam");
		return ptr;
	}


};

// Class Engine.InterpTrackInstFloatProp
// 0x000C (FullSize[0x0044] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_066D - 0x0000 // Minimum to subtract -> (0008)
class UInterpTrackInstFloatProp : public UInterpTrackInstProperty
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_066D, float,                                                                 ResetFloat);                                               // 0x0040(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstFloatProp");
		return ptr;
	}


};

// Class Engine.InterpTrackInstLinearColorProp
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_066E - 0x0000 // Minimum to subtract -> (0008)
class UInterpTrackInstLinearColorProp : public UInterpTrackInstProperty
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_066E, struct FLinearColor,                                                   ResetColor);                                               // 0x0040(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstLinearColorProp");
		return ptr;
	}


};

// Class Engine.InterpTrackInstMove
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_066F - 0x0000 // Minimum to subtract -> (0000)
class UInterpTrackInstMove : public UInterpTrackInst
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_066F, struct FVector,                                                        ResetLocation);                                            // 0x0028(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_066F, struct FRotator,                                                       ResetRotation);                                            // 0x0034(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstMove");
		return ptr;
	}


};

// Class Engine.InterpTrackInstParticleReplay
// 0x0004 (FullSize[0x002C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0670 - 0x0000 // Minimum to subtract -> (0000)
class UInterpTrackInstParticleReplay : public UInterpTrackInst
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0670, float,                                                                 LastUpdatePosition);                                       // 0x0028(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstParticleReplay");
		return ptr;
	}


};

// Class Engine.InterpTrackInstSlomo
// 0x0004 (FullSize[0x002C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0671 - 0x0000 // Minimum to subtract -> (0000)
class UInterpTrackInstSlomo : public UInterpTrackInst
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0671, float,                                                                 OldTimeDilation);                                          // 0x0028(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstSlomo");
		return ptr;
	}


};

// Class Engine.InterpTrackInstSound
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0672 - 0x0000 // Minimum to subtract -> (0000)
class UInterpTrackInstSound : public UInterpTrackInst
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0672, float,                                                                 LastUpdatePosition);                                       // 0x0028(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0672, class UAudioComponent*,                                                PlayAudioComp);                                            // 0x0030(0x0008)  (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstSound");
		return ptr;
	}


};

// Class Engine.InterpTrackInstToggle
// 0x0009 (FullSize[0x0031] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0673 - 0x0000 // Minimum to subtract -> (0000)
class UInterpTrackInstToggle : public UInterpTrackInst
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0673, TEnumAsByte<ETrackToggleAction>,                                       Action);                                                   // 0x0028(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0673, float,                                                                 LastUpdatePosition);                                       // 0x002C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0673, unsigned char,                                                         bSavedActiveState);                                        // 0x0030(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstToggle");
		return ptr;
	}


};

// Class Engine.InterpTrackInstVectorMaterialParam
// 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0674 - 0x0000 // Minimum to subtract -> (0000)
class UInterpTrackInstVectorMaterialParam : public UInterpTrackInst
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0674, TArray<class UMaterialInstanceDynamic*>,                               MaterialInstances);                                        // 0x0028(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0674, TArray<struct FVector>,                                                ResetVectors);                                             // 0x0038(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0674, TArray<struct FPrimitiveMaterialRef>,                                  PrimitiveMaterialRefs);                                    // 0x0048(0x0010)  (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0674, class UInterpTrackVectorMaterialParam*,                                InstancedTrack);                                           // 0x0058(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstVectorMaterialParam");
		return ptr;
	}


};

// Class Engine.InterpTrackInstVectorProp
// 0x0014 (FullSize[0x004C] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_0675 - 0x0000 // Minimum to subtract -> (0008)
class UInterpTrackInstVectorProp : public UInterpTrackInstProperty
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0675, struct FVector,                                                        ResetVector);                                              // 0x0040(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstVectorProp");
		return ptr;
	}


};

// Class Engine.InterpTrackInstVisibility
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0676 - 0x0000 // Minimum to subtract -> (0000)
class UInterpTrackInstVisibility : public UInterpTrackInst
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0676, TEnumAsByte<EVisibilityTrackAction>,                                   Action);                                                   // 0x0028(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0676, float,                                                                 LastUpdatePosition);                                       // 0x002C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackInstVisibility");
		return ptr;
	}


};

// Class Engine.InterpTrackLinearColorBase
// 0x0023 (FullSize[0x008C] - InheritedSize[0x0069])
// LastOffsetWithSize(0x0069)
#define PADDING_0677 - 0x0000 // Minimum to subtract -> (0007)
class UInterpTrackLinearColorBase : public UInterpTrack
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0677, struct FInterpCurveLinearColor,                                        LinearColorTrack);                                         // 0x0070(0x0018)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_0677, float,                                                                 CurveTension);                                             // 0x0088(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackLinearColorBase");
		return ptr;
	}


};

// Class Engine.InterpTrackLinearColorProp
// 0x000C (FullSize[0x0098] - InheritedSize[0x008C])
// LastOffsetWithSize(0x008C)
#define PADDING_0678 - 0x0000 // Minimum to subtract -> (0004)
class UInterpTrackLinearColorProp : public UInterpTrackLinearColorBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_0678, struct FName,                                                          PropertyName);                                             // 0x0090(0x0008)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackLinearColorProp");
		return ptr;
	}


};

// Class Engine.InterpTrackMove
// 0x005C (FullSize[0x00C5] - InheritedSize[0x0069])
// LastOffsetWithSize(0x0069)
#define PADDING_0679 - 0x0000 // Minimum to subtract -> (0007)
class UInterpTrackMove : public UInterpTrack
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0679, struct FInterpCurveVector,                                             PosTrack);                                                 // 0x0070(0x0018)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_0679, struct FInterpCurveVector,                                             EulerTrack);                                               // 0x0088(0x0018)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_0679, struct FInterpLookupTrack,                                             LookupTrack);                                              // 0x00A0(0x0010)  (NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_0679, struct FName,                                                          LookAtGroupName);                                          // 0x00B0(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004F PADDING_0679, float,                                                                 LinCurveTension);                                          // 0x00B8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_0679, float,                                                                 AngCurveTension);                                          // 0x00BC(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_0679, unsigned char,                                                         bUseQuatInterpolation);                                    // 0x00C0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_0679, unsigned char,                                                         bShowArrowAtKeys);                                         // 0x00C0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_0679, unsigned char,                                                         bDisableMovement);                                         // 0x00C0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_0679, unsigned char,                                                         bShowTranslationOnCurveEd);                                // 0x00C0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_0679, unsigned char,                                                         bShowRotationOnCurveEd);                                   // 0x00C0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_0679, unsigned char,                                                         bHide3DTrack);                                             // 0x00C0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005B PADDING_0679, TEnumAsByte<EInterpTrackMoveRotMode>,                                  RotMode);                                                  // 0x00C4(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackMove");
		return ptr;
	}


};

// Class Engine.InterpTrackMoveAxis
// 0x001C (FullSize[0x00A8] - InheritedSize[0x008C])
// LastOffsetWithSize(0x008C)
#define PADDING_067A - 0x0000 // Minimum to subtract -> (0004)
class UInterpTrackMoveAxis : public UInterpTrackFloatBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_067A, TEnumAsByte<EInterpMoveAxis>,                                          MoveAxis);                                                 // 0x0090(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_067A, struct FInterpLookupTrack,                                             LookupTrack);                                              // 0x0098(0x0010)  (NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackMoveAxis");
		return ptr;
	}


};

// Class Engine.InterpTrackParticleReplay
// 0x0017 (FullSize[0x0080] - InheritedSize[0x0069])
// LastOffsetWithSize(0x0069)
#define PADDING_067B - 0x0000 // Minimum to subtract -> (0007)
class UInterpTrackParticleReplay : public UInterpTrack
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_067B, TArray<struct FParticleReplayTrackKey>,                                TrackKeys);                                                // 0x0070(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackParticleReplay");
		return ptr;
	}


};

// Class Engine.InterpTrackSlomo
// 0x0004 (FullSize[0x0090] - InheritedSize[0x008C])
// LastOffsetWithSize(0x008C)
class UInterpTrackSlomo : public UInterpTrackFloatBase
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackSlomo");
		return ptr;
	}


};

// Class Engine.InterpTrackSound
// 0x0015 (FullSize[0x00A1] - InheritedSize[0x008C])
// LastOffsetWithSize(0x008C)
#define PADDING_067D - 0x0000 // Minimum to subtract -> (0004)
class UInterpTrackSound : public UInterpTrackVectorBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_067D, TArray<struct FSoundTrackKey>,                                         Sounds);                                                   // 0x0090(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_067D, unsigned char,                                                         bPlayOnReverse);                                           // 0x00A0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_067D, unsigned char,                                                         bContinueSoundOnMatineeEnd);                               // 0x00A0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_067D, unsigned char,                                                         bSuppressSubtitles);                                       // 0x00A0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_067D, unsigned char,                                                         bTreatAsDialogue);                                         // 0x00A0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_067D, unsigned char,                                                         bAttach);                                                  // 0x00A0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackSound");
		return ptr;
	}


};

// Class Engine.InterpTrackToggle
// 0x0018 (FullSize[0x0081] - InheritedSize[0x0069])
// LastOffsetWithSize(0x0069)
#define PADDING_067E - 0x0000 // Minimum to subtract -> (0007)
class UInterpTrackToggle : public UInterpTrack
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_067E, TArray<struct FToggleTrackKey>,                                        ToggleTrack);                                              // 0x0070(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_067E, unsigned char,                                                         bActivateSystemEachUpdate);                                // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_067E, unsigned char,                                                         bActivateWithJustAttachedFlag);                            // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_067E, unsigned char,                                                         bFireEventsWhenForwards);                                  // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_067E, unsigned char,                                                         bFireEventsWhenBackwards);                                 // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_067E, unsigned char,                                                         bFireEventsWhenJumpingForwards);                           // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackToggle");
		return ptr;
	}


};

// Class Engine.InterpTrackVectorMaterialParam
// 0x001C (FullSize[0x00A8] - InheritedSize[0x008C])
// LastOffsetWithSize(0x008C)
#define PADDING_067F - 0x0000 // Minimum to subtract -> (0004)
class UInterpTrackVectorMaterialParam : public UInterpTrackVectorBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_067F, TArray<class UMaterialInterface*>,                                     TargetMaterials);                                          // 0x0090(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_067F, struct FName,                                                          ParamName);                                                // 0x00A0(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackVectorMaterialParam");
		return ptr;
	}


};

// Class Engine.InterpTrackVectorProp
// 0x000C (FullSize[0x0098] - InheritedSize[0x008C])
// LastOffsetWithSize(0x008C)
#define PADDING_0680 - 0x0000 // Minimum to subtract -> (0004)
class UInterpTrackVectorProp : public UInterpTrackVectorBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_0680, struct FName,                                                          PropertyName);                                             // 0x0090(0x0008)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackVectorProp");
		return ptr;
	}


};

// Class Engine.InterpTrackVisibility
// 0x0018 (FullSize[0x0081] - InheritedSize[0x0069])
// LastOffsetWithSize(0x0069)
#define PADDING_0681 - 0x0000 // Minimum to subtract -> (0007)
class UInterpTrackVisibility : public UInterpTrack
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0681, TArray<struct FVisibilityTrackKey>,                                    VisibilityTrack);                                          // 0x0070(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_0681, unsigned char,                                                         bFireEventsWhenForwards);                                  // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_0681, unsigned char,                                                         bFireEventsWhenBackwards);                                 // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_0681, unsigned char,                                                         bFireEventsWhenJumpingForwards);                           // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.InterpTrackVisibility");
		return ptr;
	}


};

// Class Engine.IntSerialization
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0682 - 0x0000 // Minimum to subtract -> (0000)
class UIntSerialization : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0682, uint16_t,                                                              UnsignedInt16Variable);                                    // 0x0028(0x0002)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0682, uint32_t,                                                              UnsignedInt32Variable);                                    // 0x002C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0682, uint64_t,                                                              UnsignedInt64Variable);                                    // 0x0030(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0682, int8_t,                                                                SignedInt8Variable);                                       // 0x0038(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0012 PADDING_0682, int16_t,                                                               SignedInt16Variable);                                      // 0x003A(0x0002)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0682, int64_t,                                                               SignedInt64Variable);                                      // 0x0040(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0682, unsigned char,                                                         UnsignedInt8Variable);                                     // 0x0048(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0682, int,                                                                   SignedInt32Variable);                                      // 0x004C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.IntSerialization");
		return ptr;
	}


};

// Class Engine.KillZVolume
// 0x0003 (FullSize[0x0290] - InheritedSize[0x028D])
// LastOffsetWithSize(0x028D)
class AKillZVolume : public APhysicsVolume
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.KillZVolume");
		return ptr;
	}


};

// Class Engine.KismetArrayLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UKismetArrayLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.KismetArrayLibrary");
		return ptr;
	}


	static void STATIC_SetArrayPropertyByName(class UObject* Object, const struct FName& PropertyName, TArray<int> Value);
	static void STATIC_FilterArray(TArray<class AActor*> TargetArray, class UClass* FilterClass, TArray<class AActor*>* FilteredArray);
	static void STATIC_Array_Swap(TArray<int> TargetArray, int FirstIndex, int SecondIndex);
	static void STATIC_Array_Shuffle(TArray<int> TargetArray);
	static void STATIC_Array_Set(TArray<int> TargetArray, int Index, int Item, bool bSizeToFit);
	static void STATIC_Array_Resize(TArray<int> TargetArray, int Size);
	static bool STATIC_Array_RemoveItem(TArray<int> TargetArray, int Item);
	static void STATIC_Array_Remove(TArray<int> TargetArray, int IndexToRemove);
	static int STATIC_Array_Length(TArray<int> TargetArray);
	static int STATIC_Array_LastIndex(TArray<int> TargetArray);
	static bool STATIC_Array_IsValidIndex(TArray<int> TargetArray, int IndexToTest);
	static void STATIC_Array_Insert(TArray<int> TargetArray, int NewItem, int Index);
	static bool STATIC_Array_Identical(TArray<int> ArrayA, TArray<int> ArrayB);
	static void STATIC_Array_Get(TArray<int> TargetArray, int Index, int* Item);
	static int STATIC_Array_Find(TArray<int> TargetArray, int ItemToFind);
	static bool STATIC_Array_Contains(TArray<int> TargetArray, int ItemToFind);
	static void STATIC_Array_Clear(TArray<int> TargetArray);
	static void STATIC_Array_Append(TArray<int> TargetArray, TArray<int> SourceArray);
	static int STATIC_Array_AddUnique(TArray<int> TargetArray, int NewItem);
	static int STATIC_Array_Add(TArray<int> TargetArray, int NewItem);
};

// Class Engine.KismetGuidLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UKismetGuidLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.KismetGuidLibrary");
		return ptr;
	}


	static void STATIC_Parse_StringToGuid(const struct FString& GuidString, struct FGuid* OutGuid, bool* Success);
	static bool STATIC_NotEqual_GuidGuid(const struct FGuid& A, const struct FGuid& B);
	static struct FGuid STATIC_NewGuid();
	static bool STATIC_IsValid_Guid(const struct FGuid& InGuid);
	static void STATIC_Invalidate_Guid(struct FGuid* InGuid);
	static bool STATIC_EqualEqual_GuidGuid(const struct FGuid& A, const struct FGuid& B);
	static struct FString STATIC_Conv_GuidToString(const struct FGuid& InGuid);
};

// Class Engine.KismetInputLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UKismetInputLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.KismetInputLibrary");
		return ptr;
	}


	static bool STATIC_PointerEvent_IsTouchEvent(const struct FPointerEvent& Input);
	static bool STATIC_PointerEvent_IsMouseButtonDown(const struct FPointerEvent& Input, const struct FKey& MouseButton);
	static float STATIC_PointerEvent_GetWheelDelta(const struct FPointerEvent& Input);
	static int STATIC_PointerEvent_GetUserIndex(const struct FPointerEvent& Input);
	static int STATIC_PointerEvent_GetTouchpadIndex(const struct FPointerEvent& Input);
	static struct FVector2D STATIC_PointerEvent_GetScreenSpacePosition(const struct FPointerEvent& Input);
	static int STATIC_PointerEvent_GetPointerIndex(const struct FPointerEvent& Input);
	static struct FVector2D STATIC_PointerEvent_GetLastScreenSpacePosition(const struct FPointerEvent& Input);
	static ESlateGesture STATIC_PointerEvent_GetGestureType(const struct FPointerEvent& Input);
	static struct FVector2D STATIC_PointerEvent_GetGestureDelta(const struct FPointerEvent& Input);
	static struct FKey STATIC_PointerEvent_GetEffectingButton(const struct FPointerEvent& Input);
	static struct FVector2D STATIC_PointerEvent_GetCursorDelta(const struct FPointerEvent& Input);
	static bool STATIC_Key_IsVectorAxis(const struct FKey& Key);
	static bool STATIC_Key_IsValid(const struct FKey& Key);
	static bool STATIC_Key_IsMouseButton(const struct FKey& Key);
	static bool STATIC_Key_IsModifierKey(const struct FKey& Key);
	static bool STATIC_Key_IsKeyboardKey(const struct FKey& Key);
	static bool STATIC_Key_IsGamepadKey(const struct FKey& Key);
	static bool STATIC_Key_IsFloatAxis(const struct FKey& Key);
	static EUINavigation STATIC_Key_GetNavigationDirectionFromKey(const struct FKeyEvent& InKeyEvent);
	static EUINavigation STATIC_Key_GetNavigationDirectionFromAnalog(const struct FAnalogInputEvent& InAnalogEvent);
	static EUINavigationAction STATIC_Key_GetNavigationAction(const struct FKey& InKey);
	static struct FText STATIC_Key_GetDisplayName(const struct FKey& Key);
	static bool STATIC_InputEvent_IsShiftDown(const struct FInputEvent& Input);
	static bool STATIC_InputEvent_IsRightShiftDown(const struct FInputEvent& Input);
	static bool STATIC_InputEvent_IsRightControlDown(const struct FInputEvent& Input);
	static bool STATIC_InputEvent_IsRightCommandDown(const struct FInputEvent& Input);
	static bool STATIC_InputEvent_IsRightAltDown(const struct FInputEvent& Input);
	static bool STATIC_InputEvent_IsRepeat(const struct FInputEvent& Input);
	static bool STATIC_InputEvent_IsLeftShiftDown(const struct FInputEvent& Input);
	static bool STATIC_InputEvent_IsLeftControlDown(const struct FInputEvent& Input);
	static bool STATIC_InputEvent_IsLeftCommandDown(const struct FInputEvent& Input);
	static bool STATIC_InputEvent_IsLeftAltDown(const struct FInputEvent& Input);
	static bool STATIC_InputEvent_IsControlDown(const struct FInputEvent& Input);
	static bool STATIC_InputEvent_IsCommandDown(const struct FInputEvent& Input);
	static bool STATIC_InputEvent_IsAltDown(const struct FInputEvent& Input);
	static struct FText STATIC_InputChord_GetDisplayName(const struct FInputChord& Key);
	static int STATIC_GetUserIndex(const struct FKeyEvent& Input);
	static struct FKey STATIC_GetKey(const struct FKeyEvent& Input);
	static float STATIC_GetAnalogValue(const struct FAnalogInputEvent& Input);
	static bool STATIC_EqualEqual_KeyKey(const struct FKey& A, const struct FKey& B);
	static bool STATIC_EqualEqual_InputChordInputChord(const struct FInputChord& A, const struct FInputChord& B);
	static void STATIC_CalibrateTilt();
};

// Class Engine.KismetInternationalizationLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UKismetInternationalizationLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.KismetInternationalizationLibrary");
		return ptr;
	}


	static bool STATIC_SetCurrentLocale(const struct FString& Culture, bool SaveToConfig);
	static bool STATIC_SetCurrentLanguageAndLocale(const struct FString& Culture, bool SaveToConfig);
	static bool STATIC_SetCurrentLanguage(const struct FString& Culture, bool SaveToConfig);
	static bool STATIC_SetCurrentCulture(const struct FString& Culture, bool SaveToConfig);
	static bool STATIC_SetCurrentAssetGroupCulture(const struct FName& AssetGroup, const struct FString& Culture, bool SaveToConfig);
	static struct FString STATIC_GetSuitableCulture(TArray<struct FString> AvailableCultures, const struct FString& CultureToMatch, const struct FString& FallbackCulture);
	static struct FString STATIC_GetNativeCulture(ELocalizedTextSourceCategory TextCategory);
	static TArray<struct FString> STATIC_GetLocalizedCultures(bool IncludeGame, bool IncludeEngine, bool IncludeEditor, bool IncludeAdditional);
	static struct FString STATIC_GetCurrentLocale();
	static struct FString STATIC_GetCurrentLanguage();
	static struct FString STATIC_GetCurrentCulture();
	static struct FString STATIC_GetCurrentAssetGroupCulture(const struct FName& AssetGroup);
	static struct FString STATIC_GetCultureDisplayName(const struct FString& Culture, bool Localized);
	static void STATIC_ClearCurrentAssetGroupCulture(const struct FName& AssetGroup, bool SaveToConfig);
};

// Class Engine.KismetMaterialLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UKismetMaterialLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.KismetMaterialLibrary");
		return ptr;
	}


	static void STATIC_SetVectorParameterValue(class UObject* WorldContextObject, class UMaterialParameterCollection* Collection, const struct FName& ParameterName, const struct FLinearColor& ParameterValue);
	static void STATIC_SetScalarParameterValue(class UObject* WorldContextObject, class UMaterialParameterCollection* Collection, const struct FName& ParameterName, float ParameterValue);
	static struct FLinearColor STATIC_GetVectorParameterValue(class UObject* WorldContextObject, class UMaterialParameterCollection* Collection, const struct FName& ParameterName);
	static float STATIC_GetScalarParameterValue(class UObject* WorldContextObject, class UMaterialParameterCollection* Collection, const struct FName& ParameterName);
	static class UMaterialInstanceDynamic* STATIC_CreateDynamicMaterialInstance(class UObject* WorldContextObject, class UMaterialInterface* Parent, const struct FName& OptionalName);
};

// Class Engine.KismetMathLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UKismetMathLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.KismetMathLibrary");
		return ptr;
	}


	static int STATIC_Xor_IntInt(int A, int B);
	static int64_t STATIC_Xor_Int64Int64(int64_t A, int64_t B);
	static struct FVector STATIC_WeightedMovingAverage_FVector(const struct FVector& CurrentSample, const struct FVector& PreviousSample, float Weight);
	static struct FRotator STATIC_WeightedMovingAverage_FRotator(const struct FRotator& CurrentSample, const struct FRotator& PreviousSample, float Weight);
	static float STATIC_WeightedMovingAverage_Float(float CurrentSample, float PreviousSample, float Weight);
	static float STATIC_VSizeXYSquared(const struct FVector& A);
	static float STATIC_VSizeXY(const struct FVector& A);
	static float STATIC_VSizeSquared(const struct FVector& A);
	static float STATIC_VSize2DSquared(const struct FVector2D& A);
	static float STATIC_VSize2D(const struct FVector2D& A);
	static float STATIC_VSize(const struct FVector& A);
	static struct FVector STATIC_VLerp(const struct FVector& A, const struct FVector& B, float Alpha);
	static struct FVector STATIC_VInterpTo_Constant(const struct FVector& Current, const struct FVector& Target, float DeltaTime, float InterpSpeed);
	static struct FVector STATIC_VInterpTo(const struct FVector& Current, const struct FVector& Target, float DeltaTime, float InterpSpeed);
	static struct FVector STATIC_VectorSpringInterp(const struct FVector& Current, const struct FVector& Target, struct FVectorSpringState* SpringState, float Stiffness, float CriticalDampingFactor, float DeltaTime, float Mass);
	static struct FVector STATIC_Vector_Zero();
	static struct FVector STATIC_Vector_Up();
	static void STATIC_Vector_UnwindEuler(struct FVector* A);
	static struct FVector2D STATIC_Vector_UnitCartesianToSpherical(const struct FVector& A);
	static struct FVector STATIC_Vector_ToRadians(const struct FVector& A);
	static struct FVector STATIC_Vector_ToDegrees(const struct FVector& A);
	static struct FVector STATIC_Vector_SnappedToGrid(const struct FVector& InVect, float InGridSize);
	static void STATIC_Vector_Set(struct FVector* A, float X, float Y, float Z);
	static struct FVector STATIC_Vector_Right();
	static struct FVector STATIC_Vector_Reciprocal(const struct FVector& A);
	static struct FVector STATIC_Vector_ProjectOnToNormal(const struct FVector& V, const struct FVector& InNormal);
	static struct FVector STATIC_Vector_One();
	static struct FVector STATIC_Vector_NormalUnsafe(const struct FVector& A);
	static void STATIC_Vector_Normalize(struct FVector* A, float Tolerance);
	static struct FVector STATIC_Vector_Normal2D(const struct FVector& A, float Tolerance);
	static struct FVector STATIC_Vector_MirrorByPlane(const struct FVector& A, const struct FPlane& InPlane);
	static struct FVector STATIC_Vector_Left();
	static bool STATIC_Vector_IsZero(const struct FVector& A);
	static bool STATIC_Vector_IsUnit(const struct FVector& A, float SquaredLenthTolerance);
	static bool STATIC_Vector_IsUniform(const struct FVector& A, float Tolerance);
	static bool STATIC_Vector_IsNormal(const struct FVector& A);
	static bool STATIC_Vector_IsNearlyZero(const struct FVector& A, float Tolerance);
	static bool STATIC_Vector_IsNAN(const struct FVector& A);
	static float STATIC_Vector_HeadingAngle(const struct FVector& A);
	static struct FVector STATIC_Vector_GetSignVector(const struct FVector& A);
	static struct FVector STATIC_Vector_GetProjection(const struct FVector& A);
	static float STATIC_Vector_GetAbsMin(const struct FVector& A);
	static float STATIC_Vector_GetAbsMax(const struct FVector& A);
	static struct FVector STATIC_Vector_GetAbs(const struct FVector& A);
	static struct FVector STATIC_Vector_Forward();
	static struct FVector STATIC_Vector_Down();
	static float STATIC_Vector_DistanceSquared(const struct FVector& v1, const struct FVector& v2);
	static float STATIC_Vector_Distance2DSquared(const struct FVector& v1, const struct FVector& v2);
	static float STATIC_Vector_Distance2D(const struct FVector& v1, const struct FVector& v2);
	static float STATIC_Vector_Distance(const struct FVector& v1, const struct FVector& v2);
	static float STATIC_Vector_CosineAngle2D(const struct FVector& A, const struct FVector& B);
	static struct FVector STATIC_Vector_ComponentMin(const struct FVector& A, const struct FVector& B);
	static struct FVector STATIC_Vector_ComponentMax(const struct FVector& A, const struct FVector& B);
	static struct FVector STATIC_Vector_ClampSizeMax2D(const struct FVector& A, float Max);
	static struct FVector STATIC_Vector_ClampSizeMax(const struct FVector& A, float Max);
	static struct FVector STATIC_Vector_ClampSize2D(const struct FVector& A, float Min, float Max);
	static struct FVector STATIC_Vector_BoundedToCube(const struct FVector& InVect, float InRadius);
	static struct FVector STATIC_Vector_BoundedToBox(const struct FVector& InVect, const struct FVector& InBoxMin, const struct FVector& InBoxMax);
	static struct FVector STATIC_Vector_Backward();
	static void STATIC_Vector_Assign(struct FVector* A, const struct FVector& InVector);
	static void STATIC_Vector_AddBounded(struct FVector* A, const struct FVector& InAddVect, float InRadius);
	static struct FVector4 STATIC_Vector4_Zero();
	static float STATIC_Vector4_SizeSquared3(const struct FVector4& A);
	static float STATIC_Vector4_SizeSquared(const struct FVector4& A);
	static float STATIC_Vector4_Size3(const struct FVector4& A);
	static float STATIC_Vector4_Size(const struct FVector4& A);
	static void STATIC_Vector4_Set(struct FVector4* A, float X, float Y, float Z, float W);
	static struct FVector4 STATIC_Vector4_NormalUnsafe3(const struct FVector4& A);
	static void STATIC_Vector4_Normalize3(struct FVector4* A, float Tolerance);
	static struct FVector4 STATIC_Vector4_Normal3(const struct FVector4& A, float Tolerance);
	static struct FVector4 STATIC_Vector4_Negated(const struct FVector4& A);
	static struct FVector4 STATIC_Vector4_MirrorByVector3(const struct FVector4& Direction, const struct FVector4& SurfaceNormal);
	static bool STATIC_Vector4_IsZero(const struct FVector4& A);
	static bool STATIC_Vector4_IsUnit3(const struct FVector4& A, float SquaredLenthTolerance);
	static bool STATIC_Vector4_IsNormal3(const struct FVector4& A);
	static bool STATIC_Vector4_IsNearlyZero3(const struct FVector4& A, float Tolerance);
	static bool STATIC_Vector4_IsNAN(const struct FVector4& A);
	static float STATIC_Vector4_DotProduct3(const struct FVector4& A, const struct FVector4& B);
	static float STATIC_Vector4_DotProduct(const struct FVector4& A, const struct FVector4& B);
	static struct FVector4 STATIC_Vector4_CrossProduct3(const struct FVector4& A, const struct FVector4& B);
	static void STATIC_Vector4_Assign(struct FVector4* A, const struct FVector4& InVector);
	static struct FVector2D STATIC_Vector2DInterpTo_Constant(const struct FVector2D& Current, const struct FVector2D& Target, float DeltaTime, float InterpSpeed);
	static struct FVector2D STATIC_Vector2DInterpTo(const struct FVector2D& Current, const struct FVector2D& Target, float DeltaTime, float InterpSpeed);
	static struct FVector2D STATIC_Vector2D_Zero();
	static struct FVector2D STATIC_Vector2D_Unit45Deg();
	static struct FVector2D STATIC_Vector2D_One();
	static struct FVector STATIC_VEase(const struct FVector& A, const struct FVector& B, float Alpha, TEnumAsByte<EEasingFunc> EasingFunc, float BlendExp, int Steps);
	static struct FDateTime STATIC_UtcNow();
	static struct FRotator STATIC_TransformRotation(const struct FTransform& T, const struct FRotator& Rotation);
	static struct FVector STATIC_TransformLocation(const struct FTransform& T, const struct FVector& Location);
	static struct FVector STATIC_TransformDirection(const struct FTransform& T, const struct FVector& Direction);
	static float STATIC_Transform_Determinant(const struct FTransform& Transform);
	static struct FVector2D STATIC_ToSign2D(const struct FVector2D& A);
	static struct FVector2D STATIC_ToRounded2D(const struct FVector2D& A);
	static void STATIC_ToDirectionAndLength2D(const struct FVector2D& A, struct FVector2D* OutDir, float* OutLength);
	static struct FDateTime STATIC_Today();
	static struct FTransform STATIC_TLerp(const struct FTransform& A, const struct FTransform& B, float Alpha, TEnumAsByte<ELerpInterpolationMode> InterpMode);
	static struct FTransform STATIC_TInterpTo(const struct FTransform& Current, const struct FTransform& Target, float DeltaTime, float InterpSpeed);
	static struct FTimespan STATIC_TimespanZeroValue();
	static float STATIC_TimespanRatio(const struct FTimespan& A, const struct FTimespan& B);
	static struct FTimespan STATIC_TimespanMinValue();
	static struct FTimespan STATIC_TimespanMaxValue();
	static bool STATIC_TimespanFromString(const struct FString& TimespanString, struct FTimespan* Result);
	static struct FTransform STATIC_TEase(const struct FTransform& A, const struct FTransform& B, float Alpha, TEnumAsByte<EEasingFunc> EasingFunc, float BlendExp, int Steps);
	static float STATIC_Tan(float A);
	static struct FVector STATIC_Subtract_VectorVector(const struct FVector& A, const struct FVector& B);
	static struct FVector STATIC_Subtract_VectorInt(const struct FVector& A, int B);
	static struct FVector STATIC_Subtract_VectorFloat(const struct FVector& A, float B);
	static struct FVector4 STATIC_Subtract_Vector4Vector4(const struct FVector4& A, const struct FVector4& B);
	static struct FVector2D STATIC_Subtract_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B);
	static struct FVector2D STATIC_Subtract_Vector2DFloat(const struct FVector2D& A, float B);
	static struct FTimespan STATIC_Subtract_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
	static struct FQuat STATIC_Subtract_QuatQuat(const struct FQuat& A, const struct FQuat& B);
	static struct FLinearColor STATIC_Subtract_LinearColorLinearColor(const struct FLinearColor& A, const struct FLinearColor& B);
	static int STATIC_Subtract_IntInt(int A, int B);
	static int64_t STATIC_Subtract_Int64Int64(int64_t A, int64_t B);
	static float STATIC_Subtract_FloatFloat(float A, float B);
	static struct FDateTime STATIC_Subtract_DateTimeTimespan(const struct FDateTime& A, const struct FTimespan& B);
	static struct FTimespan STATIC_Subtract_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);
	static unsigned char STATIC_Subtract_ByteByte(unsigned char A, unsigned char B);
	static float STATIC_Square(float A);
	static float STATIC_Sqrt(float A);
	static struct FVector STATIC_Spherical2DToUnitCartesian(const struct FVector2D& A);
	static float STATIC_Sin(float A);
	static int64_t STATIC_SignOfInteger64(int64_t A);
	static int STATIC_SignOfInteger(int A);
	static float STATIC_SignOfFloat(float A);
	static void STATIC_SetRandomStreamSeed(struct FRandomStream* Stream, int NewSeed);
	static void STATIC_Set2D(struct FVector2D* A, float X, float Y);
	static struct FVector STATIC_SelectVector(const struct FVector& A, const struct FVector& B, bool bPickA);
	static struct FTransform STATIC_SelectTransform(const struct FTransform& A, const struct FTransform& B, bool bPickA);
	static struct FString STATIC_SelectString(const struct FString& A, const struct FString& B, bool bPickA);
	static struct FRotator STATIC_SelectRotator(const struct FRotator& A, const struct FRotator& B, bool bPickA);
	static class UObject* STATIC_SelectObject(class UObject* A, class UObject* B, bool bSelectA);
	static int STATIC_SelectInt(int A, int B, bool bPickA);
	static float STATIC_SelectFloat(float A, float B, bool bPickA);
	static struct FLinearColor STATIC_SelectColor(const struct FLinearColor& A, const struct FLinearColor& B, bool bPickA);
	static class UClass* STATIC_SelectClass(class UClass* A, class UClass* B, bool bSelectA);
	static void STATIC_SeedRandomStream(struct FRandomStream* Stream);
	static int64_t STATIC_Round64(float A);
	static int STATIC_Round(float A);
	static struct FRotator STATIC_RotatorFromAxisAndAngle(const struct FVector& Axis, float Angle);
	static struct FVector STATIC_RotateAngleAxis(const struct FVector& InVect, float AngleDeg, const struct FVector& Axis);
	static struct FRotator STATIC_RLerp(const struct FRotator& A, const struct FRotator& B, float Alpha, bool bShortestPath);
	static struct FRotator STATIC_RInterpTo_Constant(const struct FRotator& Current, const struct FRotator& Target, float DeltaTime, float InterpSpeed);
	static struct FRotator STATIC_RInterpTo(const struct FRotator& Current, const struct FRotator& Target, float DeltaTime, float InterpSpeed);
	static void STATIC_RGBToHSV_Vector(const struct FLinearColor& RGB, struct FLinearColor* HSV);
	static void STATIC_RGBToHSV(const struct FLinearColor& InColor, float* H, float* S, float* V, float* A);
	static struct FLinearColor STATIC_RGBLinearToHSV(const struct FLinearColor& RGB);
	static void STATIC_ResetVectorSpringState(struct FVectorSpringState* SpringState);
	static void STATIC_ResetRandomStream(const struct FRandomStream& Stream);
	static void STATIC_ResetFloatSpringState(struct FFloatSpringState* SpringState);
	static struct FRotator STATIC_REase(const struct FRotator& A, const struct FRotator& B, float Alpha, bool bShortestPath, TEnumAsByte<EEasingFunc> EasingFunc, float BlendExp, int Steps);
	static struct FVector STATIC_RandomUnitVectorInEllipticalConeInRadiansFromStream(const struct FVector& ConeDir, float MaxYawInRadians, float MaxPitchInRadians, const struct FRandomStream& Stream);
	static struct FVector STATIC_RandomUnitVectorInEllipticalConeInRadians(const struct FVector& ConeDir, float MaxYawInRadians, float MaxPitchInRadians);
	static struct FVector STATIC_RandomUnitVectorInEllipticalConeInDegreesFromStream(const struct FVector& ConeDir, float MaxYawInDegrees, float MaxPitchInDegrees, const struct FRandomStream& Stream);
	static struct FVector STATIC_RandomUnitVectorInEllipticalConeInDegrees(const struct FVector& ConeDir, float MaxYawInDegrees, float MaxPitchInDegrees);
	static struct FVector STATIC_RandomUnitVectorInConeInRadiansFromStream(const struct FVector& ConeDir, float ConeHalfAngleInRadians, const struct FRandomStream& Stream);
	static struct FVector STATIC_RandomUnitVectorInConeInRadians(const struct FVector& ConeDir, float ConeHalfAngleInRadians);
	static struct FVector STATIC_RandomUnitVectorInConeInDegreesFromStream(const struct FVector& ConeDir, float ConeHalfAngleInDegrees, const struct FRandomStream& Stream);
	static struct FVector STATIC_RandomUnitVectorInConeInDegrees(const struct FVector& ConeDir, float ConeHalfAngleInDegrees);
	static struct FVector STATIC_RandomUnitVectorFromStream(const struct FRandomStream& Stream);
	static struct FVector STATIC_RandomUnitVector();
	static struct FRotator STATIC_RandomRotatorFromStream(bool bRoll, const struct FRandomStream& Stream);
	static struct FRotator STATIC_RandomRotator(bool bRoll);
	static struct FVector STATIC_RandomPointInBoundingBox(const struct FVector& Origin, const struct FVector& BoxExtent);
	static int STATIC_RandomIntegerInRangeFromStream(int Min, int Max, const struct FRandomStream& Stream);
	static int STATIC_RandomIntegerInRange(int Min, int Max);
	static int STATIC_RandomIntegerFromStream(int Max, const struct FRandomStream& Stream);
	static int64_t STATIC_RandomInteger64InRange(int64_t Min, int64_t Max);
	static int64_t STATIC_RandomInteger64(int64_t Max);
	static int STATIC_RandomInteger(int Max);
	static float STATIC_RandomFloatInRangeFromStream(float Min, float Max, const struct FRandomStream& Stream);
	static float STATIC_RandomFloatInRange(float Min, float Max);
	static float STATIC_RandomFloatFromStream(const struct FRandomStream& Stream);
	static float STATIC_RandomFloat();
	static bool STATIC_RandomBoolWithWeightFromStream(float Weight, const struct FRandomStream& RandomStream);
	static bool STATIC_RandomBoolWithWeight(float Weight);
	static bool STATIC_RandomBoolFromStream(const struct FRandomStream& Stream);
	static bool STATIC_RandomBool();
	static float STATIC_RadiansToDegrees(float A);
	static struct FVector STATIC_Quat_VectorUp(const struct FQuat& Q);
	static struct FVector STATIC_Quat_VectorRight(const struct FQuat& Q);
	static struct FVector STATIC_Quat_VectorForward(const struct FQuat& Q);
	static struct FVector STATIC_Quat_UnrotateVector(const struct FQuat& Q, const struct FVector& V);
	static float STATIC_Quat_SizeSquared(const struct FQuat& Q);
	static float STATIC_Quat_Size(const struct FQuat& Q);
	static void STATIC_Quat_SetFromEuler(struct FQuat* Q, const struct FVector& Euler);
	static void STATIC_Quat_SetComponents(struct FQuat* Q, float X, float Y, float Z, float W);
	static struct FRotator STATIC_Quat_Rotator(const struct FQuat& Q);
	static struct FVector STATIC_Quat_RotateVector(const struct FQuat& Q, const struct FVector& V);
	static struct FQuat STATIC_Quat_Normalized(const struct FQuat& Q, float Tolerance);
	static void STATIC_Quat_Normalize(struct FQuat* Q, float Tolerance);
	static struct FQuat STATIC_Quat_MakeFromEuler(const struct FVector& Euler);
	static struct FQuat STATIC_Quat_Log(const struct FQuat& Q);
	static bool STATIC_Quat_IsNormalized(const struct FQuat& Q);
	static bool STATIC_Quat_IsNonFinite(const struct FQuat& Q);
	static bool STATIC_Quat_IsIdentity(const struct FQuat& Q, float Tolerance);
	static bool STATIC_Quat_IsFinite(const struct FQuat& Q);
	static struct FQuat STATIC_Quat_Inversed(const struct FQuat& Q);
	static struct FQuat STATIC_Quat_Identity();
	static struct FVector STATIC_Quat_GetRotationAxis(const struct FQuat& Q);
	static struct FVector STATIC_Quat_GetAxisZ(const struct FQuat& Q);
	static struct FVector STATIC_Quat_GetAxisY(const struct FQuat& Q);
	static struct FVector STATIC_Quat_GetAxisX(const struct FQuat& Q);
	static float STATIC_Quat_GetAngle(const struct FQuat& Q);
	static struct FQuat STATIC_Quat_Exp(const struct FQuat& Q);
	static struct FVector STATIC_Quat_Euler(const struct FQuat& Q);
	static void STATIC_Quat_EnforceShortestArcWith(struct FQuat* A, const struct FQuat& B);
	static float STATIC_Quat_AngularDistance(const struct FQuat& A, const struct FQuat& B);
	static struct FVector STATIC_ProjectVectorOnToVector(const struct FVector& V, const struct FVector& Target);
	static struct FVector STATIC_ProjectVectorOnToPlane(const struct FVector& V, const struct FVector& PlaneNormal);
	static struct FVector STATIC_ProjectPointOnToPlane(const struct FVector& Point, const struct FVector& PlaneBase, const struct FVector& PlaneNormal);
	static bool STATIC_PointsAreCoplanar(TArray<struct FVector> Points, float Tolerance);
	static float STATIC_PerlinNoise1D(float Value);
	static int STATIC_Percent_IntInt(int A, int B);
	static float STATIC_Percent_FloatFloat(float A, float B);
	static unsigned char STATIC_Percent_ByteByte(unsigned char A, unsigned char B);
	static int STATIC_Or_IntInt(int A, int B);
	static int64_t STATIC_Or_Int64Int64(int64_t A, int64_t B);
	static struct FDateTime STATIC_Now();
	static bool STATIC_NotEqualExactly_VectorVector(const struct FVector& A, const struct FVector& B);
	static bool STATIC_NotEqualExactly_Vector4Vector4(const struct FVector4& A, const struct FVector4& B);
	static bool STATIC_NotEqualExactly_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B);
	static bool STATIC_NotEqual_VectorVector(const struct FVector& A, const struct FVector& B, float ErrorTolerance);
	static bool STATIC_NotEqual_Vector4Vector4(const struct FVector4& A, const struct FVector4& B, float ErrorTolerance);
	static bool STATIC_NotEqual_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B, float ErrorTolerance);
	static bool STATIC_NotEqual_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
	static bool STATIC_NotEqual_RotatorRotator(const struct FRotator& A, const struct FRotator& B, float ErrorTolerance);
	static bool STATIC_NotEqual_QuatQuat(const struct FQuat& A, const struct FQuat& B, float ErrorTolerance);
	static bool STATIC_NotEqual_ObjectObject(class UObject* A, class UObject* B);
	static bool STATIC_NotEqual_NameName(const struct FName& A, const struct FName& B);
	static bool STATIC_NotEqual_LinearColorLinearColor(const struct FLinearColor& A, const struct FLinearColor& B);
	static bool STATIC_NotEqual_IntInt(int A, int B);
	static bool STATIC_NotEqual_Int64Int64(int64_t A, int64_t B);
	static bool STATIC_NotEqual_FloatFloat(float A, float B);
	static bool STATIC_NotEqual_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);
	static bool STATIC_NotEqual_ClassClass(class UClass* A, class UClass* B);
	static bool STATIC_NotEqual_ByteByte(unsigned char A, unsigned char B);
	static bool STATIC_NotEqual_BoolBool(bool A, bool B);
	static bool STATIC_Not_PreBool(bool A);
	static int64_t STATIC_Not_Int64(int64_t A);
	static int STATIC_Not_Int(int A);
	static struct FVector2D STATIC_NormalSafe2D(const struct FVector2D& A, float Tolerance);
	static float STATIC_NormalizeToRange(float Value, float RangeMin, float RangeMax);
	static struct FRotator STATIC_NormalizedDeltaRotator(const struct FRotator& A, const struct FRotator& B);
	static float STATIC_NormalizeAxis(float Angle);
	static void STATIC_Normalize2D(struct FVector2D* A, float Tolerance);
	static struct FVector2D STATIC_Normal2D(const struct FVector2D& A);
	static struct FVector STATIC_Normal(const struct FVector& A, float Tolerance);
	static struct FVector STATIC_NegateVector(const struct FVector& A);
	static struct FRotator STATIC_NegateRotator(const struct FRotator& A);
	static struct FVector2D STATIC_Negated2D(const struct FVector2D& A);
	static bool STATIC_NearlyEqual_TransformTransform(const struct FTransform& A, const struct FTransform& B, float LocationTolerance, float RotationTolerance, float Scale3DTolerance);
	static bool STATIC_NearlyEqual_FloatFloat(float A, float B, float ErrorTolerance);
	static float STATIC_MultiplyMultiply_FloatFloat(float Base, float Exp);
	static float STATIC_MultiplyByPi(float Value);
	static struct FVector STATIC_Multiply_VectorVector(const struct FVector& A, const struct FVector& B);
	static struct FVector STATIC_Multiply_VectorInt(const struct FVector& A, int B);
	static struct FVector STATIC_Multiply_VectorFloat(const struct FVector& A, float B);
	static struct FVector4 STATIC_Multiply_Vector4Vector4(const struct FVector4& A, const struct FVector4& B);
	static struct FVector2D STATIC_Multiply_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B);
	static struct FVector2D STATIC_Multiply_Vector2DFloat(const struct FVector2D& A, float B);
	static struct FTimespan STATIC_Multiply_TimespanFloat(const struct FTimespan& A, float Scalar);
	static struct FRotator STATIC_Multiply_RotatorInt(const struct FRotator& A, int B);
	static struct FRotator STATIC_Multiply_RotatorFloat(const struct FRotator& A, float B);
	static struct FQuat STATIC_Multiply_QuatQuat(const struct FQuat& A, const struct FQuat& B);
	static struct FLinearColor STATIC_Multiply_LinearColorLinearColor(const struct FLinearColor& A, const struct FLinearColor& B);
	static struct FLinearColor STATIC_Multiply_LinearColorFloat(const struct FLinearColor& A, float B);
	static int STATIC_Multiply_IntInt(int A, int B);
	static float STATIC_Multiply_IntFloat(int A, float B);
	static int64_t STATIC_Multiply_Int64Int64(int64_t A, int64_t B);
	static float STATIC_Multiply_FloatFloat(float A, float B);
	static unsigned char STATIC_Multiply_ByteByte(unsigned char A, unsigned char B);
	static struct FVector STATIC_MirrorVectorByNormal(const struct FVector& InVect, const struct FVector& InNormal);
	static void STATIC_MinOfIntArray(TArray<int> IntArray, int* IndexOfMinValue, int* MinValue);
	static void STATIC_MinOfFloatArray(TArray<float> FloatArray, int* IndexOfMinValue, float* MinValue);
	static void STATIC_MinOfByteArray(TArray<unsigned char> ByteArray, int* IndexOfMinValue, unsigned char* MinValue);
	static int64_t STATIC_MinInt64(int64_t A, int64_t B);
	static void STATIC_MinimumAreaRectangle(class UObject* WorldContextObject, TArray<struct FVector> InVerts, const struct FVector& SampleSurfaceNormal, struct FVector* OutRectCenter, struct FRotator* OutRectRotation, float* OutSideLengthX, float* OutSideLengthY, bool bDebugDraw);
	static int STATIC_Min(int A, int B);
	static void STATIC_MaxOfIntArray(TArray<int> IntArray, int* IndexOfMaxValue, int* MaxValue);
	static void STATIC_MaxOfFloatArray(TArray<float> FloatArray, int* IndexOfMaxValue, float* MaxValue);
	static void STATIC_MaxOfByteArray(TArray<unsigned char> ByteArray, int* IndexOfMaxValue, unsigned char* MaxValue);
	static int64_t STATIC_MaxInt64(int64_t A, int64_t B);
	static int STATIC_Max(int A, int B);
	static struct FVector STATIC_Matrix_GetOrigin(const struct FMatrix& InMatrix);
	static float STATIC_MapRangeUnclamped(float Value, float InRangeA, float InRangeB, float OutRangeA, float OutRangeB);
	static float STATIC_MapRangeClamped(float Value, float InRangeA, float InRangeB, float OutRangeA, float OutRangeB);
	static struct FVector4 STATIC_MakeVector4(float X, float Y, float Z, float W);
	static struct FVector2D STATIC_MakeVector2D(float X, float Y);
	static struct FVector STATIC_MakeVector(float X, float Y, float Z);
	static struct FTransform STATIC_MakeTransform(const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale);
	static struct FTimespan STATIC_MakeTimespan2(int Days, int Hours, int Minutes, int Seconds, int FractionNano);
	static struct FTimespan STATIC_MakeTimespan(int Days, int Hours, int Minutes, int Seconds, int Milliseconds);
	static struct FRotator STATIC_MakeRotFromZY(const struct FVector& Z, const struct FVector& Y);
	static struct FRotator STATIC_MakeRotFromZX(const struct FVector& Z, const struct FVector& X);
	static struct FRotator STATIC_MakeRotFromZ(const struct FVector& Z);
	static struct FRotator STATIC_MakeRotFromYZ(const struct FVector& Y, const struct FVector& Z);
	static struct FRotator STATIC_MakeRotFromYX(const struct FVector& Y, const struct FVector& X);
	static struct FRotator STATIC_MakeRotFromY(const struct FVector& Y);
	static struct FRotator STATIC_MakeRotFromXZ(const struct FVector& X, const struct FVector& Z);
	static struct FRotator STATIC_MakeRotFromXY(const struct FVector& X, const struct FVector& Y);
	static struct FRotator STATIC_MakeRotFromX(const struct FVector& X);
	static struct FRotator STATIC_MakeRotator(float Roll, float Pitch, float Yaw);
	static struct FRotator STATIC_MakeRotationFromAxes(const struct FVector& Forward, const struct FVector& Right, const struct FVector& Up);
	static struct FTransform STATIC_MakeRelativeTransform(const struct FTransform& A, const struct FTransform& RelativeTo);
	static struct FRandomStream STATIC_MakeRandomStream(int InitialSeed);
	static struct FQualifiedFrameTime STATIC_MakeQualifiedFrameTime(const struct FFrameNumber& Frame, const struct FFrameRate& FrameRate, float SubFrame);
	static float STATIC_MakePulsatingValue(float InCurrentTime, float InPulsesPerSecond, float InPhase);
	static struct FPlane STATIC_MakePlaneFromPointAndNormal(const struct FVector& Point, const struct FVector& Normal);
	static struct FFrameRate STATIC_MakeFrameRate(int Numerator, int Denominator);
	static struct FDateTime STATIC_MakeDateTime(int Year, int Month, int Day, int Hour, int Minute, int Second, int Millisecond);
	static struct FLinearColor STATIC_MakeColor(float R, float G, float B, float A);
	static struct FBox2D STATIC_MakeBox2D(const struct FVector2D& Min, const struct FVector2D& Max);
	static struct FBox STATIC_MakeBox(const struct FVector& Min, const struct FVector& Max);
	static float STATIC_Loge(float A);
	static float STATIC_Log(float A, float Base);
	static bool STATIC_LinePlaneIntersection_OriginNormal(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FVector& PlaneOrigin, const struct FVector& PlaneNormal, float* T, struct FVector* Intersection);
	static bool STATIC_LinePlaneIntersection(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FPlane& APlane, float* T, struct FVector* Intersection);
	static struct FLinearColor STATIC_LinearColorLerpUsingHSV(const struct FLinearColor& A, const struct FLinearColor& B, float Alpha);
	static struct FLinearColor STATIC_LinearColorLerp(const struct FLinearColor& A, const struct FLinearColor& B, float Alpha);
	static struct FLinearColor STATIC_LinearColor_Yellow();
	static struct FLinearColor STATIC_LinearColor_White();
	static struct FLinearColor STATIC_LinearColor_Transparent();
	static struct FColor STATIC_LinearColor_ToRGBE(const struct FLinearColor& InLinearColor);
	static struct FLinearColor STATIC_LinearColor_ToNewOpacity(const struct FLinearColor& InColor, float InOpacity);
	static void STATIC_LinearColor_SetTemperature(struct FLinearColor* InOutColor, float InTemperature);
	static void STATIC_LinearColor_SetRGBA(struct FLinearColor* InOutColor, float R, float G, float B, float A);
	static void STATIC_LinearColor_SetRandomHue(struct FLinearColor* InOutColor);
	static void STATIC_LinearColor_SetFromSRGB(struct FLinearColor* InOutColor, const struct FColor& InSRGB);
	static void STATIC_LinearColor_SetFromPow22(struct FLinearColor* InOutColor, const struct FColor& InColor);
	static void STATIC_LinearColor_SetFromHSV(struct FLinearColor* InOutColor, float H, float S, float V, float A);
	static void STATIC_LinearColor_Set(struct FLinearColor* InOutColor, const struct FLinearColor& InColor);
	static struct FLinearColor STATIC_LinearColor_Red();
	static struct FColor STATIC_LinearColor_QuantizeRound(const struct FLinearColor& InColor);
	static struct FColor STATIC_LinearColor_Quantize(const struct FLinearColor& InColor);
	static bool STATIC_LinearColor_IsNearEqual(const struct FLinearColor& A, const struct FLinearColor& B, float Tolerance);
	static struct FLinearColor STATIC_LinearColor_Green();
	static struct FLinearColor STATIC_LinearColor_Gray();
	static float STATIC_LinearColor_GetMin(const struct FLinearColor& InColor);
	static float STATIC_LinearColor_GetMax(const struct FLinearColor& InColor);
	static float STATIC_LinearColor_GetLuminance(const struct FLinearColor& InColor);
	static float STATIC_LinearColor_Distance(const struct FLinearColor& C1, const struct FLinearColor& C2);
	static struct FLinearColor STATIC_LinearColor_Desaturated(const struct FLinearColor& InColor, float InDesaturation);
	static struct FLinearColor STATIC_LinearColor_Blue();
	static struct FLinearColor STATIC_LinearColor_Black();
	static struct FVector STATIC_LessLess_VectorRotator(const struct FVector& A, const struct FRotator& B);
	static bool STATIC_LessEqual_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
	static bool STATIC_LessEqual_IntInt(int A, int B);
	static bool STATIC_LessEqual_Int64Int64(int64_t A, int64_t B);
	static bool STATIC_LessEqual_FloatFloat(float A, float B);
	static bool STATIC_LessEqual_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);
	static bool STATIC_LessEqual_ByteByte(unsigned char A, unsigned char B);
	static bool STATIC_Less_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
	static bool STATIC_Less_IntInt(int A, int B);
	static bool STATIC_Less_Int64Int64(int64_t A, int64_t B);
	static bool STATIC_Less_FloatFloat(float A, float B);
	static bool STATIC_Less_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);
	static bool STATIC_Less_ByteByte(unsigned char A, unsigned char B);
	static float STATIC_Lerp(float A, float B, float Alpha);
	static bool STATIC_IsZero2D(const struct FVector2D& A);
	static bool STATIC_IsPointInBoxWithTransform(const struct FVector& Point, const struct FTransform& BoxWorldTransform, const struct FVector& BoxExtent);
	static bool STATIC_IsPointInBox(const struct FVector& Point, const struct FVector& BoxOrigin, const struct FVector& BoxExtent);
	static bool STATIC_IsNearlyZero2D(const struct FVector2D& A, float Tolerance);
	static bool STATIC_IsMorning(const struct FDateTime& A);
	static bool STATIC_IsLeapYear(int Year);
	static bool STATIC_IsAfternoon(const struct FDateTime& A);
	static struct FTransform STATIC_InvertTransform(const struct FTransform& T);
	static struct FRotator STATIC_InverseTransformRotation(const struct FTransform& T, const struct FRotator& Rotation);
	static struct FVector STATIC_InverseTransformLocation(const struct FTransform& T, const struct FVector& Location);
	static struct FVector STATIC_InverseTransformDirection(const struct FTransform& T, const struct FVector& Direction);
	static bool STATIC_InRange_IntInt(int Value, int Min, int Max, bool InclusiveMin, bool InclusiveMax);
	static bool STATIC_InRange_Int64Int64(int64_t Value, int64_t Min, int64_t Max, bool InclusiveMin, bool InclusiveMax);
	static bool STATIC_InRange_FloatFloat(float Value, float Min, float Max, bool InclusiveMin, bool InclusiveMax);
	static float STATIC_Hypotenuse(float Width, float Height);
	static struct FLinearColor STATIC_HSVToRGBLinear(const struct FLinearColor& HSV);
	static void STATIC_HSVToRGB_Vector(const struct FLinearColor& HSV, struct FLinearColor* RGB);
	static struct FLinearColor STATIC_HSVToRGB(float H, float S, float V, float A);
	static float STATIC_GridSnap_Float(float Location, float GridSize);
	static struct FVector STATIC_GreaterGreater_VectorRotator(const struct FVector& A, const struct FRotator& B);
	static bool STATIC_GreaterEqual_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
	static bool STATIC_GreaterEqual_IntInt(int A, int B);
	static bool STATIC_GreaterEqual_Int64Int64(int64_t A, int64_t B);
	static bool STATIC_GreaterEqual_FloatFloat(float A, float B);
	static bool STATIC_GreaterEqual_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);
	static bool STATIC_GreaterEqual_ByteByte(unsigned char A, unsigned char B);
	static bool STATIC_Greater_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
	static bool STATIC_Greater_IntInt(int A, int B);
	static bool STATIC_Greater_Int64Int64(int64_t A, int64_t B);
	static bool STATIC_Greater_FloatFloat(float A, float B);
	static bool STATIC_Greater_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);
	static bool STATIC_Greater_ByteByte(unsigned char A, unsigned char B);
	static int STATIC_GetYear(const struct FDateTime& A);
	static void STATIC_GetYawPitchFromVector(const struct FVector& InVec, float* Yaw, float* Pitch);
	static struct FVector STATIC_GetVectorArrayAverage(TArray<struct FVector> Vectors);
	static struct FVector STATIC_GetUpVector(const struct FRotator& InRot);
	static float STATIC_GetTotalSeconds(const struct FTimespan& A);
	static float STATIC_GetTotalMinutes(const struct FTimespan& A);
	static float STATIC_GetTotalMilliseconds(const struct FTimespan& A);
	static float STATIC_GetTotalHours(const struct FTimespan& A);
	static float STATIC_GetTotalDays(const struct FTimespan& A);
	static struct FTimespan STATIC_GetTimeOfDay(const struct FDateTime& A);
	static float STATIC_GetTAU();
	static void STATIC_GetSlopeDegreeAngles(const struct FVector& MyRightYAxis, const struct FVector& FloorNormal, const struct FVector& UpVector, float* OutSlopePitchDegreeAngle, float* OutSlopeRollDegreeAngle);
	static int STATIC_GetSeconds(const struct FTimespan& A);
	static int STATIC_GetSecond(const struct FDateTime& A);
	static struct FVector2D STATIC_GetRotated2D(const struct FVector2D& A, float AngleDeg);
	static struct FVector STATIC_GetRightVector(const struct FRotator& InRot);
	static struct FVector STATIC_GetReflectionVector(const struct FVector& Direction, const struct FVector& SurfaceNormal);
	static float STATIC_GetPointDistanceToSegment(const struct FVector& Point, const struct FVector& SegmentStart, const struct FVector& SegmentEnd);
	static float STATIC_GetPointDistanceToLine(const struct FVector& Point, const struct FVector& LineOrigin, const struct FVector& LineDirection);
	static float STATIC_GetPI();
	static int STATIC_GetMonth(const struct FDateTime& A);
	static int STATIC_GetMinutes(const struct FTimespan& A);
	static int STATIC_GetMinute(const struct FDateTime& A);
	static float STATIC_GetMinElement(const struct FVector& A);
	static float STATIC_GetMin2D(const struct FVector2D& A);
	static int STATIC_GetMilliseconds(const struct FTimespan& A);
	static int STATIC_GetMillisecond(const struct FDateTime& A);
	static float STATIC_GetMaxElement(const struct FVector& A);
	static float STATIC_GetMax2D(const struct FVector2D& A);
	static int STATIC_GetHours(const struct FTimespan& A);
	static int STATIC_GetHour12(const struct FDateTime& A);
	static int STATIC_GetHour(const struct FDateTime& A);
	static struct FVector STATIC_GetForwardVector(const struct FRotator& InRot);
	static struct FTimespan STATIC_GetDuration(const struct FTimespan& A);
	static struct FVector STATIC_GetDirectionUnitVector(const struct FVector& From, const struct FVector& To);
	static int STATIC_GetDays(const struct FTimespan& A);
	static int STATIC_GetDayOfYear(const struct FDateTime& A);
	static int STATIC_GetDay(const struct FDateTime& A);
	static struct FDateTime STATIC_GetDate(const struct FDateTime& A);
	static void STATIC_GetAzimuthAndElevation(const struct FVector& InDirection, const struct FTransform& ReferenceFrame, float* Azimuth, float* Elevation);
	static void STATIC_GetAxes(const struct FRotator& A, struct FVector* X, struct FVector* Y, struct FVector* Z);
	static float STATIC_GetAbsMax2D(const struct FVector2D& A);
	static struct FVector2D STATIC_GetAbs2D(const struct FVector2D& A);
	static struct FIntVector STATIC_FTruncVector(const struct FVector& InVector);
	static int64_t STATIC_FTrunc64(float A);
	static int STATIC_FTrunc(float A);
	static struct FTimespan STATIC_FromSeconds(float Seconds);
	static struct FTimespan STATIC_FromMinutes(float Minutes);
	static struct FTimespan STATIC_FromMilliseconds(float Milliseconds);
	static struct FTimespan STATIC_FromHours(float Hours);
	static struct FTimespan STATIC_FromDays(float Days);
	static float STATIC_Fraction(float A);
	static int STATIC_FMod(float Dividend, float Divisor, float* Remainder);
	static float STATIC_FMin(float A, float B);
	static float STATIC_FMax(float A, float B);
	static float STATIC_FloatSpringInterp(float Current, float Target, struct FFloatSpringState* SpringState, float Stiffness, float CriticalDampingFactor, float DeltaTime, float Mass);
	static float STATIC_FixedTurn(float InCurrent, float InDesired, float InDeltaRate);
	static float STATIC_FInterpTo_Constant(float Current, float Target, float DeltaTime, float InterpSpeed);
	static float STATIC_FInterpTo(float Current, float Target, float DeltaTime, float InterpSpeed);
	static float STATIC_FInterpEaseInOut(float A, float B, float Alpha, float Exponent);
	static void STATIC_FindNearestPointsOnLineSegments(const struct FVector& Segment1Start, const struct FVector& Segment1End, const struct FVector& Segment2Start, const struct FVector& Segment2End, struct FVector* Segment1Point, struct FVector* Segment2Point);
	static struct FRotator STATIC_FindLookAtRotation(const struct FVector& Start, const struct FVector& Target);
	static struct FVector STATIC_FindClosestPointOnSegment(const struct FVector& Point, const struct FVector& SegmentStart, const struct FVector& SegmentEnd);
	static struct FVector STATIC_FindClosestPointOnLine(const struct FVector& Point, const struct FVector& LineOrigin, const struct FVector& LineDirection);
	static int64_t STATIC_FFloor64(float A);
	static int STATIC_FFloor(float A);
	static float STATIC_FClamp(float Value, float Min, float Max);
	static int64_t STATIC_FCeil64(float A);
	static int STATIC_FCeil(float A);
	static float STATIC_Exp(float A);
	static bool STATIC_EqualExactly_VectorVector(const struct FVector& A, const struct FVector& B);
	static bool STATIC_EqualExactly_Vector4Vector4(const struct FVector4& A, const struct FVector4& B);
	static bool STATIC_EqualExactly_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B);
	static bool STATIC_EqualEqual_VectorVector(const struct FVector& A, const struct FVector& B, float ErrorTolerance);
	static bool STATIC_EqualEqual_Vector4Vector4(const struct FVector4& A, const struct FVector4& B, float ErrorTolerance);
	static bool STATIC_EqualEqual_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B, float ErrorTolerance);
	static bool STATIC_EqualEqual_TransformTransform(const struct FTransform& A, const struct FTransform& B);
	static bool STATIC_EqualEqual_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
	static bool STATIC_EqualEqual_RotatorRotator(const struct FRotator& A, const struct FRotator& B, float ErrorTolerance);
	static bool STATIC_EqualEqual_QuatQuat(const struct FQuat& A, const struct FQuat& B, float Tolerance);
	static bool STATIC_EqualEqual_ObjectObject(class UObject* A, class UObject* B);
	static bool STATIC_EqualEqual_NameName(const struct FName& A, const struct FName& B);
	static bool STATIC_EqualEqual_LinearColorLinearColor(const struct FLinearColor& A, const struct FLinearColor& B);
	static bool STATIC_EqualEqual_IntInt(int A, int B);
	static bool STATIC_EqualEqual_Int64Int64(int64_t A, int64_t B);
	static bool STATIC_EqualEqual_FloatFloat(float A, float B);
	static bool STATIC_EqualEqual_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);
	static bool STATIC_EqualEqual_ClassClass(class UClass* A, class UClass* B);
	static bool STATIC_EqualEqual_ByteByte(unsigned char A, unsigned char B);
	static bool STATIC_EqualEqual_BoolBool(bool A, bool B);
	static float STATIC_Ease(float A, float B, float Alpha, TEnumAsByte<EEasingFunc> EasingFunc, float BlendExp, int Steps);
	static struct FVector STATIC_DynamicWeightedMovingAverage_FVector(const struct FVector& CurrentSample, const struct FVector& PreviousSample, float MaxDistance, float MinWeight, float MaxWeight);
	static struct FRotator STATIC_DynamicWeightedMovingAverage_FRotator(const struct FRotator& CurrentSample, const struct FRotator& PreviousSample, float MaxDistance, float MinWeight, float MaxWeight);
	static float STATIC_DynamicWeightedMovingAverage_Float(float CurrentSample, float PreviousSample, float MaxDistance, float MinWeight, float MaxWeight);
	static float STATIC_DotProduct2D(const struct FVector2D& A, const struct FVector2D& B);
	static float STATIC_Dot_VectorVector(const struct FVector& A, const struct FVector& B);
	static struct FVector STATIC_Divide_VectorVector(const struct FVector& A, const struct FVector& B);
	static struct FVector STATIC_Divide_VectorInt(const struct FVector& A, int B);
	static struct FVector STATIC_Divide_VectorFloat(const struct FVector& A, float B);
	static struct FVector4 STATIC_Divide_Vector4Vector4(const struct FVector4& A, const struct FVector4& B);
	static struct FVector2D STATIC_Divide_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B);
	static struct FVector2D STATIC_Divide_Vector2DFloat(const struct FVector2D& A, float B);
	static struct FTimespan STATIC_Divide_TimespanFloat(const struct FTimespan& A, float Scalar);
	static struct FLinearColor STATIC_Divide_LinearColorLinearColor(const struct FLinearColor& A, const struct FLinearColor& B);
	static int STATIC_Divide_IntInt(int A, int B);
	static int64_t STATIC_Divide_Int64Int64(int64_t A, int64_t B);
	static float STATIC_Divide_FloatFloat(float A, float B);
	static unsigned char STATIC_Divide_ByteByte(unsigned char A, unsigned char B);
	static float STATIC_DistanceSquared2D(const struct FVector2D& v1, const struct FVector2D& v2);
	static float STATIC_Distance2D(const struct FVector2D& v1, const struct FVector2D& v2);
	static float STATIC_DegTan(float A);
	static float STATIC_DegSin(float A);
	static float STATIC_DegreesToRadians(float A);
	static float STATIC_DegCos(float A);
	static float STATIC_DegAtan2(float Y, float X);
	static float STATIC_DegAtan(float A);
	static float STATIC_DegAsin(float A);
	static float STATIC_DegAcos(float A);
	static int STATIC_DaysInYear(int Year);
	static int STATIC_DaysInMonth(int Year, int Month);
	static struct FDateTime STATIC_DateTimeMinValue();
	static struct FDateTime STATIC_DateTimeMaxValue();
	static bool STATIC_DateTimeFromString(const struct FString& DateTimeString, struct FDateTime* Result);
	static bool STATIC_DateTimeFromIsoString(const struct FString& IsoString, struct FDateTime* Result);
	static float STATIC_CrossProduct2D(const struct FVector2D& A, const struct FVector2D& B);
	static struct FVector STATIC_Cross_VectorVector(const struct FVector& A, const struct FVector& B);
	static struct FVector STATIC_CreateVectorFromYawPitch(float Yaw, float Pitch, float Length);
	static float STATIC_Cos(float A);
	static struct FTransform STATIC_ConvertTransformToRelative(const struct FTransform& Transform, const struct FTransform& ParentTransform);
	static struct FVector2D STATIC_Conv_VectorToVector2D(const struct FVector& InVector);
	static struct FTransform STATIC_Conv_VectorToTransform(const struct FVector& InLocation);
	static struct FRotator STATIC_Conv_VectorToRotator(const struct FVector& InVec);
	static struct FQuat STATIC_Conv_VectorToQuaterion(const struct FVector& InVec);
	static struct FLinearColor STATIC_Conv_VectorToLinearColor(const struct FVector& InVec);
	static struct FVector STATIC_Conv_Vector4ToVector(const struct FVector4& InVector4);
	static struct FRotator STATIC_Conv_Vector4ToRotator(const struct FVector4& InVec);
	static struct FQuat STATIC_Conv_Vector4ToQuaterion(const struct FVector4& InVec);
	static struct FVector STATIC_Conv_Vector2DToVector(const struct FVector2D& InVector2D, float Z);
	static struct FIntPoint STATIC_Conv_Vector2DToIntPoint(const struct FVector2D& InVector2D);
	static struct FVector STATIC_Conv_RotatorToVector(const struct FRotator& InRot);
	static struct FTransform STATIC_Conv_RotatorToTransform(const struct FRotator& InRotator);
	static struct FTransform STATIC_Conv_MatrixToTransform(const struct FMatrix& InMatrix);
	static struct FRotator STATIC_Conv_MatrixToRotator(const struct FMatrix& InMatrix);
	static struct FVector STATIC_Conv_LinearColorToVector(const struct FLinearColor& InLinearColor);
	static struct FColor STATIC_Conv_LinearColorToColor(const struct FLinearColor& InLinearColor, bool InUseSRGB);
	static struct FVector STATIC_Conv_IntVectorToVector(const struct FIntVector& InIntVector);
	static struct FIntVector STATIC_Conv_IntToIntVector(int inInt);
	static int64_t STATIC_Conv_IntToInt64(int inInt);
	static float STATIC_Conv_IntToFloat(int inInt);
	static unsigned char STATIC_Conv_IntToByte(int inInt);
	static bool STATIC_Conv_IntToBool(int inInt);
	static struct FVector STATIC_Conv_FloatToVector(float InFloat);
	static struct FLinearColor STATIC_Conv_FloatToLinearColor(float InFloat);
	static struct FLinearColor STATIC_Conv_ColorToLinearColor(const struct FColor& InColor);
	static int STATIC_Conv_ByteToInt(unsigned char InByte);
	static float STATIC_Conv_ByteToFloat(unsigned char InByte);
	static int STATIC_Conv_BoolToInt(bool InBool);
	static float STATIC_Conv_BoolToFloat(bool InBool);
	static unsigned char STATIC_Conv_BoolToByte(bool InBool);
	static struct FTransform STATIC_ComposeTransforms(const struct FTransform& A, const struct FTransform& B);
	static struct FRotator STATIC_ComposeRotators(const struct FRotator& A, const struct FRotator& B);
	static bool STATIC_ClassIsChildOf(class UClass* TestClass, class UClass* ParentClass);
	static struct FVector STATIC_ClampVectorSize(const struct FVector& A, float Min, float Max);
	static int64_t STATIC_ClampInt64(int64_t Value, int64_t Min, int64_t Max);
	static float STATIC_ClampAxis(float Angle);
	static struct FVector2D STATIC_ClampAxes2D(const struct FVector2D& A, float MinAxisVal, float MaxAxisVal);
	static float STATIC_ClampAngle(float AngleDegrees, float MinAngleDegrees, float MaxAngleDegrees);
	static int STATIC_Clamp(int Value, int Min, int Max);
	static struct FLinearColor STATIC_CInterpTo(const struct FLinearColor& Current, const struct FLinearColor& Target, float DeltaTime, float InterpSpeed);
	static void STATIC_BreakVector4(const struct FVector4& InVec, float* X, float* Y, float* Z, float* W);
	static void STATIC_BreakVector2D(const struct FVector2D& InVec, float* X, float* Y);
	static void STATIC_BreakVector(const struct FVector& InVec, float* X, float* Y, float* Z);
	static void STATIC_BreakTransform(const struct FTransform& InTransform, struct FVector* Location, struct FRotator* Rotation, struct FVector* Scale);
	static void STATIC_BreakTimespan2(const struct FTimespan& InTimespan, int* Days, int* Hours, int* Minutes, int* Seconds, int* FractionNano);
	static void STATIC_BreakTimespan(const struct FTimespan& InTimespan, int* Days, int* Hours, int* Minutes, int* Seconds, int* Milliseconds);
	static void STATIC_BreakRotIntoAxes(const struct FRotator& InRot, struct FVector* X, struct FVector* Y, struct FVector* Z);
	static void STATIC_BreakRotator(const struct FRotator& InRot, float* Roll, float* Pitch, float* Yaw);
	static void STATIC_BreakRandomStream(const struct FRandomStream& InRandomStream, int* InitialSeed);
	static void STATIC_BreakQualifiedFrameTime(const struct FQualifiedFrameTime& InFrameTime, struct FFrameNumber* Frame, struct FFrameRate* FrameRate, float* SubFrame);
	static void STATIC_BreakFrameRate(const struct FFrameRate& InFrameRate, int* Numerator, int* Denominator);
	static void STATIC_BreakDateTime(const struct FDateTime& InDateTime, int* Year, int* Month, int* Day, int* Hour, int* Minute, int* Second, int* Millisecond);
	static void STATIC_BreakColor(const struct FLinearColor& InColor, float* R, float* G, float* B, float* A);
	static bool STATIC_BooleanXOR(bool A, bool B);
	static bool STATIC_BooleanOR(bool A, bool B);
	static bool STATIC_BooleanNOR(bool A, bool B);
	static bool STATIC_BooleanNAND(bool A, bool B);
	static bool STATIC_BooleanAND(bool A, bool B);
	static unsigned char STATIC_BMin(unsigned char A, unsigned char B);
	static unsigned char STATIC_BMax(unsigned char A, unsigned char B);
	static float STATIC_Atan2(float Y, float X);
	static float STATIC_Atan(float A);
	static float STATIC_Asin(float A);
	static int STATIC_And_IntInt(int A, int B);
	static int64_t STATIC_And_Int64Int64(int64_t A, int64_t B);
	static struct FVector STATIC_Add_VectorVector(const struct FVector& A, const struct FVector& B);
	static struct FVector STATIC_Add_VectorInt(const struct FVector& A, int B);
	static struct FVector STATIC_Add_VectorFloat(const struct FVector& A, float B);
	static struct FVector4 STATIC_Add_Vector4Vector4(const struct FVector4& A, const struct FVector4& B);
	static struct FVector2D STATIC_Add_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B);
	static struct FVector2D STATIC_Add_Vector2DFloat(const struct FVector2D& A, float B);
	static struct FTimespan STATIC_Add_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);
	static struct FQuat STATIC_Add_QuatQuat(const struct FQuat& A, const struct FQuat& B);
	static struct FLinearColor STATIC_Add_LinearColorLinearColor(const struct FLinearColor& A, const struct FLinearColor& B);
	static int STATIC_Add_IntInt(int A, int B);
	static int64_t STATIC_Add_Int64Int64(int64_t A, int64_t B);
	static float STATIC_Add_FloatFloat(float A, float B);
	static struct FDateTime STATIC_Add_DateTimeTimespan(const struct FDateTime& A, const struct FTimespan& B);
	static unsigned char STATIC_Add_ByteByte(unsigned char A, unsigned char B);
	static float STATIC_Acos(float A);
	static int64_t STATIC_Abs_Int64(int64_t A);
	static int STATIC_Abs_Int(int A);
	static float STATIC_Abs(float A);
};

// Class Engine.KismetNodeHelperLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UKismetNodeHelperLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.KismetNodeHelperLibrary");
		return ptr;
	}


	static void STATIC_MarkBit(int* Data, int Index);
	static bool STATIC_HasUnmarkedBit(int Data, int NumBits);
	static bool STATIC_HasMarkedBit(int Data, int NumBits);
	static unsigned char STATIC_GetValidValue(class UEnum* Enum, unsigned char EnumeratorValue);
	static int STATIC_GetUnmarkedBit(int Data, int StartIdx, int NumBits, bool bRandom);
	static int STATIC_GetRandomUnmarkedBit(int Data, int StartIdx, int NumBits);
	static int STATIC_GetFirstUnmarkedBit(int Data, int StartIdx, int NumBits);
	static unsigned char STATIC_GetEnumeratorValueFromIndex(class UEnum* Enum, unsigned char EnumeratorIndex);
	static struct FString STATIC_GetEnumeratorUserFriendlyName(class UEnum* Enum, unsigned char EnumeratorValue);
	static struct FName STATIC_GetEnumeratorName(class UEnum* Enum, unsigned char EnumeratorValue);
	static void STATIC_ClearBit(int* Data, int Index);
	static void STATIC_ClearAllBits(int* Data);
	static bool STATIC_BitIsMarked(int Data, int Index);
};

// Class Engine.KismetRenderingLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UKismetRenderingLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.KismetRenderingLibrary");
		return ptr;
	}


	static class UTexture2D* STATIC_RenderTargetCreateStaticTexture2DEditorOnly(class UTextureRenderTarget2D* RenderTarget, const struct FString& Name, TEnumAsByte<ETextureCompressionSettings> CompressionSettings, TEnumAsByte<ETextureMipGenSettings> MipSettings);
	static void STATIC_ReleaseRenderTarget2D(class UTextureRenderTarget2D* TextureRenderTarget);
	static struct FColor STATIC_ReadRenderTargetUV(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, float U, float V);
	static struct FLinearColor STATIC_ReadRenderTargetRawUV(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, float U, float V);
	static struct FLinearColor STATIC_ReadRenderTargetRawPixel(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, int X, int Y);
	static struct FColor STATIC_ReadRenderTargetPixel(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, int X, int Y);
	static struct FSkelMeshSkinWeightInfo STATIC_MakeSkinWeightInfo(int Bone0, unsigned char Weight0, int Bone1, unsigned char Weight1, int Bone2, unsigned char Weight2, int Bone3, unsigned char Weight3);
	static class UTexture2D* STATIC_ImportFileAsTexture2D(class UObject* WorldContextObject, const struct FString& Filename);
	static class UTexture2D* STATIC_ImportBufferAsTexture2D(class UObject* WorldContextObject, TArray<unsigned char> Buffer);
	static void STATIC_ExportTexture2D(class UObject* WorldContextObject, class UTexture2D* Texture, const struct FString& FilePath, const struct FString& Filename);
	static void STATIC_ExportRenderTarget(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, const struct FString& FilePath, const struct FString& Filename);
	static void STATIC_EndDrawCanvasToRenderTarget(class UObject* WorldContextObject, const struct FDrawToRenderTargetContext& Context);
	static void STATIC_DrawMaterialToRenderTarget(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, class UMaterialInterface* Material);
	static class UTextureRenderTarget2D* STATIC_CreateRenderTarget2D(class UObject* WorldContextObject, int Width, int Height, TEnumAsByte<ETextureRenderTargetFormat> Format, const struct FLinearColor& ClearColor);
	static void STATIC_ConvertRenderTargetToTexture2DEditorOnly(class UObject* WorldContextObject, class UTextureRenderTarget2D* RenderTarget, class UTexture2D* Texture);
	static void STATIC_ClearRenderTarget2D(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, const struct FLinearColor& ClearColor);
	static void STATIC_BreakSkinWeightInfo(const struct FSkelMeshSkinWeightInfo& InWeight, int* Bone0, unsigned char* Weight0, int* Bone1, unsigned char* Weight1, int* Bone2, unsigned char* Weight2, int* Bone3, unsigned char* Weight3);
	static void STATIC_BeginDrawCanvasToRenderTarget(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, class UCanvas** Canvas, struct FVector2D* Size, struct FDrawToRenderTargetContext* Context);
};

// Class Engine.KismetStringLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UKismetStringLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.KismetStringLibrary");
		return ptr;
	}


	static struct FString STATIC_TrimTrailing(const struct FString& SourceString);
	static struct FString STATIC_Trim(const struct FString& SourceString);
	static struct FString STATIC_ToUpper(const struct FString& SourceString);
	static struct FString STATIC_ToLower(const struct FString& SourceString);
	static struct FString STATIC_TimeSecondsToString(float InSeconds);
	static bool STATIC_StartsWith(const struct FString& SourceString, const struct FString& InPrefix, TEnumAsByte<ESearchCase> SearchCase);
	static bool STATIC_Split(const struct FString& SourceString, const struct FString& InStr, struct FString* LeftS, struct FString* RightS, TEnumAsByte<ESearchCase> SearchCase, TEnumAsByte<ESearchDir> SearchDir);
	static struct FString STATIC_RightPad(const struct FString& SourceString, int ChCount);
	static struct FString STATIC_RightChop(const struct FString& SourceString, int Count);
	static struct FString STATIC_Right(const struct FString& SourceString, int Count);
	static struct FString STATIC_Reverse(const struct FString& SourceString);
	static int STATIC_ReplaceInline(struct FString* SourceString, const struct FString& SearchText, const struct FString& ReplacementText, TEnumAsByte<ESearchCase> SearchCase);
	static struct FString STATIC_Replace(const struct FString& SourceString, const struct FString& From, const struct FString& To, TEnumAsByte<ESearchCase> SearchCase);
	static TArray<struct FString> STATIC_ParseIntoArray(const struct FString& SourceString, const struct FString& Delimiter, bool CullEmptyStrings);
	static bool STATIC_NotEqual_StrStr(const struct FString& A, const struct FString& B);
	static bool STATIC_NotEqual_StriStri(const struct FString& A, const struct FString& B);
	static struct FString STATIC_Mid(const struct FString& SourceString, int Start, int Count);
	static bool STATIC_MatchesWildcard(const struct FString& SourceString, const struct FString& Wildcard, TEnumAsByte<ESearchCase> SearchCase);
	static int STATIC_Len(const struct FString& S);
	static struct FString STATIC_LeftPad(const struct FString& SourceString, int ChCount);
	static struct FString STATIC_LeftChop(const struct FString& SourceString, int Count);
	static struct FString STATIC_Left(const struct FString& SourceString, int Count);
	static struct FString STATIC_JoinStringArray(TArray<struct FString> SourceArray, const struct FString& Separator);
	static bool STATIC_IsNumeric(const struct FString& SourceString);
	static struct FString STATIC_GetSubstring(const struct FString& SourceString, int StartIndex, int Length);
	static int STATIC_GetCharacterAsNumber(const struct FString& SourceString, int Index);
	static TArray<struct FString> STATIC_GetCharacterArrayFromString(const struct FString& SourceString);
	static int STATIC_FindSubstring(const struct FString& SearchIn, const struct FString& Substring, bool bUseCase, bool bSearchFromEnd, int StartPosition);
	static bool STATIC_EqualEqual_StrStr(const struct FString& A, const struct FString& B);
	static bool STATIC_EqualEqual_StriStri(const struct FString& A, const struct FString& B);
	static bool STATIC_EndsWith(const struct FString& SourceString, const struct FString& InSuffix, TEnumAsByte<ESearchCase> SearchCase);
	static int STATIC_CullArray(const struct FString& SourceString, TArray<struct FString>* inArray);
	static struct FString STATIC_Conv_VectorToString(const struct FVector& InVec);
	static struct FString STATIC_Conv_Vector2dToString(const struct FVector2D& InVec);
	static struct FString STATIC_Conv_TransformToString(const struct FTransform& InTrans);
	static void STATIC_Conv_StringToVector2D(const struct FString& inString, struct FVector2D* OutConvertedVector2D, bool* OutIsValid);
	static void STATIC_Conv_StringToVector(const struct FString& inString, struct FVector* OutConvertedVector, bool* OutIsValid);
	static void STATIC_Conv_StringToRotator(const struct FString& inString, struct FRotator* OutConvertedRotator, bool* OutIsValid);
	static struct FName STATIC_Conv_StringToName(const struct FString& inString);
	static int STATIC_Conv_StringToInt(const struct FString& inString);
	static float STATIC_Conv_StringToFloat(const struct FString& inString);
	static void STATIC_Conv_StringToColor(const struct FString& inString, struct FLinearColor* OutConvertedColor, bool* OutIsValid);
	static struct FString STATIC_Conv_RotatorToString(const struct FRotator& InRot);
	static struct FString STATIC_Conv_ObjectToString(class UObject* InObj);
	static struct FString STATIC_Conv_NameToString(const struct FName& InName);
	static struct FString STATIC_Conv_IntVectorToString(const struct FIntVector& InIntVec);
	static struct FString STATIC_Conv_IntToString(int inInt);
	static struct FString STATIC_Conv_FloatToString(float InFloat);
	static struct FString STATIC_Conv_ColorToString(const struct FLinearColor& InColor);
	static struct FString STATIC_Conv_ByteToString(unsigned char InByte);
	static struct FString STATIC_Conv_BoolToString(bool InBool);
	static bool STATIC_Contains(const struct FString& SearchIn, const struct FString& Substring, bool bUseCase, bool bSearchFromEnd);
	static struct FString STATIC_Concat_StrStr(const struct FString& A, const struct FString& B);
	static struct FString STATIC_BuildString_Vector2d(const struct FString& AppendTo, const struct FString& Prefix, const struct FVector2D& InVector2D, const struct FString& Suffix);
	static struct FString STATIC_BuildString_Vector(const struct FString& AppendTo, const struct FString& Prefix, const struct FVector& InVector, const struct FString& Suffix);
	static struct FString STATIC_BuildString_Rotator(const struct FString& AppendTo, const struct FString& Prefix, const struct FRotator& InRot, const struct FString& Suffix);
	static struct FString STATIC_BuildString_Object(const struct FString& AppendTo, const struct FString& Prefix, class UObject* InObj, const struct FString& Suffix);
	static struct FString STATIC_BuildString_Name(const struct FString& AppendTo, const struct FString& Prefix, const struct FName& InName, const struct FString& Suffix);
	static struct FString STATIC_BuildString_IntVector(const struct FString& AppendTo, const struct FString& Prefix, const struct FIntVector& InIntVector, const struct FString& Suffix);
	static struct FString STATIC_BuildString_Int(const struct FString& AppendTo, const struct FString& Prefix, int inInt, const struct FString& Suffix);
	static struct FString STATIC_BuildString_Float(const struct FString& AppendTo, const struct FString& Prefix, float InFloat, const struct FString& Suffix);
	static struct FString STATIC_BuildString_Color(const struct FString& AppendTo, const struct FString& Prefix, const struct FLinearColor& InColor, const struct FString& Suffix);
	static struct FString STATIC_BuildString_Bool(const struct FString& AppendTo, const struct FString& Prefix, bool InBool, const struct FString& Suffix);
};

// Class Engine.KismetStringTableLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UKismetStringTableLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.KismetStringTableLibrary");
		return ptr;
	}


	static bool STATIC_IsRegisteredTableId(const struct FName& TableId);
	static bool STATIC_IsRegisteredTableEntry(const struct FName& TableId, const struct FString& Key);
	static struct FString STATIC_GetTableNamespace(const struct FName& TableId);
	static struct FString STATIC_GetTableEntrySourceString(const struct FName& TableId, const struct FString& Key);
	static struct FString STATIC_GetTableEntryMetaData(const struct FName& TableId, const struct FString& Key, const struct FName& MetaDataId);
	static TArray<struct FName> STATIC_GetRegisteredStringTables();
	static TArray<struct FName> STATIC_GetMetaDataIdsFromStringTableEntry(const struct FName& TableId, const struct FString& Key);
	static TArray<struct FString> STATIC_GetKeysFromStringTable(const struct FName& TableId);
};

// Class Engine.KismetSystemLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UKismetSystemLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.KismetSystemLibrary");
		return ptr;
	}


	static void STATIC_UnregisterForRemoteNotifications();
	static void STATIC_UnloadPrimaryAssetList(TArray<struct FPrimaryAssetId> PrimaryAssetIdList);
	static void STATIC_UnloadPrimaryAsset(const struct FPrimaryAssetId& PrimaryAssetId);
	static void STATIC_TransactObject(class UObject* Object);
	static void STATIC_StackTrace();
	static bool STATIC_SphereTraceSingleForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_SphereTraceSingleByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, const struct FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_SphereTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_SphereTraceMultiForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_SphereTraceMultiByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, const struct FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_SphereTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_SphereOverlapComponents(class UObject* WorldContextObject, const struct FVector& SpherePos, float SphereRadius, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UClass* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class UPrimitiveComponent*>* OutComponents);
	static bool STATIC_SphereOverlapActors(class UObject* WorldContextObject, const struct FVector& SpherePos, float SphereRadius, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UClass* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class AActor*>* OutActors);
	static void STATIC_ShowPlatformSpecificLeaderboardScreen(const struct FString& CategoryName);
	static void STATIC_ShowPlatformSpecificAchievementsScreen(class APlayerController* SpecificPlayer);
	static void STATIC_ShowInterstitialAd();
	static void STATIC_ShowAdBanner(int AdIdIndex, bool bShowOnBottomOfScreen);
	static void STATIC_SetWindowTitle(const struct FText& Title);
	static void STATIC_SetVolumeButtonsHandledBySystem(bool bEnabled);
	static void STATIC_SetVectorPropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FVector& Value);
	static void STATIC_SetUserActivity(const struct FUserActivity& UserActivity);
	static void STATIC_SetTransformPropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FTransform& Value);
	static void STATIC_SetTextPropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FText& Value);
	static void STATIC_SetSuppressViewportTransitionMessage(class UObject* WorldContextObject, bool bState);
	static void STATIC_SetStructurePropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FGenericStruct& Value);
	static void STATIC_SetStringPropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FString& Value);
	static void STATIC_SetSoftObjectPropertyByName(class UObject* Object, const struct FName& PropertyName);
	static void STATIC_SetSoftClassPropertyByName(class UObject* Object, const struct FName& PropertyName);
	static void STATIC_SetRotatorPropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FRotator& Value);
	static void STATIC_SetObjectPropertyByName(class UObject* Object, const struct FName& PropertyName, class UObject* Value);
	static void STATIC_SetNamePropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FName& Value);
	static void STATIC_SetLinearColorPropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FLinearColor& Value);
	static void STATIC_SetIntPropertyByName(class UObject* Object, const struct FName& PropertyName, int Value);
	static void STATIC_SetInterfacePropertyByName(class UObject* Object, const struct FName& PropertyName, const TScriptInterface<class UInterface>& Value);
	static void STATIC_SetInt64PropertyByName(class UObject* Object, const struct FName& PropertyName, int64_t Value);
	static void STATIC_SetFloatPropertyByName(class UObject* Object, const struct FName& PropertyName, float Value);
	static void STATIC_SetCollisionProfileNameProperty(class UObject* Object, const struct FName& PropertyName, const struct FCollisionProfileName& Value);
	static void STATIC_SetClassPropertyByName(class UObject* Object, const struct FName& PropertyName, class UClass* Value);
	static void STATIC_SetBytePropertyByName(class UObject* Object, const struct FName& PropertyName, unsigned char Value);
	static void STATIC_SetBoolPropertyByName(class UObject* Object, const struct FName& PropertyName, bool Value);
	static void STATIC_RetriggerableDelay(class UObject* WorldContextObject, float Duration, const struct FLatentActionInfo& LatentInfo);
	static void STATIC_ResetGamepadAssignmentToController(int ControllerId);
	static void STATIC_ResetGamepadAssignments();
	static void STATIC_RegisterForRemoteNotifications();
	static void STATIC_QuitGame(class UObject* WorldContextObject, class APlayerController* SpecificPlayer, TEnumAsByte<EQuitPreference> QuitPreference, bool bIgnorePlatformRestrictions);
	static void STATIC_PrintWarning(const struct FString& inString);
	static void STATIC_PrintText(class UObject* WorldContextObject, const struct FText& InText, bool bPrintToScreen, bool bPrintToLog, const struct FLinearColor& TextColor, float Duration);
	static void STATIC_PrintString(class UObject* WorldContextObject, const struct FString& inString, bool bPrintToScreen, bool bPrintToLog, const struct FLinearColor& TextColor, float Duration);
	void OnAssetLoaded__DelegateSignature(class UObject* Loaded);
	void OnAssetClassLoaded__DelegateSignature(class UClass* Loaded);
	static bool STATIC_NotEqual_SoftObjectReference();
	static bool STATIC_NotEqual_SoftClassReference();
	static bool STATIC_NotEqual_PrimaryAssetType(const struct FPrimaryAssetType& A, const struct FPrimaryAssetType& B);
	static bool STATIC_NotEqual_PrimaryAssetId(const struct FPrimaryAssetId& A, const struct FPrimaryAssetId& B);
	static struct FString STATIC_NormalizeFilename(const struct FString& InFilename);
	static void STATIC_MoveComponentTo(class USceneComponent* Component, const struct FVector& TargetRelativeLocation, const struct FRotator& TargetRelativeRotation, bool bEaseOut, bool bEaseIn, float OverTime, bool bForceShortestRotationPath, TEnumAsByte<EMoveComponentAction> MoveAction, const struct FLatentActionInfo& LatentInfo);
	static struct FSoftObjectPath STATIC_MakeSoftObjectPath(const struct FString& PathString);
	static struct FSoftClassPath STATIC_MakeSoftClassPath(const struct FString& PathString);
	static struct FText STATIC_MakeLiteralText(const struct FText& Value);
	static struct FString STATIC_MakeLiteralString(const struct FString& Value);
	static struct FName STATIC_MakeLiteralName(const struct FName& Value);
	static int STATIC_MakeLiteralInt(int Value);
	static float STATIC_MakeLiteralFloat(float Value);
	static unsigned char STATIC_MakeLiteralByte(unsigned char Value);
	static bool STATIC_MakeLiteralBool(bool Value);
	static void STATIC_LoadInterstitialAd(int AdIdIndex);
	static class UClass* STATIC_LoadClassAsset_Blocking();
	static void STATIC_LoadAssetClass(class UObject* WorldContextObject, const struct FScriptDelegate& OnLoaded, const struct FLatentActionInfo& LatentInfo);
	static class UObject* STATIC_LoadAsset_Blocking();
	static void STATIC_LoadAsset(class UObject* WorldContextObject, const struct FScriptDelegate& OnLoaded, const struct FLatentActionInfo& LatentInfo);
	static bool STATIC_LineTraceSingleForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_LineTraceSingleByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_LineTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_LineTraceMultiForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_LineTraceMultiByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_LineTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static void STATIC_LaunchURL(const struct FString& URL);
	static void STATIC_K2_UnPauseTimerHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
	static void STATIC_K2_UnPauseTimerDelegate(const struct FScriptDelegate& Delegate);
	static void STATIC_K2_UnPauseTimer(class UObject* Object, const struct FString& FunctionName);
	static bool STATIC_K2_TimerExistsHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
	static bool STATIC_K2_TimerExistsDelegate(const struct FScriptDelegate& Delegate);
	static bool STATIC_K2_TimerExists(class UObject* Object, const struct FString& FunctionName);
	static struct FTimerHandle STATIC_K2_SetTimerDelegate(const struct FScriptDelegate& Delegate, float Time, bool bLooping, float InitialStartDelay, float InitialStartDelayVariance);
	static struct FTimerHandle STATIC_K2_SetTimer(class UObject* Object, const struct FString& FunctionName, float Time, bool bLooping, float InitialStartDelay, float InitialStartDelayVariance);
	static void STATIC_K2_PauseTimerHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
	static void STATIC_K2_PauseTimerDelegate(const struct FScriptDelegate& Delegate);
	static void STATIC_K2_PauseTimer(class UObject* Object, const struct FString& FunctionName);
	static bool STATIC_K2_IsValidTimerHandle(const struct FTimerHandle& Handle);
	static bool STATIC_K2_IsTimerPausedHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
	static bool STATIC_K2_IsTimerPausedDelegate(const struct FScriptDelegate& Delegate);
	static bool STATIC_K2_IsTimerPaused(class UObject* Object, const struct FString& FunctionName);
	static bool STATIC_K2_IsTimerActiveHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
	static bool STATIC_K2_IsTimerActiveDelegate(const struct FScriptDelegate& Delegate);
	static bool STATIC_K2_IsTimerActive(class UObject* Object, const struct FString& FunctionName);
	static struct FTimerHandle STATIC_K2_InvalidateTimerHandle(struct FTimerHandle* Handle);
	static float STATIC_K2_GetTimerRemainingTimeHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
	static float STATIC_K2_GetTimerRemainingTimeDelegate(const struct FScriptDelegate& Delegate);
	static float STATIC_K2_GetTimerRemainingTime(class UObject* Object, const struct FString& FunctionName);
	static float STATIC_K2_GetTimerElapsedTimeHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
	static float STATIC_K2_GetTimerElapsedTimeDelegate(const struct FScriptDelegate& Delegate);
	static float STATIC_K2_GetTimerElapsedTime(class UObject* Object, const struct FString& FunctionName);
	static void STATIC_K2_ClearTimerHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);
	static void STATIC_K2_ClearTimerDelegate(const struct FScriptDelegate& Delegate);
	static void STATIC_K2_ClearTimer(class UObject* Object, const struct FString& FunctionName);
	static void STATIC_K2_ClearAndInvalidateTimerHandle(class UObject* WorldContextObject, struct FTimerHandle* Handle);
	static bool STATIC_IsValidSoftObjectReference();
	static bool STATIC_IsValidSoftClassReference();
	static bool STATIC_IsValidPrimaryAssetType(const struct FPrimaryAssetType& PrimaryAssetType);
	static bool STATIC_IsValidPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId);
	static bool STATIC_IsValidClass(class UClass* Class);
	static bool STATIC_IsValid(class UObject* Object);
	static bool STATIC_IsUnattended();
	static bool STATIC_IsStandalone(class UObject* WorldContextObject);
	static bool STATIC_IsServer(class UObject* WorldContextObject);
	static bool STATIC_IsScreensaverEnabled();
	static bool STATIC_IsPackagedForDistribution();
	static bool STATIC_IsLoggedIn(class APlayerController* SpecificPlayer);
	static bool STATIC_IsInterstitialAdRequested();
	static bool STATIC_IsInterstitialAdAvailable();
	static bool STATIC_IsDedicatedServer(class UObject* WorldContextObject);
	static bool STATIC_IsControllerAssignedToGamepad(int ControllerId);
	static void STATIC_HideAdBanner();
	static bool STATIC_GetVolumeButtonsHandledBySystem();
	static struct FString STATIC_GetUniqueDeviceId();
	static bool STATIC_GetSupportedFullscreenResolutions(TArray<struct FIntPoint>* Resolutions);
	static void STATIC_GetSoftObjectReferenceFromPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId);
	static void STATIC_GetSoftClassReferenceFromPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId);
	static int STATIC_GetRenderingMaterialQualityLevel();
	static int STATIC_GetRenderingDetailMode();
	static struct FString STATIC_GetProjectSavedDirectory();
	static struct FString STATIC_GetProjectDirectory();
	static struct FString STATIC_GetProjectContentDirectory();
	static void STATIC_GetPrimaryAssetsWithBundleState(TArray<struct FName> RequiredBundles, TArray<struct FName> ExcludedBundles, TArray<struct FPrimaryAssetType> ValidTypes, bool bForceCurrentState, TArray<struct FPrimaryAssetId>* OutPrimaryAssetIdList);
	static void STATIC_GetPrimaryAssetIdList(const struct FPrimaryAssetType& PrimaryAssetType, TArray<struct FPrimaryAssetId>* OutPrimaryAssetIdList);
	static struct FPrimaryAssetId STATIC_GetPrimaryAssetIdFromSoftObjectReference();
	static struct FPrimaryAssetId STATIC_GetPrimaryAssetIdFromSoftClassReference();
	static struct FPrimaryAssetId STATIC_GetPrimaryAssetIdFromObject(class UObject* Object);
	static struct FPrimaryAssetId STATIC_GetPrimaryAssetIdFromClass(class UClass* Class);
	static TArray<struct FString> STATIC_GetPreferredLanguages();
	static struct FString STATIC_GetPlatformUserName();
	static struct FString STATIC_GetPathName(class UObject* Object);
	static class UObject* STATIC_GetOuterObject(class UObject* Object);
	static struct FString STATIC_GetObjectName(class UObject* Object);
	static class UObject* STATIC_GetObjectFromPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId);
	static int STATIC_GetMinYResolutionForUI();
	static int STATIC_GetMinYResolutionFor3DView();
	static struct FString STATIC_GetLocalCurrencySymbol();
	static struct FString STATIC_GetLocalCurrencyCode();
	static float STATIC_GetGameTimeInSeconds(class UObject* WorldContextObject);
	static struct FString STATIC_GetGamepadControllerName(int ControllerId);
	static struct FString STATIC_GetGameName();
	static struct FString STATIC_GetGameBundleId();
	static int64_t STATIC_GetFrameCount();
	static struct FString STATIC_GetEngineVersion();
	static struct FString STATIC_GetDisplayName(class UObject* Object);
	static struct FString STATIC_GetDeviceId();
	static struct FString STATIC_GetDefaultLocale();
	static struct FString STATIC_GetDefaultLanguage();
	static bool STATIC_GetCurrentBundleState(const struct FPrimaryAssetId& PrimaryAssetId, bool bForceCurrentState, TArray<struct FName>* OutBundles);
	static bool STATIC_GetConvenientWindowedResolutions(TArray<struct FIntPoint>* Resolutions);
	static int STATIC_GetConsoleVariableIntValue(const struct FString& VariableName);
	static float STATIC_GetConsoleVariableFloatValue(const struct FString& VariableName);
	static bool STATIC_GetConsoleVariableBoolValue(const struct FString& VariableName);
	static void STATIC_GetComponentBounds(class USceneComponent* Component, struct FVector* Origin, struct FVector* BoxExtent, float* SphereRadius);
	static struct FString STATIC_GetCommandLine();
	static class UClass* STATIC_GetClassFromPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId);
	static struct FString STATIC_GetClassDisplayName(class UClass* Class);
	static int STATIC_GetAdIDCount();
	static void STATIC_GetActorListFromComponentList(TArray<class UPrimitiveComponent*> ComponentList, class UClass* ActorClassFilter, TArray<class AActor*>* OutActorList);
	static void STATIC_GetActorBounds(class AActor* Actor, struct FVector* Origin, struct FVector* BoxExtent);
	static void STATIC_ForceCloseAdBanner();
	static void STATIC_FlushPersistentDebugLines(class UObject* WorldContextObject);
	static void STATIC_FlushDebugStrings(class UObject* WorldContextObject);
	static void STATIC_ExecuteConsoleCommand(class UObject* WorldContextObject, const struct FString& Command, class APlayerController* SpecificPlayer);
	static bool STATIC_EqualEqual_SoftObjectReference();
	static bool STATIC_EqualEqual_SoftClassReference();
	static bool STATIC_EqualEqual_PrimaryAssetType(const struct FPrimaryAssetType& A, const struct FPrimaryAssetType& B);
	static bool STATIC_EqualEqual_PrimaryAssetId(const struct FPrimaryAssetId& A, const struct FPrimaryAssetId& B);
	static int STATIC_EndTransaction();
	static void STATIC_DrawDebugString(class UObject* WorldContextObject, const struct FVector& TextLocation, const struct FString& Text, class AActor* TestBaseActor, const struct FLinearColor& TextColor, float Duration);
	static void STATIC_DrawDebugSphere(class UObject* WorldContextObject, const struct FVector& Center, float Radius, int Segments, const struct FLinearColor& LineColor, float Duration, float Thickness);
	static void STATIC_DrawDebugPoint(class UObject* WorldContextObject, const struct FVector& Position, float Size, const struct FLinearColor& PointColor, float Duration);
	static void STATIC_DrawDebugPlane(class UObject* WorldContextObject, const struct FPlane& PlaneCoordinates, const struct FVector& Location, float Size, const struct FLinearColor& PlaneColor, float Duration);
	static void STATIC_DrawDebugLine(class UObject* WorldContextObject, const struct FVector& LineStart, const struct FVector& LineEnd, const struct FLinearColor& LineColor, float Duration, float Thickness);
	static void STATIC_DrawDebugFrustum(class UObject* WorldContextObject, const struct FTransform& FrustumTransform, const struct FLinearColor& FrustumColor, float Duration, float Thickness);
	static void STATIC_DrawDebugFloatHistoryTransform(class UObject* WorldContextObject, const struct FDebugFloatHistory& FloatHistory, const struct FTransform& DrawTransform, const struct FVector2D& DrawSize, const struct FLinearColor& DrawColor, float Duration);
	static void STATIC_DrawDebugFloatHistoryLocation(class UObject* WorldContextObject, const struct FDebugFloatHistory& FloatHistory, const struct FVector& DrawLocation, const struct FVector2D& DrawSize, const struct FLinearColor& DrawColor, float Duration);
	static void STATIC_DrawDebugCylinder(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, int Segments, const struct FLinearColor& LineColor, float Duration, float Thickness);
	static void STATIC_DrawDebugCoordinateSystem(class UObject* WorldContextObject, const struct FVector& AxisLoc, const struct FRotator& AxisRot, float Scale, float Duration, float Thickness);
	static void STATIC_DrawDebugConeInDegrees(class UObject* WorldContextObject, const struct FVector& Origin, const struct FVector& Direction, float Length, float AngleWidth, float AngleHeight, int NumSides, const struct FLinearColor& LineColor, float Duration, float Thickness);
	static void STATIC_DrawDebugCone(class UObject* WorldContextObject, const struct FVector& Origin, const struct FVector& Direction, float Length, float AngleWidth, float AngleHeight, int NumSides, const struct FLinearColor& LineColor, float Duration, float Thickness);
	static void STATIC_DrawDebugCircle(class UObject* WorldContextObject, const struct FVector& Center, float Radius, int NumSegments, const struct FLinearColor& LineColor, float Duration, float Thickness, const struct FVector& YAxis, const struct FVector& ZAxis, bool bDrawAxis);
	static void STATIC_DrawDebugCapsule(class UObject* WorldContextObject, const struct FVector& Center, float HalfHeight, float Radius, const struct FRotator& Rotation, const struct FLinearColor& LineColor, float Duration, float Thickness);
	static void STATIC_DrawDebugCamera(class ACameraActor* CameraActor, const struct FLinearColor& CameraColor, float Duration);
	static void STATIC_DrawDebugBox(class UObject* WorldContextObject, const struct FVector& Center, const struct FVector& Extent, const struct FLinearColor& LineColor, const struct FRotator& Rotation, float Duration, float Thickness);
	static void STATIC_DrawDebugArrow(class UObject* WorldContextObject, const struct FVector& LineStart, const struct FVector& LineEnd, float ArrowSize, const struct FLinearColor& LineColor, float Duration, float Thickness);
	static bool STATIC_DoesImplementInterface(class UObject* TestObject, class UClass* Interface);
	static void STATIC_Delay(class UObject* WorldContextObject, float Duration, const struct FLatentActionInfo& LatentInfo);
	static void STATIC_CreateCopyForUndoBuffer(class UObject* ObjectToModify);
	static struct FString STATIC_ConvertToRelativePath(const struct FString& Filename);
	static struct FString STATIC_ConvertToAbsolutePath(const struct FString& Filename);
	static void STATIC_Conv_SoftObjPathToSoftObjRef(const struct FSoftObjectPath& SoftObjectPath);
	static struct FString STATIC_Conv_SoftObjectReferenceToString();
	static class UObject* STATIC_Conv_SoftObjectReferenceToObject();
	static struct FString STATIC_Conv_SoftClassReferenceToString();
	static class UClass* STATIC_Conv_SoftClassReferenceToClass();
	static void STATIC_Conv_SoftClassPathToSoftClassRef(const struct FSoftClassPath& SoftClassPath);
	static struct FString STATIC_Conv_PrimaryAssetTypeToString(const struct FPrimaryAssetType& PrimaryAssetType);
	static struct FString STATIC_Conv_PrimaryAssetIdToString(const struct FPrimaryAssetId& PrimaryAssetId);
	static void STATIC_Conv_ObjectToSoftObjectReference(class UObject* Object);
	static class UObject* STATIC_Conv_InterfaceToObject(const TScriptInterface<class UInterface>& Interface);
	static void STATIC_Conv_ClassToSoftClassReference(class UClass* Class);
	static void STATIC_ControlScreensaver(bool bAllowScreenSaver);
	static bool STATIC_ComponentOverlapComponents(class UPrimitiveComponent* Component, const struct FTransform& ComponentTransform, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UClass* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class UPrimitiveComponent*>* OutComponents);
	static bool STATIC_ComponentOverlapActors(class UPrimitiveComponent* Component, const struct FTransform& ComponentTransform, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UClass* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class AActor*>* OutActors);
	static void STATIC_CollectGarbage();
	static bool STATIC_CapsuleTraceSingleForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_CapsuleTraceSingleByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, const struct FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_CapsuleTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_CapsuleTraceMultiForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_CapsuleTraceMultiByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, const struct FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_CapsuleTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_CapsuleOverlapComponents(class UObject* WorldContextObject, const struct FVector& CapsulePos, float Radius, float HalfHeight, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UClass* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class UPrimitiveComponent*>* OutComponents);
	static bool STATIC_CapsuleOverlapActors(class UObject* WorldContextObject, const struct FVector& CapsulePos, float Radius, float HalfHeight, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UClass* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class AActor*>* OutActors);
	static bool STATIC_CanLaunchURL(const struct FString& URL);
	static void STATIC_CancelTransaction(int Index);
	static void STATIC_BreakSoftObjectPath(const struct FSoftObjectPath& InSoftObjectPath, struct FString* PathString);
	static void STATIC_BreakSoftClassPath(const struct FSoftClassPath& InSoftClassPath, struct FString* PathString);
	static bool STATIC_BoxTraceSingleForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_BoxTraceSingleByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, const struct FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_BoxTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_BoxTraceMultiForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_BoxTraceMultiByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, const struct FName& ProfileName, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_BoxTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool STATIC_BoxOverlapComponents(class UObject* WorldContextObject, const struct FVector& BoxPos, const struct FVector& Extent, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UClass* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class UPrimitiveComponent*>* OutComponents);
	static bool STATIC_BoxOverlapActors(class UObject* WorldContextObject, const struct FVector& BoxPos, const struct FVector& BoxExtent, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UClass* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class AActor*>* OutActors);
	static int STATIC_BeginTransaction(const struct FString& Context, const struct FText& Description, class UObject* PrimaryObject);
	static struct FDebugFloatHistory STATIC_AddFloatHistorySample(float Value, const struct FDebugFloatHistory& FloatHistory);
};

// Class Engine.KismetTextLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UKismetTextLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.KismetTextLibrary");
		return ptr;
	}


	static struct FText STATIC_TextTrimTrailing(const struct FText& InText);
	static struct FText STATIC_TextTrimPrecedingAndTrailing(const struct FText& InText);
	static struct FText STATIC_TextTrimPreceding(const struct FText& InText);
	static struct FText STATIC_TextToUpper(const struct FText& InText);
	static struct FText STATIC_TextToLower(const struct FText& InText);
	static bool STATIC_TextIsTransient(const struct FText& InText);
	static bool STATIC_TextIsFromStringTable(const struct FText& Text);
	static bool STATIC_TextIsEmpty(const struct FText& InText);
	static bool STATIC_TextIsCultureInvariant(const struct FText& InText);
	static struct FText STATIC_TextFromStringTable(const struct FName& TableId, const struct FString& Key);
	static bool STATIC_StringTableIdAndKeyFromText(const struct FText& Text, struct FName* OutTableId, struct FString* OutKey);
	static struct FText STATIC_PolyglotDataToText(const struct FPolyglotTextData& PolyglotData);
	static bool STATIC_NotEqual_TextText(const struct FText& A, const struct FText& B);
	static bool STATIC_NotEqual_IgnoreCase_TextText(const struct FText& A, const struct FText& B);
	static void STATIC_IsPolyglotDataValid(const struct FPolyglotTextData& PolyglotData, bool* IsValid, struct FText* errorMessage);
	static struct FText STATIC_GetEmptyText();
	static struct FText STATIC_Format(const struct FText& InPattern, TArray<struct FFormatArgumentData> InArgs);
	static bool STATIC_FindTextInLocalizationTable(const struct FString& Namespace, const struct FString& Key, struct FText* OutText);
	static bool STATIC_EqualEqual_TextText(const struct FText& A, const struct FText& B);
	static bool STATIC_EqualEqual_IgnoreCase_TextText(const struct FText& A, const struct FText& B);
	static struct FText STATIC_Conv_VectorToText(const struct FVector& InVec);
	static struct FText STATIC_Conv_Vector2dToText(const struct FVector2D& InVec);
	static struct FText STATIC_Conv_TransformToText(const struct FTransform& InTrans);
	static struct FString STATIC_Conv_TextToString(const struct FText& InText);
	static struct FText STATIC_Conv_StringToText(const struct FString& inString);
	static struct FText STATIC_Conv_RotatorToText(const struct FRotator& InRot);
	static struct FText STATIC_Conv_ObjectToText(class UObject* InObj);
	static struct FText STATIC_Conv_NameToText(const struct FName& InName);
	static struct FText STATIC_Conv_IntToText(int Value, bool bAlwaysSign, bool bUseGrouping, int MinimumIntegralDigits, int MaximumIntegralDigits);
	static struct FText STATIC_Conv_Int64ToText(int64_t Value, bool bAlwaysSign, bool bUseGrouping, int MinimumIntegralDigits, int MaximumIntegralDigits);
	static struct FText STATIC_Conv_FloatToText(float Value, TEnumAsByte<ERoundingMode> RoundingMode, bool bAlwaysSign, bool bUseGrouping, int MinimumIntegralDigits, int MaximumIntegralDigits, int MinimumFractionalDigits, int MaximumFractionalDigits);
	static struct FText STATIC_Conv_ColorToText(const struct FLinearColor& InColor);
	static struct FText STATIC_Conv_ByteToText(unsigned char Value);
	static struct FText STATIC_Conv_BoolToText(bool InBool);
	static struct FText STATIC_AsTimeZoneTime_DateTime(const struct FDateTime& InDateTime, const struct FString& InTimeZone);
	static struct FText STATIC_AsTimeZoneDateTime_DateTime(const struct FDateTime& InDateTime, const struct FString& InTimeZone);
	static struct FText STATIC_AsTimeZoneDate_DateTime(const struct FDateTime& InDateTime, const struct FString& InTimeZone);
	static struct FText STATIC_AsTimespan_Timespan(const struct FTimespan& InTimespan);
	static struct FText STATIC_AsTime_DateTime(const struct FDateTime& In);
	static struct FText STATIC_AsPercent_Float(float Value, TEnumAsByte<ERoundingMode> RoundingMode, bool bAlwaysSign, bool bUseGrouping, int MinimumIntegralDigits, int MaximumIntegralDigits, int MinimumFractionalDigits, int MaximumFractionalDigits);
	static struct FText STATIC_AsDateTime_DateTime(const struct FDateTime& In);
	static struct FText STATIC_AsDate_DateTime(const struct FDateTime& InDateTime);
	static struct FText STATIC_AsCurrencyBase(int BaseValue, const struct FString& CurrencyCode);
	static struct FText STATIC_AsCurrency_Integer(int Value, TEnumAsByte<ERoundingMode> RoundingMode, bool bAlwaysSign, bool bUseGrouping, int MinimumIntegralDigits, int MaximumIntegralDigits, int MinimumFractionalDigits, int MaximumFractionalDigits, const struct FString& CurrencyCode);
	static struct FText STATIC_AsCurrency_Float(float Value, TEnumAsByte<ERoundingMode> RoundingMode, bool bAlwaysSign, bool bUseGrouping, int MinimumIntegralDigits, int MaximumIntegralDigits, int MinimumFractionalDigits, int MaximumFractionalDigits, const struct FString& CurrencyCode);
};

// Class Engine.Layer
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0690 - 0x0000 // Minimum to subtract -> (0000)
class ULayer : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0690, struct FName,                                                          LayerName);                                                // 0x0028(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0690, unsigned char,                                                         bIsVisible);                                               // 0x0030(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0690, TArray<struct FLayerActorStats>,                                       ActorStats);                                               // 0x0038(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Layer");
		return ptr;
	}


};

// Class Engine.Level
// 0x0258 (FullSize[0x0280] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0691 - 0x0000 // Minimum to subtract -> (0090)
class ULevel : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0090 PADDING_0691, class UWorld*,                                                         OwningWorld);                                              // 0x00B8(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_0691, class UModel*,                                                         Model);                                                    // 0x00C0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0691, TArray<class UModelComponent*>,                                        ModelComponents);                                          // 0x00C8(0x0010)  (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_0691, class ULevelActorContainer*,                                           ActorCluster);                                             // 0x00D8(0x0008)  (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_0691, int,                                                                   NumTextureStreamingUnbuiltComponents);                     // 0x00E0(0x0004)  (ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BC PADDING_0691, int,                                                                   NumTextureStreamingDirtyResources);                        // 0x00E4(0x0004)  (ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_0691, class ALevelScriptActor*,                                              LevelScriptActor);                                         // 0x00E8(0x0008)  (ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C8 PADDING_0691, class ANavigationObjectBase*,                                          NavListStart);                                             // 0x00F0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_0691, class ANavigationObjectBase*,                                          NavListEnd);                                               // 0x00F8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D8 PADDING_0691, TArray<class UNavigationDataChunk*>,                                   NavDataChunks);                                            // 0x0100(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E8 PADDING_0691, float,                                                                 LightmapTotalSize);                                        // 0x0110(0x0004)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00EC PADDING_0691, float,                                                                 ShadowmapTotalSize);                                       // 0x0114(0x0004)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F0 PADDING_0691, TArray<struct FVector>,                                                StaticNavigableGeometry);                                  // 0x0118(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_0691, TArray<struct FGuid>,                                                  StreamingTextureGuids);                                    // 0x0128(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01A8 PADDING_0691, struct FGuid,                                                          LevelBuildDataId);                                         // 0x01D0(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01B8 PADDING_0691, class UMapBuildDataRegistry*,                                          MapBuildData);                                             // 0x01E0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01C0 PADDING_0691, struct FIntVector,                                                     LightBuildLevelOffset);                                    // 0x01E8(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01CC PADDING_0691, unsigned char,                                                         bIsLightingScenario);                                      // 0x01F4(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01CC PADDING_0691, unsigned char,                                                         bTextureStreamingRotationChanged);                         // 0x01F4(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01CC PADDING_0691, unsigned char,                                                         bStaticComponentsRegisteredInStreamingManager);            // 0x01F4(0x0001) BIT_FIELD (Transient, DuplicateTransient, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01CC PADDING_0691, unsigned char,                                                         bIsVisible);                                               // 0x01F4(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0218 PADDING_0691, class AWorldSettings*,                                                 WorldSettings);                                            // 0x0240(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0228 PADDING_0691, TArray<class UAssetUserData*>,                                         AssetUserData);                                            // 0x0250(0x0010)  (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0248 PADDING_0691, TArray<struct FReplicatedStaticActorDestructionInfo>,                  DestroyedReplicatedStaticActors);                          // 0x0270(0x0010)  (ZeroConstructor, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Level");
		return ptr;
	}


};

// Class Engine.LevelActorContainer
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0692 - 0x0000 // Minimum to subtract -> (0000)
class ULevelActorContainer : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0692, TArray<class AActor*>,                                                 Actors);                                                   // 0x0028(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LevelActorContainer");
		return ptr;
	}


};

// Class Engine.LevelBounds
// 0x0011 (FullSize[0x0249] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0693 - 0x0000 // Minimum to subtract -> (0010)
class ALevelBounds : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0693, bool,                                                                  bAutoUpdateBounds);                                        // 0x0248(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LevelBounds");
		return ptr;
	}


};

// Class Engine.LevelScriptActor
// 0x0011 (FullSize[0x0249] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0694 - 0x0000 // Minimum to subtract -> (0010)
class ALevelScriptActor : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0694, unsigned char,                                                         bInputEnabled);                                            // 0x0248(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LevelScriptActor");
		return ptr;
	}


	void WorldOriginLocationChanged(const struct FIntVector& OldOriginLocation, const struct FIntVector& NewOriginLocation);
	void SetCinematicMode(bool bCinematicMode, bool bHidePlayer, bool bAffectsHUD, bool bAffectsMovement, bool bAffectsTurning);
	bool RemoteEvent(const struct FName& EventName);
	void LevelReset();
};

// Class Engine.LevelScriptBlueprint
// 0x0007 (FullSize[0x00D8] - InheritedSize[0x00D1])
// LastOffsetWithSize(0x00D1)
class ULevelScriptBlueprint : public UBlueprint
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LevelScriptBlueprint");
		return ptr;
	}


};

// Class Engine.World
// 0x0610 (FullSize[0x0638] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0696 - 0x0000 // Minimum to subtract -> (0008)
class UWorld : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0696, class ULevel*,                                                         PersistentLevel);                                          // 0x0030(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0696, class UNetDriver*,                                                     NetDriver);                                                // 0x0038(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0696, class ULineBatchComponent*,                                            LineBatcher);                                              // 0x0040(0x0008)  (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0696, class ULineBatchComponent*,                                            PersistentLineBatcher);                                    // 0x0048(0x0008)  (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0696, class ULineBatchComponent*,                                            ForegroundLineBatcher);                                    // 0x0050(0x0008)  (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0696, class AGameNetworkManager*,                                            NetworkManager);                                           // 0x0058(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0696, class UPhysicsCollisionHandler*,                                       PhysicsCollisionHandler);                                  // 0x0060(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0696, TArray<class UObject*>,                                                ExtraReferencedObjects);                                   // 0x0068(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0696, TArray<class UObject*>,                                                PerModuleDataObjects);                                     // 0x0078(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0696, TArray<class AActor*>,                                                 LevelSequenceActors);                                      // 0x0088(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0696, TArray<class ULevelStreaming*>,                                        StreamingLevels);                                          // 0x0098(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0696, struct FStreamingLevelsToConsider,                                     StreamingLevelsToConsider);                                // 0x00A8(0x0028)  (Transient, DuplicateTransient, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0696, struct FString,                                                        StreamingLevelsPrefix);                                    // 0x00D0(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_0696, class ULevel*,                                                         CurrentLevelPendingVisibility);                            // 0x00E0(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_0696, class ULevel*,                                                         CurrentLevelPendingInvisibility);                          // 0x00E8(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00C8 PADDING_0696, class UDemoNetDriver*,                                                 DemoNetDriver);                                            // 0x00F0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_0696, class AParticleEventManager*,                                          MyParticleEventManager);                                   // 0x00F8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D8 PADDING_0696, class APhysicsVolume*,                                                 DefaultPhysicsVolume);                                     // 0x0100(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00F6 PADDING_0696, unsigned char,                                                         bAreConstraintsDirty);                                     // 0x011E(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F8 PADDING_0696, class UNavigationSystemBase*,                                          NavigationSystem);                                         // 0x0120(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0100 PADDING_0696, class AGameModeBase*,                                                  AuthorityGameMode);                                        // 0x0128(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0108 PADDING_0696, class AGameStateBase*,                                                 GameState);                                                // 0x0130(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0110 PADDING_0696, class UAISystemBase*,                                                  AISystem);                                                 // 0x0138(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0118 PADDING_0696, class UAvoidanceManager*,                                              AvoidanceManager);                                         // 0x0140(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0120 PADDING_0696, TArray<class ULevel*>,                                                 Levels);                                                   // 0x0148(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0130 PADDING_0696, TArray<struct FLevelCollection>,                                       LevelCollections);                                         // 0x0158(0x0010)  (ZeroConstructor, Transient, NonTransactional, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0148 PADDING_0696, class UGameInstance*,                                                  OwningGameInstance);                                       // 0x0170(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0150 PADDING_0696, TArray<class UMaterialParameterCollectionInstance*>,                   ParameterCollectionInstances);                             // 0x0178(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0160 PADDING_0696, class UCanvas*,                                                        CanvasForRenderingToTarget);                               // 0x0188(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0168 PADDING_0696, class UCanvas*,                                                        CanvasForDrawMaterialToRenderTarget);                      // 0x0190(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x01C0 PADDING_0696, TArray<class UActorComponent*>,                                        ComponentsThatNeedEndOfFrameUpdate);                       // 0x01E8(0x0010)  (ExportObject, ZeroConstructor, Transient, NonTransactional, ContainsInstancedReference, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x01D0 PADDING_0696, TArray<class UActorComponent*>,                                        ComponentsThatNeedEndOfFrameUpdate_OnGameThread);          // 0x01F8(0x0010)  (ExportObject, ZeroConstructor, Transient, NonTransactional, ContainsInstancedReference, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0540 PADDING_0696, class UWorldComposition*,                                              WorldComposition);                                         // 0x0568(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05B8 PADDING_0696, struct FWorldPSCPool,                                                  PSCPool);                                                  // 0x05E0(0x0058)  (ContainsInstancedReference, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.World");
		return ptr;
	}


	class AWorldSettings* K2_GetWorldSettings();
	void HandleTimelineScrubbed();
};

// Class Engine.LevelStreaming
// 0x00E8 (FullSize[0x0110] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0697 - 0x0000 // Minimum to subtract -> (0028)
class ULevelStreaming : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0028 PADDING_0697, struct FName,                                                          PackageNameToLoad);                                        // 0x0050(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0697, TArray<struct FName>,                                                  LODPackageNames);                                          // 0x0058(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0697, struct FTransform,                                                     LevelTransform);                                           // 0x0080(0x0030)  (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_0697, int,                                                                   LevelLODIndex);                                            // 0x00B0(0x0004)  (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x008C PADDING_0697, int,                                                                   StreamingPriority);                                        // 0x00B4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0092 PADDING_0697, unsigned char,                                                         bShouldBeVisible);                                         // 0x00BA(0x0001) BIT_FIELD (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0092 PADDING_0697, unsigned char,                                                         bShouldBeLoaded);                                          // 0x00BA(0x0001) BIT_FIELD (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0092 PADDING_0697, unsigned char,                                                         bLocked);                                                  // 0x00BA(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0092 PADDING_0697, unsigned char,                                                         bIsStatic);                                                // 0x00BA(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0092 PADDING_0697, unsigned char,                                                         bShouldBlockOnLoad);                                       // 0x00BA(0x0001) BIT_FIELD (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0093 PADDING_0697, unsigned char,                                                         bShouldBlockOnUnload);                                     // 0x00BB(0x0001) BIT_FIELD (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0093 PADDING_0697, unsigned char,                                                         bDisableDistanceStreaming);                                // 0x00BB(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0093 PADDING_0697, unsigned char,                                                         bDrawOnLevelStatusMap);                                    // 0x00BB(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_0697, struct FLinearColor,                                                   LevelColor);                                               // 0x00BC(0x0010)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0697, TArray<class ALevelStreamingVolume*>,                                  EditorStreamingVolumes);                                   // 0x00D0(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_0697, float,                                                                 MinTimeBetweenVolumeUnloadRequests);                       // 0x00E0(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_0697, struct FScriptMulticastDelegate,                                       OnLevelLoaded);                                            // 0x00E8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_0697, struct FScriptMulticastDelegate,                                       OnLevelUnloaded);                                          // 0x00F8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E0 PADDING_0697, struct FScriptMulticastDelegate,                                       OnLevelShown);                                             // 0x0108(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F0 PADDING_0697, struct FScriptMulticastDelegate,                                       OnLevelHidden);                                            // 0x0118(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_0697, class ULevel*,                                                         LoadedLevel);                                              // 0x0128(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0108 PADDING_0697, class ULevel*,                                                         PendingUnloadLevel);                                       // 0x0130(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LevelStreaming");
		return ptr;
	}


	bool ShouldBeLoaded();
	void SetShouldBeVisible(bool bInShouldBeVisible);
	void SetShouldBeLoaded(bool bInShouldBeLoaded);
	void SetPriority(int NewPriority);
	void SetLevelLODIndex(int LODIndex);
	bool IsStreamingStatePending();
	bool IsLevelVisible();
	bool IsLevelLoaded();
	struct FName GetWorldAssetPackageFName();
	class ULevel* GetLoadedLevel();
	class ALevelScriptActor* GetLevelScriptActor();
	class ULevelStreaming* CreateInstance(const struct FString& UniqueInstanceName);
};

// Class Engine.LevelStreamingAlwaysLoaded
// 0x0040 (FullSize[0x0150] - InheritedSize[0x0110])
// LastOffsetWithSize(0x0138)
class ULevelStreamingAlwaysLoaded : public ULevelStreaming
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LevelStreamingAlwaysLoaded");
		return ptr;
	}


};

// Class Engine.LevelStreamingDynamic
// 0x0040 (FullSize[0x0150] - InheritedSize[0x0110])
// LastOffsetWithSize(0x0138)
class ULevelStreamingDynamic : public ULevelStreaming
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LevelStreamingDynamic");
		return ptr;
	}


	static class ULevelStreamingDynamic* STATIC_LoadLevelInstanceBySoftObjectPtr(class UObject* WorldContextObject, const struct FVector& Location, const struct FRotator& Rotation, bool* bOutSuccess);
	static class ULevelStreamingDynamic* STATIC_LoadLevelInstance(class UObject* WorldContextObject, const struct FString& LevelName, const struct FVector& Location, const struct FRotator& Rotation, bool* bOutSuccess);
};

// Class Engine.LevelStreamingPersistent
// 0x0040 (FullSize[0x0150] - InheritedSize[0x0110])
// LastOffsetWithSize(0x0138)
class ULevelStreamingPersistent : public ULevelStreaming
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LevelStreamingPersistent");
		return ptr;
	}


};

// Class Engine.LevelStreamingVolume
// 0x0015 (FullSize[0x0295] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
#define PADDING_069B - 0x0000 // Minimum to subtract -> (0000)
class ALevelStreamingVolume : public AVolume
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_069B, TArray<struct FName>,                                                  StreamingLevelNames);                                      // 0x0280(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_069B, unsigned char,                                                         bEditorPreVisOnly);                                        // 0x0290(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_069B, unsigned char,                                                         bDisabled);                                                // 0x0290(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_069B, TEnumAsByte<EStreamingVolumeUsage>,                                    StreamingUsage);                                           // 0x0294(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LevelStreamingVolume");
		return ptr;
	}


};

// Class Engine.LightmappedSurfaceCollection
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_069C - 0x0000 // Minimum to subtract -> (0000)
class ULightmappedSurfaceCollection : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_069C, class UModel*,                                                         SourceModel);                                              // 0x0028(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_069C, TArray<int>,                                                           Surfaces);                                                 // 0x0030(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LightmappedSurfaceCollection");
		return ptr;
	}


};

// Class Engine.LightMapTexture2D
// 0x001C (FullSize[0x0100] - InheritedSize[0x00E4])
// LastOffsetWithSize(0x00E4)
class ULightMapTexture2D : public UTexture2D
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LightMapTexture2D");
		return ptr;
	}


};

// Class Engine.LightmassCharacterIndirectDetailVolume
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
class ALightmassCharacterIndirectDetailVolume : public AVolume
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LightmassCharacterIndirectDetailVolume");
		return ptr;
	}


};

// Class Engine.LightmassImportanceVolume
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
class ALightmassImportanceVolume : public AVolume
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LightmassImportanceVolume");
		return ptr;
	}


};

// Class Engine.LightmassPortal
// 0x0018 (FullSize[0x0250] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_06A0 - 0x0000 // Minimum to subtract -> (0010)
class ALightmassPortal : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_06A0, class ULightmassPortalComponent*,                                      PortalComponent);                                          // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LightmassPortal");
		return ptr;
	}


};

// Class Engine.LightmassPortalComponent
// 0x00A0 (FullSize[0x0220] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_06A1 - 0x0000 // Minimum to subtract -> (0089)
class ULightmassPortalComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0089 PADDING_06A1, class UBoxComponent*,                                                  PreviewBox);                                               // 0x0218(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LightmassPortalComponent");
		return ptr;
	}


};

// Class Engine.LightmassPrimitiveSettingsObject
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_06A2 - 0x0000 // Minimum to subtract -> (0000)
class ULightmassPrimitiveSettingsObject : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_06A2, struct FLightmassPrimitiveSettings,                                    LightmassSettings);                                        // 0x0028(0x0018)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LightmassPrimitiveSettingsObject");
		return ptr;
	}


};

// Class Engine.LineBatchComponent
// 0x000B (FullSize[0x0410] - InheritedSize[0x0405])
// LastOffsetWithSize(0x0408)
class ULineBatchComponent : public UPrimitiveComponent
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LineBatchComponent");
		return ptr;
	}


};

// Class Engine.LocalLightComponent
// 0x00A0 (FullSize[0x0370] - InheritedSize[0x02D0])
// LastOffsetWithSize(0x02D0)
#define PADDING_06A4 - 0x0000 // Minimum to subtract -> (008C)
class ULocalLightComponent : public ULightComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x008C PADDING_06A4, float,                                                                 Radius);                                                   // 0x035C(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_06A4, float,                                                                 AttenuationRadius);                                        // 0x0360(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_06A4, struct FLightmassPointLightSettings,                                   LightmassSettings);                                        // 0x0364(0x000C)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LocalLightComponent");
		return ptr;
	}


	void SetIntensityUnits(ELightUnits NewIntensityUnits);
	void SetAttenuationRadius(float NewRadius);
	static float STATIC_GetUnitsConversionFactor(ELightUnits SrcUnits, ELightUnits TargetUnits, float CosHalfConeAngle);
};

// Class Engine.LocalPlayerSubsystem
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class ULocalPlayerSubsystem : public USubsystem
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LocalPlayerSubsystem");
		return ptr;
	}


};

// Class Engine.LODActor
// 0x0091 (FullSize[0x02C9] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_06A6 - 0x0000 // Minimum to subtract -> (0010)
class ALODActor : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_06A6, class UStaticMeshComponent*,                                           StaticMeshComponent);                                      // 0x0248(0x0008)  (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0018 PADDING_06A6, TMap<class UMaterialInterface* COMMA class UInstancedStaticMeshComponent*>, ImpostersStaticMeshComponents);                            // 0x0250(0x0050)  (Edit, ExportObject, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0068 PADDING_06A6, class UHLODProxy*,                                                     Proxy);                                                    // 0x02A0(0x0008)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0070 PADDING_06A6, struct FName,                                                          Key);                                                      // 0x02A8(0x0008)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0078 PADDING_06A6, float,                                                                 LODDrawDistance);                                          // 0x02B0(0x0004)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x007C PADDING_06A6, int,                                                                   LODLevel);                                                 // 0x02B4(0x0004)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_06A6, TArray<class AActor*>,                                                 SubActors);                                                // 0x02B8(0x0010)  (Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_06A6, unsigned char,                                                         CachedNumHLODLevels);                                      // 0x02C8(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LODActor");
		return ptr;
	}


};

// Class Engine.MapBuildDataRegistry
// 0x0001 (FullSize[0x0029] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_06A7 - 0x0000 // Minimum to subtract -> (0000)
class UMapBuildDataRegistry : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_06A7, TEnumAsByte<ELightingBuildQuality>,                                    LevelLightingQuality);                                     // 0x0028(0x0001)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MapBuildDataRegistry");
		return ptr;
	}


};

// Class Engine.Material
// 0x0228 (FullSize[0x02B0] - InheritedSize[0x0088])
// LastOffsetWithSize(0x0088)
#define PADDING_06A8 - 0x0000 // Minimum to subtract -> (0000)
class UMaterial : public UMaterialInterface
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_06A8, class UPhysicalMaterial*,                                              PhysMaterial);                                             // 0x0088(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_06A8, struct FScalarMaterialInput,                                           Metallic);                                                 // 0x0090(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_06A8, struct FScalarMaterialInput,                                           Specular);                                                 // 0x00A4(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_06A8, struct FVectorMaterialInput,                                           Normal);                                                   // 0x00B8(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_06A8, struct FColorMaterialInput,                                            EmissiveColor);                                            // 0x00CC(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_06A8, TEnumAsByte<EMaterialDomain>,                                          MaterialDomain);                                           // 0x00E0(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0059 PADDING_06A8, TEnumAsByte<EBlendMode>,                                               BlendMode);                                                // 0x00E1(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005A PADDING_06A8, TEnumAsByte<EDecalBlendMode>,                                          DecalBlendMode);                                           // 0x00E2(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005B PADDING_06A8, TEnumAsByte<EMaterialDecalResponse>,                                   MaterialDecalResponse);                                    // 0x00E3(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005C PADDING_06A8, TEnumAsByte<EMaterialShadingModel>,                                    ShadingModel);                                             // 0x00E4(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x005E PADDING_06A8, struct FMaterialShadingModelField,                                     ShadingModels);                                            // 0x00E6(0x0002)  (NoDestructor, AssetRegistrySearchable, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0060 PADDING_06A8, float,                                                                 OpacityMaskClipValue);                                     // 0x00E8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0064 PADDING_06A8, unsigned char,                                                         bCastDynamicShadowAsMasked);                               // 0x00EC(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_06A8, struct FVectorMaterialInput,                                           WorldPositionOffset);                                      // 0x00F0(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007C PADDING_06A8, struct FScalarMaterialInput,                                           Refraction);                                               // 0x0104(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_06A8, struct FMaterialAttributesInput,                                       MaterialAttributes);                                       // 0x0118(0x0010)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_06A8, struct FScalarMaterialInput,                                           PixelDepthOffset);                                         // 0x0130(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BC PADDING_06A8, struct FShadingModelMaterialInput,                                     ShadingModelFromMaterialExpression);                       // 0x0144(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_06A8, unsigned char,                                                         bEnableSeparateTranslucency);                              // 0x0158(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_06A8, unsigned char,                                                         bEnableMobileSeparateTranslucency);                        // 0x0158(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_06A8, unsigned char,                                                         bEnableResponsiveAA);                                      // 0x0158(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_06A8, unsigned char,                                                         bScreenSpaceReflections);                                  // 0x0158(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_06A8, unsigned char,                                                         bContactShadows);                                          // 0x0158(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_06A8, unsigned char,                                                         TwoSided);                                                 // 0x0158(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_06A8, unsigned char,                                                         DitheredLODTransition);                                    // 0x0158(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_06A8, unsigned char,                                                         DitherOpacityMask);                                        // 0x0158(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D1 PADDING_06A8, unsigned char,                                                         bAllowNegativeEmissiveColor);                              // 0x0159(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D4 PADDING_06A8, int,                                                                   NumCustomizedUVs);                                         // 0x015C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D8 PADDING_06A8, TEnumAsByte<ETranslucencyLightingMode>,                                TranslucencyLightingMode);                                 // 0x0160(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00DC PADDING_06A8, float,                                                                 TranslucencyDirectionalLightingIntensity);                 // 0x0164(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E0 PADDING_06A8, unsigned char,                                                         AllowTranslucentCustomDepthWrites);                        // 0x0168(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E4 PADDING_06A8, float,                                                                 TranslucentShadowDensityScale);                            // 0x016C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E8 PADDING_06A8, float,                                                                 TranslucentSelfShadowDensityScale);                        // 0x0170(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00EC PADDING_06A8, float,                                                                 TranslucentSelfShadowSecondDensityScale);                  // 0x0174(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F0 PADDING_06A8, float,                                                                 TranslucentSelfShadowSecondOpacity);                       // 0x0178(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F4 PADDING_06A8, float,                                                                 TranslucentBackscatteringExponent);                        // 0x017C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F8 PADDING_06A8, struct FLinearColor,                                                   TranslucentMultipleScatteringExtinction);                  // 0x0180(0x0010)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0108 PADDING_06A8, float,                                                                 TranslucentShadowStartOffset);                             // 0x0190(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010C PADDING_06A8, unsigned char,                                                         bDisableDepthTest);                                        // 0x0194(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010C PADDING_06A8, unsigned char,                                                         bWriteOnlyAlpha);                                          // 0x0194(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010C PADDING_06A8, unsigned char,                                                         bGenerateSphericalParticleNormals);                        // 0x0194(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010C PADDING_06A8, unsigned char,                                                         bTangentSpaceNormal);                                      // 0x0194(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010C PADDING_06A8, unsigned char,                                                         bUseEmissiveForDynamicAreaLighting);                       // 0x0194(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010C PADDING_06A8, unsigned char,                                                         bBlockGI);                                                 // 0x0194(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010C PADDING_06A8, unsigned char,                                                         bUsedAsSpecialEngineMaterial);                             // 0x0194(0x0001) BIT_FIELD (DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010C PADDING_06A8, unsigned char,                                                         bUsedWithSkeletalMesh);                                    // 0x0194(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010D PADDING_06A8, unsigned char,                                                         bUsedWithEditorCompositing);                               // 0x0195(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010D PADDING_06A8, unsigned char,                                                         bUsedWithParticleSprites);                                 // 0x0195(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010D PADDING_06A8, unsigned char,                                                         bUsedWithBeamTrails);                                      // 0x0195(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010D PADDING_06A8, unsigned char,                                                         bUsedWithMeshParticles);                                   // 0x0195(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010D PADDING_06A8, unsigned char,                                                         bUsedWithNiagaraSprites);                                  // 0x0195(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010D PADDING_06A8, unsigned char,                                                         bUsedWithNiagaraRibbons);                                  // 0x0195(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010D PADDING_06A8, unsigned char,                                                         bUsedWithNiagaraMeshParticles);                            // 0x0195(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010D PADDING_06A8, unsigned char,                                                         bUsedWithGeometryCache);                                   // 0x0195(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010E PADDING_06A8, unsigned char,                                                         bUsedWithStaticLighting);                                  // 0x0196(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010E PADDING_06A8, unsigned char,                                                         bUsedWithMorphTargets);                                    // 0x0196(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010E PADDING_06A8, unsigned char,                                                         bUsedWithSplineMeshes);                                    // 0x0196(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010E PADDING_06A8, unsigned char,                                                         bUsedWithInstancedStaticMeshes);                           // 0x0196(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010E PADDING_06A8, unsigned char,                                                         bUsedWithGeometryCollections);                             // 0x0196(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010E PADDING_06A8, unsigned char,                                                         bUsesDistortion);                                          // 0x0196(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010E PADDING_06A8, unsigned char,                                                         bUsedWithClothing);                                        // 0x0196(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010E PADDING_06A8, unsigned char,                                                         bUsedWithUI);                                              // 0x0196(0x0001) BIT_FIELD (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010F PADDING_06A8, unsigned char,                                                         bAutomaticallySetUsageInEditor);                           // 0x0197(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010F PADDING_06A8, unsigned char,                                                         bFullyRough);                                              // 0x0197(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010F PADDING_06A8, unsigned char,                                                         bUseFullPrecision);                                        // 0x0197(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010F PADDING_06A8, unsigned char,                                                         bUseLightmapDirectionality);                               // 0x0197(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010F PADDING_06A8, unsigned char,                                                         bUseHQForwardReflections);                                 // 0x0197(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010F PADDING_06A8, unsigned char,                                                         bUsePlanarForwardReflections);                             // 0x0197(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010F PADDING_06A8, unsigned char,                                                         bNormalCurvatureToRoughness);                              // 0x0197(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0110 PADDING_06A8, TEnumAsByte<EMaterialTessellationMode>,                                D3D11TessellationMode);                                    // 0x0198(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0114 PADDING_06A8, unsigned char,                                                         bEnableCrackFreeDisplacement);                             // 0x019C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0114 PADDING_06A8, unsigned char,                                                         bEnableAdaptiveTessellation);                              // 0x019C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0118 PADDING_06A8, float,                                                                 MaxDisplacement);                                          // 0x01A0(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x011C PADDING_06A8, unsigned char,                                                         Wireframe);                                                // 0x01A4(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x011C PADDING_06A8, unsigned char,                                                         bOutputVelocityOnBasePass);                                // 0x01A4(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0120 PADDING_06A8, TArray<class UMaterialExpression*>,                                    Expressions);                                              // 0x01A8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0130 PADDING_06A8, TArray<struct FMaterialFunctionInfo>,                                  MaterialFunctionInfos);                                    // 0x01B8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0140 PADDING_06A8, TArray<struct FMaterialParameterCollectionInfo>,                       MaterialParameterCollectionInfos);                         // 0x01C8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0150 PADDING_06A8, unsigned char,                                                         bCanMaskedBeAssumedOpaque);                                // 0x01D8(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0150 PADDING_06A8, unsigned char,                                                         bIsMasked);                                                // 0x01D8(0x0001) BIT_FIELD (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0150 PADDING_06A8, unsigned char,                                                         bIsPreviewMaterial);                                       // 0x01D8(0x0001) BIT_FIELD (Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0150 PADDING_06A8, unsigned char,                                                         bIsFunctionPreviewMaterial);                               // 0x01D8(0x0001) BIT_FIELD (Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0150 PADDING_06A8, unsigned char,                                                         bUseMaterialAttributes);                                   // 0x01D8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0150 PADDING_06A8, unsigned char,                                                         bCastRayTracedShadows);                                    // 0x01D8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0150 PADDING_06A8, unsigned char,                                                         bUseTranslucencyVertexFog);                                // 0x01D8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0150 PADDING_06A8, unsigned char,                                                         bComputeFogPerPixel);                                      // 0x01D8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0151 PADDING_06A8, unsigned char,                                                         bOutputTranslucentVelocity);                               // 0x01D9(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0151 PADDING_06A8, unsigned char,                                                         bAllowDevelopmentShaderCompile);                           // 0x01D9(0x0001) BIT_FIELD (Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0151 PADDING_06A8, unsigned char,                                                         bIsMaterialEditorStatsMaterial);                           // 0x01D9(0x0001) BIT_FIELD (Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0154 PADDING_06A8, uint32_t,                                                              UsageFlagWarnings);                                        // 0x01DC(0x0004)  (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0158 PADDING_06A8, TEnumAsByte<EBlendableLocation>,                                       BlendableLocation);                                        // 0x01E0(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x015C PADDING_06A8, int,                                                                   BlendablePriority);                                        // 0x01E4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0160 PADDING_06A8, bool,                                                                  BlendableOutputAlpha);                                     // 0x01E8(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0161 PADDING_06A8, unsigned char,                                                         bEnableStencilTest);                                       // 0x01E9(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0162 PADDING_06A8, TEnumAsByte<EMaterialStencilCompare>,                                  StencilCompare);                                           // 0x01EA(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0163 PADDING_06A8, unsigned char,                                                         StencilRefValue);                                          // 0x01EB(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0164 PADDING_06A8, TEnumAsByte<ERefractionMode>,                                          RefractionMode);                                           // 0x01EC(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0168 PADDING_06A8, float,                                                                 RefractionDepthBias);                                      // 0x01F0(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x016C PADDING_06A8, struct FGuid,                                                          StateId);                                                  // 0x01F4(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0188 PADDING_06A8, TArray<bool>,                                                          CachedQualityLevelsUsed);                                  // 0x0210(0x0010)  (ZeroConstructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0218 PADDING_06A8, TArray<class UObject*>,                                                ExpressionTextureReferences);                              // 0x02A0(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Material");
		return ptr;
	}


};

// Class Engine.MaterialBillboardComponent
// 0x0013 (FullSize[0x0418] - InheritedSize[0x0405])
// LastOffsetWithSize(0x0408)
#define PADDING_06A9 - 0x0000 // Minimum to subtract -> (0000)
class UMaterialBillboardComponent : public UPrimitiveComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_06A9, TArray<struct FMaterialSpriteElement>,                                 Elements);                                                 // 0x0408(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialBillboardComponent");
		return ptr;
	}


	void SetElements(TArray<struct FMaterialSpriteElement> NewElements);
	void AddElement(class UMaterialInterface* Material, class UCurveFloat* DistanceToOpacityCurve, bool bSizeIsInScreenSpace, float BaseSizeX, float BaseSizeY, class UCurveFloat* DistanceToSizeCurve);
};

// Class Engine.MaterialExpressionAbs
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06AA - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionAbs : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06AA, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionAbs");
		return ptr;
	}


};

// Class Engine.MaterialExpressionActorPositionWS
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionActorPositionWS : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionActorPositionWS");
		return ptr;
	}


};

// Class Engine.MaterialExpressionAdd
// 0x0037 (FullSize[0x0070] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06AC - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionAdd : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06AC, struct FExpressionInput,                                               A);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06AC, struct FExpressionInput,                                               B);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_06AC, float,                                                                 ConstA);                                                   // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_06AC, float,                                                                 ConstB);                                                   // 0x006C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionAdd");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTextureBase
// 0x0014 (FullSize[0x004D] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06AD - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionTextureBase : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06AD, class UTexture*,                                                       Texture);                                                  // 0x0040(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_06AD, TEnumAsByte<EMaterialSamplerType>,                                     SamplerType);                                              // 0x0048(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_06AD, unsigned char,                                                         IsDefaultMeshpaintTexture);                                // 0x004C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTextureBase");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTextureSample
// 0x0088 (FullSize[0x00D5] - InheritedSize[0x004D])
// LastOffsetWithSize(0x004D)
#define PADDING_06AE - 0x0000 // Minimum to subtract -> (0003)
class UMaterialExpressionTextureSample : public UMaterialExpressionTextureBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_06AE, struct FExpressionInput,                                               Coordinates);                                              // 0x0050(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_06AE, struct FExpressionInput,                                               TextureObject);                                            // 0x0064(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002B PADDING_06AE, struct FExpressionInput,                                               MipValue);                                                 // 0x0078(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003F PADDING_06AE, struct FExpressionInput,                                               CoordinatesDX);                                            // 0x008C(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_06AE, struct FExpressionInput,                                               CoordinatesDY);                                            // 0x00A0(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0067 PADDING_06AE, struct FExpressionInput,                                               AutomaticViewMipBiasValue);                                // 0x00B4(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007B PADDING_06AE, TEnumAsByte<ETextureMipValueMode>,                                     MipValueMode);                                             // 0x00C8(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007C PADDING_06AE, TEnumAsByte<ESamplerSourceMode>,                                       SamplerSource);                                            // 0x00C9(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007F PADDING_06AE, uint32_t,                                                              ConstCoordinate);                                          // 0x00CC(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0083 PADDING_06AE, int,                                                                   ConstMipValue);                                            // 0x00D0(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0087 PADDING_06AE, unsigned char,                                                         AutomaticViewMipBias);                                     // 0x00D4(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTextureSample");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTextureSampleParameter
// 0x002B (FullSize[0x0100] - InheritedSize[0x00D5])
// LastOffsetWithSize(0x00D5)
#define PADDING_06AF - 0x0000 // Minimum to subtract -> (000B)
class UMaterialExpressionTextureSampleParameter : public UMaterialExpressionTextureSample
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x000B PADDING_06AF, struct FName,                                                          ParameterName);                                            // 0x00E0(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_06AF, struct FGuid,                                                          ExpressionGUID);                                           // 0x00E8(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_06AF, struct FName,                                                          Group);                                                    // 0x00F8(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTextureSampleParameter");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTextureSampleParameter2D
// 0x0000 (FullSize[0x0100] - InheritedSize[0x0100])
// LastOffsetWithSize(0x0100)
class UMaterialExpressionTextureSampleParameter2D : public UMaterialExpressionTextureSampleParameter
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTextureSampleParameter2D");
		return ptr;
	}


};

// Class Engine.MaterialExpressionAntialiasedTextureMask
// 0x0005 (FullSize[0x0105] - InheritedSize[0x0100])
// LastOffsetWithSize(0x0100)
#define PADDING_06B1 - 0x0000 // Minimum to subtract -> (0000)
class UMaterialExpressionAntialiasedTextureMask : public UMaterialExpressionTextureSampleParameter2D
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_06B1, float,                                                                 Threshold);                                                // 0x0100(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_06B1, TEnumAsByte<ETextureColorChannel>,                                     Channel);                                                  // 0x0104(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionAntialiasedTextureMask");
		return ptr;
	}


};

// Class Engine.MaterialExpressionAppendVector
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06B2 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionAppendVector : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06B2, struct FExpressionInput,                                               A);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06B2, struct FExpressionInput,                                               B);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionAppendVector");
		return ptr;
	}


};

// Class Engine.MaterialExpressionArccosine
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06B3 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionArccosine : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06B3, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionArccosine");
		return ptr;
	}


};

// Class Engine.MaterialExpressionArccosineFast
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06B4 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionArccosineFast : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06B4, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionArccosineFast");
		return ptr;
	}


};

// Class Engine.MaterialExpressionArcsine
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06B5 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionArcsine : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06B5, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionArcsine");
		return ptr;
	}


};

// Class Engine.MaterialExpressionArcsineFast
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06B6 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionArcsineFast : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06B6, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionArcsineFast");
		return ptr;
	}


};

// Class Engine.MaterialExpressionArctangent
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06B7 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionArctangent : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06B7, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionArctangent");
		return ptr;
	}


};

// Class Engine.MaterialExpressionArctangent2
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06B8 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionArctangent2 : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06B8, struct FExpressionInput,                                               Y);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06B8, struct FExpressionInput,                                               X);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionArctangent2");
		return ptr;
	}


};

// Class Engine.MaterialExpressionArctangent2Fast
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06B9 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionArctangent2Fast : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06B9, struct FExpressionInput,                                               Y);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06B9, struct FExpressionInput,                                               X);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionArctangent2Fast");
		return ptr;
	}


};

// Class Engine.MaterialExpressionArctangentFast
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06BA - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionArctangentFast : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06BA, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionArctangentFast");
		return ptr;
	}


};

// Class Engine.MaterialExpressionAtmosphericFogColor
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06BB - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionAtmosphericFogColor : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06BB, struct FExpressionInput,                                               WorldPosition);                                            // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionAtmosphericFogColor");
		return ptr;
	}


};

// Class Engine.MaterialExpressionAtmosphericLightColor
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionAtmosphericLightColor : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionAtmosphericLightColor");
		return ptr;
	}


};

// Class Engine.MaterialExpressionAtmosphericLightVector
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionAtmosphericLightVector : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionAtmosphericLightVector");
		return ptr;
	}


};

// Class Engine.MaterialExpressionBentNormalCustomOutput
// 0x000C (FullSize[0x004C] - InheritedSize[0x0040])
// LastOffsetWithSize(0x0039)
#define PADDING_06BE - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionBentNormalCustomOutput : public UMaterialExpressionCustomOutput
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06BE, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionBentNormalCustomOutput");
		return ptr;
	}


};

// Class Engine.MaterialExpressionBlackBody
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06BF - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionBlackBody : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06BF, struct FExpressionInput,                                               Temp);                                                     // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionBlackBody");
		return ptr;
	}


};

// Class Engine.MaterialExpressionBlendMaterialAttributes
// 0x004D (FullSize[0x0086] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06C0 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionBlendMaterialAttributes : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06C0, struct FMaterialAttributesInput,                                       A);                                                        // 0x0040(0x0010)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_06C0, struct FMaterialAttributesInput,                                       B);                                                        // 0x0058(0x0010)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_06C0, struct FExpressionInput,                                               Alpha);                                                    // 0x0070(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004B PADDING_06C0, TEnumAsByte<EMaterialAttributeBlend>,                                  PixelAttributeBlendType);                                  // 0x0084(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004C PADDING_06C0, TEnumAsByte<EMaterialAttributeBlend>,                                  VertexAttributeBlendType);                                 // 0x0085(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionBlendMaterialAttributes");
		return ptr;
	}


};

// Class Engine.MaterialExpressionBreakMaterialAttributes
// 0x0017 (FullSize[0x0050] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06C1 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionBreakMaterialAttributes : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06C1, struct FMaterialAttributesInput,                                       MaterialAttributes);                                       // 0x0040(0x0010)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionBreakMaterialAttributes");
		return ptr;
	}


};

// Class Engine.MaterialExpressionBumpOffset
// 0x004F (FullSize[0x0088] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06C2 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionBumpOffset : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06C2, struct FExpressionInput,                                               Coordinate);                                               // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06C2, struct FExpressionInput,                                               Height);                                                   // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_06C2, struct FExpressionInput,                                               HeightRatioInput);                                         // 0x0068(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_06C2, float,                                                                 HeightRatio);                                              // 0x007C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_06C2, float,                                                                 ReferencePlane);                                           // 0x0080(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004B PADDING_06C2, uint32_t,                                                              ConstCoordinate);                                          // 0x0084(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionBumpOffset");
		return ptr;
	}


};

// Class Engine.MaterialExpressionCameraPositionWS
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionCameraPositionWS : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionCameraPositionWS");
		return ptr;
	}


};

// Class Engine.MaterialExpressionCameraVectorWS
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionCameraVectorWS : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionCameraVectorWS");
		return ptr;
	}


};

// Class Engine.MaterialExpressionCeil
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06C5 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionCeil : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06C5, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionCeil");
		return ptr;
	}


};

// Class Engine.MaterialExpressionParameter
// 0x001F (FullSize[0x0058] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06C6 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionParameter : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06C6, struct FName,                                                          ParameterName);                                            // 0x0040(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_06C6, struct FGuid,                                                          ExpressionGUID);                                           // 0x0048(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionParameter");
		return ptr;
	}


};

// Class Engine.MaterialExpressionVectorParameter
// 0x0012 (FullSize[0x006A] - InheritedSize[0x0058])
// LastOffsetWithSize(0x0058)
#define PADDING_06C7 - 0x0000 // Minimum to subtract -> (0000)
class UMaterialExpressionVectorParameter : public UMaterialExpressionParameter
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_06C7, struct FLinearColor,                                                   DefaultValue);                                             // 0x0058(0x0010)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_06C7, bool,                                                                  bUseCustomPrimitiveData);                                  // 0x0068(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0011 PADDING_06C7, unsigned char,                                                         PrimitiveDataIndex);                                       // 0x0069(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionVectorParameter");
		return ptr;
	}


};

// Class Engine.MaterialExpressionChannelMaskParameter
// 0x0016 (FullSize[0x0080] - InheritedSize[0x006A])
// LastOffsetWithSize(0x006A)
#define PADDING_06C8 - 0x0000 // Minimum to subtract -> (0006)
class UMaterialExpressionChannelMaskParameter : public UMaterialExpressionVectorParameter
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0006 PADDING_06C8, TEnumAsByte<EChannelMaskParameterColor>,                               MaskChannel);                                              // 0x0070(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000A PADDING_06C8, struct FExpressionInput,                                               Input);                                                    // 0x0074(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionChannelMaskParameter");
		return ptr;
	}


};

// Class Engine.MaterialExpressionClamp
// 0x004F (FullSize[0x0088] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06C9 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionClamp : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06C9, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06C9, struct FExpressionInput,                                               Min);                                                      // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_06C9, struct FExpressionInput,                                               Max);                                                      // 0x0068(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_06C9, TEnumAsByte<EClampMode>,                                               ClampMode);                                                // 0x007C(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_06C9, float,                                                                 MinDefault);                                               // 0x0080(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004B PADDING_06C9, float,                                                                 MaxDefault);                                               // 0x0084(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionClamp");
		return ptr;
	}


};

// Class Engine.MaterialExpressionClearCoatNormalCustomOutput
// 0x000C (FullSize[0x004C] - InheritedSize[0x0040])
// LastOffsetWithSize(0x0039)
#define PADDING_06CA - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionClearCoatNormalCustomOutput : public UMaterialExpressionCustomOutput
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06CA, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionClearCoatNormalCustomOutput");
		return ptr;
	}


};

// Class Engine.MaterialExpressionCollectionParameter
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06CB - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionCollectionParameter : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06CB, class UMaterialParameterCollection*,                                   Collection);                                               // 0x0040(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_06CB, struct FName,                                                          ParameterName);                                            // 0x0048(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_06CB, struct FGuid,                                                          ParameterId);                                              // 0x0050(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionCollectionParameter");
		return ptr;
	}


};

// Class Engine.MaterialExpressionComment
// 0x0033 (FullSize[0x006C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06CC - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionComment : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06CC, int,                                                                   SizeX);                                                    // 0x0040(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_06CC, int,                                                                   SizeY);                                                    // 0x0044(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_06CC, struct FString,                                                        Text);                                                     // 0x0048(0x0010)  (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_06CC, struct FLinearColor,                                                   CommentColor);                                             // 0x0058(0x0010)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_06CC, int,                                                                   FontSize);                                                 // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionComment");
		return ptr;
	}


};

// Class Engine.MaterialExpressionComponentMask
// 0x001C (FullSize[0x0055] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06CD - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionComponentMask : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06CD, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06CD, unsigned char,                                                         R);                                                        // 0x0054(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06CD, unsigned char,                                                         G);                                                        // 0x0054(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06CD, unsigned char,                                                         B);                                                        // 0x0054(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06CD, unsigned char,                                                         A);                                                        // 0x0054(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionComponentMask");
		return ptr;
	}


};

// Class Engine.MaterialExpressionConstant
// 0x000B (FullSize[0x0044] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06CE - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionConstant : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06CE, float,                                                                 R);                                                        // 0x0040(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionConstant");
		return ptr;
	}


};

// Class Engine.MaterialExpressionConstant2Vector
// 0x000F (FullSize[0x0048] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06CF - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionConstant2Vector : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06CF, float,                                                                 R);                                                        // 0x0040(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_06CF, float,                                                                 G);                                                        // 0x0044(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionConstant2Vector");
		return ptr;
	}


};

// Class Engine.MaterialExpressionConstant3Vector
// 0x0017 (FullSize[0x0050] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06D0 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionConstant3Vector : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06D0, struct FLinearColor,                                                   Constant);                                                 // 0x0040(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionConstant3Vector");
		return ptr;
	}


};

// Class Engine.MaterialExpressionConstant4Vector
// 0x0017 (FullSize[0x0050] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06D1 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionConstant4Vector : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06D1, struct FLinearColor,                                                   Constant);                                                 // 0x0040(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionConstant4Vector");
		return ptr;
	}


};

// Class Engine.MaterialExpressionConstantBiasScale
// 0x0023 (FullSize[0x005C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06D2 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionConstantBiasScale : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06D2, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06D2, float,                                                                 Bias);                                                     // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_06D2, float,                                                                 Scale);                                                    // 0x0058(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionConstantBiasScale");
		return ptr;
	}


};

// Class Engine.MaterialExpressionCosine
// 0x001F (FullSize[0x0058] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06D3 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionCosine : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06D3, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06D3, float,                                                                 Period);                                                   // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionCosine");
		return ptr;
	}


};

// Class Engine.MaterialExpressionCrossProduct
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06D4 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionCrossProduct : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06D4, struct FExpressionInput,                                               A);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06D4, struct FExpressionInput,                                               B);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionCrossProduct");
		return ptr;
	}


};

// Class Engine.MaterialExpressionScalarParameter
// 0x0006 (FullSize[0x005E] - InheritedSize[0x0058])
// LastOffsetWithSize(0x0058)
#define PADDING_06D5 - 0x0000 // Minimum to subtract -> (0000)
class UMaterialExpressionScalarParameter : public UMaterialExpressionParameter
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_06D5, float,                                                                 DefaultValue);                                             // 0x0058(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_06D5, bool,                                                                  bUseCustomPrimitiveData);                                  // 0x005C(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0005 PADDING_06D5, unsigned char,                                                         PrimitiveDataIndex);                                       // 0x005D(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionScalarParameter");
		return ptr;
	}


};

// Class Engine.MaterialExpressionCurveAtlasRowParameter
// 0x001E (FullSize[0x007C] - InheritedSize[0x005E])
// LastOffsetWithSize(0x005E)
#define PADDING_06D6 - 0x0000 // Minimum to subtract -> (0002)
class UMaterialExpressionCurveAtlasRowParameter : public UMaterialExpressionScalarParameter
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0002 PADDING_06D6, class UCurveLinearColor*,                                              Curve);                                                    // 0x0060(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000A PADDING_06D6, class UCurveLinearColorAtlas*,                                         Atlas);                                                    // 0x0068(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0012 PADDING_06D6, struct FExpressionInput,                                               InputTime);                                                // 0x0070(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionCurveAtlasRowParameter");
		return ptr;
	}


};

// Class Engine.MaterialExpressionCustom
// 0x003F (FullSize[0x0078] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06D7 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionCustom : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06D7, struct FString,                                                        code);                                                     // 0x0040(0x0010)  (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_06D7, TEnumAsByte<ECustomMaterialOutputType>,                                OutputType);                                               // 0x0050(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_06D7, struct FString,                                                        Description);                                              // 0x0058(0x0010)  (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_06D7, TArray<struct FCustomInput>,                                           Inputs);                                                   // 0x0068(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionCustom");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDDX
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06D8 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionDDX : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06D8, struct FExpressionInput,                                               Value);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDDX");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDDY
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06D9 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionDDY : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06D9, struct FExpressionInput,                                               Value);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDDY");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDecalDerivative
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionDecalDerivative : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDecalDerivative");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDecalLifetimeOpacity
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionDecalLifetimeOpacity : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDecalLifetimeOpacity");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDecalMipmapLevel
// 0x0023 (FullSize[0x005C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06DC - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionDecalMipmapLevel : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06DC, struct FExpressionInput,                                               TextureSize);                                              // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06DC, float,                                                                 ConstWidth);                                               // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_06DC, float,                                                                 ConstHeight);                                              // 0x0058(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDecalMipmapLevel");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDeltaTime
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionDeltaTime : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDeltaTime");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDepthFade
// 0x0037 (FullSize[0x0070] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06DE - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionDepthFade : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06DE, struct FExpressionInput,                                               InOpacity);                                                // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06DE, struct FExpressionInput,                                               FadeDistance);                                             // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_06DE, float,                                                                 OpacityDefault);                                           // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_06DE, float,                                                                 FadeDistanceDefault);                                      // 0x006C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDepthFade");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDepthOfFieldFunction
// 0x0017 (FullSize[0x0050] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06DF - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionDepthOfFieldFunction : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06DF, TEnumAsByte<EDepthOfFieldFunctionValue>,                               FunctionValue);                                            // 0x0040(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_06DF, struct FExpressionInput,                                               Depth);                                                    // 0x0044(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDepthOfFieldFunction");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDeriveNormalZ
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06E0 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionDeriveNormalZ : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06E0, struct FExpressionInput,                                               InXY);                                                     // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDeriveNormalZ");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDesaturation
// 0x003F (FullSize[0x0078] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06E1 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionDesaturation : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06E1, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06E1, struct FExpressionInput,                                               Fraction);                                                 // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_06E1, struct FLinearColor,                                                   LuminanceFactors);                                         // 0x0068(0x0010)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDesaturation");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDistance
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06E2 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionDistance : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06E2, struct FExpressionInput,                                               A);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06E2, struct FExpressionInput,                                               B);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDistance");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDistanceCullFade
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionDistanceCullFade : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDistanceCullFade");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDistanceFieldGradient
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06E4 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionDistanceFieldGradient : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06E4, struct FExpressionInput,                                               Position);                                                 // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDistanceFieldGradient");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDistanceToNearestSurface
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06E5 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionDistanceToNearestSurface : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06E5, struct FExpressionInput,                                               Position);                                                 // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDistanceToNearestSurface");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDivide
// 0x0037 (FullSize[0x0070] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06E6 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionDivide : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06E6, struct FExpressionInput,                                               A);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06E6, struct FExpressionInput,                                               B);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_06E6, float,                                                                 ConstA);                                                   // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_06E6, float,                                                                 ConstB);                                                   // 0x006C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDivide");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDotProduct
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06E7 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionDotProduct : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06E7, struct FExpressionInput,                                               A);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06E7, struct FExpressionInput,                                               B);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDotProduct");
		return ptr;
	}


};

// Class Engine.MaterialExpressionDynamicParameter
// 0x002B (FullSize[0x0064] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06E8 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionDynamicParameter : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06E8, TArray<struct FString>,                                                ParamNames);                                               // 0x0040(0x0010)  (Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_06E8, struct FLinearColor,                                                   DefaultValue);                                             // 0x0050(0x0010)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_06E8, uint32_t,                                                              ParameterIndex);                                           // 0x0060(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionDynamicParameter");
		return ptr;
	}


};

// Class Engine.MaterialExpressionEyeAdaptation
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionEyeAdaptation : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionEyeAdaptation");
		return ptr;
	}


};

// Class Engine.MaterialExpressionFeatureLevelSwitch
// 0x004B (FullSize[0x0084] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06EA - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionFeatureLevelSwitch : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06EA, struct FExpressionInput,                                               Default);                                                  // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06EA, struct FExpressionInput,                                               Inputs[0x4]);                                              // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionFeatureLevelSwitch");
		return ptr;
	}


};

// Class Engine.MaterialExpressionFloor
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06EB - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionFloor : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06EB, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionFloor");
		return ptr;
	}


};

// Class Engine.MaterialExpressionFmod
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06EC - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionFmod : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06EC, struct FExpressionInput,                                               A);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06EC, struct FExpressionInput,                                               B);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionFmod");
		return ptr;
	}


};

// Class Engine.MaterialExpressionFontSample
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06ED - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionFontSample : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06ED, class UFont*,                                                          Font);                                                     // 0x0040(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_06ED, int,                                                                   FontTexturePage);                                          // 0x0048(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionFontSample");
		return ptr;
	}


};

// Class Engine.MaterialExpressionFontSampleParameter
// 0x0024 (FullSize[0x0070] - InheritedSize[0x004C])
// LastOffsetWithSize(0x004C)
#define PADDING_06EE - 0x0000 // Minimum to subtract -> (0004)
class UMaterialExpressionFontSampleParameter : public UMaterialExpressionFontSample
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_06EE, struct FName,                                                          ParameterName);                                            // 0x0050(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_06EE, struct FGuid,                                                          ExpressionGUID);                                           // 0x0058(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_06EE, struct FName,                                                          Group);                                                    // 0x0068(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionFontSampleParameter");
		return ptr;
	}


};

// Class Engine.MaterialExpressionFrac
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06EF - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionFrac : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06EF, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionFrac");
		return ptr;
	}


};

// Class Engine.MaterialExpressionFresnel
// 0x0043 (FullSize[0x007C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06F0 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionFresnel : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06F0, struct FExpressionInput,                                               ExponentIn);                                               // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06F0, float,                                                                 Exponent);                                                 // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_06F0, struct FExpressionInput,                                               BaseReflectFractionIn);                                    // 0x0058(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_06F0, float,                                                                 BaseReflectFraction);                                      // 0x006C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_06F0, struct FExpressionInput,                                               Normal);                                                   // 0x0070(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionFresnel");
		return ptr;
	}


};

// Class Engine.MaterialExpressionFunctionInput
// 0x0070 (FullSize[0x00A9] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06F1 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionFunctionInput : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06F1, struct FExpressionInput,                                               Preview);                                                  // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06F1, struct FName,                                                          InputName);                                                // 0x0054(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_06F1, struct FString,                                                        Description);                                              // 0x0060(0x0010)  (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_06F1, struct FGuid,                                                          ID);                                                       // 0x0070(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_06F1, TEnumAsByte<EFunctionInputType>,                                       InputType);                                                // 0x0080(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_06F1, struct FVector4,                                                       PreviewValue);                                             // 0x0090(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0067 PADDING_06F1, unsigned char,                                                         bUsePreviewValueAsDefault);                                // 0x00A0(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006B PADDING_06F1, int,                                                                   SortPriority);                                             // 0x00A4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006F PADDING_06F1, unsigned char,                                                         bCompilingFunctionPreview);                                // 0x00A8(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionFunctionInput");
		return ptr;
	}


};

// Class Engine.MaterialExpressionFunctionOutput
// 0x004B (FullSize[0x0084] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06F2 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionFunctionOutput : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06F2, struct FName,                                                          OutputName);                                               // 0x0040(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_06F2, struct FString,                                                        Description);                                              // 0x0048(0x0010)  (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_06F2, int,                                                                   SortPriority);                                             // 0x0058(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_06F2, struct FExpressionInput,                                               A);                                                        // 0x005C(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_06F2, unsigned char,                                                         bLastPreviewed);                                           // 0x0070(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003B PADDING_06F2, struct FGuid,                                                          ID);                                                       // 0x0074(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionFunctionOutput");
		return ptr;
	}


};

// Class Engine.MaterialExpressionGetMaterialAttributes
// 0x002F (FullSize[0x0068] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06F3 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionGetMaterialAttributes : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06F3, struct FMaterialAttributesInput,                                       MaterialAttributes);                                       // 0x0040(0x0010)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_06F3, TArray<struct FGuid>,                                                  AttributeGetTypes);                                        // 0x0058(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionGetMaterialAttributes");
		return ptr;
	}


};

// Class Engine.MaterialExpressionGIReplace
// 0x003B (FullSize[0x0074] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06F4 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionGIReplace : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06F4, struct FExpressionInput,                                               Default);                                                  // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06F4, struct FExpressionInput,                                               StaticIndirect);                                           // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_06F4, struct FExpressionInput,                                               DynamicIndirect);                                          // 0x0068(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionGIReplace");
		return ptr;
	}


};

// Class Engine.MaterialExpressionIf
// 0x0077 (FullSize[0x00B0] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06F5 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionIf : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06F5, struct FExpressionInput,                                               A);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06F5, struct FExpressionInput,                                               B);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_06F5, struct FExpressionInput,                                               AGreaterThanB);                                            // 0x0068(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_06F5, struct FExpressionInput,                                               AEqualsB);                                                 // 0x007C(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_06F5, struct FExpressionInput,                                               ALessThanB);                                               // 0x0090(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006B PADDING_06F5, float,                                                                 EqualsThreshold);                                          // 0x00A4(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006F PADDING_06F5, float,                                                                 ConstB);                                                   // 0x00A8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0073 PADDING_06F5, float,                                                                 ConstAEqualsB);                                            // 0x00AC(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionIf");
		return ptr;
	}


};

// Class Engine.MaterialExpressionLightmapUVs
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionLightmapUVs : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionLightmapUVs");
		return ptr;
	}


};

// Class Engine.MaterialExpressionLightmassReplace
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06F7 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionLightmassReplace : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06F7, struct FExpressionInput,                                               Realtime);                                                 // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06F7, struct FExpressionInput,                                               Lightmass);                                                // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionLightmassReplace");
		return ptr;
	}


};

// Class Engine.MaterialExpressionLightVector
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionLightVector : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionLightVector");
		return ptr;
	}


};

// Class Engine.MaterialExpressionLinearInterpolate
// 0x004F (FullSize[0x0088] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06F9 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionLinearInterpolate : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06F9, struct FExpressionInput,                                               A);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06F9, struct FExpressionInput,                                               B);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_06F9, struct FExpressionInput,                                               Alpha);                                                    // 0x0068(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_06F9, float,                                                                 ConstA);                                                   // 0x007C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_06F9, float,                                                                 ConstB);                                                   // 0x0080(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004B PADDING_06F9, float,                                                                 ConstAlpha);                                               // 0x0084(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionLinearInterpolate");
		return ptr;
	}


};

// Class Engine.MaterialExpressionLogarithm10
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06FA - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionLogarithm10 : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06FA, struct FExpressionInput,                                               X);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionLogarithm10");
		return ptr;
	}


};

// Class Engine.MaterialExpressionLogarithm2
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06FB - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionLogarithm2 : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06FB, struct FExpressionInput,                                               X);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionLogarithm2");
		return ptr;
	}


};

// Class Engine.MaterialExpressionMakeMaterialAttributes
// 0x0207 (FullSize[0x0240] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06FC - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionMakeMaterialAttributes : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06FC, struct FExpressionInput,                                               BaseColor);                                                // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_06FC, struct FExpressionInput,                                               Metallic);                                                 // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_06FC, struct FExpressionInput,                                               Specular);                                                 // 0x0068(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_06FC, struct FExpressionInput,                                               Roughness);                                                // 0x007C(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_06FC, struct FExpressionInput,                                               EmissiveColor);                                            // 0x0090(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006B PADDING_06FC, struct FExpressionInput,                                               Opacity);                                                  // 0x00A4(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007F PADDING_06FC, struct FExpressionInput,                                               OpacityMask);                                              // 0x00B8(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0093 PADDING_06FC, struct FExpressionInput,                                               Normal);                                                   // 0x00CC(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A7 PADDING_06FC, struct FExpressionInput,                                               WorldPositionOffset);                                      // 0x00E0(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BB PADDING_06FC, struct FExpressionInput,                                               WorldDisplacement);                                        // 0x00F4(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00CF PADDING_06FC, struct FExpressionInput,                                               TessellationMultiplier);                                   // 0x0108(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E3 PADDING_06FC, struct FExpressionInput,                                               SubsurfaceColor);                                          // 0x011C(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F7 PADDING_06FC, struct FExpressionInput,                                               ClearCoat);                                                // 0x0130(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010B PADDING_06FC, struct FExpressionInput,                                               ClearCoatRoughness);                                       // 0x0144(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x011F PADDING_06FC, struct FExpressionInput,                                               AmbientOcclusion);                                         // 0x0158(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0133 PADDING_06FC, struct FExpressionInput,                                               Refraction);                                               // 0x016C(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0147 PADDING_06FC, struct FExpressionInput,                                               CustomizedUVs[0x8]);                                       // 0x0180(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01E7 PADDING_06FC, struct FExpressionInput,                                               PixelDepthOffset);                                         // 0x0220(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01FB PADDING_06FC, struct FExpressionInput,                                               ShadingModel);                                             // 0x0234(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionMakeMaterialAttributes");
		return ptr;
	}


};

// Class Engine.MaterialExpressionMapARPassthroughCameraUV
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06FD - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionMapARPassthroughCameraUV : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06FD, struct FExpressionInput,                                               Coordinates);                                              // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionMapARPassthroughCameraUV");
		return ptr;
	}


};

// Class Engine.MaterialExpressionMaterialAttributeLayers
// 0x00A4 (FullSize[0x00DD] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06FE - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionMaterialAttributeLayers : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06FE, struct FName,                                                          ParameterName);                                            // 0x0040(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_06FE, struct FGuid,                                                          ExpressionGUID);                                           // 0x0048(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_06FE, struct FMaterialAttributesInput,                                       Input);                                                    // 0x0058(0x0010)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_06FE, struct FMaterialLayersFunctions,                                       DefaultLayers);                                            // 0x0070(0x0040)  (Edit, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0077 PADDING_06FE, TArray<class UMaterialExpressionMaterialFunctionCall*>,                LayerCallers);                                             // 0x00B0(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0087 PADDING_06FE, int,                                                                   NumActiveLayerCallers);                                    // 0x00C0(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008F PADDING_06FE, TArray<class UMaterialExpressionMaterialFunctionCall*>,                BlendCallers);                                             // 0x00C8(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009F PADDING_06FE, int,                                                                   NumActiveBlendCallers);                                    // 0x00D8(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_06FE, bool,                                                                  bIsLayerGraphBuilt);                                       // 0x00DC(0x0001)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionMaterialAttributeLayers");
		return ptr;
	}


};

// Class Engine.MaterialExpressionMaterialFunctionCall
// 0x001F (FullSize[0x0058] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_06FF - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionMaterialFunctionCall : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_06FF, class UMaterialFunctionInterface*,                                     MaterialFunction);                                         // 0x0040(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_06FF, struct FMaterialParameterInfo,                                         FunctionParameterInfo);                                    // 0x0048(0x0010)  (Transient, NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionMaterialFunctionCall");
		return ptr;
	}


};

// Class Engine.MaterialExpressionMaterialLayerOutput
// 0x0004 (FullSize[0x0088] - InheritedSize[0x0084])
// LastOffsetWithSize(0x0084)
class UMaterialExpressionMaterialLayerOutput : public UMaterialExpressionFunctionOutput
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionMaterialLayerOutput");
		return ptr;
	}


};

// Class Engine.MaterialExpressionMaterialProxyReplace
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0701 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionMaterialProxyReplace : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0701, struct FExpressionInput,                                               Realtime);                                                 // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0701, struct FExpressionInput,                                               MaterialProxy);                                            // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionMaterialProxyReplace");
		return ptr;
	}


};

// Class Engine.MaterialExpressionMax
// 0x0037 (FullSize[0x0070] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0702 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionMax : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0702, struct FExpressionInput,                                               A);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0702, struct FExpressionInput,                                               B);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_0702, float,                                                                 ConstA);                                                   // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_0702, float,                                                                 ConstB);                                                   // 0x006C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionMax");
		return ptr;
	}


};

// Class Engine.MaterialExpressionMin
// 0x0037 (FullSize[0x0070] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0703 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionMin : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0703, struct FExpressionInput,                                               A);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0703, struct FExpressionInput,                                               B);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_0703, float,                                                                 ConstA);                                                   // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_0703, float,                                                                 ConstB);                                                   // 0x006C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionMin");
		return ptr;
	}


};

// Class Engine.MaterialExpressionMultiply
// 0x0037 (FullSize[0x0070] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0704 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionMultiply : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0704, struct FExpressionInput,                                               A);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0704, struct FExpressionInput,                                               B);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_0704, float,                                                                 ConstA);                                                   // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_0704, float,                                                                 ConstB);                                                   // 0x006C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionMultiply");
		return ptr;
	}


};

// Class Engine.MaterialExpressionNoise
// 0x0057 (FullSize[0x0090] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0705 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionNoise : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0705, struct FExpressionInput,                                               Position);                                                 // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0705, struct FExpressionInput,                                               FilterWidth);                                              // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_0705, float,                                                                 Scale);                                                    // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_0705, int,                                                                   Quality);                                                  // 0x006C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_0705, TEnumAsByte<ENoiseFunction>,                                           NoiseFunction);                                            // 0x0070(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003B PADDING_0705, unsigned char,                                                         bTurbulence);                                              // 0x0074(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003F PADDING_0705, int,                                                                   Levels);                                                   // 0x0078(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_0705, float,                                                                 OutputMin);                                                // 0x007C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_0705, float,                                                                 OutputMax);                                                // 0x0080(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004B PADDING_0705, float,                                                                 LevelScale);                                               // 0x0084(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004F PADDING_0705, unsigned char,                                                         bTiling);                                                  // 0x0088(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_0705, uint32_t,                                                              RepeatSize);                                               // 0x008C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionNoise");
		return ptr;
	}


};

// Class Engine.MaterialExpressionNormalize
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0706 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionNormalize : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0706, struct FExpressionInput,                                               VectorInput);                                              // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionNormalize");
		return ptr;
	}


};

// Class Engine.MaterialExpressionObjectBounds
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionObjectBounds : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionObjectBounds");
		return ptr;
	}


};

// Class Engine.MaterialExpressionObjectOrientation
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionObjectOrientation : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionObjectOrientation");
		return ptr;
	}


};

// Class Engine.MaterialExpressionObjectPositionWS
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionObjectPositionWS : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionObjectPositionWS");
		return ptr;
	}


};

// Class Engine.MaterialExpressionObjectRadius
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionObjectRadius : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionObjectRadius");
		return ptr;
	}


};

// Class Engine.MaterialExpressionOneMinus
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_070B - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionOneMinus : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_070B, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionOneMinus");
		return ptr;
	}


};

// Class Engine.MaterialExpressionPanner
// 0x0050 (FullSize[0x0089] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_070C - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionPanner : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_070C, struct FExpressionInput,                                               Coordinate);                                               // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_070C, struct FExpressionInput,                                               Time);                                                     // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_070C, struct FExpressionInput,                                               Speed);                                                    // 0x0068(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_070C, float,                                                                 SpeedX);                                                   // 0x007C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_070C, float,                                                                 SpeedY);                                                   // 0x0080(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004B PADDING_070C, uint32_t,                                                              ConstCoordinate);                                          // 0x0084(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004F PADDING_070C, bool,                                                                  bFractionalPart);                                          // 0x0088(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionPanner");
		return ptr;
	}


};

// Class Engine.MaterialExpressionParticleColor
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionParticleColor : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionParticleColor");
		return ptr;
	}


};

// Class Engine.MaterialExpressionParticleDirection
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionParticleDirection : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionParticleDirection");
		return ptr;
	}


};

// Class Engine.MaterialExpressionParticleMacroUV
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionParticleMacroUV : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionParticleMacroUV");
		return ptr;
	}


};

// Class Engine.MaterialExpressionParticleMotionBlurFade
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionParticleMotionBlurFade : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionParticleMotionBlurFade");
		return ptr;
	}


};

// Class Engine.MaterialExpressionParticlePositionWS
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionParticlePositionWS : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionParticlePositionWS");
		return ptr;
	}


};

// Class Engine.MaterialExpressionParticleRadius
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionParticleRadius : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionParticleRadius");
		return ptr;
	}


};

// Class Engine.MaterialExpressionParticleRandom
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionParticleRandom : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionParticleRandom");
		return ptr;
	}


};

// Class Engine.MaterialExpressionParticleRelativeTime
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionParticleRelativeTime : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionParticleRelativeTime");
		return ptr;
	}


};

// Class Engine.MaterialExpressionParticleSize
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionParticleSize : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionParticleSize");
		return ptr;
	}


};

// Class Engine.MaterialExpressionParticleSpeed
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionParticleSpeed : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionParticleSpeed");
		return ptr;
	}


};

// Class Engine.MaterialExpressionParticleSubUV
// 0x000C (FullSize[0x00E1] - InheritedSize[0x00D5])
// LastOffsetWithSize(0x00D5)
#define PADDING_0717 - 0x0000 // Minimum to subtract -> (000B)
class UMaterialExpressionParticleSubUV : public UMaterialExpressionTextureSample
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x000B PADDING_0717, unsigned char,                                                         bBlend);                                                   // 0x00E0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionParticleSubUV");
		return ptr;
	}


};

// Class Engine.MaterialExpressionPerInstanceFadeAmount
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionPerInstanceFadeAmount : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionPerInstanceFadeAmount");
		return ptr;
	}


};

// Class Engine.MaterialExpressionPerInstanceRandom
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionPerInstanceRandom : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionPerInstanceRandom");
		return ptr;
	}


};

// Class Engine.MaterialExpressionPixelDepth
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionPixelDepth : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionPixelDepth");
		return ptr;
	}


};

// Class Engine.MaterialExpressionPixelNormalWS
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionPixelNormalWS : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionPixelNormalWS");
		return ptr;
	}


};

// Class Engine.MaterialExpressionPower
// 0x0033 (FullSize[0x006C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_071C - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionPower : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_071C, struct FExpressionInput,                                               Base);                                                     // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_071C, struct FExpressionInput,                                               Exponent);                                                 // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_071C, float,                                                                 ConstExponent);                                            // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionPower");
		return ptr;
	}


};

// Class Engine.MaterialExpressionPrecomputedAOMask
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionPrecomputedAOMask : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionPrecomputedAOMask");
		return ptr;
	}


};

// Class Engine.MaterialExpressionPreSkinnedLocalBounds
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionPreSkinnedLocalBounds : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionPreSkinnedLocalBounds");
		return ptr;
	}


};

// Class Engine.MaterialExpressionPreSkinnedNormal
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionPreSkinnedNormal : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionPreSkinnedNormal");
		return ptr;
	}


};

// Class Engine.MaterialExpressionPreSkinnedPosition
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionPreSkinnedPosition : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionPreSkinnedPosition");
		return ptr;
	}


};

// Class Engine.MaterialExpressionPreviousFrameSwitch
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0721 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionPreviousFrameSwitch : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0721, struct FExpressionInput,                                               CurrentFrame);                                             // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0721, struct FExpressionInput,                                               PreviousFrame);                                            // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionPreviousFrameSwitch");
		return ptr;
	}


};

// Class Engine.MaterialExpressionQualitySwitch
// 0x003F (FullSize[0x0078] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0722 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionQualitySwitch : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0722, struct FExpressionInput,                                               Default);                                                  // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0722, struct FExpressionInput,                                               Inputs[0x3]);                                              // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionQualitySwitch");
		return ptr;
	}


};

// Class Engine.MaterialExpressionRayTracingQualitySwitch
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0723 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionRayTracingQualitySwitch : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0723, struct FExpressionInput,                                               Normal);                                                   // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0723, struct FExpressionInput,                                               RayTraced);                                                // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionRayTracingQualitySwitch");
		return ptr;
	}


};

// Class Engine.MaterialExpressionReflectionVectorWS
// 0x001C (FullSize[0x0055] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0724 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionReflectionVectorWS : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0724, struct FExpressionInput,                                               CustomWorldNormal);                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0724, unsigned char,                                                         bNormalizeCustomWorldNormal);                              // 0x0054(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionReflectionVectorWS");
		return ptr;
	}


};

// Class Engine.MaterialExpressionReroute
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0725 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionReroute : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0725, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionReroute");
		return ptr;
	}


};

// Class Engine.MaterialExpressionRotateAboutAxis
// 0x005B (FullSize[0x0094] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0726 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionRotateAboutAxis : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0726, struct FExpressionInput,                                               NormalizedRotationAxis);                                   // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0726, struct FExpressionInput,                                               RotationAngle);                                            // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_0726, struct FExpressionInput,                                               PivotPoint);                                               // 0x0068(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_0726, struct FExpressionInput,                                               Position);                                                 // 0x007C(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_0726, float,                                                                 Period);                                                   // 0x0090(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionRotateAboutAxis");
		return ptr;
	}


};

// Class Engine.MaterialExpressionRotator
// 0x003F (FullSize[0x0078] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0727 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionRotator : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0727, struct FExpressionInput,                                               Coordinate);                                               // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0727, struct FExpressionInput,                                               Time);                                                     // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_0727, float,                                                                 CenterX);                                                  // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_0727, float,                                                                 CenterY);                                                  // 0x006C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_0727, float,                                                                 Speed);                                                    // 0x0070(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003B PADDING_0727, uint32_t,                                                              ConstCoordinate);                                          // 0x0074(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionRotator");
		return ptr;
	}


};

// Class Engine.MaterialExpressionRound
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0728 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionRound : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0728, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionRound");
		return ptr;
	}


};

// Class Engine.MaterialExpressionRuntimeVirtualTextureOutput
// 0x005C (FullSize[0x009C] - InheritedSize[0x0040])
// LastOffsetWithSize(0x0039)
#define PADDING_0729 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionRuntimeVirtualTextureOutput : public UMaterialExpressionCustomOutput
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0729, struct FExpressionInput,                                               BaseColor);                                                // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0729, struct FExpressionInput,                                               Specular);                                                 // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_0729, struct FExpressionInput,                                               Roughness);                                                // 0x0068(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_0729, struct FExpressionInput,                                               Normal);                                                   // 0x007C(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_0729, struct FExpressionInput,                                               Opacity);                                                  // 0x0090(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionRuntimeVirtualTextureOutput");
		return ptr;
	}


};

// Class Engine.MaterialExpressionRuntimeVirtualTextureReplace
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_072A - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionRuntimeVirtualTextureReplace : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_072A, struct FExpressionInput,                                               Default);                                                  // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_072A, struct FExpressionInput,                                               VirtualTextureOutput);                                     // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionRuntimeVirtualTextureReplace");
		return ptr;
	}


};

// Class Engine.MaterialExpressionRuntimeVirtualTextureSample
// 0x0028 (FullSize[0x0061] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_072B - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionRuntimeVirtualTextureSample : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_072B, struct FExpressionInput,                                               Coordinates);                                              // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_072B, class URuntimeVirtualTexture*,                                         VirtualTexture);                                           // 0x0058(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_072B, ERuntimeVirtualTextureMaterialType,                                    MaterialType);                                             // 0x0060(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionRuntimeVirtualTextureSample");
		return ptr;
	}


};

// Class Engine.MaterialExpressionSaturate
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_072C - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionSaturate : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_072C, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionSaturate");
		return ptr;
	}


};

// Class Engine.MaterialExpressionSceneColor
// 0x003B (FullSize[0x0074] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_072D - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionSceneColor : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_072D, TEnumAsByte<EMaterialSceneAttributeInputMode>,                         InputMode);                                                // 0x0040(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_072D, struct FExpressionInput,                                               Input);                                                    // 0x0044(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_072D, struct FExpressionInput,                                               OffsetFraction);                                           // 0x0058(0x000C)  (Deprecated, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_072D, struct FVector2D,                                                      ConstInput);                                               // 0x006C(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionSceneColor");
		return ptr;
	}


};

// Class Engine.MaterialExpressionSceneDepth
// 0x003B (FullSize[0x0074] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_072E - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionSceneDepth : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_072E, TEnumAsByte<EMaterialSceneAttributeInputMode>,                         InputMode);                                                // 0x0040(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_072E, struct FExpressionInput,                                               Input);                                                    // 0x0044(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_072E, struct FExpressionInput,                                               Coordinates);                                              // 0x0058(0x000C)  (Deprecated, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_072E, struct FVector2D,                                                      ConstInput);                                               // 0x006C(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionSceneDepth");
		return ptr;
	}


};

// Class Engine.MaterialExpressionSceneTexelSize
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionSceneTexelSize : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionSceneTexelSize");
		return ptr;
	}


};

// Class Engine.MaterialExpressionSceneTexture
// 0x001D (FullSize[0x0056] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0730 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionSceneTexture : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0730, struct FExpressionInput,                                               Coordinates);                                              // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0730, TEnumAsByte<ESceneTextureId>,                                          SceneTextureId);                                           // 0x0054(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0730, bool,                                                                  bFiltered);                                                // 0x0055(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionSceneTexture");
		return ptr;
	}


};

// Class Engine.MaterialExpressionScreenPosition
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionScreenPosition : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionScreenPosition");
		return ptr;
	}


};

// Class Engine.MaterialExpressionSetMaterialAttributes
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0732 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionSetMaterialAttributes : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0732, TArray<struct FExpressionInput>,                                       Inputs);                                                   // 0x0040(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_0732, TArray<struct FGuid>,                                                  AttributeSetTypes);                                        // 0x0050(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionSetMaterialAttributes");
		return ptr;
	}


};

// Class Engine.MaterialExpressionShadingModel
// 0x0008 (FullSize[0x0041] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0733 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionShadingModel : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0733, TEnumAsByte<EMaterialShadingModel>,                                    ShadingModel);                                             // 0x0040(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionShadingModel");
		return ptr;
	}


};

// Class Engine.MaterialExpressionShadingPathSwitch
// 0x003F (FullSize[0x0078] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0734 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionShadingPathSwitch : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0734, struct FExpressionInput,                                               Default);                                                  // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0734, struct FExpressionInput,                                               Inputs[0x3]);                                              // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionShadingPathSwitch");
		return ptr;
	}


};

// Class Engine.MaterialExpressionShadowReplace
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0735 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionShadowReplace : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0735, struct FExpressionInput,                                               Default);                                                  // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0735, struct FExpressionInput,                                               Shadow);                                                   // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionShadowReplace");
		return ptr;
	}


};

// Class Engine.MaterialExpressionSign
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0736 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionSign : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0736, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionSign");
		return ptr;
	}


};

// Class Engine.MaterialExpressionSine
// 0x001F (FullSize[0x0058] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0737 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionSine : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0737, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0737, float,                                                                 Period);                                                   // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionSine");
		return ptr;
	}


};

// Class Engine.MaterialExpressionSobol
// 0x004F (FullSize[0x0088] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0738 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionSobol : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0738, struct FExpressionInput,                                               Cell);                                                     // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0738, struct FExpressionInput,                                               Index);                                                    // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_0738, struct FExpressionInput,                                               Seed);                                                     // 0x0068(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_0738, uint32_t,                                                              ConstIndex);                                               // 0x007C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_0738, struct FVector2D,                                                      ConstSeed);                                                // 0x0080(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionSobol");
		return ptr;
	}


};

// Class Engine.MaterialExpressionSpeedTree
// 0x0060 (FullSize[0x0099] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0739 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionSpeedTree : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0739, struct FExpressionInput,                                               GeometryInput);                                            // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0739, struct FExpressionInput,                                               WindInput);                                                // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_0739, struct FExpressionInput,                                               LODInput);                                                 // 0x0068(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_0739, struct FExpressionInput,                                               ExtraBendWS);                                              // 0x007C(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_0739, TEnumAsByte<ESpeedTreeGeometryType>,                                   GeometryType);                                             // 0x0090(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0739, TEnumAsByte<ESpeedTreeWindType>,                                       WindType);                                                 // 0x0091(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0059 PADDING_0739, TEnumAsByte<ESpeedTreeLODType>,                                        LODType);                                                  // 0x0092(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005B PADDING_0739, float,                                                                 BillboardThreshold);                                       // 0x0094(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005F PADDING_0739, bool,                                                                  bAccurateWindVelocities);                                  // 0x0098(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionSpeedTree");
		return ptr;
	}


};

// Class Engine.MaterialExpressionSphereMask
// 0x005F (FullSize[0x0098] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_073A - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionSphereMask : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_073A, struct FExpressionInput,                                               A);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_073A, struct FExpressionInput,                                               B);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_073A, struct FExpressionInput,                                               Radius);                                                   // 0x0068(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_073A, struct FExpressionInput,                                               Hardness);                                                 // 0x007C(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_073A, float,                                                                 AttenuationRadius);                                        // 0x0090(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005B PADDING_073A, float,                                                                 HardnessPercent);                                          // 0x0094(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionSphereMask");
		return ptr;
	}


};

// Class Engine.MaterialExpressionSphericalParticleOpacity
// 0x001F (FullSize[0x0058] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_073B - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionSphericalParticleOpacity : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_073B, struct FExpressionInput,                                               Density);                                                  // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_073B, float,                                                                 ConstantDensity);                                          // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionSphericalParticleOpacity");
		return ptr;
	}


};

// Class Engine.MaterialExpressionSquareRoot
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_073C - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionSquareRoot : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_073C, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionSquareRoot");
		return ptr;
	}


};

// Class Engine.MaterialExpressionStaticBool
// 0x0008 (FullSize[0x0041] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_073D - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionStaticBool : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_073D, unsigned char,                                                         Value);                                                    // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionStaticBool");
		return ptr;
	}


};

// Class Engine.MaterialExpressionStaticBoolParameter
// 0x0001 (FullSize[0x0059] - InheritedSize[0x0058])
// LastOffsetWithSize(0x0058)
#define PADDING_073E - 0x0000 // Minimum to subtract -> (0000)
class UMaterialExpressionStaticBoolParameter : public UMaterialExpressionParameter
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_073E, unsigned char,                                                         DefaultValue);                                             // 0x0058(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionStaticBoolParameter");
		return ptr;
	}


};

// Class Engine.MaterialExpressionStaticComponentMaskParameter
// 0x0015 (FullSize[0x006D] - InheritedSize[0x0058])
// LastOffsetWithSize(0x0058)
#define PADDING_073F - 0x0000 // Minimum to subtract -> (0000)
class UMaterialExpressionStaticComponentMaskParameter : public UMaterialExpressionParameter
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_073F, struct FExpressionInput,                                               Input);                                                    // 0x0058(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_073F, unsigned char,                                                         DefaultR);                                                 // 0x006C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_073F, unsigned char,                                                         DefaultG);                                                 // 0x006C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_073F, unsigned char,                                                         DefaultB);                                                 // 0x006C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_073F, unsigned char,                                                         DefaultA);                                                 // 0x006C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionStaticComponentMaskParameter");
		return ptr;
	}


};

// Class Engine.MaterialExpressionStaticSwitch
// 0x003F (FullSize[0x0078] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0740 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionStaticSwitch : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0740, unsigned char,                                                         DefaultValue);                                             // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_0740, struct FExpressionInput,                                               A);                                                        // 0x0044(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_0740, struct FExpressionInput,                                               B);                                                        // 0x0058(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_0740, struct FExpressionInput,                                               Value);                                                    // 0x006C(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionStaticSwitch");
		return ptr;
	}


};

// Class Engine.MaterialExpressionStaticSwitchParameter
// 0x0027 (FullSize[0x0080] - InheritedSize[0x0059])
// LastOffsetWithSize(0x0059)
#define PADDING_0741 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionStaticSwitchParameter : public UMaterialExpressionStaticBoolParameter
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0741, struct FExpressionInput,                                               A);                                                        // 0x0060(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0741, struct FExpressionInput,                                               B);                                                        // 0x0074(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionStaticSwitchParameter");
		return ptr;
	}


};

// Class Engine.MaterialExpressionSubtract
// 0x0037 (FullSize[0x0070] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0742 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionSubtract : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0742, struct FExpressionInput,                                               A);                                                        // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0742, struct FExpressionInput,                                               B);                                                        // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_0742, float,                                                                 ConstA);                                                   // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_0742, float,                                                                 ConstB);                                                   // 0x006C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionSubtract");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTangent
// 0x001F (FullSize[0x0058] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0743 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionTangent : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0743, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0743, float,                                                                 Period);                                                   // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTangent");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTangentOutput
// 0x000C (FullSize[0x004C] - InheritedSize[0x0040])
// LastOffsetWithSize(0x0039)
#define PADDING_0744 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionTangentOutput : public UMaterialExpressionCustomOutput
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0744, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTangentOutput");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTemporalSobol
// 0x003B (FullSize[0x0074] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0745 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionTemporalSobol : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0745, struct FExpressionInput,                                               Index);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0745, struct FExpressionInput,                                               Seed);                                                     // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_0745, uint32_t,                                                              ConstIndex);                                               // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_0745, struct FVector2D,                                                      ConstSeed);                                                // 0x006C(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTemporalSobol");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTextureCoordinate
// 0x0014 (FullSize[0x004D] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0746 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionTextureCoordinate : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0746, int,                                                                   CoordinateIndex);                                          // 0x0040(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_0746, float,                                                                 UTiling);                                                  // 0x0044(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_0746, float,                                                                 VTiling);                                                  // 0x0048(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_0746, unsigned char,                                                         UnMirrorU);                                                // 0x004C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_0746, unsigned char,                                                         UnMirrorV);                                                // 0x004C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTextureCoordinate");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTextureObject
// 0x0003 (FullSize[0x0050] - InheritedSize[0x004D])
// LastOffsetWithSize(0x004D)
class UMaterialExpressionTextureObject : public UMaterialExpressionTextureBase
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTextureObject");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTextureObjectParameter
// 0x0000 (FullSize[0x0100] - InheritedSize[0x0100])
// LastOffsetWithSize(0x0100)
class UMaterialExpressionTextureObjectParameter : public UMaterialExpressionTextureSampleParameter
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTextureObjectParameter");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTextureProperty
// 0x001C (FullSize[0x0055] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0749 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionTextureProperty : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0749, struct FExpressionInput,                                               TextureObject);                                            // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0749, TEnumAsByte<EMaterialExposedTextureProperty>,                          Property);                                                 // 0x0054(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTextureProperty");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTextureSampleParameterCube
// 0x0000 (FullSize[0x0100] - InheritedSize[0x0100])
// LastOffsetWithSize(0x0100)
class UMaterialExpressionTextureSampleParameterCube : public UMaterialExpressionTextureSampleParameter
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTextureSampleParameterCube");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTextureSampleParameterSubUV
// 0x0001 (FullSize[0x0101] - InheritedSize[0x0100])
// LastOffsetWithSize(0x0100)
#define PADDING_074B - 0x0000 // Minimum to subtract -> (0000)
class UMaterialExpressionTextureSampleParameterSubUV : public UMaterialExpressionTextureSampleParameter2D
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_074B, unsigned char,                                                         bBlend);                                                   // 0x0100(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTextureSampleParameterSubUV");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTextureSampleParameterVolume
// 0x0000 (FullSize[0x0100] - InheritedSize[0x0100])
// LastOffsetWithSize(0x0100)
class UMaterialExpressionTextureSampleParameterVolume : public UMaterialExpressionTextureSampleParameter
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTextureSampleParameterVolume");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTime
// 0x000F (FullSize[0x0048] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_074D - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionTime : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_074D, unsigned char,                                                         bIgnorePause);                                             // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_074D, unsigned char,                                                         bOverride_Period);                                         // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_074D, float,                                                                 Period);                                                   // 0x0044(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTime");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTransform
// 0x001D (FullSize[0x0056] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_074E - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionTransform : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_074E, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_074E, TEnumAsByte<EMaterialVectorCoordTransformSource>,                      TransformSourceType);                                      // 0x0054(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_074E, TEnumAsByte<EMaterialVectorCoordTransform>,                            TransformType);                                            // 0x0055(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTransform");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTransformPosition
// 0x001D (FullSize[0x0056] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_074F - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionTransformPosition : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_074F, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_074F, TEnumAsByte<EMaterialPositionTransformSource>,                         TransformSourceType);                                      // 0x0054(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_074F, TEnumAsByte<EMaterialPositionTransformSource>,                         TransformType);                                            // 0x0055(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTransformPosition");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTruncate
// 0x0013 (FullSize[0x004C] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0750 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionTruncate : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0750, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTruncate");
		return ptr;
	}


};

// Class Engine.MaterialExpressionTwoSidedSign
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionTwoSidedSign : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionTwoSidedSign");
		return ptr;
	}


};

// Class Engine.MaterialExpressionVectorNoise
// 0x002B (FullSize[0x0064] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0752 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionVectorNoise : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0752, struct FExpressionInput,                                               Position);                                                 // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0752, TEnumAsByte<EVectorNoiseFunction>,                                     NoiseFunction);                                            // 0x0054(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_0752, int,                                                                   Quality);                                                  // 0x0058(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_0752, unsigned char,                                                         bTiling);                                                  // 0x005C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_0752, uint32_t,                                                              TileSize);                                                 // 0x0060(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionVectorNoise");
		return ptr;
	}


};

// Class Engine.MaterialExpressionVertexColor
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionVertexColor : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionVertexColor");
		return ptr;
	}


};

// Class Engine.MaterialExpressionVertexInterpolator
// 0x000C (FullSize[0x004C] - InheritedSize[0x0040])
// LastOffsetWithSize(0x0039)
#define PADDING_0754 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionVertexInterpolator : public UMaterialExpressionCustomOutput
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0754, struct FExpressionInput,                                               Input);                                                    // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionVertexInterpolator");
		return ptr;
	}


};

// Class Engine.MaterialExpressionVertexNormalWS
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionVertexNormalWS : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionVertexNormalWS");
		return ptr;
	}


};

// Class Engine.MaterialExpressionViewProperty
// 0x0008 (FullSize[0x0041] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0756 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionViewProperty : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0756, TEnumAsByte<EMaterialExposedViewProperty>,                             Property);                                                 // 0x0040(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionViewProperty");
		return ptr;
	}


};

// Class Engine.MaterialExpressionViewSize
// 0x0007 (FullSize[0x0040] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
class UMaterialExpressionViewSize : public UMaterialExpression
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionViewSize");
		return ptr;
	}


};

// Class Engine.MaterialExpressionVirtualTextureFeatureSwitch
// 0x0027 (FullSize[0x0060] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0758 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionVirtualTextureFeatureSwitch : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0758, struct FExpressionInput,                                               No);                                                       // 0x0040(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0758, struct FExpressionInput,                                               Yes);                                                      // 0x0054(0x000C)  (NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionVirtualTextureFeatureSwitch");
		return ptr;
	}


};

// Class Engine.MaterialExpressionWorldPosition
// 0x0008 (FullSize[0x0041] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_0759 - 0x0000 // Minimum to subtract -> (0007)
class UMaterialExpressionWorldPosition : public UMaterialExpression
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0759, TEnumAsByte<EWorldPositionIncludedOffsets>,                            WorldPositionShaderOffset);                                // 0x0040(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialExpressionWorldPosition");
		return ptr;
	}


};

// Class Engine.MaterialFunctionInterface
// 0x0011 (FullSize[0x0039] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_075A - 0x0000 // Minimum to subtract -> (0000)
class UMaterialFunctionInterface : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_075A, struct FGuid,                                                          StateId);                                                  // 0x0028(0x0010)  (ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_075A, EMaterialFunctionUsage,                                                MaterialFunctionUsage);                                    // 0x0038(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialFunctionInterface");
		return ptr;
	}


};

// Class Engine.MaterialFunction
// 0x0030 (FullSize[0x0069] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_075B - 0x0000 // Minimum to subtract -> (0007)
class UMaterialFunction : public UMaterialFunctionInterface
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_075B, struct FString,                                                        Description);                                              // 0x0040(0x0010)  (Edit, ZeroConstructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_075B, unsigned char,                                                         bExposeToLibrary);                                         // 0x0050(0x0001) BIT_FIELD (Edit, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_075B, unsigned char,                                                         bPrefixParameterNames);                                    // 0x0050(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_075B, TArray<class UMaterialExpression*>,                                    FunctionExpressions);                                      // 0x0058(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_075B, unsigned char,                                                         bReentrantFlag);                                           // 0x0068(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialFunction");
		return ptr;
	}


};

// Class Engine.MaterialFunctionInstance
// 0x0077 (FullSize[0x00B0] - InheritedSize[0x0039])
// LastOffsetWithSize(0x0039)
#define PADDING_075C - 0x0000 // Minimum to subtract -> (0007)
class UMaterialFunctionInstance : public UMaterialFunctionInterface
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_075C, class UMaterialFunctionInterface*,                                     Parent);                                                   // 0x0040(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_075C, class UMaterialFunctionInterface*,                                     Base);                                                     // 0x0048(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_075C, TArray<struct FScalarParameterValue>,                                  ScalarParameterValues);                                    // 0x0050(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_075C, TArray<struct FVectorParameterValue>,                                  VectorParameterValues);                                    // 0x0060(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_075C, TArray<struct FTextureParameterValue>,                                 TextureParameterValues);                                   // 0x0070(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_075C, TArray<struct FFontParameterValue>,                                    FontParameterValues);                                      // 0x0080(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_075C, TArray<struct FStaticSwitchParameter>,                                 StaticSwitchParameterValues);                              // 0x0090(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0067 PADDING_075C, TArray<struct FStaticComponentMaskParameter>,                          StaticComponentMaskParameterValues);                       // 0x00A0(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialFunctionInstance");
		return ptr;
	}


};

// Class Engine.MaterialFunctionMaterialLayer
// 0x0007 (FullSize[0x0070] - InheritedSize[0x0069])
// LastOffsetWithSize(0x0069)
class UMaterialFunctionMaterialLayer : public UMaterialFunction
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialFunctionMaterialLayer");
		return ptr;
	}


};

// Class Engine.MaterialFunctionMaterialLayerInstance
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
// LastOffsetWithSize(0x00B0)
class UMaterialFunctionMaterialLayerInstance : public UMaterialFunctionInstance
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialFunctionMaterialLayerInstance");
		return ptr;
	}


};

// Class Engine.MaterialFunctionMaterialLayerBlend
// 0x0007 (FullSize[0x0070] - InheritedSize[0x0069])
// LastOffsetWithSize(0x0069)
class UMaterialFunctionMaterialLayerBlend : public UMaterialFunction
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialFunctionMaterialLayerBlend");
		return ptr;
	}


};

// Class Engine.MaterialFunctionMaterialLayerBlendInstance
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
// LastOffsetWithSize(0x00B0)
class UMaterialFunctionMaterialLayerBlendInstance : public UMaterialFunctionInstance
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialFunctionMaterialLayerBlendInstance");
		return ptr;
	}


};

// Class Engine.MaterialInstanceActor
// 0x0020 (FullSize[0x0258] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0761 - 0x0000 // Minimum to subtract -> (0010)
class AMaterialInstanceActor : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0761, TArray<class AActor*>,                                                 TargetActors);                                             // 0x0248(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialInstanceActor");
		return ptr;
	}


};

// Class Engine.MaterialInstanceDynamic
// 0x0080 (FullSize[0x01C8] - InheritedSize[0x0148])
// LastOffsetWithSize(0x0148)
class UMaterialInstanceDynamic : public UMaterialInstance
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialInstanceDynamic");
		return ptr;
	}


	void SetVectorParameterValue(const struct FName& ParameterName, const struct FLinearColor& Value);
	void SetTextureParameterValue(const struct FName& ParameterName, class UTexture* Value);
	void SetScalarParameterValue(const struct FName& ParameterName, float Value);
	void K2_InterpolateMaterialInstanceParams(class UMaterialInstance* SourceA, class UMaterialInstance* SourceB, float Alpha);
	struct FLinearColor K2_GetVectorParameterValue(const struct FName& ParameterName);
	class UTexture* K2_GetTextureParameterValue(const struct FName& ParameterName);
	float K2_GetScalarParameterValue(const struct FName& ParameterName);
	void K2_CopyMaterialInstanceParameters(class UMaterialInterface* Source, bool bQuickParametersOnly);
	void CopyParameterOverrides(class UMaterialInstance* MaterialInstance);
	void CopyInterpParameters(class UMaterialInstance* Source);
};

// Class Engine.MaterialParameterCollection
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0763 - 0x0000 // Minimum to subtract -> (0000)
class UMaterialParameterCollection : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0763, struct FGuid,                                                          StateId);                                                  // 0x0028(0x0010)  (ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0763, TArray<struct FCollectionScalarParameter>,                             ScalarParameters);                                         // 0x0038(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0763, TArray<struct FCollectionVectorParameter>,                             VectorParameters);                                         // 0x0048(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialParameterCollection");
		return ptr;
	}


};

// Class Engine.MaterialParameterCollectionInstance
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0764 - 0x0000 // Minimum to subtract -> (0008)
class UMaterialParameterCollectionInstance : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0764, class UMaterialParameterCollection*,                                   Collection);                                               // 0x0030(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MaterialParameterCollectionInstance");
		return ptr;
	}


};

// Class Engine.MatineeActor
// 0x00B0 (FullSize[0x02E8] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0765 - 0x0000 // Minimum to subtract -> (0010)
class AMatineeActor : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0765, class UInterpData*,                                                    MatineeData);                                              // 0x0248(0x0008)  (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0765, struct FName,                                                          MatineeControllerName);                                    // 0x0250(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0765, float,                                                                 PlayRate);                                                 // 0x0258(0x0004)  (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0765, unsigned char,                                                         bPlayOnLevelLoad);                                         // 0x025C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0765, unsigned char,                                                         bForceStartPos);                                           // 0x025C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0765, float,                                                                 ForceStartPosition);                                       // 0x0260(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0765, unsigned char,                                                         bLooping);                                                 // 0x0264(0x0001) BIT_FIELD (Edit, BlueprintVisible, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0765, unsigned char,                                                         bRewindOnPlay);                                            // 0x0264(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0765, unsigned char,                                                         bNoResetOnRewind);                                         // 0x0264(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0765, unsigned char,                                                         bRewindIfAlreadyPlaying);                                  // 0x0264(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0765, unsigned char,                                                         bDisableRadioFilter);                                      // 0x0264(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0765, unsigned char,                                                         bClientSideOnly);                                          // 0x0264(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0765, unsigned char,                                                         bSkipUpdateIfNotVisible);                                  // 0x0264(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0765, unsigned char,                                                         bIsSkippable);                                             // 0x0264(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0765, int,                                                                   PreferredSplitScreenNum);                                  // 0x0268(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0765, unsigned char,                                                         bDisableMovementInput);                                    // 0x026C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0765, unsigned char,                                                         bDisableLookAtInput);                                      // 0x026C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0765, unsigned char,                                                         bHidePlayer);                                              // 0x026C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0765, unsigned char,                                                         bHideHud);                                                 // 0x026C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0765, TArray<struct FInterpGroupActorInfo>,                                  GroupActorInfos);                                          // 0x0270(0x0010)  (Net, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0765, unsigned char,                                                         bShouldShowGore);                                          // 0x0280(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0765, TArray<class UInterpGroupInst*>,                                       GroupInst);                                                // 0x0288(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0765, TArray<struct FCameraCutInfo>,                                         CameraCuts);                                               // 0x0298(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0765, unsigned char,                                                         bIsPlaying);                                               // 0x02A8(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Net, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0765, unsigned char,                                                         bReversePlayback);                                         // 0x02A8(0x0001) BIT_FIELD (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0765, unsigned char,                                                         bPaused);                                                  // 0x02A8(0x0001) BIT_FIELD (Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0765, unsigned char,                                                         bPendingStop);                                             // 0x02A8(0x0001) BIT_FIELD (Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_0765, float,                                                                 InterpPosition);                                           // 0x02AC(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007C PADDING_0765, unsigned char,                                                         ReplicationForceIsPlaying);                                // 0x02B4(0x0001)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0765, struct FScriptMulticastDelegate,                                       OnPlay);                                                   // 0x02B8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_0765, struct FScriptMulticastDelegate,                                       OnStop);                                                   // 0x02C8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0765, struct FScriptMulticastDelegate,                                       OnPause);                                                  // 0x02D8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MatineeActor");
		return ptr;
	}


	void Stop();
	void SetPosition(float NewPosition, bool bJump);
	void SetLoopingState(bool bNewLooping);
	void Reverse();
	void Play();
	void Pause();
	void EnableGroupByName(const struct FString& GroupName, bool bEnable);
	void ChangePlaybackDirection();
};

// Class Engine.MatineeActorCameraAnim
// 0x0010 (FullSize[0x02F8] - InheritedSize[0x02E8])
// LastOffsetWithSize(0x02E8)
#define PADDING_0766 - 0x0000 // Minimum to subtract -> (0008)
class AMatineeActorCameraAnim : public AMatineeActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0766, class UCameraAnim*,                                                    CameraAnim);                                               // 0x02F0(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MatineeActorCameraAnim");
		return ptr;
	}


};

// Class Engine.MatineeAnimInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UMatineeAnimInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MatineeAnimInterface");
		return ptr;
	}


};

// Class Engine.MatineeInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UMatineeInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MatineeInterface");
		return ptr;
	}


};

// Class Engine.MeshMergeCullingVolume
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
class AMeshMergeCullingVolume : public AVolume
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MeshMergeCullingVolume");
		return ptr;
	}


};

// Class Engine.MeshSimplificationSettings
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_076A - 0x0000 // Minimum to subtract -> (0010)
class UMeshSimplificationSettings : public UDeveloperSettings
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_076A, struct FName,                                                          MeshReductionModuleName);                                  // 0x0038(0x0008)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MeshSimplificationSettings");
		return ptr;
	}


};

// Class Engine.MeshVertexPainterKismetLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UMeshVertexPainterKismetLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MeshVertexPainterKismetLibrary");
		return ptr;
	}


	static void STATIC_RemovePaintedVertices(class UStaticMeshComponent* StaticMeshComponent);
	static void STATIC_PaintVerticesSingleColor(class UStaticMeshComponent* StaticMeshComponent, const struct FLinearColor& FillColor, bool bConvertToSRGB);
	static void STATIC_PaintVerticesLerpAlongAxis(class UStaticMeshComponent* StaticMeshComponent, const struct FLinearColor& StartColor, const struct FLinearColor& EndColor, EVertexPaintAxis Axis, bool bConvertToSRGB);
};

// Class Engine.MicroTransactionBase
// 0x0030 (FullSize[0x0068] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_076C - 0x0000 // Minimum to subtract -> (0000)
class UMicroTransactionBase : public UPlatformInterfaceBase
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_076C, TArray<struct FPurchaseInfo>,                                          AvailableProducts);                                        // 0x0038(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_076C, struct FString,                                                        LastError);                                                // 0x0048(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_076C, struct FString,                                                        LastErrorSolution);                                        // 0x0058(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MicroTransactionBase");
		return ptr;
	}


};

// Class Engine.ModelComponent
// 0x0023 (FullSize[0x0428] - InheritedSize[0x0405])
// LastOffsetWithSize(0x0408)
#define PADDING_076D - 0x0000 // Minimum to subtract -> (0018)
class UModelComponent : public UPrimitiveComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0018 PADDING_076D, class UBodySetup*,                                                     ModelBodySetup);                                           // 0x0420(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ModelComponent");
		return ptr;
	}


};

// Class Engine.MorphTarget
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_076E - 0x0000 // Minimum to subtract -> (0000)
class UMorphTarget : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_076E, class USkeletalMesh*,                                                  BaseSkelMesh);                                             // 0x0028(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.MorphTarget");
		return ptr;
	}


};

// Class Engine.NavAgentInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UNavAgentInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NavAgentInterface");
		return ptr;
	}


};

// Class Engine.NavAreaBase
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UNavAreaBase : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NavAreaBase");
		return ptr;
	}


};

// Class Engine.NavCollisionBase
// 0x0001 (FullSize[0x0029] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0771 - 0x0000 // Minimum to subtract -> (0000)
class UNavCollisionBase : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0771, unsigned char,                                                         bIsDynamicObstacle);                                       // 0x0028(0x0001) BIT_FIELD (Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NavCollisionBase");
		return ptr;
	}


};

// Class Engine.NavEdgeProviderInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UNavEdgeProviderInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NavEdgeProviderInterface");
		return ptr;
	}


};

// Class Engine.NavigationDataChunk
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0773 - 0x0000 // Minimum to subtract -> (0000)
class UNavigationDataChunk : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0773, struct FName,                                                          NavigationDataName);                                       // 0x0028(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NavigationDataChunk");
		return ptr;
	}


};

// Class Engine.NavigationDataInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UNavigationDataInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NavigationDataInterface");
		return ptr;
	}


};

// Class Engine.NavigationSystemBase
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UNavigationSystemBase : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NavigationSystemBase");
		return ptr;
	}


};

// Class Engine.NavigationSystem
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UNavigationSystem : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NavigationSystem");
		return ptr;
	}


	static void STATIC_SimpleMoveToLocation(class AController* Controller, const struct FVector& Goal);
	static void STATIC_SimpleMoveToActor(class AController* Controller, class AActor* Goal);
};

// Class Engine.NavigationSystemConfig
// 0x0019 (FullSize[0x0041] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0777 - 0x0000 // Minimum to subtract -> (0000)
class UNavigationSystemConfig : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0777, struct FSoftClassPath,                                                 NavigationSystemClass);                                    // 0x0028(0x0018)  (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0777, unsigned char,                                                         bIsOverriden);                                             // 0x0040(0x0001) BIT_FIELD (Edit, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NavigationSystemConfig");
		return ptr;
	}


};

// Class Engine.NullNavSysConfig
// 0x0007 (FullSize[0x0048] - InheritedSize[0x0041])
// LastOffsetWithSize(0x0041)
class UNullNavSysConfig : public UNavigationSystemConfig
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NullNavSysConfig");
		return ptr;
	}


};

// Class Engine.NavLinkDefinition
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0779 - 0x0000 // Minimum to subtract -> (0000)
class UNavLinkDefinition : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0779, TArray<struct FNavigationLink>,                                        Links);                                                    // 0x0028(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0779, TArray<struct FNavigationSegmentLink>,                                 SegmentLinks);                                             // 0x0038(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NavLinkDefinition");
		return ptr;
	}


};

// Class Engine.NavPathObserverInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UNavPathObserverInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NavPathObserverInterface");
		return ptr;
	}


};

// Class Engine.NavRelevantInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UNavRelevantInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NavRelevantInterface");
		return ptr;
	}


};

// Class Engine.SimulatedClientNetConnection
// 0x04D8 (FullSize[0x19A0] - InheritedSize[0x14C8])
// LastOffsetWithSize(0x14C8)
class USimulatedClientNetConnection : public UNetConnection
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SimulatedClientNetConnection");
		return ptr;
	}


};

// Class Engine.NetworkPredictionInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UNetworkPredictionInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NetworkPredictionInterface");
		return ptr;
	}


};

// Class Engine.NetworkSettings
// 0x001C (FullSize[0x0044] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_077E - 0x0000 // Minimum to subtract -> (0010)
class UNetworkSettings : public UDeveloperSettings
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_077E, unsigned char,                                                         bVerifyPeer);                                              // 0x0038(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_077E, unsigned char,                                                         bEnableMultiplayerWorldOriginRebasing);                    // 0x0038(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_077E, int,                                                                   MaxRepArraySize);                                          // 0x003C(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_077E, int,                                                                   MaxRepArrayMemory);                                        // 0x0040(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NetworkSettings");
		return ptr;
	}


};

// Class Engine.NodeMappingContainer
// 0x00F0 (FullSize[0x0118] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_077F - 0x0000 // Minimum to subtract -> (0000)
class UNodeMappingContainer : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_077F, TMap<struct FName COMMA struct FNodeItem>,                             SourceItems);                                              // 0x0028(0x0050)  (Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0050 PADDING_077F, TMap<struct FName COMMA struct FNodeItem>,                             TargetItems);                                              // 0x0078(0x0050)  (Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_077F, TMap<struct FName COMMA struct FName>,                                 SourceToTarget);                                           // 0x00C8(0x0050)  (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NodeMappingContainer");
		return ptr;
	}


};

// Class Engine.NodeMappingProviderInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UNodeMappingProviderInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.NodeMappingProviderInterface");
		return ptr;
	}


};

// Class Engine.Note
// 0x0010 (FullSize[0x0248] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
class ANote : public AActor
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Note");
		return ptr;
	}


};

// Class Engine.ObjectLibrary
// 0x0032 (FullSize[0x005A] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0782 - 0x0000 // Minimum to subtract -> (0000)
class UObjectLibrary : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0782, class UClass*,                                                         ObjectBaseClass);                                          // 0x0028(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0782, bool,                                                                  bHasBlueprintClasses);                                     // 0x0030(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0782, TArray<class UObject*>,                                                Objects);                                                  // 0x0038(0x0010)  (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0782, TArray<TWeakObjectPtr<class UObject>>,                                 WeakObjects);                                              // 0x0048(0x0010)  (ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0782, bool,                                                                  bUseWeakReferences);                                       // 0x0058(0x0001)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0031 PADDING_0782, bool,                                                                  bIsFullyLoaded);                                           // 0x0059(0x0001)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ObjectLibrary");
		return ptr;
	}


};

// Class Engine.ObjectReferencer
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0783 - 0x0000 // Minimum to subtract -> (0000)
class UObjectReferencer : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0783, TArray<class UObject*>,                                                ReferencedObjects);                                        // 0x0028(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ObjectReferencer");
		return ptr;
	}


};

// Class Engine.PackageMapClient
// 0x00B8 (FullSize[0x00E0] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UPackageMapClient : public UPackageMap
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PackageMapClient");
		return ptr;
	}


};

// Class Engine.PainCausingVolume
// 0x0023 (FullSize[0x02B0] - InheritedSize[0x028D])
// LastOffsetWithSize(0x028D)
#define PADDING_0785 - 0x0000 // Minimum to subtract -> (0003)
class APainCausingVolume : public APhysicsVolume
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_0785, unsigned char,                                                         bPainCausing);                                             // 0x0290(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_0785, float,                                                                 DamagePerSec);                                             // 0x0294(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_0785, class UClass*,                                                         DamageType);                                               // 0x0298(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_0785, float,                                                                 PainInterval);                                             // 0x02A0(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_0785, unsigned char,                                                         bEntryPain);                                               // 0x02A4(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_0785, unsigned char,                                                         BACKUP_bPainCausing);                                      // 0x02A4(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0785, class AController*,                                                    DamageInstigator);                                         // 0x02A8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PainCausingVolume");
		return ptr;
	}


};

// Class Engine.ParticleEmitter
// 0x0039 (FullSize[0x0061] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0786 - 0x0000 // Minimum to subtract -> (0000)
class UParticleEmitter : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0786, struct FName,                                                          EmitterName);                                              // 0x0028(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0786, int,                                                                   SubUVDataOffset);                                          // 0x0030(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0786, TEnumAsByte<EEmitterRenderMode>,                                       EmitterRenderMode);                                        // 0x0034(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000D PADDING_0786, EParticleSignificanceLevel,                                            SignificanceLevel);                                        // 0x0035(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_0786, unsigned char,                                                         bUseLegacySpawningBehavior);                               // 0x0037(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_0786, unsigned char,                                                         ConvertedModules);                                         // 0x0037(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_0786, unsigned char,                                                         bIsSoloing);                                               // 0x0037(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_0786, unsigned char,                                                         bCookedOut);                                               // 0x0037(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_0786, unsigned char,                                                         bDisabledLODsKeepEmitterAlive);                            // 0x0037(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0786, unsigned char,                                                         bDisableWhenInsignficant);                                 // 0x0038(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0786, TArray<class UParticleLODLevel*>,                                      LODLevels);                                                // 0x0040(0x0010)  (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0786, int,                                                                   PeakActiveParticles);                                      // 0x0050(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0786, int,                                                                   InitialAllocationCount);                                   // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0786, float,                                                                 QualityLevelSpawnRateScale);                               // 0x0058(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0786, uint32_t,                                                              DetailModeBitmask);                                        // 0x005C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0786, unsigned char,                                                         bOWI_ResetOnDetailModeChanged);                            // 0x0060(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleEmitter");
		return ptr;
	}


};

// Class Engine.ParticleEventManager
// 0x0010 (FullSize[0x0248] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
class AParticleEventManager : public AActor
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleEventManager");
		return ptr;
	}


};

// Class Engine.ParticleLODLevel
// 0x0090 (FullSize[0x00B8] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0788 - 0x0000 // Minimum to subtract -> (0000)
class UParticleLODLevel : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0788, int,                                                                   Level);                                                    // 0x0028(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0788, unsigned char,                                                         bEnabled);                                                 // 0x002C(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0788, class UParticleModuleRequired*,                                        RequiredModule);                                           // 0x0030(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0788, TArray<class UParticleModule*>,                                        Modules);                                                  // 0x0038(0x0010)  (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0788, class UParticleModuleTypeDataBase*,                                    TypeDataModule);                                           // 0x0048(0x0008)  (ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0788, class UParticleModuleSpawn*,                                           SpawnModule);                                              // 0x0050(0x0008)  (ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0788, class UParticleModuleEventGenerator*,                                  EventGenerator);                                           // 0x0058(0x0008)  (ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0788, TArray<class UParticleModuleSpawnBase*>,                               SpawningModules);                                          // 0x0060(0x0010)  (ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0788, TArray<class UParticleModule*>,                                        SpawnModules);                                             // 0x0070(0x0010)  (ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0788, TArray<class UParticleModule*>,                                        UpdateModules);                                            // 0x0080(0x0010)  (ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0788, TArray<class UParticleModuleOrbit*>,                                   OrbitModules);                                             // 0x0090(0x0010)  (ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0788, TArray<class UParticleModuleEventReceiverBase*>,                       EventReceiverModules);                                     // 0x00A0(0x0010)  (ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_0788, unsigned char,                                                         ConvertedModules);                                         // 0x00B0(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008C PADDING_0788, int,                                                                   PeakActiveParticles);                                      // 0x00B4(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleLODLevel");
		return ptr;
	}


};

// Class Engine.ParticleModule
// 0x0005 (FullSize[0x002D] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0789 - 0x0000 // Minimum to subtract -> (0000)
class UParticleModule : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0789, unsigned char,                                                         bSpawnModule);                                             // 0x0028(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_000(0x0000 PADDING_0789, unsigned char,                                                         bUpdateModule);                                            // 0x0028(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_000(0x0000 PADDING_0789, unsigned char,                                                         bFinalUpdateModule);                                       // 0x0028(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_000(0x0000 PADDING_0789, unsigned char,                                                         bUpdateForGPUEmitter);                                     // 0x0028(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_000(0x0000 PADDING_0789, unsigned char,                                                         bCurvesAsColor);                                           // 0x0028(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_000(0x0000 PADDING_0789, unsigned char,                                                         b3DDrawMode);                                              // 0x0028(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_000(0x0000 PADDING_0789, unsigned char,                                                         bSupported3DDrawMode);                                     // 0x0028(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_000(0x0000 PADDING_0789, unsigned char,                                                         bEnabled);                                                 // 0x0028(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0001 PADDING_0789, unsigned char,                                                         bEditable);                                                // 0x0029(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0001 PADDING_0789, unsigned char,                                                         LODDuplicate);                                             // 0x0029(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0001 PADDING_0789, unsigned char,                                                         bSupportsRandomSeed);                                      // 0x0029(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0001 PADDING_0789, unsigned char,                                                         bRequiresLoopingNotification);                             // 0x0029(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0789, unsigned char,                                                         LODValidity);                                              // 0x002C(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModule");
		return ptr;
	}


};

// Class Engine.ParticleModuleAccelerationBase
// 0x0004 (FullSize[0x0031] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
#define PADDING_078A - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleAccelerationBase : public UParticleModule
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_078A, unsigned char,                                                         bAlwaysInWorldSpace);                                      // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleAccelerationBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleAcceleration
// 0x0058 (FullSize[0x0089] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_078B - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleAcceleration : public UParticleModuleAccelerationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_078B, struct FRawDistributionVector,                                         Acceleration);                                             // 0x0038(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_078B, unsigned char,                                                         bApplyOwnerScale);                                         // 0x0088(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleAcceleration");
		return ptr;
	}


};

// Class Engine.ParticleModuleAccelerationConstant
// 0x0013 (FullSize[0x0044] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_078C - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleAccelerationConstant : public UParticleModuleAccelerationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_078C, struct FVector,                                                        Acceleration);                                             // 0x0038(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleAccelerationConstant");
		return ptr;
	}


};

// Class Engine.ParticleModuleAccelerationDrag
// 0x0047 (FullSize[0x0078] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_078D - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleAccelerationDrag : public UParticleModuleAccelerationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_078D, class UDistributionFloat*,                                             DragCoefficient);                                          // 0x0038(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_078D, struct FRawDistributionFloat,                                          DragCoefficientRaw);                                       // 0x0040(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleAccelerationDrag");
		return ptr;
	}


};

// Class Engine.ParticleModuleAccelerationDragScaleOverLife
// 0x0047 (FullSize[0x0078] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_078E - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleAccelerationDragScaleOverLife : public UParticleModuleAccelerationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_078E, class UDistributionFloat*,                                             DragScale);                                                // 0x0038(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_078E, struct FRawDistributionFloat,                                          DragScaleRaw);                                             // 0x0040(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleAccelerationDragScaleOverLife");
		return ptr;
	}


};

// Class Engine.ParticleModuleAccelerationOverLifetime
// 0x0057 (FullSize[0x0088] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_078F - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleAccelerationOverLifetime : public UParticleModuleAccelerationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_078F, struct FRawDistributionVector,                                         AccelOverLife);                                            // 0x0038(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleAccelerationOverLifetime");
		return ptr;
	}


};

// Class Engine.ParticleModuleAttractorBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleAttractorBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleAttractorBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleAttractorLine
// 0x0088 (FullSize[0x00B8] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_0791 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleAttractorLine : public UParticleModuleAttractorBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_0791, struct FVector,                                                        EndPoint0);                                                // 0x0030(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_0791, struct FVector,                                                        EndPoint1);                                                // 0x003C(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0791, struct FRawDistributionFloat,                                          Range);                                                    // 0x0048(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_0791, struct FRawDistributionFloat,                                          Strength);                                                 // 0x0080(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleAttractorLine");
		return ptr;
	}


};

// Class Engine.ParticleModuleAttractorParticle
// 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_0792 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleAttractorParticle : public UParticleModuleAttractorBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_0792, struct FName,                                                          EmitterName);                                              // 0x0030(0x0008)  (Edit, ExportObject, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_0792, struct FRawDistributionFloat,                                          Range);                                                    // 0x0038(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_0792, unsigned char,                                                         bStrengthByDistance);                                      // 0x0070(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004B PADDING_0792, struct FRawDistributionFloat,                                          Strength);                                                 // 0x0078(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0083 PADDING_0792, unsigned char,                                                         bAffectBaseVelocity);                                      // 0x00B0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0087 PADDING_0792, TEnumAsByte<EAttractorParticleSelectionMethod>,                        SelectionMethod);                                          // 0x00B4(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008B PADDING_0792, unsigned char,                                                         bRenewSource);                                             // 0x00B8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008B PADDING_0792, unsigned char,                                                         bInheritSourceVel);                                        // 0x00B8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008F PADDING_0792, int,                                                                   LastSelIndex);                                             // 0x00BC(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleAttractorParticle");
		return ptr;
	}


};

// Class Engine.ParticleModuleAttractorPoint
// 0x00C2 (FullSize[0x00F2] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_0793 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleAttractorPoint : public UParticleModuleAttractorBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_0793, struct FRawDistributionVector,                                         Position);                                                 // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_0793, struct FRawDistributionFloat,                                          Range);                                                    // 0x0080(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008B PADDING_0793, struct FRawDistributionFloat,                                          Strength);                                                 // 0x00B8(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C3 PADDING_0793, unsigned char,                                                         StrengthByDistance);                                       // 0x00F0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C3 PADDING_0793, unsigned char,                                                         bAffectBaseVelocity);                                      // 0x00F0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C3 PADDING_0793, unsigned char,                                                         bOverrideVelocity);                                        // 0x00F0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C3 PADDING_0793, unsigned char,                                                         bUseWorldSpacePosition);                                   // 0x00F0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C3 PADDING_0793, unsigned char,                                                         Positive_X);                                               // 0x00F0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C3 PADDING_0793, unsigned char,                                                         Positive_Y);                                               // 0x00F0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C3 PADDING_0793, unsigned char,                                                         Positive_Z);                                               // 0x00F0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C3 PADDING_0793, unsigned char,                                                         Negative_X);                                               // 0x00F0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C4 PADDING_0793, unsigned char,                                                         Negative_Y);                                               // 0x00F1(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C4 PADDING_0793, unsigned char,                                                         Negative_Z);                                               // 0x00F1(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleAttractorPoint");
		return ptr;
	}


};

// Class Engine.ParticleModuleAttractorPointGravity
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_0794 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleAttractorPointGravity : public UParticleModuleAttractorBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_0794, struct FVector,                                                        Position);                                                 // 0x0030(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_0794, float,                                                                 Radius);                                                   // 0x003C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_0794, class UDistributionFloat*,                                             Strength);                                                 // 0x0040(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_0794, struct FRawDistributionFloat,                                          StrengthRaw);                                              // 0x0048(0x0038)  (Edit, NoClear, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleAttractorPointGravity");
		return ptr;
	}


};

// Class Engine.ParticleModuleBeamBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleBeamBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleBeamBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleBeamModifier
// 0x00F0 (FullSize[0x0120] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_0796 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleBeamModifier : public UParticleModuleBeamBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_0796, TEnumAsByte<EBeamModifierType>,                                        ModifierType);                                             // 0x0030(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_0796, struct FBeamModifierOptions,                                           PositionOptions);                                          // 0x0034(0x0004)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_0796, struct FRawDistributionVector,                                         Position);                                                 // 0x0038(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005B PADDING_0796, struct FBeamModifierOptions,                                           TangentOptions);                                           // 0x0088(0x0004)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0063 PADDING_0796, struct FRawDistributionVector,                                         Tangent);                                                  // 0x0090(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B3 PADDING_0796, unsigned char,                                                         bAbsoluteTangent);                                         // 0x00E0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B7 PADDING_0796, struct FBeamModifierOptions,                                           StrengthOptions);                                          // 0x00E4(0x0004)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BB PADDING_0796, struct FRawDistributionFloat,                                          Strength);                                                 // 0x00E8(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleBeamModifier");
		return ptr;
	}


};

// Class Engine.ParticleModuleBeamNoise
// 0x0188 (FullSize[0x01B8] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_0797 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleBeamNoise : public UParticleModuleBeamBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_0797, unsigned char,                                                         bLowFreq_Enabled);                                         // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_0797, int,                                                                   Frequency);                                                // 0x0034(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_0797, int,                                                                   Frequency_LowRange);                                       // 0x0038(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_0797, struct FRawDistributionVector,                                         NoiseRange);                                               // 0x0040(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0063 PADDING_0797, struct FRawDistributionFloat,                                          NoiseRangeScale);                                          // 0x0090(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009B PADDING_0797, unsigned char,                                                         bNRScaleEmitterTime);                                      // 0x00C8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_0797, struct FRawDistributionVector,                                         NoiseSpeed);                                               // 0x00D0(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F3 PADDING_0797, unsigned char,                                                         bSmooth);                                                  // 0x0120(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F7 PADDING_0797, float,                                                                 NoiseLockRadius);                                          // 0x0124(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FB PADDING_0797, unsigned char,                                                         bNoiseLock);                                               // 0x0128(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FB PADDING_0797, unsigned char,                                                         bOscillate);                                               // 0x0128(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FF PADDING_0797, float,                                                                 NoiseLockTime);                                            // 0x012C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0103 PADDING_0797, float,                                                                 NoiseTension);                                             // 0x0130(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0107 PADDING_0797, unsigned char,                                                         bUseNoiseTangents);                                        // 0x0134(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010B PADDING_0797, struct FRawDistributionFloat,                                          NoiseTangentStrength);                                     // 0x0138(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0143 PADDING_0797, int,                                                                   NoiseTessellation);                                        // 0x0170(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0147 PADDING_0797, unsigned char,                                                         bTargetNoise);                                             // 0x0174(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x014B PADDING_0797, float,                                                                 FrequencyDistance);                                        // 0x0178(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x014F PADDING_0797, unsigned char,                                                         bApplyNoiseScale);                                         // 0x017C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0153 PADDING_0797, struct FRawDistributionFloat,                                          NoiseScale);                                               // 0x0180(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleBeamNoise");
		return ptr;
	}


};

// Class Engine.ParticleModuleBeamSource
// 0x00F9 (FullSize[0x0129] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_0798 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleBeamSource : public UParticleModuleBeamBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_0798, TEnumAsByte<EBeam2SourceTargetMethod>,                                 SourceMethod);                                             // 0x0030(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_0798, struct FName,                                                          SourceName);                                               // 0x0034(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_0798, unsigned char,                                                         bSourceAbsolute);                                          // 0x003C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_0798, struct FRawDistributionVector,                                         Source);                                                   // 0x0040(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0063 PADDING_0798, unsigned char,                                                         bLockSource);                                              // 0x0090(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0067 PADDING_0798, TEnumAsByte<EBeam2SourceTargetTangentMethod>,                          SourceTangentMethod);                                      // 0x0094(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006B PADDING_0798, struct FRawDistributionVector,                                         SourceTangent);                                            // 0x0098(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BB PADDING_0798, unsigned char,                                                         bLockSourceTangent);                                       // 0x00E8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C3 PADDING_0798, struct FRawDistributionFloat,                                          SourceStrength);                                           // 0x00F0(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FB PADDING_0798, unsigned char,                                                         bLockSourceStength);                                       // 0x0128(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleBeamSource");
		return ptr;
	}


};

// Class Engine.ParticleModuleBeamTarget
// 0x0100 (FullSize[0x0130] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_0799 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleBeamTarget : public UParticleModuleBeamBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_0799, TEnumAsByte<EBeam2SourceTargetMethod>,                                 TargetMethod);                                             // 0x0030(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_0799, struct FName,                                                          TargetName);                                               // 0x0034(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_0799, struct FRawDistributionVector,                                         Target);                                                   // 0x0040(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0063 PADDING_0799, unsigned char,                                                         bTargetAbsolute);                                          // 0x0090(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0063 PADDING_0799, unsigned char,                                                         bLockTarget);                                              // 0x0090(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0067 PADDING_0799, TEnumAsByte<EBeam2SourceTargetTangentMethod>,                          TargetTangentMethod);                                      // 0x0094(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006B PADDING_0799, struct FRawDistributionVector,                                         TargetTangent);                                            // 0x0098(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BB PADDING_0799, unsigned char,                                                         bLockTargetTangent);                                       // 0x00E8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C3 PADDING_0799, struct FRawDistributionFloat,                                          TargetStrength);                                           // 0x00F0(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FB PADDING_0799, unsigned char,                                                         bLockTargetStength);                                       // 0x0128(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FF PADDING_0799, float,                                                                 LockRadius);                                               // 0x012C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleBeamTarget");
		return ptr;
	}


};

// Class Engine.ParticleModuleCameraBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleCameraBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleCameraBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleCameraOffset
// 0x003D (FullSize[0x006D] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_079B - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleCameraOffset : public UParticleModuleCameraBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_079B, struct FRawDistributionFloat,                                          CameraOffset);                                             // 0x0030(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003B PADDING_079B, unsigned char,                                                         bSpawnTimeOnly);                                           // 0x0068(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003F PADDING_079B, TEnumAsByte<EParticleCameraOffsetUpdateMethod>,                        UpdateMethod);                                             // 0x006C(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleCameraOffset");
		return ptr;
	}


};

// Class Engine.ParticleModuleCollisionBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleCollisionBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleCollisionBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleCollision
// 0x0198 (FullSize[0x01C8] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_079D - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleCollision : public UParticleModuleCollisionBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_079D, struct FRawDistributionVector,                                         DampingFactor);                                            // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_079D, struct FRawDistributionVector,                                         DampingFactorRotation);                                    // 0x0080(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_079D, struct FRawDistributionFloat,                                          MaxCollisions);                                            // 0x00D0(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00DB PADDING_079D, TEnumAsByte<EParticleCollisionComplete>,                               CollisionCompletionOption);                                // 0x0108(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E3 PADDING_079D, TArray<TEnumAsByte<EObjectTypeQuery>>,                                 CollisionTypes);                                           // 0x0110(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FB PADDING_079D, unsigned char,                                                         bApplyPhysics);                                            // 0x0128(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FB PADDING_079D, unsigned char,                                                         bIgnoreTriggerVolumes);                                    // 0x0128(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0103 PADDING_079D, struct FRawDistributionFloat,                                          ParticleMass);                                             // 0x0130(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x013B PADDING_079D, float,                                                                 DirScalar);                                                // 0x0168(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x013F PADDING_079D, unsigned char,                                                         bPawnsDoNotDecrementCount);                                // 0x016C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x013F PADDING_079D, unsigned char,                                                         bOnlyVerticalNormalsDecrementCount);                       // 0x016C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0143 PADDING_079D, float,                                                                 VerticalFudgeFactor);                                      // 0x0170(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x014B PADDING_079D, struct FRawDistributionFloat,                                          DelayAmount);                                              // 0x0178(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0183 PADDING_079D, unsigned char,                                                         bDropDetail);                                              // 0x01B0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0183 PADDING_079D, unsigned char,                                                         bCollideOnlyIfVisible);                                    // 0x01B0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0183 PADDING_079D, unsigned char,                                                         bIgnoreSourceActor);                                       // 0x01B0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0187 PADDING_079D, float,                                                                 MaxCollisionDistance);                                     // 0x01B4(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x018B PADDING_079D, int,                                                                   MaxCollisionSoundsToPlay);                                 // 0x01B8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0193 PADDING_079D, class USoundBase*,                                                     CollisionSound);                                           // 0x01C0(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleCollision");
		return ptr;
	}


};

// Class Engine.ParticleModuleCollisionGPU
// 0x0086 (FullSize[0x00B6] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_079E - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleCollisionGPU : public UParticleModuleCollisionBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_079E, struct FRawDistributionFloat,                                          Resilience);                                               // 0x0030(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003B PADDING_079E, struct FRawDistributionFloat,                                          ResilienceScaleOverLife);                                  // 0x0068(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0073 PADDING_079E, float,                                                                 Friction);                                                 // 0x00A0(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0077 PADDING_079E, float,                                                                 RandomSpread);                                             // 0x00A4(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007B PADDING_079E, float,                                                                 RandomDistribution);                                       // 0x00A8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007F PADDING_079E, float,                                                                 RadiusScale);                                              // 0x00AC(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0083 PADDING_079E, float,                                                                 RadiusBias);                                               // 0x00B0(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0087 PADDING_079E, TEnumAsByte<EParticleCollisionResponse>,                               response);                                                 // 0x00B4(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_079E, TEnumAsByte<EParticleCollisionMode>,                                   CollisionMode);                                            // 0x00B5(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleCollisionGPU");
		return ptr;
	}


};

// Class Engine.ParticleModuleColorBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleColorBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleColorBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleColor
// 0x0089 (FullSize[0x00B9] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07A0 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleColor : public UParticleModuleColorBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07A0, struct FRawDistributionVector,                                         StartColor);                                               // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07A0, struct FRawDistributionFloat,                                          StartAlpha);                                               // 0x0080(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008B PADDING_07A0, unsigned char,                                                         bClampAlpha);                                              // 0x00B8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleColor");
		return ptr;
	}


};

// Class Engine.ParticleModuleColor_Seeded
// 0x0027 (FullSize[0x00E0] - InheritedSize[0x00B9])
// LastOffsetWithSize(0x00B9)
#define PADDING_07A1 - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleColor_Seeded : public UParticleModuleColor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_07A1, struct FParticleRandomSeedInfo,                                        RandomSeedInfo);                                           // 0x00C0(0x0020)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleColor_Seeded");
		return ptr;
	}


};

// Class Engine.ParticleModuleColorOverLife
// 0x0089 (FullSize[0x00B9] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07A2 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleColorOverLife : public UParticleModuleColorBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07A2, struct FRawDistributionVector,                                         ColorOverLife);                                            // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07A2, struct FRawDistributionFloat,                                          AlphaOverLife);                                            // 0x0080(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008B PADDING_07A2, unsigned char,                                                         bClampAlpha);                                              // 0x00B8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleColorOverLife");
		return ptr;
	}


};

// Class Engine.ParticleModuleColorScaleOverLife
// 0x0089 (FullSize[0x00B9] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07A3 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleColorScaleOverLife : public UParticleModuleColorBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07A3, struct FRawDistributionVector,                                         ColorScaleOverLife);                                       // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07A3, struct FRawDistributionFloat,                                          AlphaScaleOverLife);                                       // 0x0080(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008B PADDING_07A3, unsigned char,                                                         bEmitterTime);                                             // 0x00B8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleColorScaleOverLife");
		return ptr;
	}


};

// Class Engine.ParticleModuleEventBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleEventBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleEventBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleEventGenerator
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07A5 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleEventGenerator : public UParticleModuleEventBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07A5, TArray<struct FParticleEvent_GenerateInfo>,                            Events);                                                   // 0x0030(0x0010)  (Edit, ExportObject, ZeroConstructor, NoClear, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleEventGenerator");
		return ptr;
	}


};

// Class Engine.ParticleModuleEventReceiverBase
// 0x000C (FullSize[0x003C] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07A6 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleEventReceiverBase : public UParticleModuleEventBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07A6, TEnumAsByte<EParticleEventType>,                                       EventGeneratorType);                                       // 0x0030(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_07A6, struct FName,                                                          EventName);                                                // 0x0034(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleEventReceiverBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleEventReceiverKillParticles
// 0x0005 (FullSize[0x0041] - InheritedSize[0x003C])
// LastOffsetWithSize(0x003C)
#define PADDING_07A7 - 0x0000 // Minimum to subtract -> (0004)
class UParticleModuleEventReceiverKillParticles : public UParticleModuleEventReceiverBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_07A7, unsigned char,                                                         bStopSpawning);                                            // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleEventReceiverKillParticles");
		return ptr;
	}


};

// Class Engine.ParticleModuleEventReceiverSpawn
// 0x00A5 (FullSize[0x00E1] - InheritedSize[0x003C])
// LastOffsetWithSize(0x003C)
#define PADDING_07A8 - 0x0000 // Minimum to subtract -> (0004)
class UParticleModuleEventReceiverSpawn : public UParticleModuleEventReceiverBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_07A8, struct FRawDistributionFloat,                                          SpawnCount);                                               // 0x0040(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_07A8, unsigned char,                                                         bUseParticleTime);                                         // 0x0078(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_07A8, unsigned char,                                                         bUsePSysLocation);                                         // 0x0078(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_07A8, unsigned char,                                                         bInheritVelocity);                                         // 0x0078(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_07A8, struct FRawDistributionVector,                                         InheritVelocityScale);                                     // 0x0080(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_07A8, TArray<class UPhysicalMaterial*>,                                      PhysicalMaterials);                                        // 0x00D0(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_07A8, unsigned char,                                                         bBanPhysicalMaterials);                                    // 0x00E0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleEventReceiverSpawn");
		return ptr;
	}


};

// Class Engine.ParticleModuleEventSendToGame
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UParticleModuleEventSendToGame : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleEventSendToGame");
		return ptr;
	}


};

// Class Engine.ParticleModuleKillBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleKillBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleKillBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleKillBox
// 0x00A1 (FullSize[0x00D1] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07AB - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleKillBox : public UParticleModuleKillBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07AB, struct FRawDistributionVector,                                         LowerLeftCorner);                                          // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07AB, struct FRawDistributionVector,                                         UpperRightCorner);                                         // 0x0080(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_07AB, unsigned char,                                                         bAbsolute);                                                // 0x00D0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_07AB, unsigned char,                                                         bKillInside);                                              // 0x00D0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_07AB, unsigned char,                                                         bAxisAlignedAndFixedSize);                                 // 0x00D0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleKillBox");
		return ptr;
	}


};

// Class Engine.ParticleModuleKillHeight
// 0x0039 (FullSize[0x0069] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07AC - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleKillHeight : public UParticleModuleKillBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07AC, struct FRawDistributionFloat,                                          Height);                                                   // 0x0030(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003B PADDING_07AC, unsigned char,                                                         bAbsolute);                                                // 0x0068(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003B PADDING_07AC, unsigned char,                                                         bFloor);                                                   // 0x0068(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003B PADDING_07AC, unsigned char,                                                         bApplyPSysScale);                                          // 0x0068(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleKillHeight");
		return ptr;
	}


};

// Class Engine.ParticleModuleLifetimeBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleLifetimeBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLifetimeBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleLifetime
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07AE - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleLifetime : public UParticleModuleLifetimeBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07AE, struct FRawDistributionFloat,                                          Lifetime);                                                 // 0x0030(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLifetime");
		return ptr;
	}


};

// Class Engine.ParticleModuleLifetime_Seeded
// 0x0020 (FullSize[0x0088] - InheritedSize[0x0068])
// LastOffsetWithSize(0x0068)
#define PADDING_07AF - 0x0000 // Minimum to subtract -> (0000)
class UParticleModuleLifetime_Seeded : public UParticleModuleLifetime
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_07AF, struct FParticleRandomSeedInfo,                                        RandomSeedInfo);                                           // 0x0068(0x0020)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLifetime_Seeded");
		return ptr;
	}


};

// Class Engine.ParticleModuleLightBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleLightBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLightBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleLight
// 0x010A (FullSize[0x013A] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07B1 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleLight : public UParticleModuleLightBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07B1, bool,                                                                  bUseInverseSquaredFalloff);                                // 0x0030(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_07B1, bool,                                                                  bAffectsTranslucency);                                     // 0x0031(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0005 PADDING_07B1, bool,                                                                  bPreviewLightRadius);                                      // 0x0032(0x0001)  (Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_07B1, float,                                                                 SpawnFraction);                                            // 0x0034(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_07B1, struct FRawDistributionVector,                                         ColorScaleOverLife);                                       // 0x0038(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005B PADDING_07B1, struct FRawDistributionFloat,                                          BrightnessOverLife);                                       // 0x0088(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0093 PADDING_07B1, struct FRawDistributionFloat,                                          RadiusScale);                                              // 0x00C0(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00CB PADDING_07B1, struct FRawDistributionFloat,                                          LightExponent);                                            // 0x00F8(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0103 PADDING_07B1, struct FLightingChannels,                                              LightingChannels);                                         // 0x0130(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0107 PADDING_07B1, float,                                                                 VolumetricScatteringIntensity);                            // 0x0134(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010B PADDING_07B1, bool,                                                                  bHighQualityLights);                                       // 0x0138(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010C PADDING_07B1, bool,                                                                  bShadowCastingLights);                                     // 0x0139(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLight");
		return ptr;
	}


};

// Class Engine.ParticleModuleLight_Seeded
// 0x0026 (FullSize[0x0160] - InheritedSize[0x013A])
// LastOffsetWithSize(0x013A)
#define PADDING_07B2 - 0x0000 // Minimum to subtract -> (0006)
class UParticleModuleLight_Seeded : public UParticleModuleLight
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0006 PADDING_07B2, struct FParticleRandomSeedInfo,                                        RandomSeedInfo);                                           // 0x0140(0x0020)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLight_Seeded");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocationBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleLocationBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocationBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocation
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07B4 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleLocation : public UParticleModuleLocationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07B4, struct FRawDistributionVector,                                         StartLocation);                                            // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07B4, float,                                                                 DistributeOverNPoints);                                    // 0x0080(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_07B4, float,                                                                 DistributeThreshold);                                      // 0x0084(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocation");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocation_Seeded
// 0x0020 (FullSize[0x00A8] - InheritedSize[0x0088])
// LastOffsetWithSize(0x0088)
#define PADDING_07B5 - 0x0000 // Minimum to subtract -> (0000)
class UParticleModuleLocation_Seeded : public UParticleModuleLocation
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_07B5, struct FParticleRandomSeedInfo,                                        RandomSeedInfo);                                           // 0x0088(0x0020)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocation_Seeded");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocationBoneSocket
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07B6 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleLocationBoneSocket : public UParticleModuleLocationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07B6, TEnumAsByte<ELocationBoneSocketSource>,                                SourceType);                                               // 0x0030(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_07B6, struct FVector,                                                        UniversalOffset);                                          // 0x0034(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07B6, TArray<struct FLocationBoneSocketInfo>,                                SourceLocations);                                          // 0x0040(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_07B6, TEnumAsByte<ELocationBoneSocketSelectionMethod>,                       SelectionMethod);                                          // 0x0050(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_07B6, unsigned char,                                                         bUpdatePositionEachFrame);                                 // 0x0054(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_07B6, unsigned char,                                                         bOrientMeshEmitters);                                      // 0x0054(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_07B6, unsigned char,                                                         bInheritBoneVelocity);                                     // 0x0054(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002B PADDING_07B6, float,                                                                 InheritVelocityScale);                                     // 0x0058(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_07B6, struct FName,                                                          SkelMeshActorParamName);                                   // 0x005C(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_07B6, int,                                                                   NumPreSelectedIndices);                                    // 0x0064(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocationBoneSocket");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocationDirect
// 0x0140 (FullSize[0x0170] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07B7 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleLocationDirect : public UParticleModuleLocationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07B7, struct FRawDistributionVector,                                         Location);                                                 // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07B7, struct FRawDistributionVector,                                         LocationOffset);                                           // 0x0080(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_07B7, struct FRawDistributionVector,                                         ScaleFactor);                                              // 0x00D0(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F3 PADDING_07B7, struct FRawDistributionVector,                                         Direction);                                                // 0x0120(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocationDirect");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocationEmitter
// 0x001C (FullSize[0x004C] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07B8 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleLocationEmitter : public UParticleModuleLocationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07B8, struct FName,                                                          EmitterName);                                              // 0x0030(0x0008)  (Edit, ExportObject, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_07B8, TEnumAsByte<ELocationEmitterSelectionMethod>,                          SelectionMethod);                                          // 0x0038(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_07B8, unsigned char,                                                         InheritSourceVelocity);                                    // 0x003C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07B8, float,                                                                 InheritSourceVelocityScale);                               // 0x0040(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_07B8, unsigned char,                                                         bInheritSourceRotation);                                   // 0x0044(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_07B8, float,                                                                 InheritSourceRotationScale);                               // 0x0048(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocationEmitter");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocationEmitterDirect
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07B9 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleLocationEmitterDirect : public UParticleModuleLocationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07B9, struct FName,                                                          EmitterName);                                              // 0x0030(0x0008)  (Edit, ExportObject, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocationEmitterDirect");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocationPrimitiveBase
// 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07BA - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleLocationPrimitiveBase : public UParticleModuleLocationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07BA, unsigned char,                                                         Positive_X);                                               // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0003 PADDING_07BA, unsigned char,                                                         Positive_Y);                                               // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0003 PADDING_07BA, unsigned char,                                                         Positive_Z);                                               // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0003 PADDING_07BA, unsigned char,                                                         Negative_X);                                               // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0003 PADDING_07BA, unsigned char,                                                         Negative_Y);                                               // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0003 PADDING_07BA, unsigned char,                                                         Negative_Z);                                               // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0003 PADDING_07BA, unsigned char,                                                         SurfaceOnly);                                              // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0003 PADDING_07BA, unsigned char,                                                         Velocity);                                                 // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_07BA, struct FRawDistributionFloat,                                          VelocityScale);                                            // 0x0038(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_07BA, struct FRawDistributionVector,                                         StartLocation);                                            // 0x0070(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocationPrimitiveBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocationPrimitiveCylinder
// 0x0079 (FullSize[0x0139] - InheritedSize[0x00C0])
// LastOffsetWithSize(0x00C0)
#define PADDING_07BB - 0x0000 // Minimum to subtract -> (0000)
class UParticleModuleLocationPrimitiveCylinder : public UParticleModuleLocationPrimitiveBase
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_07BB, unsigned char,                                                         RadialVelocity);                                           // 0x00C0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_07BB, struct FRawDistributionFloat,                                          StartRadius);                                              // 0x00C8(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_07BB, struct FRawDistributionFloat,                                          StartHeight);                                              // 0x0100(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_07BB, TEnumAsByte<ECylinderHeightAxis>,                                      HeightAxis);                                               // 0x0138(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocationPrimitiveCylinder");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocationPrimitiveCylinder_Seeded
// 0x0027 (FullSize[0x0160] - InheritedSize[0x0139])
// LastOffsetWithSize(0x0139)
#define PADDING_07BC - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleLocationPrimitiveCylinder_Seeded : public UParticleModuleLocationPrimitiveCylinder
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_07BC, struct FParticleRandomSeedInfo,                                        RandomSeedInfo);                                           // 0x0140(0x0020)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocationPrimitiveCylinder_Seeded");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocationPrimitiveSphere
// 0x0038 (FullSize[0x00F8] - InheritedSize[0x00C0])
// LastOffsetWithSize(0x00C0)
#define PADDING_07BD - 0x0000 // Minimum to subtract -> (0000)
class UParticleModuleLocationPrimitiveSphere : public UParticleModuleLocationPrimitiveBase
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_07BD, struct FRawDistributionFloat,                                          StartRadius);                                              // 0x00C0(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocationPrimitiveSphere");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocationPrimitiveSphere_Seeded
// 0x0020 (FullSize[0x0118] - InheritedSize[0x00F8])
// LastOffsetWithSize(0x00F8)
#define PADDING_07BE - 0x0000 // Minimum to subtract -> (0000)
class UParticleModuleLocationPrimitiveSphere_Seeded : public UParticleModuleLocationPrimitiveSphere
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_07BE, struct FParticleRandomSeedInfo,                                        RandomSeedInfo);                                           // 0x00F8(0x0020)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocationPrimitiveSphere_Seeded");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocationPrimitiveTriangle
// 0x00F8 (FullSize[0x0128] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07BF - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleLocationPrimitiveTriangle : public UParticleModuleLocationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07BF, struct FRawDistributionVector,                                         StartOffset);                                              // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07BF, struct FRawDistributionFloat,                                          Height);                                                   // 0x0080(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008B PADDING_07BF, struct FRawDistributionFloat,                                          Angle);                                                    // 0x00B8(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C3 PADDING_07BF, struct FRawDistributionFloat,                                          Thickness);                                                // 0x00F0(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocationPrimitiveTriangle");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocationSkelVertSurface
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07C0 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleLocationSkelVertSurface : public UParticleModuleLocationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07C0, TEnumAsByte<ELocationSkelVertSurfaceSource>,                           SourceType);                                               // 0x0030(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_07C0, struct FVector,                                                        UniversalOffset);                                          // 0x0034(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07C0, unsigned char,                                                         bUpdatePositionEachFrame);                                 // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07C0, unsigned char,                                                         bOrientMeshEmitters);                                      // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07C0, unsigned char,                                                         bInheritBoneVelocity);                                     // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_07C0, float,                                                                 InheritVelocityScale);                                     // 0x0044(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_07C0, struct FName,                                                          SkelMeshActorParamName);                                   // 0x0048(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_07C0, TArray<struct FName>,                                                  ValidAssociatedBones);                                     // 0x0050(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_07C0, unsigned char,                                                         bEnforceNormalCheck);                                      // 0x0060(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_07C0, struct FVector,                                                        NormalToCompare);                                          // 0x0064(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_07C0, float,                                                                 NormalCheckToleranceDegrees);                              // 0x0070(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_07C0, float,                                                                 NormalCheckTolerance);                                     // 0x0074(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004B PADDING_07C0, TArray<int>,                                                           ValidMaterialIndices);                                     // 0x0078(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005B PADDING_07C0, unsigned char,                                                         bInheritVertexColor);                                      // 0x0088(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005B PADDING_07C0, unsigned char,                                                         bInheritUV);                                               // 0x0088(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005F PADDING_07C0, uint32_t,                                                              InheritUVChannel);                                         // 0x008C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocationSkelVertSurface");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocationWorldOffset
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
// LastOffsetWithSize(0x0088)
class UParticleModuleLocationWorldOffset : public UParticleModuleLocation
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocationWorldOffset");
		return ptr;
	}


};

// Class Engine.ParticleModuleLocationWorldOffset_Seeded
// 0x0020 (FullSize[0x00A8] - InheritedSize[0x0088])
// LastOffsetWithSize(0x0088)
#define PADDING_07C2 - 0x0000 // Minimum to subtract -> (0000)
class UParticleModuleLocationWorldOffset_Seeded : public UParticleModuleLocationWorldOffset
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_07C2, struct FParticleRandomSeedInfo,                                        RandomSeedInfo);                                           // 0x0088(0x0020)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleLocationWorldOffset_Seeded");
		return ptr;
	}


};

// Class Engine.ParticleModuleMaterialBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleMaterialBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleMaterialBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleMeshMaterial
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07C4 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleMeshMaterial : public UParticleModuleMaterialBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07C4, TArray<class UMaterialInterface*>,                                     MeshMaterials);                                            // 0x0030(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleMeshMaterial");
		return ptr;
	}


};

// Class Engine.ParticleModuleRotationBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleRotationBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleRotationBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleMeshRotation
// 0x0051 (FullSize[0x0081] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07C6 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleMeshRotation : public UParticleModuleRotationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07C6, struct FRawDistributionVector,                                         StartRotation);                                            // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07C6, unsigned char,                                                         bInheritParent);                                           // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleMeshRotation");
		return ptr;
	}


};

// Class Engine.ParticleModuleMeshRotation_Seeded
// 0x0027 (FullSize[0x00A8] - InheritedSize[0x0081])
// LastOffsetWithSize(0x0081)
#define PADDING_07C7 - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleMeshRotation_Seeded : public UParticleModuleMeshRotation
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_07C7, struct FParticleRandomSeedInfo,                                        RandomSeedInfo);                                           // 0x0088(0x0020)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleMeshRotation_Seeded");
		return ptr;
	}


};

// Class Engine.ParticleModuleRotationRateBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleRotationRateBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleRotationRateBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleMeshRotationRate
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07C9 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleMeshRotationRate : public UParticleModuleRotationRateBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07C9, struct FRawDistributionVector,                                         StartRotationRate);                                        // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleMeshRotationRate");
		return ptr;
	}


};

// Class Engine.ParticleModuleMeshRotationRate_Seeded
// 0x0020 (FullSize[0x00A0] - InheritedSize[0x0080])
// LastOffsetWithSize(0x0080)
#define PADDING_07CA - 0x0000 // Minimum to subtract -> (0000)
class UParticleModuleMeshRotationRate_Seeded : public UParticleModuleMeshRotationRate
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_07CA, struct FParticleRandomSeedInfo,                                        RandomSeedInfo);                                           // 0x0080(0x0020)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleMeshRotationRate_Seeded");
		return ptr;
	}


};

// Class Engine.ParticleModuleMeshRotationRateMultiplyLife
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07CB - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleMeshRotationRateMultiplyLife : public UParticleModuleRotationRateBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07CB, struct FRawDistributionVector,                                         LifeMultiplier);                                           // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleMeshRotationRateMultiplyLife");
		return ptr;
	}


};

// Class Engine.ParticleModuleMeshRotationRateOverLife
// 0x0051 (FullSize[0x0081] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07CC - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleMeshRotationRateOverLife : public UParticleModuleRotationRateBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07CC, struct FRawDistributionVector,                                         RotRate);                                                  // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07CC, unsigned char,                                                         bScaleRotRate);                                            // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleMeshRotationRateOverLife");
		return ptr;
	}


};

// Class Engine.ParticleModuleOrbitBase
// 0x0004 (FullSize[0x0031] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
#define PADDING_07CD - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleOrbitBase : public UParticleModule
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07CD, unsigned char,                                                         bUseEmitterTime);                                          // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleOrbitBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleOrbit
// 0x0113 (FullSize[0x0144] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_07CE - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleOrbit : public UParticleModuleOrbitBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_07CE, TEnumAsByte<EOrbitChainMode>,                                          ChainMode);                                                // 0x0038(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_07CE, struct FRawDistributionVector,                                         OffsetAmount);                                             // 0x0040(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005F PADDING_07CE, struct FOrbitOptions,                                                  OffsetOptions);                                            // 0x0090(0x0004)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0067 PADDING_07CE, struct FRawDistributionVector,                                         RotationAmount);                                           // 0x0098(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B7 PADDING_07CE, struct FOrbitOptions,                                                  RotationOptions);                                          // 0x00E8(0x0004)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BF PADDING_07CE, struct FRawDistributionVector,                                         RotationRateAmount);                                       // 0x00F0(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010F PADDING_07CE, struct FOrbitOptions,                                                  RotationRateOptions);                                      // 0x0140(0x0004)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleOrbit");
		return ptr;
	}


};

// Class Engine.ParticleModuleOrientationBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleOrientationBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleOrientationBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleOrientationAxisLock
// 0x0001 (FullSize[0x0031] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07D0 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleOrientationAxisLock : public UParticleModuleOrientationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07D0, TEnumAsByte<EParticleAxisLock>,                                        LockAxisFlags);                                            // 0x0030(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleOrientationAxisLock");
		return ptr;
	}


};

// Class Engine.ParticleModuleParameterBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleParameterBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleParameterBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleParameterDynamic
// 0x0015 (FullSize[0x0045] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07D2 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleParameterDynamic : public UParticleModuleParameterBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07D2, TArray<struct FEmitterDynamicParameter>,                               DynamicParams);                                            // 0x0030(0x0010)  (Edit, EditFixedSize, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07D2, int,                                                                   UpdateFlags);                                              // 0x0040(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_07D2, unsigned char,                                                         bUsesVelocity);                                            // 0x0044(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleParameterDynamic");
		return ptr;
	}


};

// Class Engine.ParticleModuleParameterDynamic_Seeded
// 0x0023 (FullSize[0x0068] - InheritedSize[0x0045])
// LastOffsetWithSize(0x0045)
#define PADDING_07D3 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleParameterDynamic_Seeded : public UParticleModuleParameterDynamic
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07D3, struct FParticleRandomSeedInfo,                                        RandomSeedInfo);                                           // 0x0048(0x0020)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleParameterDynamic_Seeded");
		return ptr;
	}


};

// Class Engine.ParticleModulePivotOffset
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07D4 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModulePivotOffset : public UParticleModuleLocationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07D4, struct FVector2D,                                                      PivotOffset);                                              // 0x0030(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModulePivotOffset");
		return ptr;
	}


};

// Class Engine.ParticleModuleRequired
// 0x0123 (FullSize[0x0150] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
#define PADDING_07D5 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleRequired : public UParticleModule
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07D5, class UMaterialInterface*,                                             Material);                                                 // 0x0030(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_07D5, struct FVector,                                                        EmitterOrigin);                                            // 0x0038(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_07D5, struct FRotator,                                                       EmitterRotation);                                          // 0x0044(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_07D5, TEnumAsByte<EParticleScreenAlignment>,                                 ScreenAlignment);                                          // 0x0050(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_07D5, float,                                                                 MinFacingCameraBlendDistance);                             // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002B PADDING_07D5, float,                                                                 MaxFacingCameraBlendDistance);                             // 0x0058(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_07D5, unsigned char,                                                         bUseLocalSpace);                                           // 0x005C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_07D5, unsigned char,                                                         bKillOnDeactivate);                                        // 0x005C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_07D5, unsigned char,                                                         bKillOnCompleted);                                         // 0x005C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_07D5, TEnumAsByte<EParticleSortMode>,                                        SortMode);                                                 // 0x0060(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_07D5, unsigned char,                                                         bUseLegacyEmitterTime);                                    // 0x0064(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_07D5, unsigned char,                                                         bRemoveHMDRoll);                                           // 0x0064(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003B PADDING_07D5, float,                                                                 EmitterDuration);                                          // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003F PADDING_07D5, float,                                                                 EmitterDurationLow);                                       // 0x006C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_07D5, unsigned char,                                                         bEmitterDurationUseRange);                                 // 0x0070(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_07D5, unsigned char,                                                         bDurationRecalcEachLoop);                                  // 0x0070(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_07D5, int,                                                                   EmitterLoops);                                             // 0x0074(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004B PADDING_07D5, struct FRawDistributionFloat,                                          SpawnRate);                                                // 0x0078(0x0038)  (ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0083 PADDING_07D5, TEnumAsByte<EParticleBurstMethod>,                                     ParticleBurstMethod);                                      // 0x00B0(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008B PADDING_07D5, TArray<struct FParticleBurst>,                                         BurstList);                                                // 0x00B8(0x0010)  (ExportObject, ZeroConstructor, NoClear, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009B PADDING_07D5, float,                                                                 EmitterDelay);                                             // 0x00C8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009F PADDING_07D5, float,                                                                 EmitterDelayLow);                                          // 0x00CC(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_07D5, unsigned char,                                                         bEmitterDelayUseRange);                                    // 0x00D0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A3 PADDING_07D5, unsigned char,                                                         bDelayFirstLoopOnly);                                      // 0x00D0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A7 PADDING_07D5, TEnumAsByte<EParticleSubUVInterpMethod>,                               InterpolationMethod);                                      // 0x00D4(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AB PADDING_07D5, int,                                                                   SubImages_Horizontal);                                     // 0x00D8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AF PADDING_07D5, int,                                                                   SubImages_Vertical);                                       // 0x00DC(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B3 PADDING_07D5, unsigned char,                                                         bScaleUV);                                                 // 0x00E0(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B7 PADDING_07D5, float,                                                                 RandomImageTime);                                          // 0x00E4(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BB PADDING_07D5, int,                                                                   RandomImageChanges);                                       // 0x00E8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BF PADDING_07D5, unsigned char,                                                         bOverrideSystemMacroUV);                                   // 0x00EC(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C3 PADDING_07D5, struct FVector,                                                        MacroUVPosition);                                          // 0x00F0(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00CF PADDING_07D5, float,                                                                 MacroUVRadius);                                            // 0x00FC(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D3 PADDING_07D5, unsigned char,                                                         bUseMaxDrawCount);                                         // 0x0100(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D7 PADDING_07D5, int,                                                                   MaxDrawCount);                                             // 0x0104(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00DB PADDING_07D5, EParticleUVFlipMode,                                                   UVFlippingMode);                                           // 0x0108(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E3 PADDING_07D5, class UTexture2D*,                                                     CutoutTexture);                                            // 0x0110(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00EB PADDING_07D5, TEnumAsByte<ESubUVBoundingVertexCount>,                                BoundingMode);                                             // 0x0118(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00EC PADDING_07D5, TEnumAsByte<EOpacitySourceMode>,                                       OpacitySourceMode);                                        // 0x0119(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00EF PADDING_07D5, float,                                                                 AlphaThreshold);                                           // 0x011C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F3 PADDING_07D5, TEnumAsByte<EEmitterNormalsMode>,                                      EmitterNormalsMode);                                       // 0x0120(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F7 PADDING_07D5, struct FVector,                                                        NormalsSphereCenter);                                      // 0x0124(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0103 PADDING_07D5, struct FVector,                                                        NormalsCylinderDirection);                                 // 0x0130(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x010F PADDING_07D5, unsigned char,                                                         bOrbitModuleAffectsVelocityAlignment);                     // 0x013C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0113 PADDING_07D5, TArray<struct FName>,                                                  NamedMaterialOverrides);                                   // 0x0140(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleRequired");
		return ptr;
	}


};

// Class Engine.ParticleModuleRotation
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07D6 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleRotation : public UParticleModuleRotationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07D6, struct FRawDistributionFloat,                                          StartRotation);                                            // 0x0030(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleRotation");
		return ptr;
	}


};

// Class Engine.ParticleModuleRotation_Seeded
// 0x0020 (FullSize[0x0088] - InheritedSize[0x0068])
// LastOffsetWithSize(0x0068)
#define PADDING_07D7 - 0x0000 // Minimum to subtract -> (0000)
class UParticleModuleRotation_Seeded : public UParticleModuleRotation
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_07D7, struct FParticleRandomSeedInfo,                                        RandomSeedInfo);                                           // 0x0068(0x0020)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleRotation_Seeded");
		return ptr;
	}


};

// Class Engine.ParticleModuleRotationOverLifetime
// 0x0039 (FullSize[0x0069] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07D8 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleRotationOverLifetime : public UParticleModuleRotationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07D8, struct FRawDistributionFloat,                                          RotationOverLife);                                         // 0x0030(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003B PADDING_07D8, unsigned char,                                                         Scale);                                                    // 0x0068(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleRotationOverLifetime");
		return ptr;
	}


};

// Class Engine.ParticleModuleRotationRate
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07D9 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleRotationRate : public UParticleModuleRotationRateBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07D9, struct FRawDistributionFloat,                                          StartRotationRate);                                        // 0x0030(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleRotationRate");
		return ptr;
	}


};

// Class Engine.ParticleModuleRotationRate_Seeded
// 0x0020 (FullSize[0x0088] - InheritedSize[0x0068])
// LastOffsetWithSize(0x0068)
#define PADDING_07DA - 0x0000 // Minimum to subtract -> (0000)
class UParticleModuleRotationRate_Seeded : public UParticleModuleRotationRate
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_07DA, struct FParticleRandomSeedInfo,                                        RandomSeedInfo);                                           // 0x0068(0x0020)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleRotationRate_Seeded");
		return ptr;
	}


};

// Class Engine.ParticleModuleRotationRateMultiplyLife
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07DB - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleRotationRateMultiplyLife : public UParticleModuleRotationRateBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07DB, struct FRawDistributionFloat,                                          LifeMultiplier);                                           // 0x0030(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleRotationRateMultiplyLife");
		return ptr;
	}


};

// Class Engine.ParticleModuleSizeBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleSizeBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleSizeBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleSize
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07DD - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleSize : public UParticleModuleSizeBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07DD, struct FRawDistributionVector,                                         StartSize);                                                // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleSize");
		return ptr;
	}


};

// Class Engine.ParticleModuleSize_Seeded
// 0x0020 (FullSize[0x00A0] - InheritedSize[0x0080])
// LastOffsetWithSize(0x0080)
#define PADDING_07DE - 0x0000 // Minimum to subtract -> (0000)
class UParticleModuleSize_Seeded : public UParticleModuleSize
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_07DE, struct FParticleRandomSeedInfo,                                        RandomSeedInfo);                                           // 0x0080(0x0020)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleSize_Seeded");
		return ptr;
	}


};

// Class Engine.ParticleModuleSizeMultiplyLife
// 0x0051 (FullSize[0x0081] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07DF - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleSizeMultiplyLife : public UParticleModuleSizeBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07DF, struct FRawDistributionVector,                                         LifeMultiplier);                                           // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07DF, unsigned char,                                                         MultiplyX);                                                // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07DF, unsigned char,                                                         MultiplyY);                                                // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07DF, unsigned char,                                                         MultiplyZ);                                                // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleSizeMultiplyLife");
		return ptr;
	}


};

// Class Engine.ParticleModuleSizeScale
// 0x0051 (FullSize[0x0081] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07E0 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleSizeScale : public UParticleModuleSizeBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07E0, struct FRawDistributionVector,                                         SizeScale);                                                // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07E0, unsigned char,                                                         EnableX);                                                  // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07E0, unsigned char,                                                         EnableY);                                                  // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07E0, unsigned char,                                                         EnableZ);                                                  // 0x0080(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleSizeScale");
		return ptr;
	}


};

// Class Engine.ParticleModuleSizeScaleBySpeed
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07E1 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleSizeScaleBySpeed : public UParticleModuleSizeBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07E1, struct FVector2D,                                                      SpeedScale);                                               // 0x0030(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_07E1, struct FVector2D,                                                      MaxScale);                                                 // 0x0038(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleSizeScaleBySpeed");
		return ptr;
	}


};

// Class Engine.ParticleModuleSourceMovement
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07E2 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleSourceMovement : public UParticleModuleLocationBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07E2, struct FRawDistributionVector,                                         SourceMovementScale);                                      // 0x0030(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleSourceMovement");
		return ptr;
	}


};

// Class Engine.ParticleModuleSpawnBase
// 0x0004 (FullSize[0x0031] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
#define PADDING_07E3 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleSpawnBase : public UParticleModule
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07E3, unsigned char,                                                         bProcessSpawnRate);                                        // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0003 PADDING_07E3, unsigned char,                                                         bProcessBurstList);                                        // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleSpawnBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleSpawn
// 0x00C8 (FullSize[0x00F9] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_07E4 - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleSpawn : public UParticleModuleSpawnBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_07E4, struct FRawDistributionFloat,                                          Rate);                                                     // 0x0038(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003F PADDING_07E4, struct FRawDistributionFloat,                                          RateScale);                                                // 0x0070(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0077 PADDING_07E4, TEnumAsByte<EParticleBurstMethod>,                                     ParticleBurstMethod);                                      // 0x00A8(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007F PADDING_07E4, TArray<struct FParticleBurst>,                                         BurstList);                                                // 0x00B0(0x0010)  (Edit, ExportObject, ZeroConstructor, NoClear, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008F PADDING_07E4, struct FRawDistributionFloat,                                          BurstScale);                                               // 0x00C0(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C7 PADDING_07E4, unsigned char,                                                         bApplyGlobalSpawnRateScale);                               // 0x00F8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleSpawn");
		return ptr;
	}


};

// Class Engine.ParticleModuleSpawnPerUnit
// 0x0054 (FullSize[0x0085] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_07E5 - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleSpawnPerUnit : public UParticleModuleSpawnBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_07E5, float,                                                                 UnitScalar);                                               // 0x0038(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_07E5, struct FRawDistributionFloat,                                          SpawnPerUnit);                                             // 0x0040(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_07E5, unsigned char,                                                         bIgnoreSpawnRateWhenMoving);                               // 0x0078(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004B PADDING_07E5, float,                                                                 MovementTolerance);                                        // 0x007C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004F PADDING_07E5, float,                                                                 MaxFrameDistance);                                         // 0x0080(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07E5, unsigned char,                                                         bIgnoreMovementAlongX);                                    // 0x0084(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07E5, unsigned char,                                                         bIgnoreMovementAlongY);                                    // 0x0084(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07E5, unsigned char,                                                         bIgnoreMovementAlongZ);                                    // 0x0084(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleSpawnPerUnit");
		return ptr;
	}


};

// Class Engine.ParticleModuleSubUVBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleSubUVBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleSubUVBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleSubUV
// 0x0041 (FullSize[0x0071] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07E7 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleSubUV : public UParticleModuleSubUVBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07E7, class USubUVAnimation*,                                                Animation);                                                // 0x0030(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_07E7, struct FRawDistributionFloat,                                          SubImageIndex);                                            // 0x0038(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0043 PADDING_07E7, unsigned char,                                                         bUseRealTime);                                             // 0x0070(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleSubUV");
		return ptr;
	}


};

// Class Engine.ParticleModuleSubUVMovie
// 0x004B (FullSize[0x00BC] - InheritedSize[0x0071])
// LastOffsetWithSize(0x0071)
#define PADDING_07E8 - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleSubUVMovie : public UParticleModuleSubUV
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_07E8, unsigned char,                                                         bUseEmitterTime);                                          // 0x0078(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_07E8, struct FRawDistributionFloat,                                          FrameRate);                                                // 0x0080(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0047 PADDING_07E8, int,                                                                   StartingFrame);                                            // 0x00B8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleSubUVMovie");
		return ptr;
	}


};

// Class Engine.ParticleModuleTrailBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleTrailBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleTrailBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleTrailSource
// 0x0065 (FullSize[0x0095] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07EA - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleTrailSource : public UParticleModuleTrailBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07EA, TEnumAsByte<ETrail2SourceMethod>,                                      SourceMethod);                                             // 0x0030(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_07EA, struct FName,                                                          SourceName);                                               // 0x0034(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07EA, struct FRawDistributionFloat,                                          SourceStrength);                                           // 0x0040(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004B PADDING_07EA, unsigned char,                                                         bLockSourceStength);                                       // 0x0078(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004F PADDING_07EA, int,                                                                   SourceOffsetCount);                                        // 0x007C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0053 PADDING_07EA, TArray<struct FVector>,                                                SourceOffsetDefaults);                                     // 0x0080(0x0010)  (Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0063 PADDING_07EA, TEnumAsByte<EParticleSourceSelectionMethod>,                           SelectionMethod);                                          // 0x0090(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0067 PADDING_07EA, unsigned char,                                                         bInheritRotation);                                         // 0x0094(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleTrailSource");
		return ptr;
	}


};

// Class Engine.ParticleModuleTypeDataBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleTypeDataBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleTypeDataBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleTypeDataAnimTrail
// 0x0014 (FullSize[0x0044] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07EC - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleTypeDataAnimTrail : public UParticleModuleTypeDataBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07EC, unsigned char,                                                         bDeadTrailsOnDeactivate);                                  // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0003 PADDING_07EC, unsigned char,                                                         bEnablePreviousTangentRecalculation);                      // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0003 PADDING_07EC, unsigned char,                                                         bTangentRecalculationEveryFrame);                          // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_07EC, float,                                                                 TilingDistance);                                           // 0x0034(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_07EC, float,                                                                 DistanceTessellationStepSize);                             // 0x0038(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_07EC, float,                                                                 TangentTessellationStepSize);                              // 0x003C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07EC, float,                                                                 WidthTessellationStepSize);                                // 0x0040(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleTypeDataAnimTrail");
		return ptr;
	}


};

// Class Engine.ParticleModuleTypeDataBeam2
// 0x00E1 (FullSize[0x0111] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07ED - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleTypeDataBeam2 : public UParticleModuleTypeDataBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07ED, TEnumAsByte<EBeam2Method>,                                             BeamMethod);                                               // 0x0030(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_07ED, int,                                                                   TextureTile);                                              // 0x0034(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_07ED, float,                                                                 TextureTileDistance);                                      // 0x0038(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_07ED, int,                                                                   Sheets);                                                   // 0x003C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07ED, int,                                                                   MaxBeamCount);                                             // 0x0040(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_07ED, float,                                                                 Speed);                                                    // 0x0044(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_07ED, int,                                                                   InterpolationPoints);                                      // 0x0048(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_07ED, unsigned char,                                                         bAlwaysOn);                                                // 0x004C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_07ED, int,                                                                   UpVectorStepSize);                                         // 0x0050(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_07ED, struct FName,                                                          BranchParentName);                                         // 0x0054(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_07ED, struct FRawDistributionFloat,                                          distance);                                                 // 0x0060(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006B PADDING_07ED, TEnumAsByte<EBeamTaperMethod>,                                         TaperMethod);                                              // 0x0098(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0073 PADDING_07ED, struct FRawDistributionFloat,                                          TaperFactor);                                              // 0x00A0(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AB PADDING_07ED, struct FRawDistributionFloat,                                          TaperScale);                                               // 0x00D8(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E3 PADDING_07ED, unsigned char,                                                         RenderGeometry);                                           // 0x0110(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E3 PADDING_07ED, unsigned char,                                                         RenderDirectLine);                                         // 0x0110(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E3 PADDING_07ED, unsigned char,                                                         RenderLines);                                              // 0x0110(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E3 PADDING_07ED, unsigned char,                                                         RenderTessellation);                                       // 0x0110(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleTypeDataBeam2");
		return ptr;
	}


};

// Class Engine.ParticleModuleTypeDataGpu
// 0x0425 (FullSize[0x0455] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07EE - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleTypeDataGpu : public UParticleModuleTypeDataBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07EE, struct FGPUSpriteEmitterInfo,                                          EmitterInfo);                                              // 0x0030(0x02C0)  (ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02C3 PADDING_07EE, struct FGPUSpriteResourceData,                                         ResourceData);                                             // 0x02F0(0x0160)  (NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0423 PADDING_07EE, float,                                                                 CameraMotionBlurAmount);                                   // 0x0450(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0427 PADDING_07EE, unsigned char,                                                         bClearExistingParticlesOnInit);                            // 0x0454(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleTypeDataGpu");
		return ptr;
	}


};

// Class Engine.ParticleModuleTypeDataMesh
// 0x008D (FullSize[0x00BD] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07EF - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleTypeDataMesh : public UParticleModuleTypeDataBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07EF, class UStaticMesh*,                                                    Mesh);                                                     // 0x0030(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_07EF, bool,                                                                  bUseStaticMeshLODs);                                       // 0x0038(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_07EF, float,                                                                 LODSizeScale);                                             // 0x003C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07EF, unsigned char,                                                         CastShadows);                                              // 0x0040(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07EF, unsigned char,                                                         DoCollisions);                                             // 0x0040(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_07EF, TEnumAsByte<EMeshScreenAlignment>,                                     MeshAlignment);                                            // 0x0044(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_07EF, unsigned char,                                                         bOverrideMaterial);                                        // 0x0048(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_07EF, unsigned char,                                                         bOverrideDefaultMotionBlurSettings);                       // 0x0048(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_07EF, unsigned char,                                                         bEnableMotionBlur);                                        // 0x0048(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_07EF, float,                                                                 Pitch);                                                    // 0x004C(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_07EF, float,                                                                 Roll);                                                     // 0x0050(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_07EF, float,                                                                 Yaw);                                                      // 0x0054(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002B PADDING_07EF, struct FRawDistributionVector,                                         RollPitchYawRange);                                        // 0x0058(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0083 PADDING_07EF, TEnumAsByte<EParticleAxisLock>,                                        AxisLockOption);                                           // 0x00B0(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0087 PADDING_07EF, unsigned char,                                                         bCameraFacing);                                            // 0x00B4(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008B PADDING_07EF, TEnumAsByte<EMeshCameraFacingUpAxis>,                                  CameraFacingUpAxisOption);                                 // 0x00B8(0x0001)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008C PADDING_07EF, TEnumAsByte<EMeshCameraFacingOptions>,                                 CameraFacingOption);                                       // 0x00B9(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008F PADDING_07EF, unsigned char,                                                         bApplyParticleRotationAsSpin);                             // 0x00BC(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008F PADDING_07EF, unsigned char,                                                         bFaceCameraDirectionRatherThanPosition);                   // 0x00BC(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008F PADDING_07EF, unsigned char,                                                         bCollisionsConsiderPartilceSize);                          // 0x00BC(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleTypeDataMesh");
		return ptr;
	}


};

// Class Engine.ParticleModuleTypeDataRibbon
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07F0 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleTypeDataRibbon : public UParticleModuleTypeDataBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07F0, int,                                                                   MaxTessellationBetweenParticles);                          // 0x0030(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_07F0, int,                                                                   SheetsPerTrail);                                           // 0x0034(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_07F0, int,                                                                   MaxTrailCount);                                            // 0x0038(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_07F0, int,                                                                   MaxParticleInTrailCount);                                  // 0x003C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07F0, unsigned char,                                                         bDeadTrailsOnDeactivate);                                  // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07F0, unsigned char,                                                         bDeadTrailsOnSourceLoss);                                  // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07F0, unsigned char,                                                         bClipSourceSegement);                                      // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07F0, unsigned char,                                                         bEnablePreviousTangentRecalculation);                      // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07F0, unsigned char,                                                         bTangentRecalculationEveryFrame);                          // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0013 PADDING_07F0, unsigned char,                                                         bSpawnInitialParticle);                                    // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_07F0, TEnumAsByte<ETrailsRenderAxisOption>,                                  RenderAxis);                                               // 0x0044(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001B PADDING_07F0, float,                                                                 TangentSpawningScalar);                                    // 0x0048(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_07F0, unsigned char,                                                         bRenderGeometry);                                          // 0x004C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_07F0, unsigned char,                                                         bRenderSpawnPoints);                                       // 0x004C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_07F0, unsigned char,                                                         bRenderTangents);                                          // 0x004C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001F PADDING_07F0, unsigned char,                                                         bRenderTessellation);                                      // 0x004C(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_07F0, float,                                                                 TilingDistance);                                           // 0x0050(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0027 PADDING_07F0, float,                                                                 DistanceTessellationStepSize);                             // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002B PADDING_07F0, unsigned char,                                                         bEnableTangentDiffInterpScale);                            // 0x0058(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_07F0, float,                                                                 TangentTessellationScalar);                                // 0x005C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleTypeDataRibbon");
		return ptr;
	}


};

// Class Engine.ParticleModuleVectorFieldBase
// 0x0003 (FullSize[0x0030] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
class UParticleModuleVectorFieldBase : public UParticleModule
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleVectorFieldBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleVectorFieldGlobal
// 0x000C (FullSize[0x003C] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07F2 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleVectorFieldGlobal : public UParticleModuleVectorFieldBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07F2, unsigned char,                                                         bOverrideGlobalVectorFieldTightness);                      // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0007 PADDING_07F2, float,                                                                 GlobalVectorFieldScale);                                   // 0x0034(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_07F2, float,                                                                 GlobalVectorFieldTightness);                               // 0x0038(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleVectorFieldGlobal");
		return ptr;
	}


};

// Class Engine.ParticleModuleVectorFieldLocal
// 0x0035 (FullSize[0x0065] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07F3 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleVectorFieldLocal : public UParticleModuleVectorFieldBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07F3, class UVectorField*,                                                   VectorField);                                              // 0x0030(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_07F3, struct FVector,                                                        RelativeTranslation);                                      // 0x0038(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0017 PADDING_07F3, struct FRotator,                                                       RelativeRotation);                                         // 0x0044(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0023 PADDING_07F3, struct FVector,                                                        RelativeScale3D);                                          // 0x0050(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002F PADDING_07F3, float,                                                                 Intensity);                                                // 0x005C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0033 PADDING_07F3, float,                                                                 Tightness);                                                // 0x0060(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_07F3, unsigned char,                                                         bIgnoreComponentTransform);                                // 0x0064(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_07F3, unsigned char,                                                         bTileX);                                                   // 0x0064(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_07F3, unsigned char,                                                         bTileY);                                                   // 0x0064(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_07F3, unsigned char,                                                         bTileZ);                                                   // 0x0064(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0037 PADDING_07F3, unsigned char,                                                         bUseFixDT);                                                // 0x0064(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleVectorFieldLocal");
		return ptr;
	}


};

// Class Engine.ParticleModuleVectorFieldRotation
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07F4 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleVectorFieldRotation : public UParticleModuleVectorFieldBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07F4, struct FVector,                                                        MinInitialRotation);                                       // 0x0030(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000F PADDING_07F4, struct FVector,                                                        MaxInitialRotation);                                       // 0x003C(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleVectorFieldRotation");
		return ptr;
	}


};

// Class Engine.ParticleModuleVectorFieldRotationRate
// 0x000C (FullSize[0x003C] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07F5 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleVectorFieldRotationRate : public UParticleModuleVectorFieldBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07F5, struct FVector,                                                        RotationRate);                                             // 0x0030(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleVectorFieldRotationRate");
		return ptr;
	}


};

// Class Engine.ParticleModuleVectorFieldScale
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07F6 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleVectorFieldScale : public UParticleModuleVectorFieldBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07F6, class UDistributionFloat*,                                             VectorFieldScale);                                         // 0x0030(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_07F6, struct FRawDistributionFloat,                                          VectorFieldScaleRaw);                                      // 0x0038(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleVectorFieldScale");
		return ptr;
	}


};

// Class Engine.ParticleModuleVectorFieldScaleOverLife
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
// LastOffsetWithSize(0x002D)
#define PADDING_07F7 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleVectorFieldScaleOverLife : public UParticleModuleVectorFieldBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07F7, class UDistributionFloat*,                                             VectorFieldScaleOverLife);                                 // 0x0030(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000B PADDING_07F7, struct FRawDistributionFloat,                                          VectorFieldScaleOverLifeRaw);                              // 0x0038(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleVectorFieldScaleOverLife");
		return ptr;
	}


};

// Class Engine.ParticleModuleVelocityBase
// 0x0004 (FullSize[0x0031] - InheritedSize[0x002D])
// LastOffsetWithSize(0x002D)
#define PADDING_07F8 - 0x0000 // Minimum to subtract -> (0003)
class UParticleModuleVelocityBase : public UParticleModule
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0003 PADDING_07F8, unsigned char,                                                         bInWorldSpace);                                            // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0003 PADDING_07F8, unsigned char,                                                         bApplyOwnerScale);                                         // 0x0030(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleVelocityBase");
		return ptr;
	}


};

// Class Engine.ParticleModuleVelocity
// 0x008F (FullSize[0x00C0] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_07F9 - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleVelocity : public UParticleModuleVelocityBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_07F9, struct FRawDistributionVector,                                         StartVelocity);                                            // 0x0038(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_07F9, struct FRawDistributionFloat,                                          StartVelocityRadial);                                      // 0x0088(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleVelocity");
		return ptr;
	}


};

// Class Engine.ParticleModuleVelocity_Seeded
// 0x0020 (FullSize[0x00E0] - InheritedSize[0x00C0])
// LastOffsetWithSize(0x00C0)
#define PADDING_07FA - 0x0000 // Minimum to subtract -> (0000)
class UParticleModuleVelocity_Seeded : public UParticleModuleVelocity
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_07FA, struct FParticleRandomSeedInfo,                                        RandomSeedInfo);                                           // 0x00C0(0x0020)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleVelocity_Seeded");
		return ptr;
	}


};

// Class Engine.ParticleModuleVelocityCone
// 0x0083 (FullSize[0x00B4] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_07FB - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleVelocityCone : public UParticleModuleVelocityBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_07FB, struct FRawDistributionFloat,                                          Angle);                                                    // 0x0038(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003F PADDING_07FB, struct FRawDistributionFloat,                                          Velocity);                                                 // 0x0070(0x0038)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0077 PADDING_07FB, struct FVector,                                                        Direction);                                                // 0x00A8(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleVelocityCone");
		return ptr;
	}


};

// Class Engine.ParticleModuleVelocityInheritParent
// 0x0057 (FullSize[0x0088] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_07FC - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleVelocityInheritParent : public UParticleModuleVelocityBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_07FC, struct FRawDistributionVector,                                         Scale);                                                    // 0x0038(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleVelocityInheritParent");
		return ptr;
	}


};

// Class Engine.ParticleModuleVelocityOverLifetime
// 0x0058 (FullSize[0x0089] - InheritedSize[0x0031])
// LastOffsetWithSize(0x0031)
#define PADDING_07FD - 0x0000 // Minimum to subtract -> (0007)
class UParticleModuleVelocityOverLifetime : public UParticleModuleVelocityBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_07FD, struct FRawDistributionVector,                                         VelOverLife);                                              // 0x0038(0x0050)  (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0057 PADDING_07FD, unsigned char,                                                         Absolute);                                                 // 0x0088(0x0001) BIT_FIELD (Edit, ExportObject, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleModuleVelocityOverLifetime");
		return ptr;
	}


};

// Class Engine.ParticleSpriteEmitter
// 0x015F (FullSize[0x01C0] - InheritedSize[0x0061])
// LastOffsetWithSize(0x0061)
class UParticleSpriteEmitter : public UParticleEmitter
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleSpriteEmitter");
		return ptr;
	}


};

// Class Engine.FXSystemAsset
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UFXSystemAsset : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.FXSystemAsset");
		return ptr;
	}


};

// Class Engine.ParticleSystem
// 0x0120 (FullSize[0x0148] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0800 - 0x0000 // Minimum to subtract -> (0000)
class UParticleSystem : public UFXSystemAsset
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0800, TEnumAsByte<EParticleSystemUpdateMode>,                                SystemUpdateMode);                                         // 0x0028(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0800, float,                                                                 UpdateTime_FPS);                                           // 0x002C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0800, float,                                                                 UpdateTime_Delta);                                         // 0x0030(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0800, float,                                                                 WarmupTime);                                               // 0x0034(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0800, float,                                                                 WarmupTickRate);                                           // 0x0038(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0800, TArray<class UParticleEmitter*>,                                       Emitters);                                                 // 0x0040(0x0010)  (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0800, class UParticleSystemComponent*,                                       PreviewComponent);                                         // 0x0050(0x0008)  (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0800, class UInterpCurveEdSetup*,                                            CurveEdSetup);                                             // 0x0058(0x0008)  (ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0800, unsigned char,                                                         bOrientZAxisTowardCamera);                                 // 0x0060(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_0800, float,                                                                 LODDistanceCheckTime);                                     // 0x0064(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0800, TEnumAsByte<EParticleSystemLODMethod>,                                 LODMethod);                                                // 0x0068(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0800, TArray<float>,                                                         LODDistances);                                             // 0x0070(0x0010)  (Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0800, unsigned char,                                                         bRegenerateLODDuplicate);                                  // 0x0080(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0800, TArray<struct FParticleSystemLOD>,                                     LODSettings);                                              // 0x0088(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0800, unsigned char,                                                         bUseFixedRelativeBoundingBox);                             // 0x0098(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_0800, struct FBox,                                                           FixedRelativeBoundingBox);                                 // 0x009C(0x001C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_0800, float,                                                                 SecondsBeforeInactive);                                    // 0x00B8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_0800, unsigned char,                                                         bShouldResetPeakCounts);                                   // 0x00BC(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_0800, unsigned char,                                                         bHasPhysics);                                              // 0x00BC(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_0800, unsigned char,                                                         bUseRealtimeThumbnail);                                    // 0x00BC(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_0800, unsigned char,                                                         ThumbnailImageOutOfDate);                                  // 0x00BC(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_0800, float,                                                                 Delay);                                                    // 0x00C0(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009C PADDING_0800, float,                                                                 DelayLow);                                                 // 0x00C4(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0800, unsigned char,                                                         bUseDelayRange);                                           // 0x00C8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0800, unsigned char,                                                         bAllowManagedTicking);                                     // 0x00C8(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_0800, bool,                                                                  bAutoDeactivate);                                          // 0x00CC(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0800, uint32_t,                                                              MinTimeBetweenTicks);                                      // 0x00D0(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_0800, TArray<uint32_t>,                                                      LODBasedMinTimeBetweenTicks);                              // 0x00D8(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_0800, EParticleSystemInsignificanceReaction,                                 InsignificantReaction);                                    // 0x00E8(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C4 PADDING_0800, float,                                                                 InsignificanceDelay);                                      // 0x00EC(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C8 PADDING_0800, EParticleSignificanceLevel,                                            MaxSignificanceLevel);                                     // 0x00F0(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00CC PADDING_0800, uint32_t,                                                              MaxPoolSize);                                              // 0x00F4(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_0800, struct FVector,                                                        MacroUVPosition);                                          // 0x00F8(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00DC PADDING_0800, float,                                                                 MacroUVRadius);                                            // 0x0104(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E0 PADDING_0800, TEnumAsByte<EParticleSystemOcclusionBoundsMethod>,                     OcclusionBoundsMethod);                                    // 0x0108(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E4 PADDING_0800, struct FBox,                                                           CustomOcclusionBounds);                                    // 0x010C(0x001C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_0800, TArray<struct FLODSoloTrack>,                                          SoloTracking);                                             // 0x0128(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0110 PADDING_0800, TArray<struct FNamedEmitterMaterial>,                                  NamedMaterialSlots);                                       // 0x0138(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleSystem");
		return ptr;
	}


	bool ContainsEmitterType(class UClass* TypeData);
};

// Class Engine.FXSystemComponent
// 0x000B (FullSize[0x0410] - InheritedSize[0x0405])
// LastOffsetWithSize(0x0408)
class UFXSystemComponent : public UPrimitiveComponent
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.FXSystemComponent");
		return ptr;
	}


	void SetVectorParameter(const struct FName& ParameterName, const struct FVector& Param);
	void SetFloatParameter(const struct FName& ParameterName, float Param);
	void SetColorParameter(const struct FName& ParameterName, const struct FLinearColor& Param);
	void SetActorParameter(const struct FName& ParameterName, class AActor* Param);
};

// Class Engine.ParticleSystemComponent
// 0x0190 (FullSize[0x05A0] - InheritedSize[0x0410])
// LastOffsetWithSize(0x0408)
#define PADDING_0802 - 0x0000 // Minimum to subtract -> (0000)
class UParticleSystemComponent : public UFXSystemComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0802, class UParticleSystem*,                                                Template);                                                 // 0x0408(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0802, TArray<class UMaterialInterface*>,                                     EmitterMaterials);                                         // 0x0410(0x0010)  (ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0802, TArray<class USkeletalMeshComponent*>,                                 SkelMeshComponents);                                       // 0x0420(0x0010)  (ExportObject, ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0029 PADDING_0802, unsigned char,                                                         bResetOnDetach);                                           // 0x0431(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0029 PADDING_0802, unsigned char,                                                         bUpdateOnDedicatedServer);                                 // 0x0431(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0029 PADDING_0802, unsigned char,                                                         bAllowRecycling);                                          // 0x0431(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0029 PADDING_0802, unsigned char,                                                         bAutoManageAttachment);                                    // 0x0431(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002A PADDING_0802, unsigned char,                                                         bWarmingUp);                                               // 0x0432(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002A PADDING_0802, unsigned char,                                                         bOverrideLODMethod);                                       // 0x0432(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002A PADDING_0802, unsigned char,                                                         bSkipUpdateDynamicDataDuringTick);                         // 0x0432(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0035 PADDING_0802, TEnumAsByte<EParticleSystemLODMethod>,                                 LODMethod);                                                // 0x043D(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0036 PADDING_0802, EParticleSignificanceLevel,                                            RequiredSignificance);                                     // 0x043E(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0802, TArray<struct FParticleSysParam>,                                      InstanceParameters);                                       // 0x0440(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0802, struct FScriptMulticastDelegate,                                       OnParticleSpawn);                                          // 0x0450(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0802, struct FScriptMulticastDelegate,                                       OnParticleBurst);                                          // 0x0460(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0802, struct FScriptMulticastDelegate,                                       OnParticleDeath);                                          // 0x0470(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0802, struct FScriptMulticastDelegate,                                       OnParticleCollide);                                        // 0x0480(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_0802, struct FVector,                                                        OldPosition);                                              // 0x0490(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_0802, struct FVector,                                                        PartSysVelocity);                                          // 0x049C(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0802, float,                                                                 WarmupTime);                                               // 0x04A8(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_0802, float,                                                                 WarmupTickRate);                                           // 0x04AC(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0802, float,                                                                 SecondsBeforeInactive);                                    // 0x04B4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B4 PADDING_0802, float,                                                                 MaxTimeBeforeForceUpdateTransform);                        // 0x04BC(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D8 PADDING_0802, TArray<class UParticleSystemReplay*>,                                  ReplayClips);                                              // 0x04E0(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F0 PADDING_0802, float,                                                                 CustomTimeDilation);                                       // 0x04F8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0148 PADDING_0802, TWeakObjectPtr<class USceneComponent>,                                 AutoAttachParent);                                         // 0x0550(0x0008)  (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0150 PADDING_0802, struct FName,                                                          AutoAttachSocketName);                                     // 0x0558(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0158 PADDING_0802, EAttachmentRule,                                                       AutoAttachLocationRule);                                   // 0x0560(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0159 PADDING_0802, EAttachmentRule,                                                       AutoAttachRotationRule);                                   // 0x0561(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x015A PADDING_0802, EAttachmentRule,                                                       AutoAttachScaleRule);                                      // 0x0562(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0188 PADDING_0802, struct FScriptMulticastDelegate,                                       OnSystemFinished);                                         // 0x0590(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleSystemComponent");
		return ptr;
	}


	void SetTrailSourceData(const struct FName& InFirstSocketName, const struct FName& InSecondSocketName, TEnumAsByte<ETrailWidthMode> InWidthMode, float InWidth);
	void SetTemplate(class UParticleSystem* NewTemplate);
	void SetMaterialParameter(const struct FName& ParameterName, class UMaterialInterface* Param);
	void SetEmitterEnable(const struct FName& EmitterName, bool bNewEnableState);
	void SetBeamTargetTangent(int EmitterIndex, const struct FVector& NewTangentPoint, int TargetIndex);
	void SetBeamTargetStrength(int EmitterIndex, float NewTargetStrength, int TargetIndex);
	void SetBeamTargetPoint(int EmitterIndex, const struct FVector& NewTargetPoint, int TargetIndex);
	void SetBeamSourceTangent(int EmitterIndex, const struct FVector& NewTangentPoint, int SourceIndex);
	void SetBeamSourceStrength(int EmitterIndex, float NewSourceStrength, int SourceIndex);
	void SetBeamSourcePoint(int EmitterIndex, const struct FVector& NewSourcePoint, int SourceIndex);
	void SetBeamEndPoint(int EmitterIndex, const struct FVector& NewEndPoint);
	void SetAutoAttachParams(class USceneComponent* Parent, const struct FName& SocketName, TEnumAsByte<EAttachLocation> LocationType);
	void SetAutoAttachmentParameters(class USceneComponent* Parent, const struct FName& SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule);
	void ReleaseToPool();
	int GetNumActiveParticles();
	class UMaterialInterface* GetNamedMaterial(const struct FName& InName);
	bool GetBeamTargetTangent(int EmitterIndex, int TargetIndex, struct FVector* OutTangentPoint);
	bool GetBeamTargetStrength(int EmitterIndex, int TargetIndex, float* OutTargetStrength);
	bool GetBeamTargetPoint(int EmitterIndex, int TargetIndex, struct FVector* OutTargetPoint);
	bool GetBeamSourceTangent(int EmitterIndex, int SourceIndex, struct FVector* OutTangentPoint);
	bool GetBeamSourceStrength(int EmitterIndex, int SourceIndex, float* OutSourceStrength);
	bool GetBeamSourcePoint(int EmitterIndex, int SourceIndex, struct FVector* OutSourcePoint);
	bool GetBeamEndPoint(int EmitterIndex, struct FVector* OutEndPoint);
	void GenerateParticleEvent(const struct FName& InEventName, float InEmitterTime, const struct FVector& InLocation, const struct FVector& InDirection, const struct FVector& InVelocity);
	void EndTrails();
	class UMaterialInstanceDynamic* CreateNamedDynamicMaterialInstance(const struct FName& InName, class UMaterialInterface* SourceMaterial);
	void BeginTrails(const struct FName& InFirstSocketName, const struct FName& InSecondSocketName, TEnumAsByte<ETrailWidthMode> InWidthMode, float InWidth);
};

// Class Engine.ParticleSystemReplay
// 0x0004 (FullSize[0x002C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0803 - 0x0000 // Minimum to subtract -> (0000)
class UParticleSystemReplay : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0803, int,                                                                   ClipIDNumber);                                             // 0x0028(0x0004)  (Edit, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ParticleSystemReplay");
		return ptr;
	}


};

// Class Engine.PathFollowingAgentInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UPathFollowingAgentInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PathFollowingAgentInterface");
		return ptr;
	}


};

// Class Engine.PawnNoiseEmitterComponent
// 0x0034 (FullSize[0x00FC] - InheritedSize[0x00C8])
// LastOffsetWithSize(0x00C8)
#define PADDING_0805 - 0x0000 // Minimum to subtract -> (0010)
class UPawnNoiseEmitterComponent : public UActorComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0805, unsigned char,                                                         bAIPerceptionSystemCompatibilityMode);                     // 0x00D8(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0805, struct FVector,                                                        LastRemoteNoisePosition);                                  // 0x00DC(0x000C)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0805, float,                                                                 NoiseLifetime);                                            // 0x00E8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0805, float,                                                                 LastRemoteNoiseVolume);                                    // 0x00EC(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0805, float,                                                                 LastRemoteNoiseTime);                                      // 0x00F0(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x002C PADDING_0805, float,                                                                 LastLocalNoiseVolume);                                     // 0x00F4(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0805, float,                                                                 LastLocalNoiseTime);                                       // 0x00F8(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PawnNoiseEmitterComponent");
		return ptr;
	}


	void MakeNoise(class AActor* NoiseMaker, float Loudness, const struct FVector& NoiseLocation);
};

// Class Engine.PhysicalAnimationComponent
// 0x0020 (FullSize[0x00E8] - InheritedSize[0x00C8])
// LastOffsetWithSize(0x00C8)
#define PADDING_0806 - 0x0000 // Minimum to subtract -> (0010)
class UPhysicalAnimationComponent : public UActorComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0806, float,                                                                 StrengthMultiplyer);                                       // 0x00D8(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0806, class USkeletalMeshComponent*,                                         SkeletalMeshComponent);                                    // 0x00E0(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PhysicalAnimationComponent");
		return ptr;
	}


	void SetStrengthMultiplyer(float InStrengthMultiplyer);
	void SetSkeletalMeshComponent(class USkeletalMeshComponent* InSkeletalMeshComponent);
	struct FTransform GetBodyTargetTransform(const struct FName& BodyName);
	void ApplyPhysicalAnimationSettingsBelow(const struct FName& BodyName, const struct FPhysicalAnimationData& PhysicalAnimationData, bool bIncludeSelf);
	void ApplyPhysicalAnimationSettings(const struct FName& BodyName, const struct FPhysicalAnimationData& PhysicalAnimationData);
	void ApplyPhysicalAnimationProfileBelow(const struct FName& BodyName, const struct FName& ProfileName, bool bIncludeSelf, bool bClearNotFound);
};

// Class Engine.PhysicalMaterialPropertyBase
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UPhysicalMaterialPropertyBase : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PhysicalMaterialPropertyBase");
		return ptr;
	}


};

// Class Engine.PhysicsAsset
// 0x00F8 (FullSize[0x0120] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0808 - 0x0000 // Minimum to subtract -> (0008)
class UPhysicsAsset : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0808, TArray<int>,                                                           BoundsBodies);                                             // 0x0030(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0808, TArray<class USkeletalBodySetup*>,                                     SkeletalBodySetups);                                       // 0x0040(0x0010)  (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0808, TArray<class UPhysicsConstraintTemplate*>,                             ConstraintSetup);                                          // 0x0050(0x0010)  (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0808, unsigned char,                                                         bNotForDedicatedServer);                                   // 0x0060(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E0 PADDING_0808, class UThumbnailInfo*,                                                 ThumbnailInfo);                                            // 0x0108(0x0008)  (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E8 PADDING_0808, TArray<class UBodySetup*>,                                             BodySetup);                                                // 0x0110(0x0010)  (ExportObject, ZeroConstructor, Deprecated, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PhysicsAsset");
		return ptr;
	}


};

// Class Engine.SkeletalBodySetup
// 0x0024 (FullSize[0x0258] - InheritedSize[0x0234])
// LastOffsetWithSize(0x0234)
#define PADDING_0809 - 0x0000 // Minimum to subtract -> (000C)
class USkeletalBodySetup : public UBodySetup
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x000C PADDING_0809, bool,                                                                  bSkipScaleFromAnimation);                                  // 0x0240(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0809, TArray<struct FPhysicalAnimationProfile>,                              PhysicalAnimationData);                                    // 0x0248(0x0010)  (ZeroConstructor, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SkeletalBodySetup");
		return ptr;
	}


};

// Class Engine.PhysicsCollisionHandler
// 0x0014 (FullSize[0x003C] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_080A - 0x0000 // Minimum to subtract -> (0000)
class UPhysicsCollisionHandler : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_080A, float,                                                                 ImpactThreshold);                                          // 0x0028(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_080A, float,                                                                 ImpactReFireDelay);                                        // 0x002C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_080A, class USoundBase*,                                                     DefaultImpactSound);                                       // 0x0030(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_080A, float,                                                                 LastImpactSoundTime);                                      // 0x0038(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PhysicsCollisionHandler");
		return ptr;
	}


};

// Class Engine.RigidBodyBase
// 0x0010 (FullSize[0x0248] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
class ARigidBodyBase : public AActor
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.RigidBodyBase");
		return ptr;
	}


};

// Class Engine.PhysicsConstraintActor
// 0x0019 (FullSize[0x0261] - InheritedSize[0x0248])
// LastOffsetWithSize(0x0238)
#define PADDING_080C - 0x0000 // Minimum to subtract -> (0010)
class APhysicsConstraintActor : public ARigidBodyBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_080C, class UPhysicsConstraintComponent*,                                    ConstraintComp);                                           // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0018 PADDING_080C, class AActor*,                                                         ConstraintActor1);                                         // 0x0250(0x0008)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_080C, class AActor*,                                                         ConstraintActor2);                                         // 0x0258(0x0008)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_080C, unsigned char,                                                         bDisableCollision);                                        // 0x0260(0x0001) BIT_FIELD (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PhysicsConstraintActor");
		return ptr;
	}


};

// Class Engine.PhysicsConstraintComponent
// 0x0298 (FullSize[0x0418] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_080D - 0x0000 // Minimum to subtract -> (0089)
class UPhysicsConstraintComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0089 PADDING_080D, class AActor*,                                                         ConstraintActor1);                                         // 0x0218(0x0008)  (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0091 PADDING_080D, struct FConstrainComponentPropName,                                    ComponentName1);                                           // 0x0220(0x0008)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0099 PADDING_080D, class AActor*,                                                         ConstraintActor2);                                         // 0x0228(0x0008)  (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A1 PADDING_080D, struct FConstrainComponentPropName,                                    ComponentName2);                                           // 0x0230(0x0008)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B9 PADDING_080D, class UPhysicsConstraintTemplate*,                                     ConstraintSetup);                                          // 0x0248(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C1 PADDING_080D, struct FScriptMulticastDelegate,                                       OnConstraintBroken);                                       // 0x0250(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D1 PADDING_080D, struct FConstraintInstance,                                            ConstraintInstance);                                       // 0x0260(0x01B8)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PhysicsConstraintComponent");
		return ptr;
	}


	void SetOrientationDriveTwistAndSwing(bool bEnableTwistDrive, bool bEnableSwingDrive);
	void SetOrientationDriveSLERP(bool bEnableSLERP);
	void SetLinearZLimit(TEnumAsByte<ELinearConstraintMotion> ConstraintType, float LimitSize);
	void SetLinearYLimit(TEnumAsByte<ELinearConstraintMotion> ConstraintType, float LimitSize);
	void SetLinearXLimit(TEnumAsByte<ELinearConstraintMotion> ConstraintType, float LimitSize);
	void SetLinearVelocityTarget(const struct FVector& InVelTarget);
	void SetLinearVelocityDrive(bool bEnableDriveX, bool bEnableDriveY, bool bEnableDriveZ);
	void SetLinearPositionTarget(const struct FVector& InPosTarget);
	void SetLinearPositionDrive(bool bEnableDriveX, bool bEnableDriveY, bool bEnableDriveZ);
	void SetLinearDriveParams(float PositionStrength, float VelocityStrength, float InForceLimit);
	void SetLinearBreakable(bool bLinearBreakable, float LinearBreakThreshold);
	void SetDisableCollision(bool bDisableCollision);
	void SetConstraintReferencePosition(TEnumAsByte<EConstraintFrame> Frame, const struct FVector& RefPosition);
	void SetConstraintReferenceOrientation(TEnumAsByte<EConstraintFrame> Frame, const struct FVector& PriAxis, const struct FVector& SecAxis);
	void SetConstraintReferenceFrame(TEnumAsByte<EConstraintFrame> Frame, const struct FTransform& RefFrame);
	void SetConstrainedComponents(class UPrimitiveComponent* Component1, const struct FName& BoneName1, class UPrimitiveComponent* Component2, const struct FName& BoneName2);
	void SetAngularVelocityTarget(const struct FVector& InVelTarget);
	void SetAngularVelocityDriveTwistAndSwing(bool bEnableTwistDrive, bool bEnableSwingDrive);
	void SetAngularVelocityDriveSLERP(bool bEnableSLERP);
	void SetAngularVelocityDrive(bool bEnableSwingDrive, bool bEnableTwistDrive);
	void SetAngularTwistLimit(TEnumAsByte<EAngularConstraintMotion> ConstraintType, float TwistLimitAngle);
	void SetAngularSwing2Limit(TEnumAsByte<EAngularConstraintMotion> MotionType, float Swing2LimitAngle);
	void SetAngularSwing1Limit(TEnumAsByte<EAngularConstraintMotion> MotionType, float Swing1LimitAngle);
	void SetAngularOrientationTarget(const struct FRotator& InPosTarget);
	void SetAngularOrientationDrive(bool bEnableSwingDrive, bool bEnableTwistDrive);
	void SetAngularDriveParams(float PositionStrength, float VelocityStrength, float InForceLimit);
	void SetAngularDriveMode(TEnumAsByte<EAngularDriveMode> DriveMode);
	void SetAngularBreakable(bool bAngularBreakable, float AngularBreakThreshold);
	bool IsBroken();
	float GetCurrentTwist();
	float GetCurrentSwing2();
	float GetCurrentSwing1();
	void GetConstraintForce(struct FVector* OutLinearForce, struct FVector* OutAngularForce);
	void BreakConstraint();
};

// Class Engine.PhysicsConstraintTemplate
// 0x02CC (FullSize[0x02F4] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_080E - 0x0000 // Minimum to subtract -> (0000)
class UPhysicsConstraintTemplate : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_080E, struct FConstraintInstance,                                            DefaultInstance);                                          // 0x0028(0x01B8)  (Edit, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01B8 PADDING_080E, TArray<struct FPhysicsConstraintProfileHandle>,                        ProfileHandles);                                           // 0x01E0(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x01C8 PADDING_080E, struct FConstraintProfileProperties,                                   DefaultProfile);                                           // 0x01F0(0x0104)  (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PhysicsConstraintTemplate");
		return ptr;
	}


};

// Class Engine.PhysicsHandleComponent
// 0x009C (FullSize[0x0164] - InheritedSize[0x00C8])
// LastOffsetWithSize(0x00C8)
#define PADDING_080F - 0x0000 // Minimum to subtract -> (0010)
class UPhysicsHandleComponent : public UActorComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_080F, class UPrimitiveComponent*,                                            GrabbedComponent);                                         // 0x00D8(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_080F, unsigned char,                                                         bSoftAngularConstraint);                                   // 0x00E8(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_080F, unsigned char,                                                         bSoftLinearConstraint);                                    // 0x00E8(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_080F, unsigned char,                                                         bInterpolateTarget);                                       // 0x00E8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_080F, float,                                                                 LinearDamping);                                            // 0x00EC(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_080F, float,                                                                 LinearStiffness);                                          // 0x00F0(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_080F, float,                                                                 AngularDamping);                                           // 0x00F4(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_080F, float,                                                                 AngularStiffness);                                         // 0x00F8(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_080F, float,                                                                 InterpolationSpeed);                                       // 0x0160(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PhysicsHandleComponent");
		return ptr;
	}


	void SetTargetRotation(const struct FRotator& NewRotation);
	void SetTargetLocationAndRotation(const struct FVector& NewLocation, const struct FRotator& NewRotation);
	void SetTargetLocation(const struct FVector& NewLocation);
	void SetLinearStiffness(float NewLinearStiffness);
	void SetLinearDamping(float NewLinearDamping);
	void SetInterpolationSpeed(float NewInterpolationSpeed);
	void SetAngularStiffness(float NewAngularStiffness);
	void SetAngularDamping(float NewAngularDamping);
	void ReleaseComponent();
	void GrabComponentAtLocationWithRotation(class UPrimitiveComponent* Component, const struct FName& InBoneName, const struct FVector& Location, const struct FRotator& Rotation);
	void GrabComponentAtLocation(class UPrimitiveComponent* Component, const struct FName& InBoneName, const struct FVector& GrabLocation);
	void GrabComponent(class UPrimitiveComponent* Component, const struct FName& InBoneName, const struct FVector& GrabLocation, bool bConstrainRotation);
	void GetTargetLocationAndRotation(struct FVector* TargetLocation, struct FRotator* TargetRotation);
	class UPrimitiveComponent* GetGrabbedComponent();
};

// Class Engine.PhysicsSettings
// 0x010B (FullSize[0x0133] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0810 - 0x0000 // Minimum to subtract -> (0010)
class UPhysicsSettings : public UDeveloperSettings
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0810, float,                                                                 DefaultGravityZ);                                          // 0x0038(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0810, float,                                                                 DefaultTerminalVelocity);                                  // 0x003C(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0810, float,                                                                 DefaultFluidFriction);                                     // 0x0040(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0810, int,                                                                   SimulateScratchMemorySize);                                // 0x0044(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0810, int,                                                                   RagdollAggregateThreshold);                                // 0x0048(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0810, float,                                                                 TriangleMeshTriangleMinAreaThreshold);                     // 0x004C(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0810, bool,                                                                  bEnableShapeSharing);                                      // 0x0050(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0029 PADDING_0810, bool,                                                                  bEnablePCM);                                               // 0x0051(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002A PADDING_0810, bool,                                                                  bEnableStabilization);                                     // 0x0052(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002B PADDING_0810, bool,                                                                  bWarnMissingLocks);                                        // 0x0053(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0810, bool,                                                                  bEnable2DPhysics);                                         // 0x0054(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0810, struct FRigidBodyErrorCorrection,                                      PhysicErrorCorrection);                                    // 0x0058(0x0034)  (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0064 PADDING_0810, TEnumAsByte<ESettingsLockedAxis>,                                      LockedAxis);                                               // 0x008C(0x0001)  (ZeroConstructor, Config, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0065 PADDING_0810, TEnumAsByte<ESettingsDOF>,                                             DefaultDegreesOfFreedom);                                  // 0x008D(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0810, float,                                                                 BounceThresholdVelocity);                                  // 0x0090(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_0810, TEnumAsByte<EFrictionCombineMode>,                                     FrictionCombineMode);                                      // 0x0094(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006D PADDING_0810, TEnumAsByte<EFrictionCombineMode>,                                     RestitutionCombineMode);                                   // 0x0095(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0810, float,                                                                 MaxAngularVelocity);                                       // 0x0098(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_0810, float,                                                                 MaxDepenetrationVelocity);                                 // 0x009C(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0810, float,                                                                 ContactOffsetMultiplier);                                  // 0x00A0(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007C PADDING_0810, float,                                                                 MinContactOffset);                                         // 0x00A4(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0810, float,                                                                 MaxContactOffset);                                         // 0x00A8(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0084 PADDING_0810, bool,                                                                  bSimulateSkeletalMeshOnDedicatedServer);                   // 0x00AC(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0085 PADDING_0810, TEnumAsByte<ECollisionTraceFlag>,                                      DefaultShapeComplexity);                                   // 0x00AD(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0086 PADDING_0810, bool,                                                                  bDefaultHasComplexCollision);                              // 0x00AE(0x0001)  (ZeroConstructor, Config, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0087 PADDING_0810, bool,                                                                  bSuppressFaceRemapTable);                                  // 0x00AF(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_0810, bool,                                                                  bSupportUVFromHitResults);                                 // 0x00B0(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0089 PADDING_0810, bool,                                                                  bDisableActiveActors);                                     // 0x00B1(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008A PADDING_0810, bool,                                                                  bDisableKinematicStaticPairs);                             // 0x00B2(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008B PADDING_0810, bool,                                                                  bDisableKinematicKinematicPairs);                          // 0x00B3(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008C PADDING_0810, bool,                                                                  bDisableCCD);                                              // 0x00B4(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008D PADDING_0810, bool,                                                                  bEnableEnhancedDeterminism);                               // 0x00B5(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_0810, float,                                                                 AnimPhysicsMinDeltaTime);                                  // 0x00B8(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_0810, bool,                                                                  bSimulateAnimPhysicsAfterReset);                           // 0x00BC(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_0810, float,                                                                 MaxPhysicsDeltaTime);                                      // 0x00C0(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009C PADDING_0810, bool,                                                                  bSubstepping);                                             // 0x00C4(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009D PADDING_0810, bool,                                                                  bSubsteppingAsync);                                        // 0x00C5(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0810, float,                                                                 MaxSubstepDeltaTime);                                      // 0x00C8(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_0810, int,                                                                   MaxSubsteps);                                              // 0x00CC(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0810, float,                                                                 SyncSceneSmoothingFactor);                                 // 0x00D0(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0810, float,                                                                 InitialAverageFrameRate);                                  // 0x00D4(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_0810, int,                                                                   PhysXTreeRebuildRate);                                     // 0x00D8(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_0810, TArray<struct FPhysicalSurfaceName>,                                   PhysicalSurfaces);                                         // 0x00E0(0x0010)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C8 PADDING_0810, struct FBroadphaseSettings,                                            DefaultBroadphaseSettings);                                // 0x00F0(0x0040)  (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0108 PADDING_0810, struct FChaosPhysicsSettings,                                          ChaosSettings);                                            // 0x0130(0x0003)  (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PhysicsSettings");
		return ptr;
	}


};

// Class Engine.PhysicsSpringComponent
// 0x00B0 (FullSize[0x0230] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_0811 - 0x0000 // Minimum to subtract -> (008D)
class UPhysicsSpringComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x008D PADDING_0811, float,                                                                 SpringDamping);                                            // 0x021C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0091 PADDING_0811, float,                                                                 SpringLengthAtRest);                                       // 0x0220(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0095 PADDING_0811, float,                                                                 SpringRadius);                                             // 0x0224(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0099 PADDING_0811, TEnumAsByte<ECollisionChannel>,                                        SpringChannel);                                            // 0x0228(0x0001)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009A PADDING_0811, bool,                                                                  bIgnoreSelf);                                              // 0x0229(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009D PADDING_0811, float,                                                                 SpringCompression);                                        // 0x022C(0x0004)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PhysicsSpringComponent");
		return ptr;
	}


	struct FVector GetSpringRestingPoint();
	struct FVector GetSpringDirection();
	struct FVector GetSpringCurrentEndPoint();
	float GetNormalizedCompressionScalar();
};

// Class Engine.PhysicsThruster
// 0x0008 (FullSize[0x0250] - InheritedSize[0x0248])
// LastOffsetWithSize(0x0238)
#define PADDING_0812 - 0x0000 // Minimum to subtract -> (0010)
class APhysicsThruster : public ARigidBodyBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0812, class UPhysicsThrusterComponent*,                                      ThrusterComponent);                                        // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PhysicsThruster");
		return ptr;
	}


};

// Class Engine.PhysicsThrusterComponent
// 0x00A0 (FullSize[0x0220] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
class UPhysicsThrusterComponent : public USceneComponent
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PhysicsThrusterComponent");
		return ptr;
	}


};

// Class Engine.SceneCapture
// 0x0020 (FullSize[0x0258] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0814 - 0x0000 // Minimum to subtract -> (0010)
class ASceneCapture : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0814, class UStaticMeshComponent*,                                           MeshComp);                                                 // 0x0248(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0814, class USceneComponent*,                                                SceneComponent);                                           // 0x0250(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SceneCapture");
		return ptr;
	}


};

// Class Engine.PlanarReflection
// 0x0009 (FullSize[0x0261] - InheritedSize[0x0258])
// LastOffsetWithSize(0x0258)
#define PADDING_0815 - 0x0000 // Minimum to subtract -> (0000)
class APlanarReflection : public ASceneCapture
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0815, class UPlanarReflectionComponent*,                                     PlanarReflectionComponent);                                // 0x0258(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0815, bool,                                                                  bShowPreviewPlane);                                        // 0x0260(0x0001)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PlanarReflection");
		return ptr;
	}


	void OnInterpToggle(bool bEnable);
};

// Class Engine.SceneCaptureComponent
// 0x0120 (FullSize[0x02A0] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_0816 - 0x0000 // Minimum to subtract -> (0091)
class USceneCaptureComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0091 PADDING_0816, TArray<TWeakObjectPtr<class UPrimitiveComponent>>,                     HiddenComponents);                                         // 0x0220(0x0010)  (ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A1 PADDING_0816, TArray<class AActor*>,                                                 HiddenActors);                                             // 0x0230(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B1 PADDING_0816, TArray<TWeakObjectPtr<class UPrimitiveComponent>>,                     ShowOnlyComponents);                                       // 0x0240(0x0010)  (ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C1 PADDING_0816, TArray<class AActor*>,                                                 ShowOnlyActors);                                           // 0x0250(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D1 PADDING_0816, bool,                                                                  bCaptureEveryFrame);                                       // 0x0260(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D2 PADDING_0816, bool,                                                                  bCaptureOnMovement);                                       // 0x0261(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D3 PADDING_0816, bool,                                                                  bAlwaysPersistRenderingState);                             // 0x0262(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D5 PADDING_0816, float,                                                                 LODDistanceFactor);                                        // 0x0264(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D9 PADDING_0816, float,                                                                 MaxViewDistanceOverride);                                  // 0x0268(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00DD PADDING_0816, int,                                                                   CaptureSortPriority);                                      // 0x026C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E1 PADDING_0816, TArray<struct FEngineShowFlagsSetting>,                                ShowFlagSettings);                                         // 0x0270(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, Interp, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0101 PADDING_0816, struct FString,                                                        ProfilingEventName);                                       // 0x0290(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, Interp, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SceneCaptureComponent");
		return ptr;
	}


	void ShowOnlyComponent(class UPrimitiveComponent* InComponent);
	void ShowOnlyActorComponents(class AActor* InActor);
	void SetCaptureSortPriority(int NewCaptureSortPriority);
	void RemoveShowOnlyComponent(class UPrimitiveComponent* InComponent);
	void RemoveShowOnlyActorComponents(class AActor* InActor);
	void HideComponent(class UPrimitiveComponent* InComponent);
	void HideActorComponents(class AActor* InActor);
	void ClearShowOnlyComponents();
	void ClearHiddenComponents();
};

// Class Engine.PlanarReflectionComponent
// 0x0046 (FullSize[0x02E6] - InheritedSize[0x02A0])
// LastOffsetWithSize(0x02A0)
#define PADDING_0817 - 0x0000 // Minimum to subtract -> (0010)
class UPlanarReflectionComponent : public USceneCaptureComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0817, class UBoxComponent*,                                                  PreviewBox);                                               // 0x02B0(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0817, float,                                                                 NormalDistortionStrength);                                 // 0x02B8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0817, float,                                                                 PrefilterRoughness);                                       // 0x02BC(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0817, float,                                                                 PrefilterRoughnessDistance);                               // 0x02C0(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0817, int,                                                                   ScreenPercentage);                                         // 0x02C4(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0817, float,                                                                 ExtraFOV);                                                 // 0x02C8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0817, float,                                                                 DistanceFromPlaneFadeStart);                               // 0x02CC(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0817, float,                                                                 DistanceFromPlaneFadeEnd);                                 // 0x02D0(0x0004)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0817, float,                                                                 DistanceFromPlaneFadeoutStart);                            // 0x02D4(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0817, float,                                                                 DistanceFromPlaneFadeoutEnd);                              // 0x02D8(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_0817, float,                                                                 AngleFromPlaneFadeStart);                                  // 0x02DC(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0817, float,                                                                 AngleFromPlaneFadeEnd);                                    // 0x02E0(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0817, bool,                                                                  bShowPreviewPlane);                                        // 0x02E4(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0045 PADDING_0817, bool,                                                                  bRenderSceneTwoSided);                                     // 0x02E5(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PlanarReflectionComponent");
		return ptr;
	}


};

// Class Engine.PlaneReflectionCapture
// 0x0000 (FullSize[0x0250] - InheritedSize[0x0250])
// LastOffsetWithSize(0x0250)
class APlaneReflectionCapture : public AReflectionCapture
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PlaneReflectionCapture");
		return ptr;
	}


};

// Class Engine.PlaneReflectionCaptureComponent
// 0x0054 (FullSize[0x02A8] - InheritedSize[0x0254])
// LastOffsetWithSize(0x0254)
#define PADDING_0819 - 0x0000 // Minimum to subtract -> (003C)
class UPlaneReflectionCaptureComponent : public UReflectionCaptureComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x003C PADDING_0819, float,                                                                 InfluenceRadiusScale);                                     // 0x0290(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0819, class UDrawSphereComponent*,                                           PreviewInfluenceRadius);                                   // 0x0298(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004C PADDING_0819, class UBoxComponent*,                                                  PreviewCaptureBox);                                        // 0x02A0(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PlaneReflectionCaptureComponent");
		return ptr;
	}


};

// Class Engine.PlatformEventsComponent
// 0x0030 (FullSize[0x00F8] - InheritedSize[0x00C8])
// LastOffsetWithSize(0x00C8)
#define PADDING_081A - 0x0000 // Minimum to subtract -> (0010)
class UPlatformEventsComponent : public UActorComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_081A, struct FScriptMulticastDelegate,                                       PlatformChangedToLaptopModeDelegate);                      // 0x00D8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_081A, struct FScriptMulticastDelegate,                                       PlatformChangedToTabletModeDelegate);                      // 0x00E8(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PlatformEventsComponent");
		return ptr;
	}


	bool SupportsConvertibleLaptops();
	void PlatformEventDelegate__DelegateSignature();
	bool IsInTabletMode();
	bool IsInLaptopMode();
};

// Class Engine.PlatformInterfaceWebResponse
// 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_081B - 0x0000 // Minimum to subtract -> (0000)
class UPlatformInterfaceWebResponse : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_081B, struct FString,                                                        OriginalURL);                                              // 0x0028(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_081B, int,                                                                   ResponseCode);                                             // 0x0038(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_081B, int,                                                                   Tag);                                                      // 0x003C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_081B, struct FString,                                                        StringResponse);                                           // 0x0040(0x0010)  (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_081B, TArray<unsigned char>,                                                 BinaryResponse);                                           // 0x0050(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PlatformInterfaceWebResponse");
		return ptr;
	}


	int GetNumHeaders();
	struct FString GetHeaderValue(const struct FString& HeaderName);
	void GetHeader(int HeaderIndex, struct FString* Header, struct FString* Value);
};

// Class Engine.PlayerInput
// 0x0148 (FullSize[0x0170] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_081C - 0x0000 // Minimum to subtract -> (00F8)
class UPlayerInput : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x00F8 PADDING_081C, TArray<struct FKeyBind>,                                               DebugExecBindings);                                        // 0x0120(0x0010)  (ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0138 PADDING_081C, TArray<struct FName>,                                                  InvertedAxis);                                             // 0x0160(0x0010)  (ZeroConstructor, Config, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PlayerInput");
		return ptr;
	}


	void SetMouseSensitivity(float Sensitivity);
	void SetBind(const struct FName& BindName, const struct FString& Command);
	void InvertAxisKey(const struct FKey& AxisKey);
	void InvertAxis(const struct FName& AxisName);
	void ClearSmoothing();
};

// Class Engine.PlayerStartPIE
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
// LastOffsetWithSize(0x0278)
class APlayerStartPIE : public APlayerStart
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PlayerStartPIE");
		return ptr;
	}


};

// Class Engine.PluginCommandlet
// 0x0007 (FullSize[0x0080] - InheritedSize[0x0079])
// LastOffsetWithSize(0x0079)
class UPluginCommandlet : public UCommandlet
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PluginCommandlet");
		return ptr;
	}


};

// Class Engine.PointLight
// 0x000F (FullSize[0x0260] - InheritedSize[0x0251])
// LastOffsetWithSize(0x0251)
#define PADDING_081F - 0x0000 // Minimum to subtract -> (0007)
class APointLight : public ALight
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_081F, class UPointLightComponent*,                                           PointLightComponent);                                      // 0x0258(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PointLight");
		return ptr;
	}


	void SetRadius(float NewRadius);
	void SetLightFalloffExponent(float NewLightFalloffExponent);
};

// Class Engine.PointLightComponent
// 0x0014 (FullSize[0x0384] - InheritedSize[0x0370])
// LastOffsetWithSize(0x0370)
#define PADDING_0820 - 0x0000 // Minimum to subtract -> (0000)
class UPointLightComponent : public ULocalLightComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0820, unsigned char,                                                         bUseInverseSquaredFalloff);                                // 0x0370(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0820, float,                                                                 LightFalloffExponent);                                     // 0x0374(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0820, float,                                                                 SourceRadius);                                             // 0x0378(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0820, float,                                                                 SoftSourceRadius);                                         // 0x037C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0820, float,                                                                 SourceLength);                                             // 0x0380(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PointLightComponent");
		return ptr;
	}


	void SetSourceRadius(float bNewValue);
	void SetSourceLength(float NewValue);
	void SetSoftSourceRadius(float bNewValue);
	void SetLightFalloffExponent(float NewLightFalloffExponent);
};

// Class Engine.Polys
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UPolys : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Polys");
		return ptr;
	}


};

// Class Engine.PoseableMeshComponent
// 0x0024 (FullSize[0x05F0] - InheritedSize[0x05CC])
// LastOffsetWithSize(0x05CC)
class UPoseableMeshComponent : public USkinnedMeshComponent
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PoseableMeshComponent");
		return ptr;
	}


	void SetBoneTransformByName(const struct FName& BoneName, const struct FTransform& InTransform, TEnumAsByte<EBoneSpaces> BoneSpace);
	void SetBoneScaleByName(const struct FName& BoneName, const struct FVector& InScale3D, TEnumAsByte<EBoneSpaces> BoneSpace);
	void SetBoneRotationByName(const struct FName& BoneName, const struct FRotator& InRotation, TEnumAsByte<EBoneSpaces> BoneSpace);
	void SetBoneLocationByName(const struct FName& BoneName, const struct FVector& InLocation, TEnumAsByte<EBoneSpaces> BoneSpace);
	void ResetBoneTransformByName(const struct FName& BoneName);
	struct FTransform GetBoneTransformByName(const struct FName& BoneName, TEnumAsByte<EBoneSpaces> BoneSpace);
	struct FVector GetBoneScaleByName(const struct FName& BoneName, TEnumAsByte<EBoneSpaces> BoneSpace);
	struct FRotator GetBoneRotationByName(const struct FName& BoneName, TEnumAsByte<EBoneSpaces> BoneSpace);
	struct FVector GetBoneLocationByName(const struct FName& BoneName, TEnumAsByte<EBoneSpaces> BoneSpace);
	void CopyPoseFromSkeletalComponent(class USkeletalMeshComponent* InComponentToCopy);
};

// Class Engine.PoseAsset
// 0x00A0 (FullSize[0x0120] - InheritedSize[0x0080])
// LastOffsetWithSize(0x0080)
#define PADDING_0823 - 0x0000 // Minimum to subtract -> (0000)
class UPoseAsset : public UAnimationAsset
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0823, struct FPoseDataContainer,                                             PoseContainer);                                            // 0x0080(0x0090)  (NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0090 PADDING_0823, bool,                                                                  bAdditivePose);                                            // 0x0110(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0094 PADDING_0823, int,                                                                   BasePoseIndex);                                            // 0x0114(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0098 PADDING_0823, struct FName,                                                          RetargetSource);                                           // 0x0118(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PoseAsset");
		return ptr;
	}


};

// Class Engine.PoseWatch
// 0x000C (FullSize[0x0034] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0824 - 0x0000 // Minimum to subtract -> (0000)
class UPoseWatch : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0824, class UEdGraphNode*,                                                   Node);                                                     // 0x0028(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0824, struct FColor,                                                         PoseWatchColour);                                          // 0x0030(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PoseWatch");
		return ptr;
	}


};

// Class Engine.PostProcessComponent
// 0x05DD (FullSize[0x075D] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_0825 - 0x0000 // Minimum to subtract -> (0091)
class UPostProcessComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0091 PADDING_0825, struct FPostProcessSettings,                                           Settings);                                                 // 0x0220(0x0530)  (Edit, BlueprintVisible, Interp, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05C1 PADDING_0825, float,                                                                 Priority);                                                 // 0x0750(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05C5 PADDING_0825, float,                                                                 BlendRadius);                                              // 0x0754(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05C9 PADDING_0825, float,                                                                 BlendWeight);                                              // 0x0758(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05CD PADDING_0825, unsigned char,                                                         bEnabled);                                                 // 0x075C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05CD PADDING_0825, unsigned char,                                                         bUnbound);                                                 // 0x075C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PostProcessComponent");
		return ptr;
	}


	void AddOrUpdateBlendable(const TScriptInterface<class UBlendableInterface>& InBlendableObject, float InWeight);
};

// Class Engine.PostProcessVolume
// 0x054D (FullSize[0x07CD] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
#define PADDING_0826 - 0x0000 // Minimum to subtract -> (0010)
class APostProcessVolume : public AVolume
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0826, struct FPostProcessSettings,                                           Settings);                                                 // 0x0290(0x0530)  (Edit, BlueprintVisible, Interp, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0540 PADDING_0826, float,                                                                 Priority);                                                 // 0x07C0(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0544 PADDING_0826, float,                                                                 BlendRadius);                                              // 0x07C4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0548 PADDING_0826, float,                                                                 BlendWeight);                                              // 0x07C8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x054C PADDING_0826, unsigned char,                                                         bEnabled);                                                 // 0x07CC(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x054C PADDING_0826, unsigned char,                                                         bUnbound);                                                 // 0x07CC(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PostProcessVolume");
		return ptr;
	}


	void AddOrUpdateBlendable(const TScriptInterface<class UBlendableInterface>& InBlendableObject, float InWeight);
};

// Class Engine.PrecomputedVisibilityOverrideVolume
// 0x0030 (FullSize[0x02B0] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
#define PADDING_0827 - 0x0000 // Minimum to subtract -> (0000)
class APrecomputedVisibilityOverrideVolume : public AVolume
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0827, TArray<class AActor*>,                                                 OverrideVisibleActors);                                    // 0x0280(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0827, TArray<class AActor*>,                                                 OverrideInvisibleActors);                                  // 0x0290(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0827, TArray<struct FName>,                                                  OverrideInvisibleLevels);                                  // 0x02A0(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PrecomputedVisibilityOverrideVolume");
		return ptr;
	}


};

// Class Engine.PrecomputedVisibilityVolume
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
class APrecomputedVisibilityVolume : public AVolume
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PrecomputedVisibilityVolume");
		return ptr;
	}


};

// Class Engine.PreviewCollectionInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UPreviewCollectionInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PreviewCollectionInterface");
		return ptr;
	}


};

// Class Engine.PreviewMeshCollection
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
// LastOffsetWithSize(0x0030)
#define PADDING_082A - 0x0000 // Minimum to subtract -> (0008)
class UPreviewMeshCollection : public UDataAsset
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_082A, class USkeleton*,                                                      Skeleton);                                                 // 0x0038(0x0008)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_082A, TArray<struct FPreviewMeshCollectionEntry>,                            SkeletalMeshes);                                           // 0x0040(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PreviewMeshCollection");
		return ptr;
	}


};

// Class Engine.PrimaryAssetLabel
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
// LastOffsetWithSize(0x0030)
#define PADDING_082B - 0x0000 // Minimum to subtract -> (0000)
class UPrimaryAssetLabel : public UPrimaryDataAsset
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_082B, struct FPrimaryAssetRules,                                             Rules);                                                    // 0x0030(0x0010)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_082B, unsigned char,                                                         bLabelAssetsInMyDirectory);                                // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_082B, unsigned char,                                                         bIsRuntimeLabel);                                          // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_082B, struct FCollectionReference,                                           AssetCollection);                                          // 0x0068(0x0008)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.PrimaryAssetLabel");
		return ptr;
	}


};

// Class Engine.ProxyLODMeshSimplificationSettings
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_082C - 0x0000 // Minimum to subtract -> (0010)
class UProxyLODMeshSimplificationSettings : public UDeveloperSettings
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_082C, struct FName,                                                          ProxyLODMeshReductionModuleName);                          // 0x0038(0x0008)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ProxyLODMeshSimplificationSettings");
		return ptr;
	}


};

// Class Engine.RadialForceActor
// 0x0008 (FullSize[0x0250] - InheritedSize[0x0248])
// LastOffsetWithSize(0x0238)
#define PADDING_082D - 0x0000 // Minimum to subtract -> (0010)
class ARadialForceActor : public ARigidBodyBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_082D, class URadialForceComponent*,                                          ForceComponent);                                           // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.RadialForceActor");
		return ptr;
	}


	void ToggleForce();
	void FireImpulse();
	void EnableForce();
	void DisableForce();
};

// Class Engine.RadialForceComponent
// 0x00C0 (FullSize[0x0240] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_082E - 0x0000 // Minimum to subtract -> (0091)
class URadialForceComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0091 PADDING_082E, float,                                                                 ImpulseStrength);                                          // 0x0220(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0095 PADDING_082E, unsigned char,                                                         bImpulseVelChange);                                        // 0x0224(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0095 PADDING_082E, unsigned char,                                                         bIgnoreOwningActor);                                       // 0x0224(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0099 PADDING_082E, float,                                                                 ForceStrength);                                            // 0x0228(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009D PADDING_082E, float,                                                                 DestructibleDamage);                                       // 0x022C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A1 PADDING_082E, TArray<TEnumAsByte<EObjectTypeQuery>>,                                 ObjectTypesToAffect);                                      // 0x0230(0x0010)  (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.RadialForceComponent");
		return ptr;
	}


	void RemoveObjectTypeToAffect(TEnumAsByte<EObjectTypeQuery> ObjectType);
	void FireImpulse();
	void AddObjectTypeToAffect(TEnumAsByte<EObjectTypeQuery> ObjectType);
};

// Class Engine.RectLight
// 0x000F (FullSize[0x0260] - InheritedSize[0x0251])
// LastOffsetWithSize(0x0251)
#define PADDING_082F - 0x0000 // Minimum to subtract -> (0007)
class ARectLight : public ALight
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_082F, class URectLightComponent*,                                            RectLightComponent);                                       // 0x0258(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.RectLight");
		return ptr;
	}


};

// Class Engine.RectLightComponent
// 0x0018 (FullSize[0x0388] - InheritedSize[0x0370])
// LastOffsetWithSize(0x0370)
#define PADDING_0830 - 0x0000 // Minimum to subtract -> (0000)
class URectLightComponent : public ULocalLightComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0830, float,                                                                 SourceWidth);                                              // 0x0370(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0830, float,                                                                 SourceHeight);                                             // 0x0374(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0830, float,                                                                 BarnDoorAngle);                                            // 0x0378(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0830, float,                                                                 BarnDoorLength);                                           // 0x037C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0830, class UTexture*,                                                       SourceTexture);                                            // 0x0380(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.RectLightComponent");
		return ptr;
	}


	void SetSourceWidth(float bNewValue);
	void SetSourceTexture(class UTexture* bNewValue);
	void SetSourceHeight(float NewValue);
	void SetBarnDoorLength(float NewValue);
	void SetBarnDoorAngle(float NewValue);
};

// Class Engine.RendererSettings
// 0x00B9 (FullSize[0x00E1] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0831 - 0x0000 // Minimum to subtract -> (0010)
class URendererSettings : public UDeveloperSettings
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0831, unsigned char,                                                         bMobileHDR);                                               // 0x0038(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0831, unsigned char,                                                         bMobileDisableVertexFog);                                  // 0x0038(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0831, int,                                                                   MaxMobileCascades);                                        // 0x003C(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0831, TEnumAsByte<EMobileMSAASampleCount>,                                   MobileMSAASampleCount);                                    // 0x0040(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0831, unsigned char,                                                         bMobileUseLegacyShadingModel);                             // 0x0044(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0831, unsigned char,                                                         bMobileUseHWsRGBEncoding);                                 // 0x0044(0x0001) BIT_FIELD (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0831, unsigned char,                                                         bMobileAllowDitheredLODTransition);                        // 0x0044(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0831, unsigned char,                                                         bMobileAllowSoftwareOcclusionCulling);                     // 0x0044(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0831, unsigned char,                                                         bDiscardUnusedQualityLevels);                              // 0x0044(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0831, unsigned char,                                                         bOcclusionCulling);                                        // 0x0044(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0831, float,                                                                 MinScreenRadiusForLights);                                 // 0x0048(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0831, float,                                                                 MinScreenRadiusForEarlyZPass);                             // 0x004C(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0831, float,                                                                 MinScreenRadiusForCSMdepth);                               // 0x0050(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0831, unsigned char,                                                         bPrecomputedVisibilityWarning);                            // 0x0054(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0831, unsigned char,                                                         bTextureStreaming);                                        // 0x0054(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0831, unsigned char,                                                         bUseDXT5NormalMaps);                                       // 0x0054(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0831, unsigned char,                                                         bVirtualTextures);                                         // 0x0054(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0831, unsigned char,                                                         bVirtualTexturedLightmaps);                                // 0x0054(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0831, uint32_t,                                                              VirtualTextureTileSize);                                   // 0x0058(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0831, uint32_t,                                                              VirtualTextureTileBorderSize);                             // 0x005C(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0831, uint32_t,                                                              VirtualTextureFeedbackFactor);                             // 0x0060(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_0831, unsigned char,                                                         bVirtualTextureEnableCompressZlib);                        // 0x0064(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_0831, unsigned char,                                                         bVirtualTextureEnableCompressCrunch);                      // 0x0064(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_0831, unsigned char,                                                         bClearCoatEnableSecondNormal);                             // 0x0064(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0831, int,                                                                   ReflectionCaptureResolution);                              // 0x0068(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0831, unsigned char,                                                         ReflectionEnvironmentLightmapMixBasedOnRoughness);         // 0x006C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0831, unsigned char,                                                         bForwardShading);                                          // 0x006C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0831, unsigned char,                                                         bVertexFoggingForOpaque);                                  // 0x006C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0831, unsigned char,                                                         bAllowStaticLighting);                                     // 0x006C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0831, unsigned char,                                                         bUseNormalMapsForStaticLighting);                          // 0x006C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0831, unsigned char,                                                         bGenerateMeshDistanceFields);                              // 0x006C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0831, unsigned char,                                                         bEightBitMeshDistanceFields);                              // 0x006C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0831, unsigned char,                                                         bGenerateLandscapeGIData);                                 // 0x006C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0045 PADDING_0831, unsigned char,                                                         bCompressMeshDistanceFields);                              // 0x006D(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0831, float,                                                                 TessellationAdaptivePixelsPerTriangle);                    // 0x0070(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004C PADDING_0831, unsigned char,                                                         bSeparateTranslucency);                                    // 0x0074(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0831, TEnumAsByte<ETranslucentSortPolicy>,                                   TranslucentSortPolicy);                                    // 0x0078(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0054 PADDING_0831, struct FVector,                                                        TranslucentSortAxis);                                      // 0x007C(0x000C)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0831, TEnumAsByte<ECustomDepthStencil>,                                      CustomDepthStencil);                                       // 0x0088(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0064 PADDING_0831, unsigned char,                                                         bCustomDepthTaaJitter);                                    // 0x008C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0831, TEnumAsByte<EAlphaChannelMode>,                                        bEnableAlphaChannelInPostProcessing);                      // 0x0090(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_0831, unsigned char,                                                         bDefaultFeatureBloom);                                     // 0x0094(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_0831, unsigned char,                                                         bDefaultFeatureAmbientOcclusion);                          // 0x0094(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_0831, unsigned char,                                                         bDefaultFeatureAmbientOcclusionStaticFraction);            // 0x0094(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_0831, unsigned char,                                                         bDefaultFeatureAutoExposure);                              // 0x0094(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0831, TEnumAsByte<EAutoExposureMethodUI>,                                    DefaultFeatureAutoExposure);                               // 0x0098(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_0831, unsigned char,                                                         bExtendDefaultLuminanceRangeInAutoExposureSettings);       // 0x009C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_0831, unsigned char,                                                         bUsePreExposure);                                          // 0x009C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_0831, unsigned char,                                                         bEnablePreExposureOnlyInTheEditor);                        // 0x009C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_0831, unsigned char,                                                         bDefaultFeatureMotionBlur);                                // 0x009C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_0831, unsigned char,                                                         bDefaultFeatureLensFlare);                                 // 0x009C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_0831, unsigned char,                                                         bTemporalUpsampling);                                      // 0x009C(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0831, TEnumAsByte<EAntiAliasingMethod>,                                      DefaultFeatureAntiAliasing);                               // 0x00A0(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0079 PADDING_0831, ELightUnits,                                                           DefaultLightUnits);                                        // 0x00A1(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007A PADDING_0831, TEnumAsByte<EDefaultBackBufferPixelFormat>,                            DefaultBackBufferPixelFormat);                             // 0x00A2(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007C PADDING_0831, unsigned char,                                                         bRenderUnbuiltPreviewShadowsInGame);                       // 0x00A4(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007C PADDING_0831, unsigned char,                                                         bStencilForLODDither);                                     // 0x00A4(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0831, TEnumAsByte<EEarlyZPass>,                                              EarlyZPass);                                               // 0x00A8(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0084 PADDING_0831, unsigned char,                                                         bEarlyZPassOnlyMaterialMasking);                           // 0x00AC(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0084 PADDING_0831, unsigned char,                                                         bDBuffer);                                                 // 0x00AC(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_0831, TEnumAsByte<EClearSceneOptions>,                                       ClearSceneMethod);                                         // 0x00B0(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008C PADDING_0831, unsigned char,                                                         bBasePassOutputsVelocity);                                 // 0x00B4(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008C PADDING_0831, unsigned char,                                                         bSelectiveBasePassOutputs);                                // 0x00B4(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008C PADDING_0831, unsigned char,                                                         bDefaultParticleCutouts);                                  // 0x00B4(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_0831, int,                                                                   GPUSimulationTextureSizeX);                                // 0x00B8(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_0831, int,                                                                   GPUSimulationTextureSizeY);                                // 0x00BC(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_0831, unsigned char,                                                         bGlobalClipPlane);                                         // 0x00C0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009C PADDING_0831, TEnumAsByte<EGBufferFormat>,                                           GBufferFormat);                                            // 0x00C4(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0831, unsigned char,                                                         bUseGPUMorphTargets);                                      // 0x00C8(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0831, unsigned char,                                                         bNvidiaAftermathEnabled);                                  // 0x00C8(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0831, unsigned char,                                                         bInstancedStereo);                                         // 0x00C8(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0831, unsigned char,                                                         bMultiView);                                               // 0x00C8(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0831, unsigned char,                                                         bMobileMultiView);                                         // 0x00C8(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0831, unsigned char,                                                         bMobileMultiViewDirect);                                   // 0x00C8(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0831, unsigned char,                                                         bRoundRobinOcclusion);                                     // 0x00C8(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0831, unsigned char,                                                         bODSCapture);                                              // 0x00C8(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_0831, float,                                                                 WireframeCullThreshold);                                   // 0x00CC(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0831, unsigned char,                                                         bEnableRayTracing);                                        // 0x00D0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0831, unsigned char,                                                         bSupportStationarySkylight);                               // 0x00D0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0831, unsigned char,                                                         bSupportLowQualityLightmaps);                              // 0x00D0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0831, unsigned char,                                                         bSupportPointLightWholeSceneShadows);                      // 0x00D0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0831, unsigned char,                                                         bSupportAtmosphericFog);                                   // 0x00D0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0831, unsigned char,                                                         bSupportSkinCacheShaders);                                 // 0x00D0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0831, unsigned char,                                                         bMobileEnableStaticAndCSMShadowReceivers);                 // 0x00D0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0831, unsigned char,                                                         bMobileEnableMovableLightCSMShaderCulling);                // 0x00D0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A9 PADDING_0831, unsigned char,                                                         bMobileAllowDistanceFieldShadows);                         // 0x00D1(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A9 PADDING_0831, unsigned char,                                                         bMobileAllowMovableDirectionalLights);                     // 0x00D1(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0831, uint32_t,                                                              MobileNumDynamicPointLights);                              // 0x00D4(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_0831, unsigned char,                                                         bMobileDynamicPointLightsUseStaticBranch);                 // 0x00D8(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_0831, unsigned char,                                                         bMobileAllowMovableSpotlights);                            // 0x00D8(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B4 PADDING_0831, float,                                                                 SkinCacheSceneMemoryLimitInMB);                            // 0x00DC(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_0831, unsigned char,                                                         bGPUSkinLimit2BoneInfluences);                             // 0x00E0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_0831, unsigned char,                                                         bSupportDepthOnlyIndexBuffers);                            // 0x00E0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_0831, unsigned char,                                                         bSupportReversedIndexBuffers);                             // 0x00E0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_0831, unsigned char,                                                         bSupportMaterialLayers);                                   // 0x00E0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.RendererSettings");
		return ptr;
	}


};

// Class Engine.RendererOverrideSettings
// 0x0011 (FullSize[0x0039] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0832 - 0x0000 // Minimum to subtract -> (0010)
class URendererOverrideSettings : public UDeveloperSettings
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0832, unsigned char,                                                         bSupportAllShaderPermutations);                            // 0x0038(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0832, unsigned char,                                                         bForceRecomputeTangents);                                  // 0x0038(0x0001) BIT_FIELD (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.RendererOverrideSettings");
		return ptr;
	}


};

// Class Engine.ReporterBase
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UReporterBase : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ReporterBase");
		return ptr;
	}


};

// Class Engine.ReporterGraph
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UReporterGraph : public UReporterBase
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ReporterGraph");
		return ptr;
	}


};

// Class Engine.ReverbEffect
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0835 - 0x0000 // Minimum to subtract -> (0000)
class UReverbEffect : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0835, float,                                                                 Density);                                                  // 0x0028(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0835, float,                                                                 Diffusion);                                                // 0x002C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0835, float,                                                                 Gain);                                                     // 0x0030(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0835, float,                                                                 GainHF);                                                   // 0x0034(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0835, float,                                                                 DecayTime);                                                // 0x0038(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0835, float,                                                                 DecayHFRatio);                                             // 0x003C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0835, float,                                                                 ReflectionsGain);                                          // 0x0040(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0835, float,                                                                 ReflectionsDelay);                                         // 0x0044(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0835, float,                                                                 LateGain);                                                 // 0x0048(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0835, float,                                                                 LateDelay);                                                // 0x004C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0835, float,                                                                 AirAbsorptionGainHF);                                      // 0x0050(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0835, float,                                                                 RoomRolloffFactor);                                        // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ReverbEffect");
		return ptr;
	}


};

// Class Engine.Rig
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0836 - 0x0000 // Minimum to subtract -> (0008)
class URig : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0836, TArray<struct FTransformBase>,                                         TransformBases);                                           // 0x0030(0x0010)  (Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0836, TArray<struct FNode>,                                                  Nodes);                                                    // 0x0040(0x0010)  (Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Rig");
		return ptr;
	}


};

// Class Engine.RotatingMovementComponent
// 0x001D (FullSize[0x0131] - InheritedSize[0x0114])
// LastOffsetWithSize(0x0114)
#define PADDING_0837 - 0x0000 // Minimum to subtract -> (0004)
class URotatingMovementComponent : public UMovementComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_0837, struct FRotator,                                                       RotationRate);                                             // 0x0118(0x000C)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0837, struct FVector,                                                        PivotTranslation);                                         // 0x0124(0x000C)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0837, unsigned char,                                                         bRotationInLocalSpace);                                    // 0x0130(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.RotatingMovementComponent");
		return ptr;
	}


};

// Class Engine.RuntimeOptionsBase
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class URuntimeOptionsBase : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.RuntimeOptionsBase");
		return ptr;
	}


};

// Class Engine.RuntimeVirtualTexture
// 0x0016 (FullSize[0x003E] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0839 - 0x0000 // Minimum to subtract -> (0000)
class URuntimeVirtualTexture : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0839, ERuntimeVirtualTextureMaterialType,                                    MaterialType);                                             // 0x0028(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0839, bool,                                                                  bCompressTextures);                                        // 0x002C(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0839, int,                                                                   Size);                                                     // 0x0030(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x000C PADDING_0839, int,                                                                   TileSize);                                                 // 0x0034(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0839, int,                                                                   TileBorderSize);                                           // 0x0038(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0839, int,                                                                   RemoveLowMips);                                            // 0x003C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0839, bool,                                                                  bEnable);                                                  // 0x0040(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.RuntimeVirtualTexture");
		return ptr;
	}


};

// Class Engine.RuntimeVirtualTextureComponent
// 0x00A8 (FullSize[0x0228] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_083A - 0x0000 // Minimum to subtract -> (0089)
class URuntimeVirtualTextureComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0089 PADDING_083A, class URuntimeVirtualTexture*,                                         VirtualTexture);                                           // 0x0218(0x0008)  (Edit, ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0091 PADDING_083A, class AActor*,                                                         BoundsSourceActor);                                        // 0x0220(0x0008)  (Edit, ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.RuntimeVirtualTextureComponent");
		return ptr;
	}


};

// Class Engine.RuntimeVirtualTextureVolume
// 0x0018 (FullSize[0x0250] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_083B - 0x0000 // Minimum to subtract -> (0010)
class ARuntimeVirtualTextureVolume : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_083B, class URuntimeVirtualTextureComponent*,                                VirtualTextureComponent);                                  // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.RuntimeVirtualTextureVolume");
		return ptr;
	}


};

// Class Engine.RVOAvoidanceInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class URVOAvoidanceInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.RVOAvoidanceInterface");
		return ptr;
	}


};

// Class Engine.SaveGame
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class USaveGame : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SaveGame");
		return ptr;
	}


};

// Class Engine.Scene
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UScene : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Scene");
		return ptr;
	}


};

// Class Engine.SceneCapture2D
// 0x0008 (FullSize[0x0260] - InheritedSize[0x0258])
// LastOffsetWithSize(0x0258)
#define PADDING_083F - 0x0000 // Minimum to subtract -> (0000)
class ASceneCapture2D : public ASceneCapture
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_083F, class USceneCaptureComponent2D*,                                       CaptureComponent2D);                                       // 0x0258(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SceneCapture2D");
		return ptr;
	}


	void OnInterpToggle(bool bEnable);
};

// Class Engine.SceneCaptureComponent2D
// 0x05CD (FullSize[0x086D] - InheritedSize[0x02A0])
// LastOffsetWithSize(0x02A0)
#define PADDING_0840 - 0x0000 // Minimum to subtract -> (0010)
class USceneCaptureComponent2D : public USceneCaptureComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0840, TEnumAsByte<ECameraProjectionMode>,                                    ProjectionType);                                           // 0x02B0(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0840, float,                                                                 FOVAngle);                                                 // 0x02B4(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0840, float,                                                                 OrthoWidth);                                               // 0x02B8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0840, class UTextureRenderTarget2D*,                                         TextureTarget);                                            // 0x02C0(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0840, TEnumAsByte<ESceneCaptureCompositeMode>,                               CompositeMode);                                            // 0x02C8(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0840, struct FPostProcessSettings,                                           PostProcessSettings);                                      // 0x02D0(0x0530)  (Edit, BlueprintVisible, Interp, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0560 PADDING_0840, float,                                                                 PostProcessBlendWeight);                                   // 0x0800(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0564 PADDING_0840, unsigned char,                                                         bOverride_CustomNearClippingPlane);                        // 0x0804(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0568 PADDING_0840, float,                                                                 CustomNearClippingPlane);                                  // 0x0808(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x056C PADDING_0840, bool,                                                                  bUseCustomProjectionMatrix);                               // 0x080C(0x0001)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0570 PADDING_0840, struct FMatrix,                                                        CustomProjectionMatrix);                                   // 0x0810(0x0040)  (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05B0 PADDING_0840, bool,                                                                  bEnableClipPlane);                                         // 0x0850(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05B4 PADDING_0840, struct FVector,                                                        ClipPlaneBase);                                            // 0x0854(0x000C)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05C0 PADDING_0840, struct FVector,                                                        ClipPlaneNormal);                                          // 0x0860(0x000C)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05CC PADDING_0840, unsigned char,                                                         bCameraCutThisFrame);                                      // 0x086C(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x05CC PADDING_0840, unsigned char,                                                         bConsiderUnrenderedOpaquePixelAsFullyTranslucent);         // 0x086C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SceneCaptureComponent2D");
		return ptr;
	}


	void CaptureScene();
	void AddOrUpdateBlendable(const TScriptInterface<class UBlendableInterface>& InBlendableObject, float InWeight);
};

// Class Engine.SceneCaptureComponentCube
// 0x003C (FullSize[0x02DC] - InheritedSize[0x02A0])
// LastOffsetWithSize(0x02A0)
#define PADDING_0841 - 0x0000 // Minimum to subtract -> (0010)
class USceneCaptureComponentCube : public USceneCaptureComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0841, class UTextureRenderTargetCube*,                                       TextureTarget);                                            // 0x02B0(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0841, bool,                                                                  bCaptureRotation);                                         // 0x02B8(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0841, class UTextureRenderTargetCube*,                                       TextureTargetLeft);                                        // 0x02C0(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0841, class UTextureRenderTargetCube*,                                       TextureTargetRight);                                       // 0x02C8(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0841, class UTextureRenderTarget2D*,                                         TextureTargetODS);                                         // 0x02D0(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0841, float,                                                                 IPD);                                                      // 0x02D8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SceneCaptureComponentCube");
		return ptr;
	}


	void CaptureScene();
};

// Class Engine.SceneCaptureCube
// 0x0008 (FullSize[0x0260] - InheritedSize[0x0258])
// LastOffsetWithSize(0x0258)
#define PADDING_0842 - 0x0000 // Minimum to subtract -> (0000)
class ASceneCaptureCube : public ASceneCapture
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0842, class USceneCaptureComponentCube*,                                     CaptureComponentCube);                                     // 0x0258(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SceneCaptureCube");
		return ptr;
	}


	void OnInterpToggle(bool bEnable);
};

// Class Engine.SCS_Node
// 0x00B8 (FullSize[0x00E0] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0843 - 0x0000 // Minimum to subtract -> (0000)
class USCS_Node : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0843, class UClass*,                                                         ComponentClass);                                           // 0x0028(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0843, class UActorComponent*,                                                ComponentTemplate);                                        // 0x0030(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0843, struct FBlueprintCookedComponentInstancingData,                        CookedComponentInstancingData);                            // 0x0038(0x0050)  (NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0843, struct FName,                                                          AttachToName);                                             // 0x0088(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0843, struct FName,                                                          ParentComponentOrVariableName);                            // 0x0090(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0843, struct FName,                                                          ParentComponentOwnerClassName);                            // 0x0098(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0843, bool,                                                                  bIsParentComponentNative);                                 // 0x00A0(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0843, TArray<class USCS_Node*>,                                              ChildNodes);                                               // 0x00A8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_0843, TArray<struct FBPVariableMetaDataEntry>,                               MetaDataArray);                                            // 0x00B8(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0843, struct FGuid,                                                          VariableGuid);                                             // 0x00C8(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_0843, struct FName,                                                          InternalVariableName);                                     // 0x00D8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SCS_Node");
		return ptr;
	}


};

// Class Engine.Selection
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class USelection : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Selection");
		return ptr;
	}


};

// Class Engine.ServerStatReplicator
// 0x00C4 (FullSize[0x030C] - InheritedSize[0x0248])
// LastOffsetWithSize(0x0238)
#define PADDING_0845 - 0x0000 // Minimum to subtract -> (0010)
class AServerStatReplicator : public AInfo
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0845, bool,                                                                  bUpdateStatNet);                                           // 0x0248(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0011 PADDING_0845, bool,                                                                  bOverwriteClientStats);                                    // 0x0249(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0845, uint32_t,                                                              Channels);                                                 // 0x024C(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0845, uint32_t,                                                              InRate);                                                   // 0x0250(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0845, uint32_t,                                                              OutRate);                                                  // 0x0254(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0845, uint32_t,                                                              OutSaturation);                                            // 0x0258(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0845, uint32_t,                                                              MaxPacketOverhead);                                        // 0x025C(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0845, uint32_t,                                                              InRateClientMax);                                          // 0x0260(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0845, uint32_t,                                                              InRateClientMin);                                          // 0x0264(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0845, uint32_t,                                                              InRateClientAvg);                                          // 0x0268(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0845, uint32_t,                                                              InPacketsClientMax);                                       // 0x026C(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0845, uint32_t,                                                              InPacketsClientMin);                                       // 0x0270(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_0845, uint32_t,                                                              InPacketsClientAvg);                                       // 0x0274(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0845, uint32_t,                                                              OutRateClientMax);                                         // 0x0278(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0845, uint32_t,                                                              OutRateClientMin);                                         // 0x027C(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0845, uint32_t,                                                              OutRateClientAvg);                                         // 0x0280(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004C PADDING_0845, uint32_t,                                                              OutPacketsClientMax);                                      // 0x0284(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0845, uint32_t,                                                              OutPacketsClientMin);                                      // 0x0288(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0054 PADDING_0845, uint32_t,                                                              OutPacketsClientAvg);                                      // 0x028C(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0845, uint32_t,                                                              NetNumClients);                                            // 0x0290(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005C PADDING_0845, uint32_t,                                                              InPackets);                                                // 0x0294(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0845, uint32_t,                                                              OutPackets);                                               // 0x0298(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0064 PADDING_0845, uint32_t,                                                              InBunches);                                                // 0x029C(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0845, uint32_t,                                                              OutBunches);                                               // 0x02A0(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_0845, uint32_t,                                                              OutLoss);                                                  // 0x02A4(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0845, uint32_t,                                                              InLoss);                                                   // 0x02A8(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_0845, uint32_t,                                                              VoiceBytesSent);                                           // 0x02AC(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0845, uint32_t,                                                              VoiceBytesRecv);                                           // 0x02B0(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007C PADDING_0845, uint32_t,                                                              VoicePacketsSent);                                         // 0x02B4(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0845, uint32_t,                                                              VoicePacketsRecv);                                         // 0x02B8(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0084 PADDING_0845, uint32_t,                                                              PercentInVoice);                                           // 0x02BC(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_0845, uint32_t,                                                              PercentOutVoice);                                          // 0x02C0(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x008C PADDING_0845, uint32_t,                                                              NumActorChannels);                                         // 0x02C4(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0090 PADDING_0845, uint32_t,                                                              NumConsideredActors);                                      // 0x02C8(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0094 PADDING_0845, uint32_t,                                                              PrioritizedActors);                                        // 0x02CC(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_0845, uint32_t,                                                              NumRelevantActors);                                        // 0x02D0(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009C PADDING_0845, uint32_t,                                                              NumRelevantDeletedActors);                                 // 0x02D4(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A0 PADDING_0845, uint32_t,                                                              NumReplicatedActorAttempts);                               // 0x02D8(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A4 PADDING_0845, uint32_t,                                                              NumReplicatedActors);                                      // 0x02DC(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_0845, uint32_t,                                                              NumActors);                                                // 0x02E0(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AC PADDING_0845, uint32_t,                                                              NumNetActors);                                             // 0x02E4(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_0845, uint32_t,                                                              NumDormantActors);                                         // 0x02E8(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B4 PADDING_0845, uint32_t,                                                              NumInitiallyDormantActors);                                // 0x02EC(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_0845, uint32_t,                                                              NumNetGUIDsAckd);                                          // 0x02F0(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BC PADDING_0845, uint32_t,                                                              NumNetGUIDsPending);                                       // 0x02F4(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C0 PADDING_0845, uint32_t,                                                              NumNetGUIDsUnAckd);                                        // 0x02F8(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C4 PADDING_0845, uint32_t,                                                              ObjPathBytes);                                             // 0x02FC(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C8 PADDING_0845, uint32_t,                                                              NetGUIDOutRate);                                           // 0x0300(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00CC PADDING_0845, uint32_t,                                                              NetGUIDInRate);                                            // 0x0304(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_0845, uint32_t,                                                              NetSaturated);                                             // 0x0308(0x0004)  (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ServerStatReplicator");
		return ptr;
	}


};

// Class Engine.ShadowMapTexture2D
// 0x001D (FullSize[0x0101] - InheritedSize[0x00E4])
// LastOffsetWithSize(0x00E4)
#define PADDING_0846 - 0x0000 // Minimum to subtract -> (001C)
class UShadowMapTexture2D : public UTexture2D
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x001C PADDING_0846, TEnumAsByte<EShadowMapFlags>,                                          ShadowmapFlags);                                           // 0x0100(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ShadowMapTexture2D");
		return ptr;
	}


};

// Class Engine.SimpleConstructionScript
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0847 - 0x0000 // Minimum to subtract -> (0000)
class USimpleConstructionScript : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0847, TArray<class USCS_Node*>,                                              RootNodes);                                                // 0x0028(0x0010)  (ZeroConstructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0847, TArray<class USCS_Node*>,                                              AllNodes);                                                 // 0x0038(0x0010)  (ZeroConstructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0847, class USCS_Node*,                                                      DefaultSceneRootNode);                                     // 0x0048(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SimpleConstructionScript");
		return ptr;
	}


};

// Class Engine.SkeletalMesh
// 0x0338 (FullSize[0x0360] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0848 - 0x0000 // Minimum to subtract -> (0020)
class USkeletalMesh : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0020 PADDING_0848, class USkeleton*,                                                      Skeleton);                                                 // 0x0048(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0848, struct FBoxSphereBounds,                                               ImportedBounds);                                           // 0x0050(0x001C)  (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0848, struct FBoxSphereBounds,                                               ExtendedBounds);                                           // 0x006C(0x001C)  (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0848, struct FVector,                                                        PositiveBoundsExtension);                                  // 0x0088(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x006C PADDING_0848, struct FVector,                                                        NegativeBoundsExtension);                                  // 0x0094(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0848, TArray<struct FSkeletalMaterial>,                                      Materials);                                                // 0x00A0(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_0848, TArray<struct FBoneMirrorInfo>,                                        SkelMirrorTable);                                          // 0x00B0(0x0010)  (Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_0848, TArray<struct FSkeletalMeshLODInfo>,                                   LODInfo);                                                  // 0x00C0(0x0010)  (Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00F8 PADDING_0848, struct FPerPlatformInt,                                                MinLOD);                                                   // 0x0120(0x0004)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FC PADDING_0848, struct FPerPlatformBool,                                               DisableBelowMinLodStripping);                              // 0x0124(0x0001)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FD PADDING_0848, TEnumAsByte<EAxis>,                                                    SkelMirrorAxis);                                           // 0x0125(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FE PADDING_0848, TEnumAsByte<EAxis>,                                                    SkelMirrorFlipAxis);                                       // 0x0126(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FF PADDING_0848, unsigned char,                                                         bUseFullPrecisionUVs);                                     // 0x0127(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FF PADDING_0848, unsigned char,                                                         bUseHighPrecisionTangentBasis);                            // 0x0127(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FF PADDING_0848, unsigned char,                                                         bHasBeenSimplified);                                       // 0x0127(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FF PADDING_0848, unsigned char,                                                         bHasVertexColors);                                         // 0x0127(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FF PADDING_0848, unsigned char,                                                         bEnablePerPolyCollision);                                  // 0x0127(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_0848, class UBodySetup*,                                                     BodySetup);                                                // 0x0128(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0108 PADDING_0848, class UPhysicsAsset*,                                                  PhysicsAsset);                                             // 0x0130(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0110 PADDING_0848, class UPhysicsAsset*,                                                  ShadowPhysicsAsset);                                       // 0x0138(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0118 PADDING_0848, TArray<class UNodeMappingContainer*>,                                  NodeMappingData);                                          // 0x0140(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0128 PADDING_0848, TArray<class UMorphTarget*>,                                           MorphTargets);                                             // 0x0150(0x0010)  (BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02B0 PADDING_0848, class UClass*,                                                         PostProcessAnimBlueprint);                                 // 0x02D8(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02B8 PADDING_0848, TArray<class UClothingAssetBase*>,                                     MeshClothingAssets);                                       // 0x02E0(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02C8 PADDING_0848, struct FSkeletalMeshSamplingInfo,                                      SamplingInfo);                                             // 0x02F0(0x0030)  (Edit, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x02F8 PADDING_0848, TArray<class UAssetUserData*>,                                         AssetUserData);                                            // 0x0320(0x0010)  (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0308 PADDING_0848, TArray<class USkeletalMeshSocket*>,                                    Sockets);                                                  // 0x0330(0x0010)  (ZeroConstructor, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0328 PADDING_0848, TArray<struct FSkinWeightProfileInfo>,                                 SkinWeightProfiles);                                       // 0x0350(0x0010)  (Edit, EditFixedSize, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SkeletalMesh");
		return ptr;
	}


	void SetLODSettings(class USkeletalMeshLODSettings* InLODSettings);
	int NumSockets();
	TArray<struct FString> K2_GetAllMorphTargetNames();
	bool IsSectionUsingCloth(int InSectionIndex, bool bCheckCorrespondingSections);
	class USkeletalMeshSocket* GetSocketByIndex(int Index);
	class UNodeMappingContainer* GetNodeMappingContainer(class UBlueprint* SourceAsset);
	struct FBoxSphereBounds GetImportedBounds();
	struct FBoxSphereBounds GetBounds();
	class USkeletalMeshSocket* FindSocketInfo(const struct FName& InSocketName, struct FTransform* OutTransform, int* OutBoneIndex, int* OutIndex);
	class USkeletalMeshSocket* FindSocketAndIndex(const struct FName& InSocketName, int* OutIndex);
	class USkeletalMeshSocket* FindSocket(const struct FName& InSocketName);
};

// Class Engine.SkeletalMeshActor
// 0x0048 (FullSize[0x0280] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0849 - 0x0000 // Minimum to subtract -> (0018)
class ASkeletalMeshActor : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0018 PADDING_0849, unsigned char,                                                         bShouldDoAnimNotifies);                                    // 0x0250(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0849, unsigned char,                                                         bWakeOnLevelStart);                                        // 0x0250(0x0001) BIT_FIELD (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0849, class USkeletalMeshComponent*,                                         SkeletalMeshComponent);                                    // 0x0258(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0849, class USkeletalMesh*,                                                  ReplicatedMesh);                                           // 0x0260(0x0008)  (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0849, class UPhysicsAsset*,                                                  ReplicatedPhysAsset);                                      // 0x0268(0x0008)  (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0849, class UMaterialInterface*,                                             ReplicatedMaterial0);                                      // 0x0270(0x0008)  (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0849, class UMaterialInterface*,                                             ReplicatedMaterial1);                                      // 0x0278(0x0008)  (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SkeletalMeshActor");
		return ptr;
	}


	void OnRep_ReplicatedPhysAsset();
	void OnRep_ReplicatedMesh();
	void OnRep_ReplicatedMaterial1();
	void OnRep_ReplicatedMaterial0();
};

// Class Engine.SkeletalMeshLODSettings
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
// LastOffsetWithSize(0x0030)
#define PADDING_084A - 0x0000 // Minimum to subtract -> (0000)
class USkeletalMeshLODSettings : public UDataAsset
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_084A, struct FPerPlatformInt,                                                MinLOD);                                                   // 0x0030(0x0004)  (Edit, Config, GlobalConfig, NoDestructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0004 PADDING_084A, struct FPerPlatformBool,                                               DisableBelowMinLodStripping);                              // 0x0034(0x0001)  (Edit, Config, GlobalConfig, NoDestructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0008 PADDING_084A, TArray<struct FSkeletalMeshLODGroupSettings>,                          LODGroups);                                                // 0x0038(0x0010)  (Edit, ZeroConstructor, Config, GlobalConfig, Protected, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SkeletalMeshLODSettings");
		return ptr;
	}


};

// Class Engine.SkeletalMeshSimplificationSettings
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_084B - 0x0000 // Minimum to subtract -> (0010)
class USkeletalMeshSimplificationSettings : public UDeveloperSettings
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_084B, struct FName,                                                          SkeletalMeshReductionModuleName);                          // 0x0038(0x0008)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SkeletalMeshSimplificationSettings");
		return ptr;
	}


};

// Class Engine.SkeletalMeshSocket
// 0x0035 (FullSize[0x005D] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_084C - 0x0000 // Minimum to subtract -> (0000)
class USkeletalMeshSocket : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_084C, struct FName,                                                          SocketName);                                               // 0x0028(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_084C, struct FName,                                                          BoneName);                                                 // 0x0030(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_084C, struct FVector,                                                        RelativeLocation);                                         // 0x0038(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_084C, struct FRotator,                                                       RelativeRotation);                                         // 0x0044(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_084C, struct FVector,                                                        RelativeScale);                                            // 0x0050(0x000C)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_084C, bool,                                                                  bForceAlwaysAnimated);                                     // 0x005C(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SkeletalMeshSocket");
		return ptr;
	}


	void InitializeSocketFromLocation(class USkeletalMeshComponent* SkelComp, const struct FVector& WorldLocation, const struct FVector& WorldNormal);
	struct FVector GetSocketLocation(class USkeletalMeshComponent* SkelComp);
};

// Class Engine.SkyLightComponent
// 0x00FC (FullSize[0x0340] - InheritedSize[0x0244])
// LastOffsetWithSize(0x0244)
#define PADDING_084D - 0x0000 // Minimum to subtract -> (000C)
class USkyLightComponent : public ULightComponentBase
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x000C PADDING_084D, class UTextureCube*,                                                   Cubemap);                                                  // 0x0250(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_084D, float,                                                                 SourceCubemapAngle);                                       // 0x0258(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_084D, int,                                                                   CubemapResolution);                                        // 0x025C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_084D, float,                                                                 SkyDistanceThreshold);                                     // 0x0260(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_084D, bool,                                                                  bCaptureEmissiveOnly);                                     // 0x0264(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0021 PADDING_084D, bool,                                                                  bLowerHemisphereIsBlack);                                  // 0x0265(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_084D, struct FLinearColor,                                                   LowerHemisphereColor);                                     // 0x0268(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_084D, float,                                                                 OcclusionMaxDistance);                                     // 0x0278(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_084D, float,                                                                 Contrast);                                                 // 0x027C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_084D, float,                                                                 OcclusionExponent);                                        // 0x0280(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_084D, float,                                                                 MinOcclusion);                                             // 0x0284(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_084D, struct FColor,                                                         OcclusionTint);                                            // 0x0288(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_084D, TEnumAsByte<EOcclusionCombineMode>,                                    OcclusionCombineMode);                                     // 0x028C(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F4 PADDING_084D, class UTextureCube*,                                                   BlendDestinationCubemap);                                  // 0x0338(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SkyLightComponent");
		return ptr;
	}


	void SetVolumetricScatteringIntensity(float NewIntensity);
	void SetOcclusionTint(const struct FColor& InTint);
	void SetOcclusionExponent(float InOcclusionExponent);
	void SetOcclusionContrast(float InOcclusionContrast);
	void SetMinOcclusion(float InMinOcclusion);
	void SetLowerHemisphereColor(const struct FLinearColor& InLowerHemisphereColor);
	void SetLightColor(const struct FLinearColor& NewLightColor);
	void SetIntensity(float NewIntensity);
	void SetIndirectLightingIntensity(float NewIntensity);
	void SetCubemapBlend(class UTextureCube* SourceCubemap, class UTextureCube* DestinationCubemap, float InBlendFraction);
	void SetCubemap(class UTextureCube* NewCubemap);
	void RecaptureSky();
};

// Class Engine.SlateBrushAsset
// 0x0088 (FullSize[0x00B0] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_084E - 0x0000 // Minimum to subtract -> (0000)
class USlateBrushAsset : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_084E, struct FSlateBrush,                                                    Brush);                                                    // 0x0028(0x0088)  (Edit, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SlateBrushAsset");
		return ptr;
	}


};

// Class Engine.SlateTextureAtlasInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class USlateTextureAtlasInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SlateTextureAtlasInterface");
		return ptr;
	}


};

// Class Engine.SmokeTestCommandlet
// 0x0007 (FullSize[0x0080] - InheritedSize[0x0079])
// LastOffsetWithSize(0x0079)
class USmokeTestCommandlet : public UCommandlet
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SmokeTestCommandlet");
		return ptr;
	}


};

// Class Engine.SoundAttenuation
// 0x02E8 (FullSize[0x0310] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0851 - 0x0000 // Minimum to subtract -> (0000)
class USoundAttenuation : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0851, struct FSoundAttenuationSettings,                                      Attenuation);                                              // 0x0028(0x02E8)  (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundAttenuation");
		return ptr;
	}


};

// Class Engine.SoundClass
// 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0852 - 0x0000 // Minimum to subtract -> (0000)
class USoundClass : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0852, struct FSoundClassProperties,                                          Properties);                                               // 0x0028(0x002C)  (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0852, TArray<class USoundClass*>,                                            ChildClasses);                                             // 0x0058(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0852, TArray<struct FPassiveSoundMixModifier>,                               PassiveSoundMixModifiers);                                 // 0x0068(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0852, class USoundClass*,                                                    ParentClass);                                              // 0x0078(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundClass");
		return ptr;
	}


};

// Class Engine.SoundConcurrency
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0853 - 0x0000 // Minimum to subtract -> (0000)
class USoundConcurrency : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0853, struct FSoundConcurrencySettings,                                      Concurrency);                                              // 0x0028(0x0020)  (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundConcurrency");
		return ptr;
	}


};

// Class Engine.SoundCue
// 0x0359 (FullSize[0x0419] - InheritedSize[0x00C0])
// LastOffsetWithSize(0x0110)
#define PADDING_0854 - 0x0000 // Minimum to subtract -> (0000)
class USoundCue : public USoundBase
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0854, unsigned char,                                                         bOverrideAttenuation);                                     // 0x0110(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_000(0x0000 PADDING_0854, unsigned char,                                                         bExcludeFromRandomNodeBranchCulling);                      // 0x0110(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0854, class USoundNode*,                                                     FirstNode);                                                // 0x0118(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0854, float,                                                                 VolumeMultiplier);                                         // 0x0120(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0854, float,                                                                 PitchMultiplier);                                          // 0x0124(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0854, struct FSoundAttenuationSettings,                                      AttenuationOverrides);                                     // 0x0128(0x02E8)  (Edit, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0300 PADDING_0854, float,                                                                 SubtitlePriority);                                         // 0x0410(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0308 PADDING_0854, unsigned char,                                                         bHasPlayWhenSilent);                                       // 0x0418(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundCue");
		return ptr;
	}


};

// Class Engine.SoundEffectSourcePreset
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class USoundEffectSourcePreset : public USoundEffectPreset
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundEffectSourcePreset");
		return ptr;
	}


};

// Class Engine.SoundEffectSourcePresetChain
// 0x0011 (FullSize[0x0039] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0856 - 0x0000 // Minimum to subtract -> (0000)
class USoundEffectSourcePresetChain : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0856, TArray<struct FSourceEffectChainEntry>,                                Chain);                                                    // 0x0028(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0856, unsigned char,                                                         bPlayEffectChainTails);                                    // 0x0038(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundEffectSourcePresetChain");
		return ptr;
	}


};

// Class Engine.SoundGroups
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0857 - 0x0000 // Minimum to subtract -> (0000)
class USoundGroups : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0857, TArray<struct FSoundGroup>,                                            SoundGroupProfiles);                                       // 0x0028(0x0010)  (ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundGroups");
		return ptr;
	}


};

// Class Engine.SoundMix
// 0x0060 (FullSize[0x0088] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0858 - 0x0000 // Minimum to subtract -> (0000)
class USoundMix : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0858, unsigned char,                                                         bApplyEQ);                                                 // 0x0028(0x0001) BIT_FIELD (Edit, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_0858, float,                                                                 EQPriority);                                               // 0x002C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0858, struct FAudioEQEffect,                                                 EQSettings);                                               // 0x0030(0x0038)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0858, TArray<struct FSoundClassAdjuster>,                                    SoundClassEffects);                                        // 0x0068(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0050 PADDING_0858, float,                                                                 InitialDelay);                                             // 0x0078(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0054 PADDING_0858, float,                                                                 FadeInTime);                                               // 0x007C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_0858, float,                                                                 Duration);                                                 // 0x0080(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x005C PADDING_0858, float,                                                                 FadeOutTime);                                              // 0x0084(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundMix");
		return ptr;
	}


};

// Class Engine.SoundNodeAssetReferencer
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
class USoundNodeAssetReferencer : public USoundNode
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeAssetReferencer");
		return ptr;
	}


};

// Class Engine.SoundNodeAttenuation
// 0x02F9 (FullSize[0x0331] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_085A - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeAttenuation : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_085A, class USoundAttenuation*,                                              AttenuationSettings);                                      // 0x0040(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_085A, struct FSoundAttenuationSettings,                                      AttenuationOverrides);                                     // 0x0048(0x02E8)  (Edit, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x02F8 PADDING_085A, unsigned char,                                                         bOverrideAttenuation);                                     // 0x0330(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeAttenuation");
		return ptr;
	}


};

// Class Engine.SoundNodeBranch
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_085B - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeBranch : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_085B, struct FName,                                                          BoolParameterName);                                        // 0x0040(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeBranch");
		return ptr;
	}


};

// Class Engine.SoundNodeConcatenator
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_085C - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeConcatenator : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_085C, TArray<float>,                                                         InputVolume);                                              // 0x0040(0x0010)  (Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeConcatenator");
		return ptr;
	}


};

// Class Engine.SoundNodeDelay
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_085D - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeDelay : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_085D, float,                                                                 DelayMin);                                                 // 0x0040(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_085D, float,                                                                 DelayMax);                                                 // 0x0044(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeDelay");
		return ptr;
	}


};

// Class Engine.SoundNodeDialoguePlayer
// 0x0029 (FullSize[0x0061] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_085E - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeDialoguePlayer : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_085E, struct FDialogueWaveParameter,                                         DialogueWaveParameter);                                    // 0x0040(0x0020)  (Edit, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_085E, unsigned char,                                                         bLooping);                                                 // 0x0060(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeDialoguePlayer");
		return ptr;
	}


};

// Class Engine.SoundNodeDistanceCrossFade
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_085F - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeDistanceCrossFade : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_085F, TArray<struct FDistanceDatum>,                                         CrossFadeInput);                                           // 0x0040(0x0010)  (Edit, ExportObject, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeDistanceCrossFade");
		return ptr;
	}


};

// Class Engine.SoundNodeDoppler
// 0x0014 (FullSize[0x004C] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_0860 - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeDoppler : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0860, float,                                                                 DopplerIntensity);                                         // 0x0040(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0860, bool,                                                                  bUseSmoothing);                                            // 0x0044(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0860, float,                                                                 SmoothingInterpSpeed);                                     // 0x0048(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeDoppler");
		return ptr;
	}


};

// Class Engine.SoundNodeEnveloper
// 0x0150 (FullSize[0x0188] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_0861 - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeEnveloper : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0861, float,                                                                 LoopStart);                                                // 0x0040(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0861, float,                                                                 LoopEnd);                                                  // 0x0044(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0861, float,                                                                 DurationAfterLoop);                                        // 0x0048(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0861, int,                                                                   LoopCount);                                                // 0x004C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0861, unsigned char,                                                         bLoopIndefinitely);                                        // 0x0050(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0861, unsigned char,                                                         bLoop);                                                    // 0x0050(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0861, class UDistributionFloatConstantCurve*,                                VolumeInterpCurve);                                        // 0x0058(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0861, class UDistributionFloatConstantCurve*,                                PitchInterpCurve);                                         // 0x0060(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0861, struct FRuntimeFloatCurve,                                             VolumeCurve);                                              // 0x0068(0x0088)  (Edit, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_0861, struct FRuntimeFloatCurve,                                             PitchCurve);                                               // 0x00F0(0x0088)  (Edit, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0140 PADDING_0861, float,                                                                 PitchMin);                                                 // 0x0178(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0144 PADDING_0861, float,                                                                 PitchMax);                                                 // 0x017C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0148 PADDING_0861, float,                                                                 VolumeMin);                                                // 0x0180(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x014C PADDING_0861, float,                                                                 VolumeMax);                                                // 0x0184(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeEnveloper");
		return ptr;
	}


};

// Class Engine.SoundNodeGroupControl
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_0862 - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeGroupControl : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0862, TArray<int>,                                                           GroupSizes);                                               // 0x0040(0x0010)  (Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeGroupControl");
		return ptr;
	}


};

// Class Engine.SoundNodeLooping
// 0x000D (FullSize[0x0045] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_0863 - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeLooping : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0863, int,                                                                   LoopCount);                                                // 0x0040(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0863, unsigned char,                                                         bLoopIndefinitely);                                        // 0x0044(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeLooping");
		return ptr;
	}


};

// Class Engine.SoundNodeMature
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
class USoundNodeMature : public USoundNode
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeMature");
		return ptr;
	}


};

// Class Engine.SoundNodeMixer
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_0865 - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeMixer : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0865, TArray<float>,                                                         InputVolume);                                              // 0x0040(0x0010)  (Edit, ExportObject, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeMixer");
		return ptr;
	}


};

// Class Engine.SoundNodeModulator
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_0866 - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeModulator : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0866, float,                                                                 PitchMin);                                                 // 0x0040(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0866, float,                                                                 PitchMax);                                                 // 0x0044(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0866, float,                                                                 VolumeMin);                                                // 0x0048(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0866, float,                                                                 VolumeMax);                                                // 0x004C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeModulator");
		return ptr;
	}


};

// Class Engine.SoundNodeModulatorContinuous
// 0x0048 (FullSize[0x0080] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_0867 - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeModulatorContinuous : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0867, struct FModulatorContinuousParams,                                     PitchModulationParams);                                    // 0x0040(0x0020)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0867, struct FModulatorContinuousParams,                                     VolumeModulationParams);                                   // 0x0060(0x0020)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeModulatorContinuous");
		return ptr;
	}


};

// Class Engine.SoundNodeOscillator
// 0x002C (FullSize[0x0064] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_0868 - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeOscillator : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0868, unsigned char,                                                         bModulateVolume);                                          // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0868, unsigned char,                                                         bModulatePitch);                                           // 0x0040(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0868, float,                                                                 AmplitudeMin);                                             // 0x0044(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0868, float,                                                                 AmplitudeMax);                                             // 0x0048(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0868, float,                                                                 FrequencyMin);                                             // 0x004C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0868, float,                                                                 FrequencyMax);                                             // 0x0050(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0868, float,                                                                 OffsetMin);                                                // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0868, float,                                                                 OffsetMax);                                                // 0x0058(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0868, float,                                                                 CenterMin);                                                // 0x005C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0868, float,                                                                 CenterMax);                                                // 0x0060(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeOscillator");
		return ptr;
	}


};

// Class Engine.SoundNodeParamCrossFade
// 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
// LastOffsetWithSize(0x0050)
#define PADDING_0869 - 0x0000 // Minimum to subtract -> (0000)
class USoundNodeParamCrossFade : public USoundNodeDistanceCrossFade
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0869, struct FName,                                                          ParamName);                                                // 0x0050(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeParamCrossFade");
		return ptr;
	}


};

// Class Engine.SoundNodeQualityLevel
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
class USoundNodeQualityLevel : public USoundNode
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeQualityLevel");
		return ptr;
	}


};

// Class Engine.SoundNodeRandom
// 0x003C (FullSize[0x0074] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_086B - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeRandom : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_086B, TArray<float>,                                                         Weights);                                                  // 0x0040(0x0010)  (Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_086B, int,                                                                   PreselectAtLevelLoad);                                     // 0x0050(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_086B, unsigned char,                                                         bShouldExcludeFromBranchCulling);                          // 0x0054(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_086B, unsigned char,                                                         bSoundCueExcludedFromBranchCulling);                       // 0x0054(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_086B, unsigned char,                                                         bRandomizeWithoutReplacement);                             // 0x0058(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_086B, TArray<bool>,                                                          HasBeenUsed);                                              // 0x0060(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_086B, int,                                                                   NumRandomUsed);                                            // 0x0070(0x0004)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeRandom");
		return ptr;
	}


};

// Class Engine.SoundNodeSoundClass
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_086C - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeSoundClass : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_086C, class USoundClass*,                                                    SoundClassOverride);                                       // 0x0040(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeSoundClass");
		return ptr;
	}


};

// Class Engine.SoundNodeSwitch
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_086D - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeSwitch : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_086D, struct FName,                                                          IntParameterName);                                         // 0x0040(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeSwitch");
		return ptr;
	}


};

// Class Engine.SoundNodeWaveParam
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
#define PADDING_086E - 0x0000 // Minimum to subtract -> (0008)
class USoundNodeWaveParam : public USoundNode
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_086E, struct FName,                                                          WaveParameterName);                                        // 0x0040(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeWaveParam");
		return ptr;
	}


};

// Class Engine.SoundNodeWavePlayer
// 0x0009 (FullSize[0x0049] - InheritedSize[0x0040])
// LastOffsetWithSize(0x0038)
#define PADDING_086F - 0x0000 // Minimum to subtract -> (0030)
class USoundNodeWavePlayer : public USoundNodeAssetReferencer
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0030 PADDING_086F, class USoundWave*,                                                     SoundWave);                                                // 0x0068(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0038 PADDING_086F, unsigned char,                                                         bLooping);                                                 // 0x0070(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundNodeWavePlayer");
		return ptr;
	}


};

// Class Engine.SoundSourceBus
// 0x0121 (FullSize[0x02C9] - InheritedSize[0x01A8])
// LastOffsetWithSize(0x01A8)
#define PADDING_0870 - 0x0000 // Minimum to subtract -> (0118)
class USoundSourceBus : public USoundWave
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0118 PADDING_0870, ESourceBusChannels,                                                    SourceBusChannels);                                        // 0x02C0(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x011C PADDING_0870, float,                                                                 SourceBusDuration);                                        // 0x02C4(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0120 PADDING_0870, unsigned char,                                                         bAutoDeactivateWhenSilent);                                // 0x02C8(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundSourceBus");
		return ptr;
	}


};

// Class Engine.SoundSubmix
// 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0871 - 0x0000 // Minimum to subtract -> (0000)
class USoundSubmix : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0871, TArray<class USoundSubmix*>,                                           ChildSubmixes);                                            // 0x0028(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0871, class USoundSubmix*,                                                   ParentSubmix);                                             // 0x0038(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0871, ESubmixChannelFormat,                                                  ChannelFormat);                                            // 0x0040(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0019 PADDING_0871, unsigned char,                                                         bMuteWhenBackgrounded);                                    // 0x0041(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0871, TArray<class USoundEffectSubmixPreset*>,                               SubmixEffectChain);                                        // 0x0048(0x0010)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0871, class UAmbisonicsSubmixSettingsBase*,                                  AmbisonicsPluginSettings);                                 // 0x0058(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0871, int,                                                                   EnvelopeFollowerAttackTime);                               // 0x0060(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_0871, int,                                                                   EnvelopeFollowerReleaseTime);                              // 0x0064(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0871, float,                                                                 OutputVolume);                                             // 0x0068(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0871, struct FScriptMulticastDelegate,                                       OnSubmixRecordedFileDone);                                 // 0x0070(0x0010)  (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SoundSubmix");
		return ptr;
	}


	void StopRecordingOutput(class UObject* WorldContextObject, EAudioRecordingExportType ExportType, const struct FString& Name, const struct FString& Path, class USoundWave* ExistingSoundWaveToOverwrite);
	void StopEnvelopeFollowing(class UObject* WorldContextObject);
	void StartRecordingOutput(class UObject* WorldContextObject, float ExpectedDuration);
	void StartEnvelopeFollowing(class UObject* WorldContextObject);
	void SetSubmixOutputVolume(class UObject* WorldContextObject, float InOutputVolume);
	void AddEnvelopeFollowerDelegate(class UObject* WorldContextObject, const struct FScriptDelegate& OnSubmixEnvelopeBP);
};

// Class Engine.SpectatorPawnMovement
// 0x0008 (FullSize[0x0179] - InheritedSize[0x0171])
// LastOffsetWithSize(0x0171)
#define PADDING_0872 - 0x0000 // Minimum to subtract -> (0007)
class USpectatorPawnMovement : public UFloatingPawnMovement
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0007 PADDING_0872, unsigned char,                                                         bIgnoreTimeDilation);                                      // 0x0178(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SpectatorPawnMovement");
		return ptr;
	}


};

// Class Engine.SphereReflectionCapture
// 0x0008 (FullSize[0x0258] - InheritedSize[0x0250])
// LastOffsetWithSize(0x0250)
#define PADDING_0873 - 0x0000 // Minimum to subtract -> (0000)
class ASphereReflectionCapture : public AReflectionCapture
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0873, class UDrawSphereComponent*,                                           DrawCaptureRadius);                                        // 0x0250(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SphereReflectionCapture");
		return ptr;
	}


};

// Class Engine.SphereReflectionCaptureComponent
// 0x004C (FullSize[0x02A0] - InheritedSize[0x0254])
// LastOffsetWithSize(0x0254)
#define PADDING_0874 - 0x0000 // Minimum to subtract -> (003C)
class USphereReflectionCaptureComponent : public UReflectionCaptureComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x003C PADDING_0874, float,                                                                 InfluenceRadius);                                          // 0x0290(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0874, float,                                                                 CaptureDistanceScale);                                     // 0x0294(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0874, class UDrawSphereComponent*,                                           PreviewInfluenceRadius);                                   // 0x0298(0x0008)  (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SphereReflectionCaptureComponent");
		return ptr;
	}


};

// Class Engine.SplineMetadata
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class USplineMetadata : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SplineMetadata");
		return ptr;
	}


};

// Class Engine.SplineComponent
// 0x00EF (FullSize[0x04F4] - InheritedSize[0x0405])
// LastOffsetWithSize(0x0408)
#define PADDING_0876 - 0x0000 // Minimum to subtract -> (0000)
class USplineComponent : public UPrimitiveComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0876, struct FSplineCurves,                                                  SplineCurves);                                             // 0x0408(0x0068)  (Edit, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0876, struct FInterpCurveVector,                                             SplineInfo);                                               // 0x0470(0x0018)  (ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0876, struct FInterpCurveQuat,                                               SplineRotInfo);                                            // 0x0488(0x0018)  (ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_0876, struct FInterpCurveVector,                                             SplineScaleInfo);                                          // 0x04A0(0x0018)  (ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B0 PADDING_0876, struct FInterpCurveFloat,                                              SplineReparamTable);                                       // 0x04B8(0x0018)  (ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00C8 PADDING_0876, bool,                                                                  bAllowSplineEditingPerInstance);                           // 0x04D0(0x0001)  (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00CC PADDING_0876, int,                                                                   ReparamStepsPerSegment);                                   // 0x04D4(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_0876, float,                                                                 Duration);                                                 // 0x04D8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D4 PADDING_0876, bool,                                                                  bStationaryEndpoints);                                     // 0x04DC(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D5 PADDING_0876, bool,                                                                  bSplineHasBeenEdited);                                     // 0x04DD(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D6 PADDING_0876, bool,                                                                  bModifiedByConstructionScript);                            // 0x04DE(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D7 PADDING_0876, bool,                                                                  bInputSplinePointsToConstructionScript);                   // 0x04DF(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D8 PADDING_0876, bool,                                                                  bDrawDebug);                                               // 0x04E0(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D9 PADDING_0876, bool,                                                                  bClosedLoop);                                              // 0x04E1(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00DA PADDING_0876, bool,                                                                  bLoopPositionOverride);                                    // 0x04E2(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00DC PADDING_0876, float,                                                                 LoopPosition);                                             // 0x04E4(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00E0 PADDING_0876, struct FVector,                                                        DefaultUpVector);                                          // 0x04E8(0x000C)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SplineComponent");
		return ptr;
	}


	void UpdateSpline();
	void SetWorldLocationAtSplinePoint(int PointIndex, const struct FVector& InLocation);
	void SetUpVectorAtSplinePoint(int PointIndex, const struct FVector& InUpVector, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUpdateSpline);
	void SetUnselectedSplineSegmentColor(const struct FLinearColor& SegmentColor);
	void SetTangentsAtSplinePoint(int PointIndex, const struct FVector& InArriveTangent, const struct FVector& InLeaveTangent, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUpdateSpline);
	void SetTangentAtSplinePoint(int PointIndex, const struct FVector& InTangent, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUpdateSpline);
	void SetSplineWorldPoints(TArray<struct FVector> Points);
	void SetSplinePointType(int PointIndex, TEnumAsByte<ESplinePointType> Type, bool bUpdateSpline);
	void SetSplinePoints(TArray<struct FVector> Points, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUpdateSpline);
	void SetSplineLocalPoints(TArray<struct FVector> Points);
	void SetSelectedSplineSegmentColor(const struct FLinearColor& SegmentColor);
	void SetLocationAtSplinePoint(int PointIndex, const struct FVector& InLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUpdateSpline);
	void SetDrawDebug(bool bShow);
	void SetDefaultUpVector(const struct FVector& UpVector, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	void SetClosedLoopAtPosition(bool bInClosedLoop, float Key, bool bUpdateSpline);
	void SetClosedLoop(bool bInClosedLoop, bool bUpdateSpline);
	void RemoveSplinePoint(int Index, bool bUpdateSpline);
	bool IsClosedLoop();
	struct FVector GetWorldTangentAtDistanceAlongSpline(float distance);
	struct FRotator GetWorldRotationAtTime(float Time, bool bUseConstantVelocity);
	struct FRotator GetWorldRotationAtDistanceAlongSpline(float distance);
	struct FVector GetWorldLocationAtTime(float Time, bool bUseConstantVelocity);
	struct FVector GetWorldLocationAtSplinePoint(int PointIndex);
	struct FVector GetWorldLocationAtDistanceAlongSpline(float distance);
	struct FVector GetWorldDirectionAtTime(float Time, bool bUseConstantVelocity);
	struct FVector GetWorldDirectionAtDistanceAlongSpline(float distance);
	struct FVector GetUpVectorAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity);
	struct FVector GetUpVectorAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	struct FVector GetUpVectorAtDistanceAlongSpline(float distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	struct FTransform GetTransformAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity, bool bUseScale);
	struct FTransform GetTransformAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseScale);
	struct FTransform GetTransformAtDistanceAlongSpline(float distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseScale);
	struct FVector GetTangentAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity);
	struct FVector GetTangentAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	struct FVector GetTangentAtDistanceAlongSpline(float distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	TEnumAsByte<ESplinePointType> GetSplinePointType(int PointIndex);
	float GetSplineLength();
	struct FVector GetScaleAtTime(float Time, bool bUseConstantVelocity);
	struct FVector GetScaleAtSplinePoint(int PointIndex);
	struct FVector GetScaleAtDistanceAlongSpline(float distance);
	struct FRotator GetRotationAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity);
	struct FRotator GetRotationAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	struct FRotator GetRotationAtDistanceAlongSpline(float distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	float GetRollAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity);
	float GetRollAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	float GetRollAtDistanceAlongSpline(float distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	struct FVector GetRightVectorAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity);
	struct FVector GetRightVectorAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	struct FVector GetRightVectorAtDistanceAlongSpline(float distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	int GetNumberOfSplinePoints();
	struct FVector GetLocationAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity);
	struct FVector GetLocationAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	struct FVector GetLocationAtDistanceAlongSpline(float distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	void GetLocationAndTangentAtSplinePoint(int PointIndex, struct FVector* Location, struct FVector* Tangent, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	void GetLocalLocationAndTangentAtSplinePoint(int PointIndex, struct FVector* LocalLocation, struct FVector* LocalTangent);
	struct FVector GetLeaveTangentAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	float GetInputKeyAtDistanceAlongSpline(float distance);
	float GetFloatPropertyAtSplinePoint(int Index, const struct FName& PropertyName);
	float GetDistanceAlongSplineAtSplinePoint(int PointIndex);
	struct FVector GetDirectionAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity);
	struct FVector GetDirectionAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	struct FVector GetDirectionAtDistanceAlongSpline(float distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	struct FVector GetDefaultUpVector(TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	struct FVector GetArriveTangentAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	struct FVector FindUpVectorClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	struct FTransform FindTransformClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseScale);
	struct FVector FindTangentClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	struct FVector FindScaleClosestToWorldLocation(const struct FVector& WorldLocation);
	struct FRotator FindRotationClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	float FindRollClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	struct FVector FindRightVectorClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	struct FVector FindLocationClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	float FindInputKeyClosestToWorldLocation(const struct FVector& WorldLocation);
	struct FVector FindDirectionClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);
	void ClearSplinePoints(bool bUpdateSpline);
	void AddSplineWorldPoint(const struct FVector& Position);
	void AddSplinePointAtIndex(const struct FVector& Position, int Index, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUpdateSpline);
	void AddSplinePoint(const struct FVector& Position, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUpdateSpline);
	void AddSplineLocalPoint(const struct FVector& Position);
	void AddPoints(TArray<struct FSplinePoint> Points, bool bUpdateSpline);
	void AddPoint(const struct FSplinePoint& Point, bool bUpdateSpline);
};

// Class Engine.SplineMeshActor
// 0x0018 (FullSize[0x0250] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0877 - 0x0000 // Minimum to subtract -> (0010)
class ASplineMeshActor : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0877, class USplineMeshComponent*,                                           SplineMeshComponent);                                      // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SplineMeshActor");
		return ptr;
	}


};

// Class Engine.SplineMeshComponent
// 0x0099 (FullSize[0x0531] - InheritedSize[0x0498])
// LastOffsetWithSize(0x0498)
#define PADDING_0878 - 0x0000 // Minimum to subtract -> (0008)
class USplineMeshComponent : public UStaticMeshComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0878, struct FSplineMeshParams,                                              SplineParams);                                             // 0x04A0(0x0058)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0060 PADDING_0878, struct FVector,                                                        SplineUpDir);                                              // 0x04F8(0x000C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_0878, unsigned char,                                                         bAllowSplineEditingPerInstance);                           // 0x0504(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x006C PADDING_0878, unsigned char,                                                         bSmoothInterpRollScale);                                   // 0x0504(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0070 PADDING_0878, TEnumAsByte<ESplineMeshAxis>,                                          ForwardAxis);                                              // 0x0508(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0074 PADDING_0878, float,                                                                 SplineBoundaryMin);                                        // 0x050C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0078 PADDING_0878, float,                                                                 SplineBoundaryMax);                                        // 0x0510(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0080 PADDING_0878, class UBodySetup*,                                                     BodySetup);                                                // 0x0518(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0088 PADDING_0878, struct FGuid,                                                          CachedMeshBodySetupGuid);                                  // 0x0520(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0098 PADDING_0878, unsigned char,                                                         bMeshDirty);                                               // 0x0530(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SplineMeshComponent");
		return ptr;
	}


	void UpdateMesh();
	void SetStartTangent(const struct FVector& StartTangent, bool bUpdateMesh);
	void SetStartScale(const struct FVector2D& StartScale, bool bUpdateMesh);
	void SetStartRoll(float StartRoll, bool bUpdateMesh);
	void SetStartPosition(const struct FVector& StartPos, bool bUpdateMesh);
	void SetStartOffset(const struct FVector2D& StartOffset, bool bUpdateMesh);
	void SetStartAndEnd(const struct FVector& StartPos, const struct FVector& StartTangent, const struct FVector& EndPos, const struct FVector& EndTangent, bool bUpdateMesh);
	void SetSplineUpDir(const struct FVector& InSplineUpDir, bool bUpdateMesh);
	void SetForwardAxis(TEnumAsByte<ESplineMeshAxis> InForwardAxis, bool bUpdateMesh);
	void SetEndTangent(const struct FVector& EndTangent, bool bUpdateMesh);
	void SetEndScale(const struct FVector2D& EndScale, bool bUpdateMesh);
	void SetEndRoll(float EndRoll, bool bUpdateMesh);
	void SetEndPosition(const struct FVector& EndPos, bool bUpdateMesh);
	void SetEndOffset(const struct FVector2D& EndOffset, bool bUpdateMesh);
	void SetBoundaryMin(float InBoundaryMin, bool bUpdateMesh);
	void SetBoundaryMax(float InBoundaryMax, bool bUpdateMesh);
	struct FVector GetStartTangent();
	struct FVector2D GetStartScale();
	float GetStartRoll();
	struct FVector GetStartPosition();
	struct FVector2D GetStartOffset();
	struct FVector GetSplineUpDir();
	TEnumAsByte<ESplineMeshAxis> GetForwardAxis();
	struct FVector GetEndTangent();
	struct FVector2D GetEndScale();
	float GetEndRoll();
	struct FVector GetEndPosition();
	struct FVector2D GetEndOffset();
	float GetBoundaryMin();
	float GetBoundaryMax();
};

// Class Engine.SpotLightComponent
// 0x0010 (FullSize[0x0394] - InheritedSize[0x0384])
// LastOffsetWithSize(0x0384)
#define PADDING_0879 - 0x0000 // Minimum to subtract -> (0008)
class USpotLightComponent : public UPointLightComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0008 PADDING_0879, float,                                                                 OuterConeAngle);                                           // 0x038C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0879, float,                                                                 LightShaftConeAngle);                                      // 0x0390(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SpotLightComponent");
		return ptr;
	}


	void SetOuterConeAngle(float NewOuterConeAngle);
	void SetInnerConeAngle(float NewInnerConeAngle);
};

// Class Engine.SpringArmComponent
// 0x00D0 (FullSize[0x0250] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_087A - 0x0000 // Minimum to subtract -> (008D)
class USpringArmComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x008D PADDING_087A, struct FVector,                                                        SocketOffset);                                             // 0x021C(0x000C)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0099 PADDING_087A, struct FVector,                                                        TargetOffset);                                             // 0x0228(0x000C)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_087A, float,                                                                 ProbeSize);                                                // 0x0234(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A9 PADDING_087A, TEnumAsByte<ECollisionChannel>,                                        ProbeChannel);                                             // 0x0238(0x0001)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_087A, unsigned char,                                                         bDoCollisionTest);                                         // 0x023C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_087A, unsigned char,                                                         bUsePawnControlRotation);                                  // 0x023C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_087A, unsigned char,                                                         bInheritPitch);                                            // 0x023C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_087A, unsigned char,                                                         bInheritYaw);                                              // 0x023C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_087A, unsigned char,                                                         bInheritRoll);                                             // 0x023C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_087A, unsigned char,                                                         bEnableCameraLag);                                         // 0x023C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_087A, unsigned char,                                                         bEnableCameraRotationLag);                                 // 0x023C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AD PADDING_087A, unsigned char,                                                         bUseCameraLagSubstepping);                                 // 0x023C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00AE PADDING_087A, unsigned char,                                                         bDrawDebugLagMarkers);                                     // 0x023D(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B1 PADDING_087A, float,                                                                 CameraLagSpeed);                                           // 0x0240(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B5 PADDING_087A, float,                                                                 CameraRotationLagSpeed);                                   // 0x0244(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B9 PADDING_087A, float,                                                                 CameraLagMaxTimeStep);                                     // 0x0248(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00BD PADDING_087A, float,                                                                 CameraLagMaxDistance);                                     // 0x024C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SpringArmComponent");
		return ptr;
	}


	bool IsCollisionFixApplied();
	struct FVector GetUnfixedCameraPosition();
	struct FRotator GetTargetRotation();
};

// Class Engine.StaticMesh
// 0x0102 (FullSize[0x0140] - InheritedSize[0x003E])
// LastOffsetWithSize(0x003E)
#define PADDING_087B - 0x0000 // Minimum to subtract -> (0022)
class UStaticMesh : public UStreamableRenderAsset
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0022 PADDING_087B, struct FPerPlatformInt,                                                MinLOD);                                                   // 0x0060(0x0004)  (NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0026 PADDING_087B, float,                                                                 LpvBiasMultiplier);                                        // 0x0064(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002A PADDING_087B, TArray<struct FStaticMaterial>,                                        StaticMaterials);                                          // 0x0068(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003A PADDING_087B, float,                                                                 LightmapUVDensity);                                        // 0x0078(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003E PADDING_087B, int,                                                                   LightMapResolution);                                       // 0x007C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0042 PADDING_087B, int,                                                                   LightMapCoordinateIndex);                                  // 0x0080(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0046 PADDING_087B, float,                                                                 DistanceFieldSelfShadowBias);                              // 0x0084(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x004A PADDING_087B, class UBodySetup*,                                                     BodySetup);                                                // 0x0088(0x0008)  (Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0052 PADDING_087B, int,                                                                   LODForCollision);                                          // 0x0090(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0056 PADDING_087B, unsigned char,                                                         bGenerateMeshDistanceField);                               // 0x0094(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0056 PADDING_087B, unsigned char,                                                         bStripComplexCollisionForConsole);                         // 0x0094(0x0001) BIT_FIELD (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0056 PADDING_087B, unsigned char,                                                         bHasNavigationData);                                       // 0x0094(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0056 PADDING_087B, unsigned char,                                                         bSupportUniformlyDistributedSampling);                     // 0x0094(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0056 PADDING_087B, unsigned char,                                                         bAllowCPUAccess);                                          // 0x0094(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0056 PADDING_087B, unsigned char,                                                         bSupportGpuUniformlyDistributedSampling);                  // 0x0094(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x007A PADDING_087B, TArray<class UStaticMeshSocket*>,                                      Sockets);                                                  // 0x00B8(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009A PADDING_087B, struct FVector,                                                        PositiveBoundsExtension);                                  // 0x00D8(0x000C)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A6 PADDING_087B, struct FVector,                                                        NegativeBoundsExtension);                                  // 0x00E4(0x000C)  (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B2 PADDING_087B, struct FBoxSphereBounds,                                               ExtendedBounds);                                           // 0x00F0(0x001C)  (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00CE PADDING_087B, int,                                                                   ElementToIgnoreForTexFactor);                              // 0x010C(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00D2 PADDING_087B, TArray<class UAssetUserData*>,                                         AssetUserData);                                            // 0x0110(0x0010)  (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00EA PADDING_087B, class UObject*,                                                        EditableMesh);                                             // 0x0128(0x0008)  (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00F2 PADDING_087B, class UStaticMesh*,                                                    ComplexCollisionMesh);                                     // 0x0130(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00FA PADDING_087B, class UNavCollisionBase*,                                              NavCollision);                                             // 0x0138(0x0008)  (Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.StaticMesh");
		return ptr;
	}


	void RemoveSocket(class UStaticMeshSocket* Socket);
	int GetNumSections(int InLOD);
	int GetNumLODs();
	int GetMaterialIndex(const struct FName& MaterialSlotName);
	class UMaterialInterface* GetMaterial(int MaterialIndex);
	struct FBoxSphereBounds GetBounds();
	struct FBox GetBoundingBox();
	class UStaticMeshSocket* FindSocket(const struct FName& InSocketName);
	void AddSocket(class UStaticMeshSocket* Socket);
};

// Class Engine.StaticMeshSocket
// 0x0040 (FullSize[0x0068] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_087C - 0x0000 // Minimum to subtract -> (0000)
class UStaticMeshSocket : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_087C, struct FName,                                                          SocketName);                                               // 0x0028(0x0008)  (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_087C, struct FVector,                                                        RelativeLocation);                                         // 0x0030(0x000C)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_087C, struct FRotator,                                                       RelativeRotation);                                         // 0x003C(0x000C)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_087C, struct FVector,                                                        RelativeScale);                                            // 0x0048(0x000C)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_087C, struct FString,                                                        Tag);                                                      // 0x0058(0x0010)  (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.StaticMeshSocket");
		return ptr;
	}


};

// Class Engine.StereoLayerComponent
// 0x00E4 (FullSize[0x0264] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_087D - 0x0000 // Minimum to subtract -> (0091)
class UStereoLayerComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0091 PADDING_087D, class UTexture*,                                                       Texture);                                                  // 0x0220(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x0099 PADDING_087D, class UTexture*,                                                       LeftTexture);                                              // 0x0228(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00A1 PADDING_087D, unsigned char,                                                         bQuadPreserveTextureRatio);                                // 0x0230(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A5 PADDING_087D, struct FVector2D,                                                      QuadSize);                                                 // 0x0234(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00AD PADDING_087D, struct FBox2D,                                                         UVRect);                                                   // 0x023C(0x0014)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00C1 PADDING_087D, float,                                                                 CylinderRadius);                                           // 0x0250(0x0004)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00C5 PADDING_087D, float,                                                                 CylinderOverlayArc);                                       // 0x0254(0x0004)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00C9 PADDING_087D, int,                                                                   CylinderHeight);                                           // 0x0258(0x0004)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00CD PADDING_087D, TEnumAsByte<EStereoLayerType>,                                         StereoLayerType);                                          // 0x025C(0x0001)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00CE PADDING_087D, TEnumAsByte<EStereoLayerShape>,                                        StereoLayerShape);                                         // 0x025D(0x0001)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		DEFINE_MEMBER_NNN(0x00D1 PADDING_087D, int,                                                                   Priority);                                                 // 0x0260(0x0004)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.StereoLayerComponent");
		return ptr;
	}


	void SetUVRect(const struct FBox2D& InUVRect);
	void SetTexture(class UTexture* InTexture);
	void SetQuadSize(const struct FVector2D& InQuadSize);
	void SetPriority(int InPriority);
	void SetLeftTexture(class UTexture* InTexture);
	void MarkTextureForUpdate();
	struct FBox2D GetUVRect();
	class UTexture* GetTexture();
	struct FVector2D GetQuadSize();
	int GetPriority();
	class UTexture* GetLeftTexture();
};

// Class Engine.StereoLayerFunctionLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UStereoLayerFunctionLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.StereoLayerFunctionLibrary");
		return ptr;
	}


	static void STATIC_ShowSplashScreen();
	static void STATIC_SetSplashScreen(class UTexture* Texture, const struct FVector2D& Scale, const struct FVector& Offset, bool bShowLoadingMovie, bool bShowOnSet);
	static void STATIC_HideSplashScreen();
	static void STATIC_EnableAutoLoadingSplashScreen(bool InAutoShowEnabled);
};

// Class Engine.StringTable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UStringTable : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.StringTable");
		return ptr;
	}


};

// Class Engine.SubsurfaceProfile
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0880 - 0x0000 // Minimum to subtract -> (0000)
class USubsurfaceProfile : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0880, struct FSubsurfaceProfileStruct,                                       Settings);                                                 // 0x0028(0x0050)  (Edit, NoDestructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SubsurfaceProfile");
		return ptr;
	}


};

// Class Engine.SubsystemBlueprintLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class USubsystemBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SubsystemBlueprintLibrary");
		return ptr;
	}


	static class ULocalPlayerSubsystem* STATIC_GetLocalPlayerSubSystemFromPlayerController(class APlayerController* PlayerController, class UClass* Class);
	static class ULocalPlayerSubsystem* STATIC_GetLocalPlayerSubsystem(class UObject* ContextObject, class UClass* Class);
	static class UGameInstanceSubsystem* STATIC_GetGameInstanceSubsystem(class UObject* ContextObject, class UClass* Class);
	static class UEngineSubsystem* STATIC_GetEngineSubsystem(class UClass* Class);
};

// Class Engine.SubUVAnimation
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0882 - 0x0000 // Minimum to subtract -> (0000)
class USubUVAnimation : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0882, class UTexture2D*,                                                     SubUVTexture);                                             // 0x0028(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0882, int,                                                                   SubImages_Horizontal);                                     // 0x0030(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0882, int,                                                                   SubImages_Vertical);                                       // 0x0034(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0882, TEnumAsByte<ESubUVBoundingVertexCount>,                                BoundingMode);                                             // 0x0038(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0011 PADDING_0882, TEnumAsByte<EOpacitySourceMode>,                                       OpacitySourceMode);                                        // 0x0039(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0882, float,                                                                 AlphaThreshold);                                           // 0x003C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SubUVAnimation");
		return ptr;
	}


};

// Class Engine.TimecodeProvider
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UTimecodeProvider : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TimecodeProvider");
		return ptr;
	}


	struct FTimecode GetTimecode();
	ETimecodeProviderSynchronizationState GetSynchronizationState();
	struct FFrameRate GetFrameRate();
};

// Class Engine.SystemTimeTimecodeProvider
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0884 - 0x0000 // Minimum to subtract -> (0000)
class USystemTimeTimecodeProvider : public UTimecodeProvider
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0884, struct FFrameRate,                                                     FrameRate);                                                // 0x0028(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.SystemTimeTimecodeProvider");
		return ptr;
	}


	void SetFrameRate(const struct FFrameRate& InFrameRate);
};

// Class Engine.TargetPoint
// 0x0010 (FullSize[0x0248] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
class ATargetPoint : public AActor
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TargetPoint");
		return ptr;
	}


};

// Class Engine.TextPropertyTestObject
// 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0886 - 0x0000 // Minimum to subtract -> (0000)
class UTextPropertyTestObject : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0886, struct FText,                                                          DefaultedText);                                            // 0x0028(0x0018)  (NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0886, struct FText,                                                          UndefaultedText);                                          // 0x0040(0x0018)  (NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0886, struct FText,                                                          TransientText);                                            // 0x0058(0x0018)  (NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TextPropertyTestObject");
		return ptr;
	}


};

// Class Engine.TextRenderActor
// 0x0018 (FullSize[0x0250] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_0887 - 0x0000 // Minimum to subtract -> (0010)
class ATextRenderActor : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0887, class UTextRenderComponent*,                                           TextRender);                                               // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TextRenderActor");
		return ptr;
	}


};

// Class Engine.TextRenderComponent
// 0x004C (FullSize[0x0451] - InheritedSize[0x0405])
// LastOffsetWithSize(0x0408)
#define PADDING_0888 - 0x0000 // Minimum to subtract -> (0000)
class UTextRenderComponent : public UPrimitiveComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0888, struct FText,                                                          Text);                                                     // 0x0408(0x0018)  (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0888, class UMaterialInterface*,                                             TextMaterial);                                             // 0x0420(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0888, class UFont*,                                                          Font);                                                     // 0x0428(0x0008)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0888, TEnumAsByte<EHorizTextAligment>,                                       HorizontalAlignment);                                      // 0x0430(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0029 PADDING_0888, TEnumAsByte<EVerticalTextAligment>,                                    VerticalAlignment);                                        // 0x0431(0x0001)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x002C PADDING_0888, struct FColor,                                                         TextRenderColor);                                          // 0x0434(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0888, float,                                                                 XScale);                                                   // 0x0438(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0034 PADDING_0888, float,                                                                 YScale);                                                   // 0x043C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0888, float,                                                                 WorldSize);                                                // 0x0440(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_0888, float,                                                                 InvDefaultSize);                                           // 0x0444(0x0004)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0040 PADDING_0888, float,                                                                 HorizSpacingAdjust);                                       // 0x0448(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0044 PADDING_0888, float,                                                                 VertSpacingAdjust);                                        // 0x044C(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_0888, unsigned char,                                                         bAlwaysRenderAsText);                                      // 0x0450(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TextRenderComponent");
		return ptr;
	}


	void SetYScale(float Value);
	void SetXScale(float Value);
	void SetWorldSize(float Value);
	void SetVertSpacingAdjust(float Value);
	void SetVerticalAlignment(TEnumAsByte<EVerticalTextAligment> Value);
	void SetTextRenderColor(const struct FColor& Value);
	void SetTextMaterial(class UMaterialInterface* Material);
	void SetText(const struct FString& Value);
	void SetHorizSpacingAdjust(float Value);
	void SetHorizontalAlignment(TEnumAsByte<EHorizTextAligment> Value);
	void SetFont(class UFont* Value);
	void K2_SetText(const struct FText& Value);
	struct FVector GetTextWorldSize();
	struct FVector GetTextLocalSize();
};

// Class Engine.Texture2DDynamic
// 0x0061 (FullSize[0x00D9] - InheritedSize[0x0078])
// LastOffsetWithSize(0x0078)
#define PADDING_0889 - 0x0000 // Minimum to subtract -> (0060)
class UTexture2DDynamic : public UTexture
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0060 PADDING_0889, TEnumAsByte<EPixelFormat>,                                             Format);                                                   // 0x00D8(0x0001)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.Texture2DDynamic");
		return ptr;
	}


};

// Class Engine.TextureLightProfile
// 0x0024 (FullSize[0x0108] - InheritedSize[0x00E4])
// LastOffsetWithSize(0x00E4)
#define PADDING_088A - 0x0000 // Minimum to subtract -> (001C)
class UTextureLightProfile : public UTexture2D
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x001C PADDING_088A, float,                                                                 Brightness);                                               // 0x0100(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_088A, float,                                                                 TextureMultiplier);                                        // 0x0104(0x0004)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TextureLightProfile");
		return ptr;
	}


};

// Class Engine.TextureRenderTargetCube
// 0x001A (FullSize[0x00EE] - InheritedSize[0x00D4])
// LastOffsetWithSize(0x00D4)
#define PADDING_088B - 0x0000 // Minimum to subtract -> (0004)
class UTextureRenderTargetCube : public UTextureRenderTarget
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0004 PADDING_088B, int,                                                                   SizeX);                                                    // 0x00D8(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_088B, struct FLinearColor,                                                   ClearColor);                                               // 0x00DC(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_088B, TEnumAsByte<EPixelFormat>,                                             OverrideFormat);                                           // 0x00EC(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0019 PADDING_088B, unsigned char,                                                         bHDR);                                                     // 0x00ED(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0019 PADDING_088B, unsigned char,                                                         bForceLinearGamma);                                        // 0x00ED(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TextureRenderTargetCube");
		return ptr;
	}


};

// Class Engine.ThumbnailInfo
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UThumbnailInfo : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.ThumbnailInfo");
		return ptr;
	}


};

// Class Engine.TimelineComponent
// 0x00A9 (FullSize[0x0171] - InheritedSize[0x00C8])
// LastOffsetWithSize(0x00C8)
#define PADDING_088D - 0x0000 // Minimum to subtract -> (0010)
class UTimelineComponent : public UActorComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_088D, struct FTimeline,                                                      TheTimeline);                                              // 0x00D8(0x0098)  (Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_088D, unsigned char,                                                         bIgnoreTimeDilation);                                      // 0x0170(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TimelineComponent");
		return ptr;
	}


	void Stop();
	void SetVectorCurve(class UCurveVector* NewVectorCurve, const struct FName& VectorTrackName);
	void SetTimelineLengthMode(TEnumAsByte<ETimelineLengthMode> NewLengthMode);
	void SetTimelineLength(float NewLength);
	void SetPlayRate(float NewRate);
	void SetPlaybackPosition(float NewPosition, bool bFireEvents, bool bFireUpdate);
	void SetNewTime(float NewTime);
	void SetLooping(bool bNewLooping);
	void SetLinearColorCurve(class UCurveLinearColor* NewLinearColorCurve, const struct FName& LinearColorTrackName);
	void SetIgnoreTimeDilation(bool bNewIgnoreTimeDilation);
	void SetFloatCurve(class UCurveFloat* NewFloatCurve, const struct FName& FloatTrackName);
	void ReverseFromEnd();
	void Reverse();
	void PlayFromStart();
	void Play();
	void OnRep_Timeline();
	bool IsReversing();
	bool IsPlaying();
	bool IsLooping();
	float GetTimelineLength();
	float GetPlayRate();
	float GetPlaybackPosition();
	bool GetIgnoreTimeDilation();
};

// Class Engine.TimelineTemplate
// 0x0088 (FullSize[0x00B0] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_088E - 0x0000 // Minimum to subtract -> (0000)
class UTimelineTemplate : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_088E, float,                                                                 TimelineLength);                                           // 0x0028(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_088E, TEnumAsByte<ETimelineLengthMode>,                                      LengthMode);                                               // 0x002C(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0005 PADDING_088E, unsigned char,                                                         bAutoPlay);                                                // 0x002D(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0005 PADDING_088E, unsigned char,                                                         bLoop);                                                    // 0x002D(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0005 PADDING_088E, unsigned char,                                                         bReplicated);                                              // 0x002D(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0005 PADDING_088E, unsigned char,                                                         bIgnoreTimeDilation);                                      // 0x002D(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_088E, TArray<struct FTTEventTrack>,                                          EventTracks);                                              // 0x0030(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_088E, TArray<struct FTTFloatTrack>,                                          FloatTracks);                                              // 0x0040(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_088E, TArray<struct FTTVectorTrack>,                                         VectorTracks);                                             // 0x0050(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_088E, TArray<struct FTTLinearColorTrack>,                                    LinearColorTracks);                                        // 0x0060(0x0010)  (ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0048 PADDING_088E, TArray<struct FBPVariableMetaDataEntry>,                               MetaDataArray);                                            // 0x0070(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0058 PADDING_088E, struct FGuid,                                                          TimelineGuid);                                             // 0x0080(0x0010)  (ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_088E, struct FName,                                                          VariableName);                                             // 0x0090(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0070 PADDING_088E, struct FName,                                                          DirectionPropertyName);                                    // 0x0098(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0078 PADDING_088E, struct FName,                                                          UpdateFunctionName);                                       // 0x00A0(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0080 PADDING_088E, struct FName,                                                          FinishedFunctionName);                                     // 0x00A8(0x0008)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TimelineTemplate");
		return ptr;
	}


};

// Class Engine.TireType
// 0x0004 (FullSize[0x0034] - InheritedSize[0x0030])
// LastOffsetWithSize(0x0030)
#define PADDING_088F - 0x0000 // Minimum to subtract -> (0000)
class UTireType : public UDataAsset
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_088F, float,                                                                 FrictionScale);                                            // 0x0030(0x0004)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TireType");
		return ptr;
	}


};

// Class Engine.TouchInterface
// 0x002C (FullSize[0x0054] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0890 - 0x0000 // Minimum to subtract -> (0000)
class UTouchInterface : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0890, TArray<struct FTouchInputControl>,                                     Controls);                                                 // 0x0028(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0890, float,                                                                 ActiveOpacity);                                            // 0x0038(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0890, float,                                                                 InactiveOpacity);                                          // 0x003C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0890, float,                                                                 TimeUntilDeactive);                                        // 0x0040(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0890, float,                                                                 TimeUntilReset);                                           // 0x0044(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0890, float,                                                                 ActivationDelay);                                          // 0x0048(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0890, bool,                                                                  bPreventRecenter);                                         // 0x004C(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0890, float,                                                                 StartupDelay);                                             // 0x0050(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TouchInterface");
		return ptr;
	}


};

// Class Engine.TriggerCapsule
// 0x0000 (FullSize[0x0250] - InheritedSize[0x0250])
// LastOffsetWithSize(0x0250)
class ATriggerCapsule : public ATriggerBase
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TriggerCapsule");
		return ptr;
	}


};

// Class Engine.TriggerSphere
// 0x0000 (FullSize[0x0250] - InheritedSize[0x0250])
// LastOffsetWithSize(0x0250)
class ATriggerSphere : public ATriggerBase
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TriggerSphere");
		return ptr;
	}


};

// Class Engine.TriggerVolume
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
class ATriggerVolume : public AVolume
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TriggerVolume");
		return ptr;
	}


};

// Class Engine.TwitterIntegrationBase
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
// LastOffsetWithSize(0x0038)
class UTwitterIntegrationBase : public UPlatformInterfaceBase
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.TwitterIntegrationBase");
		return ptr;
	}


	bool TwitterRequest(const struct FString& URL, TArray<struct FString> ParamKeysAndValues, TEnumAsByte<ETwitterRequestMethod> RequestMethod, int AccountIndex);
	bool ShowTweetUI(const struct FString& InitialMessage, const struct FString& URL, const struct FString& Picture);
	void Init();
	int GetNumAccounts();
	struct FString GetAccountName(int AccountIndex);
	bool CanShowTweetUI();
	bool AuthorizeAccounts();
};

// Class Engine.UserDefinedEnum
// 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
// LastOffsetWithSize(0x0030)
#define PADDING_0895 - 0x0000 // Minimum to subtract -> (0030)
class UUserDefinedEnum : public UEnum
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0030 PADDING_0895, TMap<struct FName COMMA struct FText>,                                 DisplayNameMap);                                           // 0x0060(0x0050)  (ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.UserDefinedEnum");
		return ptr;
	}


};

// Class Engine.UserDefinedStruct
// 0x0024 (FullSize[0x00BC] - InheritedSize[0x0098])
// LastOffsetWithSize(0x0098)
#define PADDING_0896 - 0x0000 // Minimum to subtract -> (0010)
class UUserDefinedStruct : public UScriptStruct
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0896, TEnumAsByte<EUserDefinedStructureStatus>,                              Status);                                                   // 0x00A8(0x0001)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0896, struct FGuid,                                                          Guid);                                                     // 0x00AC(0x0010)  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.UserDefinedStruct");
		return ptr;
	}


};

// Class Engine.UserInterfaceSettings
// 0x0230 (FullSize[0x0258] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0897 - 0x0000 // Minimum to subtract -> (0010)
class UUserInterfaceSettings : public UDeveloperSettings
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_0897, ERenderFocusRule,                                                      RenderFocusRule);                                          // 0x0038(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0897, TMap<TEnumAsByte<EMouseCursor> COMMA struct FHardwareCursorReference>, HardwareCursors);                                          // 0x0040(0x0050)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0068 PADDING_0897, TMap<TEnumAsByte<EMouseCursor> COMMA struct FSoftClassPath>,           SoftwareCursors);                                          // 0x0090(0x0050)  (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00B8 PADDING_0897, struct FSoftClassPath,                                                 DefaultCursor);                                            // 0x00E0(0x0018)  (ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00D0 PADDING_0897, struct FSoftClassPath,                                                 TextEditBeamCursor);                                       // 0x00F8(0x0018)  (ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00E8 PADDING_0897, struct FSoftClassPath,                                                 CrosshairsCursor);                                         // 0x0110(0x0018)  (ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0100 PADDING_0897, struct FSoftClassPath,                                                 HandCursor);                                               // 0x0128(0x0018)  (ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0118 PADDING_0897, struct FSoftClassPath,                                                 GrabHandCursor);                                           // 0x0140(0x0018)  (ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0130 PADDING_0897, struct FSoftClassPath,                                                 GrabHandClosedCursor);                                     // 0x0158(0x0018)  (ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0148 PADDING_0897, struct FSoftClassPath,                                                 SlashedCircleCursor);                                      // 0x0170(0x0018)  (ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0160 PADDING_0897, float,                                                                 ApplicationScale);                                         // 0x0188(0x0004)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0164 PADDING_0897, EUIScalingRule,                                                        UIScaleRule);                                              // 0x018C(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0168 PADDING_0897, struct FSoftClassPath,                                                 CustomScalingRuleClass);                                   // 0x0190(0x0018)  (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0180 PADDING_0897, struct FRuntimeFloatCurve,                                             UIScaleCurve);                                             // 0x01A8(0x0088)  (Edit, Config, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0208 PADDING_0897, bool,                                                                  bAllowHighDPIInGameMode);                                  // 0x0230(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0209 PADDING_0897, bool,                                                                  bLoadWidgetsOnDedicatedServer);                            // 0x0231(0x0001)  (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0210 PADDING_0897, TArray<class UObject*>,                                                CursorClasses);                                            // 0x0238(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0220 PADDING_0897, class UClass*,                                                         CustomScalingRuleClassInstance);                           // 0x0248(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		DEFINE_MEMBER_NNN(0x0228 PADDING_0897, class UDPICustomScalingRule*,                                          CustomScalingRule);                                        // 0x0250(0x0008)  (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.UserInterfaceSettings");
		return ptr;
	}


};

// Class Engine.VectorField
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_0898 - 0x0000 // Minimum to subtract -> (0000)
class UVectorField : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0898, struct FBox,                                                           Bounds);                                                   // 0x0028(0x001C)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0898, float,                                                                 Intensity);                                                // 0x0044(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.VectorField");
		return ptr;
	}


};

// Class Engine.VectorFieldAnimated
// 0x0040 (FullSize[0x0088] - InheritedSize[0x0048])
// LastOffsetWithSize(0x0048)
#define PADDING_0899 - 0x0000 // Minimum to subtract -> (0000)
class UVectorFieldAnimated : public UVectorField
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_0899, class UTexture2D*,                                                     Texture);                                                  // 0x0048(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_0899, TEnumAsByte<EVectorFieldConstructionOp>,                               ConstructionOp);                                           // 0x0050(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_0899, int,                                                                   VolumeSizeX);                                              // 0x0054(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_0899, int,                                                                   VolumeSizeY);                                              // 0x0058(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0014 PADDING_0899, int,                                                                   VolumeSizeZ);                                              // 0x005C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0018 PADDING_0899, int,                                                                   SubImagesX);                                               // 0x0060(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x001C PADDING_0899, int,                                                                   SubImagesY);                                               // 0x0064(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0020 PADDING_0899, int,                                                                   FrameCount);                                               // 0x0068(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0024 PADDING_0899, float,                                                                 FramesPerSecond);                                          // 0x006C(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0028 PADDING_0899, unsigned char,                                                         bLoop);                                                    // 0x0070(0x0001) BIT_FIELD (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_0899, class UVectorFieldStatic*,                                             NoiseField);                                               // 0x0078(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_0899, float,                                                                 NoiseScale);                                               // 0x0080(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_0899, float,                                                                 NoiseMax);                                                 // 0x0084(0x0004)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.VectorFieldAnimated");
		return ptr;
	}


};

// Class Engine.VectorFieldComponent
// 0x0014 (FullSize[0x0419] - InheritedSize[0x0405])
// LastOffsetWithSize(0x0408)
#define PADDING_089A - 0x0000 // Minimum to subtract -> (0000)
class UVectorFieldComponent : public UPrimitiveComponent
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_089A, class UVectorField*,                                                   VectorField);                                              // 0x0408(0x0008)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_089A, float,                                                                 Intensity);                                                // 0x0410(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_089A, float,                                                                 Tightness);                                                // 0x0414(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0010 PADDING_089A, unsigned char,                                                         bPreviewVectorField);                                      // 0x0418(0x0001) BIT_FIELD (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.VectorFieldComponent");
		return ptr;
	}


	void SetIntensity(float NewIntensity);
};

// Class Engine.VectorFieldStatic
// 0x00B8 (FullSize[0x0100] - InheritedSize[0x0048])
// LastOffsetWithSize(0x0048)
#define PADDING_089B - 0x0000 // Minimum to subtract -> (0000)
class UVectorFieldStatic : public UVectorField
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_089B, int,                                                                   SizeX);                                                    // 0x0048(0x0004)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0004 PADDING_089B, int,                                                                   SizeY);                                                    // 0x004C(0x0004)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_089B, int,                                                                   SizeZ);                                                    // 0x0050(0x0004)  (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x000C PADDING_089B, bool,                                                                  bAllowCPUAccess);                                          // 0x0054(0x0001)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x00A8 PADDING_089B, TArray<struct FVector4>,                                               CPUData);                                                  // 0x00F0(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.VectorFieldStatic");
		return ptr;
	}


};

// Class Engine.VectorFieldVolume
// 0x0018 (FullSize[0x0250] - InheritedSize[0x0238])
// LastOffsetWithSize(0x0238)
#define PADDING_089C - 0x0000 // Minimum to subtract -> (0010)
class AVectorFieldVolume : public AActor
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_089C, class UVectorFieldComponent*,                                          VectorFieldComponent);                                     // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.VectorFieldVolume");
		return ptr;
	}


};

// Class Engine.VirtualTexture
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UVirtualTexture : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.VirtualTexture");
		return ptr;
	}


};

// Class Engine.LightMapVirtualTexture
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class ULightMapVirtualTexture : public UVirtualTexture
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LightMapVirtualTexture");
		return ptr;
	}


};

// Class Engine.LightMapVirtualTexture2D
// 0x002C (FullSize[0x0110] - InheritedSize[0x00E4])
// LastOffsetWithSize(0x00E4)
#define PADDING_089F - 0x0000 // Minimum to subtract -> (001C)
class ULightMapVirtualTexture2D : public UTexture2D
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x001C PADDING_089F, TArray<int8_t>,                                                        TypeToLayer);                                              // 0x0100(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.LightMapVirtualTexture2D");
		return ptr;
	}


};

// Class Engine.VirtualTexturePoolConfig
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_08A0 - 0x0000 // Minimum to subtract -> (0000)
class UVirtualTexturePoolConfig : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_08A0, int,                                                                   DefaultSizeInMegabyte);                                    // 0x0028(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0008 PADDING_08A0, TArray<struct FVirtualTextureSpacePoolConfig>,                         Pools);                                                    // 0x0030(0x0010)  (ZeroConstructor, Config, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.VirtualTexturePoolConfig");
		return ptr;
	}


};

// Class Engine.VisualLoggerAutomationTests
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UVisualLoggerAutomationTests : public UObject
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.VisualLoggerAutomationTests");
		return ptr;
	}


};

// Class Engine.VisualLoggerDebugSnapshotInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UVisualLoggerDebugSnapshotInterface : public UInterface
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.VisualLoggerDebugSnapshotInterface");
		return ptr;
	}


};

// Class Engine.VisualLoggerKismetLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UVisualLoggerKismetLibrary : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.VisualLoggerKismetLibrary");
		return ptr;
	}


	static void STATIC_RedirectVislog(class UObject* SourceOwner, class UObject* DestinationOwner);
	static void STATIC_LogText(class UObject* WorldContextObject, const struct FString& Text, const struct FName& LogCategory, bool bAddToMessageLog);
	static void STATIC_LogSegment(class UObject* WorldContextObject, const struct FVector& SegmentStart, const struct FVector& SegmentEnd, const struct FString& Text, const struct FLinearColor& ObjectColor, float Thickness, const struct FName& CategoryName, bool bAddToMessageLog);
	static void STATIC_LogLocation(class UObject* WorldContextObject, const struct FVector& Location, const struct FString& Text, const struct FLinearColor& ObjectColor, float Radius, const struct FName& LogCategory, bool bAddToMessageLog);
	static void STATIC_LogBox(class UObject* WorldContextObject, const struct FBox& BoxShape, const struct FString& Text, const struct FLinearColor& ObjectColor, const struct FName& LogCategory, bool bAddToMessageLog);
	static void STATIC_EnableRecording(bool bEnabled);
};

// Class Engine.VOIPTalker
// 0x0028 (FullSize[0x00F0] - InheritedSize[0x00C8])
// LastOffsetWithSize(0x00C8)
#define PADDING_08A4 - 0x0000 // Minimum to subtract -> (0010)
class UVOIPTalker : public UActorComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_08A4, struct FVoiceSettings,                                                 Settings);                                                 // 0x00D8(0x0018)  (Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.VOIPTalker");
		return ptr;
	}


	void RegisterWithPlayerState(class APlayerState* OwningState);
	float GetVoiceLevel();
	static class UVOIPTalker* STATIC_CreateTalkerForPlayer(class APlayerState* OwningState);
	void BPOnTalkingEnd();
	void BPOnTalkingBegin(class UAudioComponent* AudioComponent);
};

// Class Engine.VOIPStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
class UVOIPStatics : public UBlueprintFunctionLibrary
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.VOIPStatics");
		return ptr;
	}


	static void STATIC_SetMicThreshold(float InThreshold);
};

// Class Engine.VolumeTexture
// 0x0058 (FullSize[0x00D0] - InheritedSize[0x0078])
// LastOffsetWithSize(0x0078)
class UVolumeTexture : public UTexture
{
public:
	//union
	//{
	//};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.VolumeTexture");
		return ptr;
	}


};

// Class Engine.VolumetricLightmapDensityVolume
// 0x0008 (FullSize[0x0288] - InheritedSize[0x0280])
// LastOffsetWithSize(0x0280)
#define PADDING_08A7 - 0x0000 // Minimum to subtract -> (0000)
class AVolumetricLightmapDensityVolume : public AVolume
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_08A7, struct FInt32Interval,                                                 AllowedMipLevelRange);                                     // 0x0280(0x0008)  (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.VolumetricLightmapDensityVolume");
		return ptr;
	}


};

// Class Engine.WindDirectionalSource
// 0x0008 (FullSize[0x0250] - InheritedSize[0x0248])
// LastOffsetWithSize(0x0238)
#define PADDING_08A8 - 0x0000 // Minimum to subtract -> (0010)
class AWindDirectionalSource : public AInfo
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0010 PADDING_08A8, class UWindDirectionalSourceComponent*,                                Component);                                                // 0x0248(0x0008)  (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.WindDirectionalSource");
		return ptr;
	}


};

// Class Engine.WindDirectionalSourceComponent
// 0x00AD (FullSize[0x022D] - InheritedSize[0x0180])
// LastOffsetWithSize(0x018F)
#define PADDING_08A9 - 0x0000 // Minimum to subtract -> (008D)
class UWindDirectionalSourceComponent : public USceneComponent
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x008D PADDING_08A9, float,                                                                 Speed);                                                    // 0x021C(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0091 PADDING_08A9, float,                                                                 MinGustAmount);                                            // 0x0220(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0095 PADDING_08A9, float,                                                                 MaxGustAmount);                                            // 0x0224(0x0004)  (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0099 PADDING_08A9, float,                                                                 Radius);                                                   // 0x0228(0x0004)  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x009D PADDING_08A9, unsigned char,                                                         bPointWind);                                               // 0x022C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.WindDirectionalSourceComponent");
		return ptr;
	}


	void SetWindType(EWindSourceType InNewType);
	void SetStrength(float InNewStrength);
	void SetSpeed(float InNewSpeed);
	void SetRadius(float InNewRadius);
	void SetMinimumGustAmount(float InNewMinGust);
	void SetMaximumGustAmount(float InNewMaxGust);
};

// Class Engine.WorldComposition
// 0x0040 (FullSize[0x0068] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_08AA - 0x0000 // Minimum to subtract -> (0020)
class UWorldComposition : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_NNN(0x0020 PADDING_08AA, TArray<class ULevelStreaming*>,                                        TilesStreaming);                                           // 0x0048(0x0010)  (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0030 PADDING_08AA, double,                                                                TilesStreamingTimeThreshold);                              // 0x0058(0x0008)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0038 PADDING_08AA, bool,                                                                  bLoadAllTilesDuringCinematic);                             // 0x0060(0x0001)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x0039 PADDING_08AA, bool,                                                                  bRebaseOriginIn3DSpace);                                   // 0x0061(0x0001)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		DEFINE_MEMBER_NNN(0x003C PADDING_08AA, float,                                                                 RebaseOriginDistance);                                     // 0x0064(0x0004)  (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.WorldComposition");
		return ptr;
	}


};

// Class Engine.HierarchicalLODSetup
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
// LastOffsetWithSize(0x0028)
#define PADDING_08AB - 0x0000 // Minimum to subtract -> (0000)
class UHierarchicalLODSetup : public UObject
{
public:
	union
	{
		DEFINE_MEMBER_000(0x0000 PADDING_08AB, TArray<struct FHierarchicalSimplification>,                            HierarchicalLODSetup);                                     // 0x0028(0x0010)  (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	};

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Engine.HierarchicalLODSetup");
		return ptr;
	}


};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
